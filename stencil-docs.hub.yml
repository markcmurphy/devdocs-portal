{
  "title": "Stencil Developer Documentation",
  "pages": {
    "/": {
      "title": "Stencil Developer Documentation",
      "data": {
        "children": [
          {
            "title": "Welcome To Stencil",
            "route": {
              "path": "/welcome-to-stencil"
            },
            "data": {
              "children": [
                {
                  "title": "Why Stencil",
                  "route": {
                    "path": "/why-stencil"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "This entry includes:\n<ul>\n  <li><a href=\"#Design\">Design Philosophy</a></li>\n  <li><a href=\"#New\">New Options</a></li>\n  <li><a href=\"#GetStart\">Getting Started</a></li>\n  <li><a href=\"#StoreFeatures\">About Storefront Features</a></li>\n  <li><a href=\"#Blueprint\">Legacy Framework Documentation</a></li>\n  <li><a href=\"#Videos\">Video Demonstrations</a></li>\n</ul>\n<h2><a name=\"Design\"></a> Design Philosophy</h2><img style=\"float: right; margin: 0px 0px 0px 30px;\" src=\"https://files.readme.io/76514b0-ThumbnailCornerstone-3294x370.png\" alt=\"A Stencil Theme\" height=\"248\" width=\"197\"><!-- <img style=\"float: right; margin: 0px 0px 0px 30px;\" src=\"https://files.readme.io/3FGtWV4RRp62aXecIjT7_Thumbnail~Cornerstone%20#3~294x370.png\" alt=\"A Stencil Theme\" height=\"248\" width=\"197\"> --><!-- [Graphic's native resolution is height=\"370\" width=\"294\" (294 x 370). Formerly scaled 50% to height=\"185\" width=\"147\", to match the scale of preceding page's thumbnail. Now upscaled to 67%, to better fill this page's layout.] -->The Stencil framework consists of several pillars that provide a foundation for all storefront development:<br>\n<ul>\n  <li>Logic-based templates, using the lightweight <a href=\"http://handlebarsjs.com/\">Handlebars</a> templating language.</li>\n  <li>Page-specific resource definition, using <a href=\"http://yaml.org/\">YAML</a>-formatted front matter.</li>\n  <li>Rich front-end development options, driven by JavaScript event hooks.</li>\n  <li>Rapid local development and redesign with minimal coding.</li>\n  <li>Real-time Browsersync preview and testing across desktop, mobile, and tablet devices/viewports.</li>\n</ul>Using this foundation, you will be able to create beautiful, dynamic, and powerful storefronts that offer customers a first-class experience on BigCommerce-hosted online stores.\n<h2><a name=\"New\"></a> New Options</h2>The Stencil framework offers these key features that are new to BigCommerce themes:<br>\n<ul>\n  <li>Flexible local development: Design against your live storefront’s assets, with no disruption of the live store.</li>\n  <li>Graphical (WYSIWYG) editor that enables merchants to customize, manage, and preview storefront attributes – colors, fonts, number of items displayed, etc. – with no coding. Self-service means lighter support requirements.</li>\n  <li>Responsive, mobile-friendly themes – elegantly showcasing brands and merchants' offerings on any device.</li>\n  <li>Support for adding multiple variations per theme – separately optimized for different audiences and market/product segments.</li>\n  <li>Flexible and powerful Sass/SCSS support, allowing you to nest properties, variables, and mixins. \n    <nobr>Use the familiar</nobr> Foundation framework (provided), or substitute your choice of framework.</li>\n</ul>\n<h2><a name=\"GetStart\"></a> Getting Started</h2>To try out Stencil's features for yourself, please proceed to our:\n<ul>\n  <li><a href=\"/docs/getting-started-guide\">Getting Started/Transition Guide</a> for developers/designers migrating from Blueprint and other platforms.</li>\n  <li><a href=\"/docs/installing-and-launching-stencil-1\">Installation and Launch</a> instructions.</li>\n  <li><a href=\"/docs/developing-on-the-stencil-framework-quick-start/\">Development Quick Start</a> tutorial.</li>\n</ul>\n<h2><a name=\"StoreFeatures\"></a> About Storefront Features</h2>To see the storefront features that BigCommerce themes can support, please explore our:\n<ul>\n  <li><a href=\"https://www.bigcommerce.com/features/all/\">Overview</a> of available storefront features.</li>\n  <li><a href=\"https://support.bigcommerce.com/articles/Public/Themes-Design-Overview\">Themes &#x26; Design Overview</a> – and related “Store Design &#x26; Content” support<!--<a href=\"https://support.bigcommerce.com\">https://support.bigcommerce.com</a>-->topics linked from that page – to see how your feature selections will map to merchants' options in the BigCommerce control panel.</li>\n</ul>\n<h2><a name=\"Blueprint\"></a> Legacy Framework Documentation</h2>Looking for information on BigCommerce's existing (Blueprint) framework? You can access our:\n<ul>\n  <li><a href=\"https://developer.bigcommerce.com/themes\">Themes (Blueprint)</a> reference.</li>\n  <li><a href=\"https://developer.bigcommerce.com/api\">Stores API</a> reference.</li>\n</ul>\n<h2><a name=\"Videos\"></a> Video Demonstrations</h2>Watch Stencil senior developer Mick Ryan's brief demonstration of Stencil installation and launch:<br>\n<p></p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iWBrJalyM0A\" frameborder=\"0\" allowfullscreen></iframe><!--  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qQ6Nm9zPE7s\" frameborder=\"0\" allowfullscreen></iframe>  --><br>\n<p></p>Watch Stencil senior developer Mick Ryan's brief demonstration of editing a Stencil theme:<br>\n<p></p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9Rk4qWgia5Y\" frameborder=\"0\" allowfullscreen></iframe><!--  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xe50jaDmd8k\" frameborder=\"0\" allowfullscreen></iframe>  --><br>\n<p></p>Watch Stencil senior developer Mick Ryan's tour of Stencil's key components:<br>\n<p></p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/p5SR8N0SeCg\" frameborder=\"0\" allowfullscreen></iframe><!--  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/soZkXYmaNBA\" frameborder=\"0\" allowfullscreen></iframe>  -->"
                      }
                    ]
                  }
                },
                {
                  "title": "Getting Started",
                  "route": {
                    "path": "/getting-started"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "Are you approaching Stencil from a different theming framework, like BigCommerce's earlier Blueprint framework? Or moving to this templating environment from pure HTML and CSS-based design?\n\nUse this article to identify your ideal method for Stencil theme development and quickly ramp up on the conventions that Stencil uses. It will cover the following information:\n\n* [Choosing a Development Path](#choose)\n* [Front-Matter Quick Start](#frontmatter)\n* [Handlebars Quick Start](#hb)\n* [SEO Tips/Best Practices](#seo)\n* [Blueprint-to-Stencil Features Map](#map)\n* [Interacting with the BigCommerce API](#api)\n* [Partnering with BigCommerce](#partner)\n* [Next Steps](#Next)\n\n<hr style=\"background-color:#4E75F8; border-width:0;color:#000000; height:2px; line-height:0; text-align:left; width:100%;\"/>\n\n## <a name=\"choose\"></a> Choosing a Development Path\n\nYou have four increasingly hands-on options for developing Stencil themes:\n* [Find a Design & Solutions Partner](#dsp)\n* [Light Customization – Graphical Theme Editor](#ted)\n* [Light Customization – HTML/CSS](#edt)\n* [Adapt a Stencil Theme, or Develop from Scratch](#cli)\n<br>\n\n###  <a name=\"dsp\"></a> Find a Design & Solutions Partner\n\nIf you prefer to have an expert collaborator customize your theme, we recommend working with one of our certified BigCommerce Design & Solutions Partners. Please see these resources:\n\n* [Partner Directory](https://partners.bigcommerce.com/directory/search?i=75)\n* [Working with a Design Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner) (Support Guide)\n<br>\n\n\n### <a name=\"ted\"></a> Light Customization – Graphical Theme Editor\n\nA designer or store owner can customize many aspects of an existing Stencil theme _without_ using specialized development tools or techniques. Stencil's graphical Theme Editor requires no coding at all. \n\nYet Theme Editor still enables customization of a theme's colors, typography, banners, headings, carousel, and footer. It also enables customization of broader layout characteristics, such as the number of products displayed in various panels, category pages, and brand pages.\n\n<img style=\"float: right; margin: 0px 0px 0px 30px;\" src=\"https://files.readme.io/698f15f-Theme-Editor-50.png\" alt=\"Stencil Theme Editor\" height=\"60%\" width=\"60%\" style=\"border:1px solid #D1D7E0\">\n\nFor details, please see:\n\n* [Theme Editor](https://support.bigcommerce.com/articles/Public/Using-the-Stencil-Theme-Editor/) (Support article)\n* [Stencil and the BigCommerce Control Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2) (Video introduction to Theme Editor)\n* [Changing Your Store's Theme](https://support.bigcommerce.com/articles/Learning/What-to-Consider-When-Changing-Your-Theme) (Support guide)\n* [Personalizing Your Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme) (Support guide)\n<br><br>\n\n### <a name=\"edt\"></a> Light Customization – HTML/CSS\n\nIf you are most comfortable working in HTML and CSS, Stencil's Edit Theme Files feature allows you to directly edit most of your theme's files. For details, please see:\n\n<img style=\"float: right; margin: 0px 0px 0px 30px;\" src=\"https://files.readme.io/a3c7126-Edit-Theme-Files-50.png\" alt=\"Edit Theme Files\" height=\"55%\" width=\"55%\" style=\"border:1px solid #D1D7E0\">\n\n* [Edit Theme Files](https://support.bigcommerce.com/articles/Public/Editing-Stencil-Theme-Files) (Support article)\n* [Edit Theme Files](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Video overview of copying and editing a theme's files)\n\nFollow these links if you'd like to recharge or refresh your basic working knowledge of HTML and CSS:\n\n* http://www.w3schools.com/html/    \n* https://www.tutorialspoint.com/html/\n* http://www.w3schools.com/css/   \n* https://www.tutorialspoint.com/css/\n<br>\n\n### <a name=\"cli\"></a> Adapt a Stencil Theme, or Develop from Scratch\n\nFor complete control over a theme's appearance and logic – including the ability to edit _all_ theme configuration files – you will want to use the Stencil CLI (command-line interface) framework. Stencil CLI is described in detail in the remainder of this documentation. \n\nTo get up to speed on Stencil&#160;CLI's templating conventions, please see the Quick Start sections just below. Also see:\n\n* [Getting Started with the Stencil Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Videos)\n\n\n<hr style=\"background-color:#4E75F8; border-width:0;color:#000000; height:2px; line-height:0; text-align:left; width:100%;\"/>\n\n## <a name=\"frontmatter\"></a> Front-Matter Quick Start\n\nStencil templates start with a section of \"front matter\" where you can flexibly, and concisely, customize each page's design and layout details. For example, a couple of keystrokes will allow you to change the number of products that shoppers will see on a given page and panel.\n\nThis front-matter section uses conventions from YAML, a simple, widely used markup language. Even if you haven't used these conventions before, our internal documentation will help you rapidly master them:\n\n* [Front-Matter Overview](https://stencil.bigcommerce.com/docs/using-yaml-front-matter) of YAML syntax.\n\n\n<hr style=\"background-color:#4E75F8; border-width:0;color:#000000; height:2px; line-height:0; text-align:left; width:100%;\"/>\n\n## <a name=\"hb\"></a> Handlebars Quick Start\n\nStencil uses the Handlebars templating language to assemble dynamically changing content – drawn from the BigCommerce store's catalog, and from other sources – into the HTML pages displayed to shoppers. \n\nHandlebars' syntax is quite simple. It allows you to accomplish powerful JavaScript operations with minimal JavaScript code. To get up to speed on Handlebars conventions, please see these third-party tutorials: \n\n* [Learn Handlebars in 10 Minutes or Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/)\n* [A Beginner’s Guide to Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/)\n* [Getting Started with Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js)\n* [Handlebars interactive tutorial](http://tryhandlebarsjs.com/)\n\n<img src=\"https://files.readme.io/3ed9b1d-YAMLHandlebars-codedividers.png\" alt=\"Front matter above the red line, Handlebars below\" height=\"50%\" width=\"50%\" style=\"border:1px solid #D1D7E0\">\n<span style=\"color: #888\"> Front matter above the red line, Handlebars below </span><br>\n\n<hr style=\"background-color:#4E75F8; border-width:0;color:#000000; height:2px; line-height:0; text-align:left; width:100%;\"/>\n\n## <a name=\"seo\"></a> SEO Tips/Best Practices\n\nSearch-engine optimization (SEO) helps translate an elegant theme into a successful, high-conversion storefront. Because so many shoppers reach online stores through a search engine, a search-optimized site will be more visible – attracting more traffic. \n\nThe Stencil framework is [designed for high SEO performance](https://www.bigcommerce.com/improve-organic-traffic/). However, you will want to keep SEO in mind as you build out each theme and storefront. For guidelines, please see these BigCommerce support articles (which are a series of intermediate to advanced chapters in our <i>Guide to SEO):</i> \n\n* [SEO Do's and Don'ts](https://support.bigcommerce.com/articles/Learning/Things-to-Know/)\n* [Developing a Keyword Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/)\n* [SEO Success Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/)\n* [Advanced SEO on BigCommerce](https://support.bigcommerce.com/articles/Learning/Advanced-SEO-on-Bigcommerce/)\n\nPlease also see our:\n* [Guide to Keyword Research](https://support.bigcommerce.com/articles/Learning/Value-of-Keywords/)\n\n<hr style=\"background-color:#4E75F8; border-width:0;color:#000000; height:2px; line-height:0; text-align:left; width:100%;\"/>\n\n## <a name=\"map\"></a> Blueprint-to-Stencil Features Map \n\nIf you've been developing themes on BigCommerce's longstanding Blueprint framework, you might be wondering: Where did my stuff go? This section is designed to help you identify the Stencil counterparts to familiar Blueprint components.\n\nAs a starting point, we suggest these resources:\n\n* [What to Consider When Changing Your Theme](https://forum.bigcommerce.com/s/article/What-to-Consider-When-Changing-Your-Theme) (Support article)\n* [Stencil and the BigCommerce Control Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2) (Video tour of Blueprint-to-Stencil  changes in the BigCommerce control panel)\n\nFor a more detailed map of Blueprint-to-Stencil options, please use the table below to explore a Stencil theme's pertinent subdirectories, along with links to related documentation. "
                      }
                    ]
                  }
                },
                {
                  "title": "Stencil Technology Base",
                  "route": {
                    "path": "/stencil-technology-base"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "For complete control over theme development, here is a brief summary of how you would interact with the <NOBR>Stencil CLI</nobr> (command-line interface) framework, while also enabling further theme customization by merchants:<br>\n\n<ul>\n <li><a href=\"#LocalDev\">Local Development</a></li>\n <li><a href=\"#Attrib\">Attributes</a></li>\n <li><a href=\"#Obj\">Objects</a></li>\n <li><a href=\"#Syntax\">Syntax</a></li>\n <li><a href=\"#Hooks\">Event Hooks</a></li>\n <li><a href=\"#Design\">Design</a></li>\n <li><a href=\"#Customize\">Customization</a></li>\n <li><a href=\"#Next\">Next Steps</a></li>\n</ul>\n\n<H2> <A NAME=\"LocalDev\"></a> Local Development </h2>\n\nStencil is designed to support local development. Stencil CLI runs on the <a href=\"https://nodejs.org/\">Node.js</a> runtime environment. Installing Node.js also provides the required <a href=\"https://www.npmjs.com/\">npm</a> package manager.\n\n<H5> More Info: </h5>\n<ul>\n  <li> <a href=\"/docs/prerequisites\">Node.js and npm prequisites</a>\n  </li>\n  <li> <a href=\"/docs/installing-stencil-cli-1\">Installing Stencil CLI</a>\n  </li>\n  <li> <a href=\"/docs/stencil-cli-options\">Stencil CLI options</a>\n  </li>\n</ul>\n\n<H2> <A NAME=\"Attrib\"></a> Attributes </h2>\n\nStencil's storefront template pages support <a href=\"http://yaml.org/\">YAML</a>-formatted \"front matter\" to invoke the attributes you need, per page. <NOBR>Here is</nobr> an example of a pagetop invocation to display a \"new products\" section, while limiting its contents to four products:<br>\n\n<p></p><pre>\n---\nproducts:\n    new:\n        limit: 4\n---</pre>\n\n<H5> More Info: </h5>\n<ul>\n  <li> <a href=\"/docs/using-yaml-front-matter\">Attributes invocation overview</a>\n  </li>\n  <li> <a href=\"/docs/front-matter-variables\">Attributes reference</a> </li>\n</ul>\n\n<H2> <A NAME=\"Obj\"></a> Objects </h2>\n\nStencil exposes data objects that allow your themes to access various assets across a storefront. Here is an example of a Stencil object &ndash; a very simple one, which nevertheless references a second object:\n\n\n<p></p><pre>\n<b>Brand List [Object]\n\n    Attribute:        Description:</b>\n    url               URL to this brand’s products listing\n    name              Name of the brand\n    image             <a href=\"/docs/stencil-image-common-object\">Stencil image object</a> (if any) for the brand\n</pre>\n\n<!-- <br><p></p>\n<table>\n  <tr>\n    <td><b>Brand List</b><br>\n      Attribute</td>\n    <td><br>\n      Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL to this brand’s products listing</td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Name of the brand</td>\n  </tr>\n  <tr>\n    <td class=\"\">image</td>\n    <td class=\"\">Stencil image object (if any) for the brand</td>\n  </tr>\n</table> -->\n\n<H5> More Info: </h5>\n<ul>\n  <li> <a href=\"/docs/stencil-object-model\">Objects reference</a> </li>\n</ul>\n\n<H2> <A NAME=\"Syntax\"></a> Syntax </h2>\n\nTheme pages access Stencil objects using <a href=\"http://handlebarsjs.com/\">Handlebars</a>, a lightweight, open-source templating language. Handlebars allows you to efficiently embed dynamic and conditional logic onto your storefront pages. A Handlebars expression begins with: <span class=\"inline-code\">{{</span> and ends with: <span class=\"inline-code\">}}</span>.<br>\n\n<p></p>Below is a Handlebars <span class=\"inline-code\">if</span> structure that tests for a boolean variable named <span class=\"inline-code\">product.similar_by_views</span>. If its value is <span class=\"inline-code\">true</span>, this snippet inserts a corresponding component &ndash; a carousel display of \"similar products.\" It also specifies a six-column display:<br><br>\n\n<pre>{{#if product.similar_by_views}}\n   {{> components/products/carousel products=product.similar_by_views columns=6}}\n{{/if}}\n</pre>\n\n<H5> More Info: </h5>\n<ul>\n  <li> <a href=\"/docs/developing-with-handlebars\">Handlebars</a> overview\n  </li>\n<li> <a href=\"/docs/basic-designlayout-changes\">Handlebars tutorial</a> (requires Stencil <a href=\"/docs/installing-and-launching-stencil-1\">installation</a>)\n  </li>\n</ul>\n  \n<H2> <A NAME=\"Hooks\"></a> Event Hooks </h2>\n\nYour Stencil themes can access remote objects through data tags and event hooks, using the hooks to trigger defined events based on shopper behavior. To facilitate theme-building, BigCommerce provides the <span class=\"inline-code\">stencil-utils</span> client-side JavaScript library for managing event hooks.<br><br>\n\n<A NAME=\"remote-ex-2\"></a>In the following code example from a Stencil theme, note the <span class=\"inline-code\">cart‑item‑add</span> event. A theme could listen for this  event, to override the default form-submit behavior when a shopper adds product to their cart:<br>\n\n<p></p><pre>/*  \n * Import all product-specific js \n */\n[...]\nimport utils from 'bigcommerce/stencil-utils';\n[...]\naddProductToCart() {\n    utils.hooks.on(<b>'cart-item-add'</b>, (event) =&gt; {\n        event.preventDefault();\n    });\n}</pre>\n\n<H5> More Info: </h5>\n<ul>\n <li>Event hooks<a href=\"/docs/data-tagsevent-hooks-reference\"> reference</a></li>\n <li><span class=\"inline-code\">stencil-utils</span> package <a href=\"/docs/the-stencil-utils-package\">introduction</a></li>\n <li><span class=\"inline-code\">stencil-utils</span> <a href=\"/docs/stencil-utils-api-reference\">API Reference</a></li>\n</ul>\n\n<H2> <A NAME=\"Design\"></a> Design </h2>\n\nStencil supports <a href=\"http://sass-lang.com/documentation/file.SASS_REFERENCE.html\">Sass</a>/SCSS upon installation, with your choice of framework.\n\n<H5> More Info: </h5>\n<ul>\n <li><a href=\"/docs/componentsdesign-patterns\">Components/Design Patterns</a></li>\n</ul>"
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "warning",
                          "title": "Before You Customize",
                          "body": "The Stencil framework is designed to support your incorporation of custom Sass/SCSS frameworks and JavaScript libraries. However, BigCommerce does not offer technical assistance on substitutions for, or customized versions of, Stencil's default dependencies."
                        }
                      },
                      {
                        "type": "text",
                        "data": "<H2> <A NAME=\"Customize\"></a> Customization </h2>\n\nMerchants can further customize your themes using Stencil's Theme Editor, a browser-based graphical interface. You configure which theme features are available for self-service here, through what GUI controls, and what options to display for each feature.<br>\n\n<p></p>You can grant access to colors, fonts, display/hiding of page features, and number of products/entries to display per feature.\n\n<H5> More Info: </h5>\n<ul>\n <li>Theme Editor <a href=\"/docs/what-is-theme-editor\">overview</a></li>\n <li>Theme Editor <a href=\"/docs/schemajson-metadata-for-theme-editor\">configuration reference</a></li>\n</ul>\n\n\n<H2> <A NAME=\"Next\"></a> Next Steps </h2>\nWe invite you to proceed to our:\n\n<ul>\n  <li> <a href=\"/docs/technology-overview\">Technology Overview</a> &ndash; a richer introduction. </li>\n\n<li> <a href=\"/docs/installing-and-launching-stencil-1\">Installation and Launch</a> instructions. </li>\n\n<li> <a href=\"/docs/developing-on-the-stencil-framework-quick-start/\">Development Quick Start</a> tutorial. </li>\n  \n<li> <a href=\"/using-yaml-front-matter\">Front-matter</a> overview of YAML conventions. </li>\n\n<li> Front-matter <a href=\"/docs/front-matter-variables\">attributes</a> reference. </li>\n\n<li> <a href=\"/docs/developing-with-handlebars\">Handlebars</a> overview. </li>\n  \n</ul>"
                      }
                    ]
                  }
                },
                {
                  "title": "Supported Browsers",
                  "route": {
                    "path": "/supported-browsers"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<A NAME=\"SupportedBrowsers\"></a>The following browsers are supported for BigCommerce storefronts that use Stencil-based themes. The browsers are sorted by popularity, with the most popular browsers at the top. Please ensure that your theme functions properly with all supported browsers.\n\n<h3>Desktop Browsers</h3>\n\n<ul>\n  <li>Google Chrome (latest edition)</li>  \n  <li>Firefox (latest edition)</li>  \n  <li>Internet Explorer 10 and 11</li>  \n  <li>Safari (latest edition)</li>  \n  <li>Microsoft Edge (latest edition)</li>\n</ul>\n  \n<h3>Mobile Browsers</h3>\n\n<ul>\n  <li>Android Chrome browser (latest edition)</li> \n  <li>iOS Safari browser (latest edition)</li>  \n</ul>"
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "warning",
                          "body": "Browser support will cease to be offered if browser usage falls below 2%.",
                          "title": "Usage Support"
                        }
                      },
                      {
                        "type": "html",
                        "data": "<H2> <A NAME=\"Next\"></a> Next Steps </h2>\nWe invite you to proceed to:\n\n<ul>\n<li> <a href=\"/docs/webpack-and-build-options\">Webpack</a> and build-system options.\n  </li>\n<li> <a href=\"/docs/configjson-reference\">Configuration</a> reference.\n  </li>\n<li> <a href=\"/docs/using-yaml-front-matter\">Front-matter</a> overview of YAML conventions.\n  </li>\n<li> Front-matter <a href=\"/docs/front-matter-variables\">attributes</a> reference.\n  </li>\n<li> <a href=\"/docs/developing-with-handlebars\">Handlebars</a> development overview.\n  </li>\n<li> <a href=\"/docs/stencil-object-model\">Objects</a> reference.\n  </li>\n</ul>"
                      }
                    ]
                  }
                }
              ],
              "blocks": [
                {
                  "type": "text",
                  "data": "This section will cover:\n* Why Stencil\n* Getting Started\n* Stencil Technology Base\n* Supported Browsers\n"
                }
              ]
            }
          },
          {
            "title": "Advanced Installation Options",
            "route": {
              "path": "/advanced-installation-options"
            },
            "data": {
              "children": [
                {
                  "title": "Advanced Installation Options",
                  "route": {
                    "path": "/new-subpage-4"
                  }
                },
                {
                  "title": "Stencil Setup, Illustrated",
                  "route": {
                    "path": "/new-subpage-3"
                  }
                },
                {
                  "title": "Navigating Your Setup Scenario",
                  "route": {
                    "path": "/new-subpage-2"
                  }
                },
                {
                  "title": "Downloading a Refreshed Copy of Cornerstone",
                  "route": {
                    "path": "/new-subpage-1"
                  }
                },
                {
                  "title": "Theme Updates and Version Control",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {
                    "children": []
                  }
                },
                {
                  "title": "Configuring Webpack or a Custom Build System",
                  "route": {
                    "path": "/configuring-webpack"
                  }
                }
              ]
            }
          },
          {
            "title": "Handlebars Syntax and Helpers",
            "route": {
              "path": "/handlebars-syntax-and-helpers"
            },
            "data": {
              "children": [
                {
                  "title": "Handlebars Helpers Reference",
                  "route": {
                    "path": "/handlebars-helpers-reference"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "### {{itemAt}}\n\n_Block helper that returns the item at the specified index._\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `returns` {any} `value`\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```\n{{itemAt array 1}}\n//=> 'b'\n\n```\n\n### {{join}}\n\nThe `join` helper is custom to Stencil. It joins an array of string items, with separators. It returns a string. \n\n#### Parameters\n\n- `values`: {Array}\n- `separator`: {String}\n- `limit=<number>`: An optional limit.\n\n### {{limit}}\n\nThe `limit` helper is custom to Stencil. It limits the number of items returned from an array variable, and returns a new array.\n\n#### Parameters\n\n- `data`: {Array}\n- `limit`: {Number}\n\n#### {{limit}} Example \n\nAssume that `{{cart.items}}` would return 10 items. You could use this helper to limit that behavior to only the first four items, by specifying: \n\n```\n{{limit cart.items 4}}\n```\n\n### {{pluck}}\n\nThe `pluck` helper is custom to Stencil. For one or more specified search key(s), it retrieves corresponding values from some or all elements in a specified collection. \n\nThe `pluck` helper returns the retrieved values in a comma-separated string. This helper's general form is:\n\n```\n{{pluck ([limit] <collection> [<limit-value>]) '<search-key>'}}\n```\n\n#### Parameters\n\n- `limit`, `limit-value`: Optional parameters to limit the number of results returned.\n- `collection`: The collection to search.\n- `search-key`: The string to search for.\n\n\n#### {{pluck}} Example 1\n\nAssume that the `categories` collection contains:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\" },\n  { \"id\": 2, \"name\": \"Cookware\" },\n  { \"id\": 3, \"name\": \"Cutlery\" }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'name'}}\n```\n\n...would return:\n\n```\n\"Bakeware,Cookware\"\n```\n\n#### {{pluck}} Example 2\n\nIf the `categories` themselves each contained an image object, then you could use dot notation to access that image object's children:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\", \"image\": { \"data\": \"http://...\", \"alt\": \"Bakeware image\"} },\n  { \"id\": 2, \"name\": \"Cookware\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cookware image\"} },\n  { \"id\": 3, \"name\": \"Cutlery\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cutlery image\"} }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'image.data'}}\n```\n\n...would return a comma-separated list of image URLs.\n\n\n## <a name=\"array_std\"></a> Standard Array Helpers\n\nThe following standard array helpers are supported on the Stencil framework.\n\n### <a name=\"after\"></a> {{after}}\n\nReturns all of the items in an array after the specified index. Opposite of [before](#before).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}: Collection.\n* `n` {Number}: Starting index (number of items to exclude).\n* `returns` {Array}: Array exluding `n` items.\n\n#### Example\n\n```handlebars\n{{after array 1}}\n//=> '[\"c\"]'\n```\n\n### {{arrayify}}\n\nCasts the given `value` to an array.\n\n#### Parameters\n\n* `value` {any}\n* `returns` {Array}\n\n#### Example\n\n```handlebars\n{{arrayify \"foo\"}}\n//=> '[\"foo\"]'\n```\n\n### <a name=\"before\"></a> {{before}}\n\nReturns all of the items in the collection before the specified count. Opposite of [after](#after).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}\n* `returns` {Array}: Array excluding items after the given number.\n\n#### Example\n\n```handlebars\n{{before array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n### {{eachIndex}}\n\n#### Parameters\n\n* `array` {Array}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#eachIndex collection}}\n  {{item}} is {{index}}\n{{/eachIndex}}\n```\n\n### {{filter}}\n\nBlock helper that filters the given array. Renders the block for values that evaluate to `true`; otherwise, returns the inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#filter array \"foo\"}}AAA{{else}}BBB{{/filter}}\n//=> 'BBB\n```\n\n### <a name=\"first\"></a> {{first}}\n\nReturns the first item, or first `n` items, of an array.\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting at `0`.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{first array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n### {{forEach}}\n\nIterates over each item in an array, and exposes the current item in the array as context to the inner block. In addition to the current array item, the helper exposes the following variables to the inner block:\n\n* `index`\n* `total`\n* `isFirst`\n* `isLast`\n\nAlso, `@index` is exposed as a private variable, and additional private variables may be defined as hash arguments.\n\n#### Parameters\n\n* `array` {Array}\n* `returns` {String}\n\n#### Example\n\n```js\nvar accounts = [\n{'name': 'John', 'email': 'john@example.com'},\n{'name': 'Malcolm', 'email': 'malcolm@example.com'},\n{'name': 'David', 'email': 'david@example.com'}\n];\n\n// example usage\n// {{#forEach accounts}}\n//   <a href=\"mailto:{{ email }}\" title=\"Send an email to {{ name }}\">\n//     {{ name }}\n//   </a>{{#unless isLast}}, {{/unless}}\n// {{/forEach}}\n```\n\n### {{inArray}}\n\nBlock helper that renders the block if an array has the given `value`. Optionally, you can specify an inverse block to render when the array does not have the given value.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#inArray array \"d\"}}\n  foo\n{{else}}\n  bar\n{{/inArray}}\n//=> 'bar'\n```\n\n### {{isArray}}\n\nReturns true if `value` is an es5 array.\n\n#### Parameters\n\n* `value` {any}: The value to test.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isArray \"abc\"}}\n//=> 'false'\n```\n\n### <a name=\"last\"></a> {{last}}\n\nReturns the last item, or last `n` items, of an array. Opposite of [first](#first).\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting with the last item.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{last array 2}}\n//=> '[\"d\", \"e\"]'\n```\n\n### {{lengthEqual}}\n\nBlock helper that compares the length of the given array to the number passed as the second argument. If the array length is equal to the given `length`, the block is returned. Otherwise, you have the option of returning an inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `length` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}\n//=> 'BBB'\n```\n\n### {{map}}\n\nReturns a new array, created by calling `function` on each element of the given `array`.\n\n#### Parameters\n\n* `array` {Array}\n* `fn` {Function}\n* `returns` {String}\n\n#### Example\n\nGiven an array `['a', 'b', 'c']`:\n\n```js\n// register `double` as a helper\nfunction double(str) {\n  return str + str;\n}\n// then used like this:\n// {{map array double}}\n//=> '[\"aa\", \"bb\", \"cc\"]'\n```\n\n### {{some}}\n\nBlock helper that returns the block *if* the callback returns true for some value in the given array.\n\n#### Parameters\n\n* `array` {Array}\n* `cb` {Function}: Callback function.\n* {Options}: Handlebars-provided options object.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `[1, 'b', 3]`:\n\n```handlebars\n{{#some array isString}}\n  Render me if the array has a string.\n{{else}}\n  Render me if it doesn't.\n{{/some}}\n//=> 'Render me if the array has a string.'\n```\n\n### {{sort}}\n\nSorts the given `array`. If an array of objects is passed, you may optionally pass (as the second argument) a `key` to sort on. Alternatively, you may pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `key` {String|Function}: The object key to sort by, or a sorting function.\n\n#### Example\n\nGiven an array `['b', 'a', 'c']`:\n\n\n```handlebars\n{{sort array}}\n//=> '[\"a\", \"b\", \"c\"]'\n```\n\n### {{sortBy}}\n\nSorts an `array`. If an array of objects is passed, you may optionally pass a `key` to sort on as the second argument. You may alternatively pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `props` {String|Function}: One or more properties to sort by, or sorting functions to use.\n\n#### Example\n\nGiven an array `[{a: 'zzz'}, {a: 'aaa'}]`:\n\n```handlebars\n{{sortBy array \"a\"}}\n//=> '[{\"a\":\"aaa\"}, {\"a\":\"zzz\"}]'\n```\n\n### <a name=\"withAfter\"></a> {{withAfter}}\n\nUse the items in the array, _after_ the specified index, as context inside a block. Opposite of [withBefore](#withBefore).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withAfter array 3}}\n  {{this}}\n{{/withAfter}}\n//=> \"de\"\n```\n\n### <a name=\"withBefore\"></a> {{withBefore}}\n\nUse the items in the array, _before_ the specified index, as context inside a block. Opposite of [withAfter](#withAfter).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withBefore array 3}}\n  {{this}}\n{{/withBefore}}\n//=> 'ab'\n```\n\n### <a name=\"withFirst\"></a> {{withFirst}}\n\nUses a collection's first item inside a Handlebars block expression. Opposite of [withLast](#withLast).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withFirst array}}\n  {{this}}\n{{/withFirst}}\n//=> 'a'\n```\n"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Stencil Object Model Reference",
            "route": {
              "path": "/stencil-object-model-reference"
            },
            "data": {
              "children": [
                {
                  "title": "Stencil Objects",
                  "route": {
                    "path": "/stencil-objects"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Global Objects & Properties",
                        "route": {
                          "path": "/global-objects"
                        },
                        "data": {
                          "children": [
                            {
                              "title": "Banners",
                              "route": {
                                "path": "/banners"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Elements of marketing banners at page’s top and/or bottom<br>\n\n<b>Handlebars Expressions:</b> <span class=\"inline-code\">{{banner}}</span>, <span class=\"inline-code\">{{{banner}}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">banners</td>\n    <td class=\"\">Blocks of static HTML content to define banners</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">top</span></td>\n    <td class=\"\">Array of HTML content/strings, for custom top-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">bottom</span></td>\n    <td class=\"\">Array of HTML content/strings, for custom bottom-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "Banner"
                                    },
                                    "config": {}
                                  },
                                  {
                                    "type": "callout",
                                    "data": {
                                      "type": "warning",
                                      "body": "Where a banner contains HTML, the <span class=\"inline-code\">banner</span> helper must be placed in triple braces, as in this \nexample: <span class=\"inline-code\">{{{banner}}}</span>. (Double braces would escape the HTML.)",
                                      "title": "Handlebars Formatting Exception"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Breadcrumbs",
                              "route": {
                                "path": "/breadcrumbs"
                              },
                              "data": {
                                "children": [],
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> Defines a page's breadcrumbs – available on virtually all pages that have a breadcrumb trail<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{breadcrumbs}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Displayed name of this breadcrumb element</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL of this breadcrumb element</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "Stencil-Bread-ref"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Categories",
                              "route": {
                                "path": "/categories"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "text",
                                    "data": "<A NAME=\"Categories\"></a>\n<b>Description:</b> A list of all product categories shown in the current page context; default sorting is by category id, from lowest to highest<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{categories}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">id</td>\n    <td class=\"\">ID of the top-level category listed</td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Name of the top-level category</td>\n  </tr>\n  <tr>\n    <td class=\"\">description</td>\n    <td class=\"\">Description of the top-level category (optional &ndash; when requested in front matter)</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL to the category page</td>\n  </tr>\n  <tr>\n    <td class=\"\">count</td>\n    <td class=\"\">Number of products in this category</td>\n  </tr>\n  <tr>\n    <td class=\"\">children</td>\n    <td class=\"\">List of child categories for this top-level category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">ID of the child category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the child category</td>\n  </tr>\n    <tr>\n    <td class=\"\"><span class=\"indent1\"> description</span></td>\n    <td class=\"\">Description of the child category (optional &ndash; when requested in front matter)</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> url</span></td>\n    <td class=\"\">URL of the child category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> count</span></td>\n    <td class=\"\">Number of products in this child category</td>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Currency Selector",
                              "route": {
                                "path": "/new-subpage"
                              },
                              "data": {
                                "children": [],
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of all supported currencies, and the currency that is actively in use in the storefront<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{currency_selector}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_id</td>\n    <td class=\"\">ID of the currency actively in use in the storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_flag</td>\n    <td class=\"\">Country flag used to represent the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_name</td>\n    <td class=\"\">Name of the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_code</td>\n    <td class=\"\">Code for the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">currencies</td>\n    <td class=\"\">List of all the currencies supported for this storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> is_active</span></td>\n    <td class=\"\">Boolean that indicates whether this currency is active for use in the storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> switch_url</span></td>\n    <td class=\"\">The URL to invoke a switch to this currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">ID of the currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> flag</span></td>\n    <td class=\"\">Country flag used to visually represent the currency</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "CurrencySel"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Faceted Search",
                              "route": {
                                "path": "/new-subpage-6"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<A NAME=\"FacSearch\"></a>\n<b>Description: </b>Faceted-search object for searching globally, by category, or by brand<br>\n\n<b>Handlebars Expression</b><b>:</b> <span class=\"inline-code\">{{faceted_search}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">facets</td>\n    <td class=\"\">List of all search facets available</td>\n  </tr>\n  <tr>\n    <td class=\"\">selected</td>\n    <td class=\"\">Container for the selected search facets</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">remove_all_url</span></td>\n    <td class=\"\">URL to remove all selected search restrictions</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">items</span></td>\n    <td class=\"\">Currently enabled search facets</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "FacetedSearch"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Featured Products",
                              "route": {
                                "path": "/new-subpage-2"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of all the featured products for the BigCommerce storefront<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{products.featured}}</span><br>\n\n<b>Object Properties:</b> References the <a href=\"/docs/common-product-card-model\">product card model</a>.",
                                    "header": {
                                      "anchor": "FeatProducts"
                                    }
                                  },
                                  {
                                    "type": "text",
                                    "data": "<b> Usage Example: </b>\n\nFrom Stencil's base Cornerstone theme, the example below displays the global `{{products.featured}}` object on the `<theme-name>/templates/pages/home.html` page template.\n\nFirst, to declare the object, the following [front matter](/docs/using-yaml-front-matter) must be placed at the top of this template. This particular declaration also limits the number of featured products to be displayed:\n\n```\n---\nproducts:\n    [...]\n    featured:\n        limit: {{theme_settings.homepage_featured_products_count}}\n---\n```\nThe `homepage_featured_products_count` limit is one of two relevant variables defined in Cornerstone's [`config.json`&#160;file](/docs/configjson-reference), here:\n\n```\n  \"settings\": {\n    [...]\n    \"homepage_featured_products_count\": 8,\n    [...]\n    \"homepage_featured_products_column_count\": 4,\n    [...]    \n```\n\nIn the body of the `home.html` template, the following Handlebars conditional statement displays the featured-products object declared above:\n\n```\n    {{#if products.featured}}\n        {{> components/products/featured products=products.featured columns=theme_settings.homepage_featured_products_column_count}}\n    {{/if}}\n```\n\nThis statement formats the featured-products display according to the `homepage_featured_products_column_count` variable, also defined in the `config.json` excerpt above."
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Footer",
                              "route": {
                                "path": "/footer"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>The footer content for each storefront page<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{footer}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">sitemap_url</td>\n    <td class=\"\">The URL to the sitemap, based on store’s SEO setting</td>\n  </tr>\n  <tr>\n    <td class=\"\">scripts</td>\n    <td class=\"\">Scripts to be loaded after the HTML has loaded; includes performance metrics</td>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Home Slide Show",
                              "route": {
                                "path": "/home-slide-show"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of images, text, and style assets for a storefront’s image slide show<br>\n\n<b>Handlebars Expression: </b><span class=\"inline-code\">{{carousel}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">swap_frequency</td>\n    <td class=\"\">Indicates how often (in seconds) the slides will change; the value must be between 1 and 90,000 seconds</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">slides</td>\n    <td class=\"\">Object containing properties for each slide in the slideshow</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"><span class=\"indent1\">image</span></td>\n    <td class=\"\">Path to the image file used on this slide</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">alt_text</span></td>\n    <td class=\"\">Alt text for the image</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">url</span></td>\n    <td class=\"\">URL to which the image will link</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">heading</span></td>\n    <td class=\"\">Heading message defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">heading_color</span></td>\n    <td class=\"\">Color of the heading text</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">text</span></td>\n    <td class=\"\">Subheading defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">text_color</span></td>\n    <td class=\"\">Color of the subheading text</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">button_text</span></td>\n    <td class=\"\">Text displayed on a call-to-action button defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">button_text_color</span></td>\n    <td class=\"\">Color of the button</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "SlideShow"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "HTML Head",
                              "route": {
                                "path": "/html-head"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Data to be included in the HTML &lt;head&gt; element<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{head}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">character_set</td>\n    <td class=\"\">The character set to specify</td>\n  </tr>\n  <tr>\n    <td class=\"\">meta_tags</td>\n    <td class=\"\">Meta tags to improve store SEO</td>\n  </tr>\n  <tr>\n    <td class=\"\">title</td>\n    <td class=\"\">Current page’s title</td>\n  </tr>\n  <tr>\n    <td class=\"\">stylesheets</td>\n    <td class=\"\">CSS files to be included</td>\n  </tr>\n  <tr>\n    <td class=\"\">scripts</td>\n    <td class=\"\">Scripts to be loaded in the &lt;head&gt; tag</td>\n  </tr>\n  <tr>\n    <td class=\"\">favicon</td>\n    <td class=\"\">The store’s favicon (Favorite icon)</td>\n  </tr>\n  <tr>\n    <td class=\"\">rsslinks</td>\n    <td class=\"\">RSS feeds to improve SEO</td>\n  </tr>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Is_ajax",
                              "route": {
                                "path": "/is-ajax"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Boolean; returns true if the current executing request is an Ajax request<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{is_ajax}}</span><br>",
                                    "header": {
                                      "anchor": "IsAjax"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Login",
                              "route": {
                                "path": "/login"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "blocks": [
                {
                  "type": "html",
                  "data": "<a name=\"Stencil-Obj-ref\"></a>The entries in this section list and describe the objects<!--, custom operators, and data resources--> and properties that you can access programmatically via Handlebars expressions:\n\n<ul>\n  <!-- <li><a href=\"/docs/custom-handlebars-helpers\">Stencil Custom Handlebars Helpers</a></li> -->\n <li><a href=\"/stencil-object-model-reference/global-objects\">Global Objects (subsection)</a></li>\n <li><a href=\"/stencil-object-model-reference/common-object-formats\">Common Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/product-resources\">Product Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/category-resources\">Category Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/brand-resources\">Brand Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/cart-resources\">Cart Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/customer-resources\">Customer Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/blog-resources\">Blog Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/forms-resources\">Forms Objects</a></li>\n</ul>"
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "type": "html",
            "data": "<h1>Welcome to the BigCommerce Stencil Developer Documentation.</h1>\n\n<p>Stencil is a new approach to theme and front-end development on the BigCommerce platform. This theming engine allows you to create beautiful, dynamic, and powerful storefronts.</p>\n\n<table style=\"border:none\">\n  <tbody>\n    <tr></tr>\n    <tr>\n      <td class=\"\" style=\"border: none\"><img src=\"https://files.readme.io/1f2a9bb-Thumbnails-composed-3-vars-298w-x-184h1-26-16.png\" alt=\"A Stencil Theme\" height=\"195\" width=\"375\">\n        \n      <td class=\"\" style=\"border: 0\"><br><br>You can offer merchants multiple variations on each theme. You can also provide options for merchants to customize their storefront's look and feel, with no coding.</td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h2>Stencil Framework and Components</h2>\n\n<p>Stencil provides certain key components for both theme developers and merchants. These are summarized in this diagram, and are fully described in the remainder of this documentation.</p>\n\n<img class=\"center-photo\" src=\"https://files.readme.io/azmVqA3SnGgoYhit3udw_Stencil-Func-Diag3~912x600.png\" height=\"450\" width=\"684\">\n\n<br><br>\n<p>\nThese key components are:\n<ul>\n  <li><b>Stencil Framework (Stencil CLI)<!--and Developer Toolkit-->:</b> The Stencil CLI framework enables developers to design and iterate themes locally, with full access to all assets – but with no impact on the merchant's live storefront.</li><br>\n  <li><b>Theme Marketplaces:</b> Third-party marketplaces like ThemeForest enable developers to distribute themes to multiple merchants.</li><br>\n  <li><b>Theme Editor:</b> This graphical, browser-based tool enables merchants to rapidly customize their themes' look and feel – and their storefront's function – with no coding. Theme developers' configuration choices determine which theme aspects merchants can customize, with what range of choices.)</li><br>\n  <li><b>Storefront:</b> Merchants acquire themes, apply them to their storefronts, and customize them – creating an elegant user experience that resonates with their brand, and makes it easy for customers to find and purchase the products they want.</li>\n</ul>\n</p>",
            "config": {}
          }
        ]
      }
    }
  }
}