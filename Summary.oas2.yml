{
  "swagger": "2.0",
  "info": {
    "title": "Summary",
    "version": "",
    "description": "- [OAuth Scopes](#oauth-scopes)\n- [Authentication](#authentication)\n- [Available Endpoints](#available-endpoints)\n- [Resources](#resources)\n\nThe Catalog API manages products, brands and categories for a store. To learn more about the Catalog resources see [Catalog Products](https://developer.bigcommerce.com/api-docs/catalog/products-overview) and [Categories](https://developer.bigcommerce.com/api-docs/catalog/products-overview#products-overview_categories).\n\n## OAuth Scopes\n| UI Name  | Permission | Parameter                     |\n|----------|------------|-------------------------------|\n| Products | modify     | `store_v2_products`           |\n| Products | read-only  | `store_v2_products_read_only` |\n\nFor more information on OAuth Scopes, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Authentication\nRequests can be authenticated by sending a `client_id` and `access_token` via `X-Auth-Client` and `X-Auth-Token` HTTP headers:\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nAccept: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\nFor more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Available Endpoints\n| Resource / Endpoint                     | Description                                                             |\n|-----------------------------------------|-------------------------------------------------------------------------|\n| Brand Images                            | Create and manage brand images                                          |\n| Brand Metafields                        | Create and manage brand metafields                                      |\n| Brands                                  | Create and manage brands                                                |\n| Catalog                                 | Create and manage store categories, products, and brands                |\n| Categories                              | Create and manage categorties                                           |\n| Category Images                         | Create and manage category images                                       |\n| Category Metafields                     | Create and manage category metafields                                   |\n| Product Bulk Pricing Rules              | Create and manage product bulk pricing rules                            |\n| Product Complex Rules                   | Create and manage product complex rules                                 |\n| Product Custom Fields                   | Create and manage product custom fields                                 |\n| Product Images                          | Create and manage product images                                        |\n| Product Metafields                      | Create and manage product meta fields                                   |\n| Product Modifier Images                 | Create and manage product modifer images                                |\n| Product Modifier Values                 | Create and manage product modifier values                               |\n| Product Modifiers                       | Create and manage product midifiers                                     |\n| Product Reviews                         | Create and manage product reviews                                       |\n| Product Variant Option Values           | Create and manage product variant option values                         |\n| Product Variant Options                 | Create and manage product variant options                               |\n| Product Variants                        | Create and manage product variants                                      |\n| Product Videos                          | Create and manage product videos                                        |\n| Products                                | Create and manage products                                              |\n| ProductVariant Metafields               | Create and manage product meta flields                                  |\n| Variants                                | Get and update all variants                                             |\n\n## Resources\n\n### Webhooks\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)\n* [Categories](/api-docs/getting-started/webhooks/webhook-events#webhook-events_category)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)\n\n### Related Endpoints\n* [Catalog API](/api-reference/catalog/catalog-api)",
    "termsOfService": "https://www.bigcommerce.com/terms/",
    "license": {
      "name": ""
    },
    "contact": {
      "name": "BigCommerce Developer Documentation",
      "url": "https://developer.bigcommerce.com/"
    }
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{$$.env.store_hash}/v3",
  "tags": [
    {
      "name": "Brands"
    },
    {
      "name": "Brand Images"
    },
    {
      "name": "Brand Metafields"
    },
    {
      "name": "Categories"
    },
    {
      "name": "Category Metafields"
    },
    {
      "name": "Category Images"
    },
    {
      "name": "Products"
    },
    {
      "name": "Product Bulk Pricing Rules"
    },
    {
      "name": "Product Complex Rules"
    },
    {
      "name": "Product Custom Fields"
    },
    {
      "name": "Product Images"
    },
    {
      "name": "Product Metafields"
    },
    {
      "name": "Product Modifiers"
    },
    {
      "name": "Product Modifier Values"
    },
    {
      "name": "Product Modifier Images"
    },
    {
      "name": "Product Options"
    },
    {
      "name": "Product Option Values"
    },
    {
      "name": "Product Reviews"
    },
    {
      "name": "Product Variants"
    },
    {
      "name": "Product Variants Metafields"
    },
    {
      "name": "Product Variant Options"
    },
    {
      "name": "Product Variant Option Values"
    },
    {
      "name": "Product Videos"
    },
    {
      "name": "Summary"
    },
    {
      "name": "Variants"
    },
    {
      "name": "Category"
    },
    {
      "name": "Catalog"
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/catalog/summary": {
      "get": {
        "tags": [
          "Summary"
        ],
        "description": "Returns a lightweight inventory summary from the BigCommerce Catalog.\n\nThe inventory summary includes:\n* \"inventory_count\"\n* \"variant_count\"\n* \"inventory_value\"\n* \"highest_variant_price\"\n* \"average_variant_price\"\n* \"lowest_variant_price\"\n* \"oldest_variant_date\"\n* \"newest_variant_date\"\n* \"primary_category_id\"\n* \"primary_category_name\"",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Catalog Summary Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Catalog Summary object describes a lightweight summary of the catalog.",
                  "title": "Catalog Summary",
                  "properties": {
                    "inventory_count": {
                      "type": "integer",
                      "description": "A count of all inventory items in the catalog.\n",
                      "example": 2000
                    },
                    "inventory_value": {
                      "type": "number",
                      "format": "double",
                      "description": "Total value of store's inventory.\n",
                      "example": 267000
                    },
                    "primary_category_id": {
                      "type": "integer",
                      "description": "ID of the category containing the most products.\n",
                      "example": 23
                    },
                    "primary_category_name": {
                      "type": "string",
                      "description": "Name of the category containing the most products.\n",
                      "example": "Shop All"
                    },
                    "variant_count": {
                      "type": "integer",
                      "description": "Total number of variants",
                      "example": 46
                    },
                    "highest_variant_price": {
                      "type": "number",
                      "format": "double",
                      "description": "Highest priced variant",
                      "example": 249
                    },
                    "average_variant_price": {
                      "type": "number",
                      "format": "double",
                      "example": 83.07978261,
                      "description": "Average price of all variants"
                    },
                    "lowest_variant_price": {
                      "type": "string",
                      "example": "7",
                      "description": "Lowest priced variant in the store"
                    },
                    "oldest_variant_date": {
                      "type": "string",
                      "example": "2018-08-15"
                    },
                    "newest_variant_date": {
                      "type": "string",
                      "example": "2018-08-16"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "inventory_count": 4995,
                  "variant_count": 54,
                  "inventory_value": 702350.03,
                  "highest_variant_price": 555,
                  "average_variant_price": 74.40055556,
                  "lowest_variant_price": 7,
                  "oldest_variant_date": "2018-08-15",
                  "newest_variant_date": "2018-09-07",
                  "primary_category_id": 23,
                  "primary_category_name": "Shop All"
                },
                "meta": {}
              }
            }
          }
        },
        "summary": "Get a Catalog Summary",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "operationId": "getCatalogSummary"
      }
    }
  },
  "parameters": {
    "FilterTemplateFileParam": {
      "in": "query",
      "name": "template_file",
      "description": "The template file, for example: `pages/home`.",
      "type": "string",
      "required": false
    },
    "FilterIdParam": {
      "name": "id",
      "description": "Filter items by id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterSkuParam": {
      "name": "sku",
      "description": "Filter items by sku.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterNameParam": {
      "name": "name",
      "description": "Filter items by name.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterEmailParam": {
      "name": "email",
      "description": "Filter items by email.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterSourceParam": {
      "name": "source",
      "description": "Filter items by source.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterOrderIdParam": {
      "name": "order_id",
      "description": "Filter items by order_id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterUpcParam": {
      "name": "upc",
      "description": "Filter items by upc.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterPriceParam": {
      "name": "price",
      "description": "Filter items by price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterSalePriceParam": {
      "name": "sale_price",
      "description": "Filter items by sale_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterRetailPriceParam": {
      "name": "retail_price",
      "description": "Filter items by retail_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterMapPriceParam": {
      "name": "map_price",
      "description": "Filter items by map_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterCalculatedPriceParam": {
      "name": "calculated_price",
      "description": "Filter items by calculated_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterWeightParam": {
      "name": "weight",
      "description": "Filter items by weight.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterConditionParam": {
      "name": "condition",
      "description": "Filter items by condition.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "new",
        "used",
        "refurbished"
      ]
    },
    "FilterBrandIdParam": {
      "name": "brand_id",
      "description": "Filter items by brand_id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterDateModifiedParam": {
      "name": "date_modified",
      "description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterDateCreatedParam": {
      "name": "date_created",
      "description": "Filter items by date_created.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterDateLastImportedParam": {
      "name": "date_last_imported",
      "description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterIsVisibleParam": {
      "name": "is_visible",
      "description": "Filter items by if visible on the storefront. ",
      "required": false,
      "in": "query",
      "type": "boolean"
    },
    "FilterIsFeaturedParam": {
      "name": "is_featured",
      "description": "Filter items by is_featured.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterIsFreeShippingParam": {
      "name": "is_free_shipping",
      "description": "Filter items by is_free_shipping.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterInventoryLevelParam": {
      "name": "inventory_level",
      "description": "Filter items by inventory_level.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterInventoryLowParam": {
      "name": "inventory_low",
      "description": "Filter items by inventory_low. Values: 1, 0.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterOutOfStockParam": {
      "name": "out_of_stock",
      "description": "Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterTotalSoldParam": {
      "name": "total_sold",
      "description": "Filter items by total_sold.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "ProductFilterTypeParam": {
      "name": "type",
      "description": "Filter items by type: `physical` or `digital`.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "digital",
        "physical"
      ]
    },
    "FilterCategoriesParam": {
      "name": "categories",
      "description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterKeywordParam": {
      "name": "keyword",
      "description": "Filter items by keywords. eg. new, towel, bath",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "ProductFilterKeywordParam": {
      "name": "keyword",
      "description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "ProductFilterKeywordContextParam": {
      "name": "keyword_context",
      "description": "Set context for a product search.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "shopper",
        "merchant"
      ]
    },
    "FilterStatusParam": {
      "name": "status",
      "description": "Filter items by status.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterIncludeParam": {
      "name": "include",
      "description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "variants",
        "images",
        "custom_fields",
        "bulk_pricing_rules",
        "primary_image",
        "modifiers",
        "options",
        "videos"
      ]
    },
    "FilterIncludeFieldsParam": {
      "name": "include_fields",
      "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterExcludeFieldsParam": {
      "name": "exclude_fields",
      "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterParentIdParam": {
      "name": "parent_id",
      "description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. ",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterPageTitleParam": {
      "name": "page_title",
      "description": "Filter items by page_title.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterAvailabilityParam": {
      "name": "availability",
      "description": "Filter items by availability. Values are: available, disabled, preorder.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "available",
        "disabled",
        "preorder"
      ]
    },
    "FilterPriceListIdParam": {
      "name": "price_list_id",
      "description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterProductIdParam": {
      "type": "string",
      "name": "product_id",
      "in": "query",
      "required": false,
      "description": "A comma-separated list of ids of `Product`s whose prices were requested.\n"
    },
    "FilterVariantIdParam": {
      "type": "integer",
      "name": "variant_id",
      "in": "query",
      "required": false,
      "description": "The ID of the `Variant` whose prices were requested.\n"
    },
    "FilterCurrencyParam": {
      "name": "currency",
      "description": "Filter items by currency.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "ISO-4217"
    },
    "PageParam": {
      "name": "page",
      "description": "Specifies the page number in a limited (paginated) list of products.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "LimitParam": {
      "name": "limit",
      "description": "Controls the number of items per page in a limited (paginated) list of products.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "DirectionParam": {
      "name": "direction",
      "description": "Sort direction. Acceptable values are: `asc`, `desc`.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "ProductSortParam": {
      "name": "sort",
      "description": "Field name to sort by.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "id",
        "name",
        "sku",
        "price",
        "date_modified",
        "date_last_imported",
        "inventory_level",
        "is_visible",
        "total_sold"
      ]
    },
    "ProductIdParam": {
      "name": "product_id",
      "in": "path",
      "description": "The ID of the `Product` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "ReviewIdParam": {
      "name": "review_id",
      "description": "The ID of the `review` that is being operated on.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ImageIdParam": {
      "name": "image_id",
      "description": "The ID of the `Image` that is being operated on.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "VideoIdParam": {
      "name": "id",
      "description": "The BigCommerce ID of the `Video`",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ComplexRuleIdParam": {
      "name": "complex_rule_id",
      "description": "The ID of the `ComplexRule`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ConfigurableFieldIdParam": {
      "name": "configurable_field_id",
      "description": "The ID of the `ConfigurableField`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "CustomFieldIdParam": {
      "name": "custom_field_id",
      "description": "The ID of the `CustomField`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "BulkPricingRuleIdParam": {
      "name": "bulk_pricing_rule_id",
      "description": "The ID of the `BulkPricingRule`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ModifierIdParam": {
      "name": "modifier_id",
      "description": "The ID of the `Modifier`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ValueIdParam": {
      "name": "value_id",
      "description": "The ID of the `Modifier/Option Value`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "OptionIdParam": {
      "name": "option_id",
      "description": "The ID of the `Option`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "VariantIdParam": {
      "name": "variant_id",
      "in": "path",
      "description": "ID of the variant on a product, or on an associated Price List Record.\n",
      "required": true,
      "type": "integer"
    },
    "CategoryIdParam": {
      "name": "category_id",
      "in": "path",
      "description": "The ID of the `Category` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "BrandIdParam": {
      "name": "brand_id",
      "in": "path",
      "description": "The ID of the `Brand` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "MetafieldIdParam": {
      "name": "metafield_id",
      "in": "path",
      "description": "The ID of the `Metafield`.\n",
      "required": true,
      "type": "integer"
    },
    "MetafieldKeyParam": {
      "name": "key",
      "in": "query",
      "description": "Filter based on a metafield's key.\n",
      "required": false,
      "type": "string"
    },
    "MetafieldNamespaceParam": {
      "name": "namespace",
      "in": "query",
      "description": "Filter based on a metafield's namespace.",
      "required": false,
      "type": "string"
    },
    "ImageFileParam": {
      "name": "image_file",
      "description": "An image file. Supported MIME types include GIF, JPEG, and PNG.\n",
      "required": true,
      "in": "formData",
      "type": "file"
    },
    "OrderIdParam": {
      "name": "order_id",
      "in": "path",
      "description": "The ID of the `Order` to which the transactions belong.\n",
      "required": true,
      "type": "integer"
    },
    "Accept": {
      "in": "header",
      "type": "string",
      "name": "Accept",
      "default": "application/json",
      "required": true
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "default": "application/json",
      "required": true
    },
    "product_id": {
      "name": "product_id",
      "in": "query",
      "type": "string",
      "description": "A comma-separated list of ids of Products whose prices were requested. For example:\n`?product_id=:id`\n`?product_id:in=77,80,81`"
    }
  },
  "definitions": {
    "catalogSummary_Full": {
      "type": "object",
      "description": "Catalog Summary object describes a lightweight summary of the catalog.",
      "title": "catalogSummary_Full",
      "properties": {
        "inventory_count": {
          "type": "integer",
          "description": "A count of all inventory items in the catalog.\n",
          "example": 2000
        },
        "inventory_value": {
          "type": "number",
          "format": "double",
          "description": "Total value of store's inventory.\n",
          "example": 267000
        },
        "primary_category_id": {
          "type": "integer",
          "description": "ID of the category containing the most products.\n",
          "example": 23
        },
        "primary_category_name": {
          "type": "string",
          "description": "Name of the category containing the most products.\n",
          "example": "Shop All"
        },
        "variant_count": {
          "type": "integer",
          "description": "Total number of variants",
          "example": 46
        },
        "highest_variant_price": {
          "type": "number",
          "format": "double",
          "description": "Highest priced variant",
          "example": 249
        },
        "average_variant_price": {
          "type": "number",
          "format": "double",
          "example": 83.07978261,
          "description": "Average price of all variants"
        },
        "lowest_variant_price": {
          "type": "string",
          "example": "7",
          "description": "Lowest priced variant in the store"
        },
        "oldest_variant_date": {
          "type": "string",
          "example": "2018-08-15"
        },
        "newest_variant_date": {
          "type": "string",
          "example": "2018-08-16"
        }
      }
    },
    "metaCollection_Full": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "title": "metaCollection_Full",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/pagination_Full"
        }
      }
    },
    "pagination_Full": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "title": "pagination_Full",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of items in the result set.\n",
          "example": 36
        },
        "count": {
          "type": "integer",
          "description": "Total number of items in the collection response.\n",
          "example": 36
        },
        "per_page": {
          "type": "integer",
          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
          "example": 50
        },
        "current_page": {
          "type": "integer",
          "description": "The page you are currently on within the collection.\n",
          "example": 1
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages in the collection.\n",
          "example": 1
        },
        "links": {
          "type": "object",
          "description": "Pagination links for the previous and next parts of the whole collection.\n",
          "properties": {
            "previous": {
              "type": "string",
              "description": "Link to the previous page returned in the response.\n"
            },
            "current": {
              "type": "string",
              "description": "Link to the current page returned in the response.\n",
              "example": "?page=1&limit=50"
            },
            "next": {
              "type": "string",
              "description": "Link to the next page returned in the response.\n"
            }
          }
        }
      }
    },
    "metaEmpty_Full": {
      "type": "object",
      "description": "Empty meta object; may be used later.",
      "title": "metaEmpty_Full"
    },
    "errorResponse_Full": {
      "allOf": [
        {
          "$ref": "#/definitions/error_Base"
        },
        {
          "type": "object",
          "properties": {
            "errors": {
              "$ref": "#/definitions/detailedErrors"
            }
          }
        }
      ],
      "title": "errorResponse_Full"
    },
    "error_Base": {
      "type": "object",
      "description": "Error payload for the BigCommerce API.\n",
      "properties": {
        "status": {
          "description": "The HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.\n",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "error_Base"
    },
    "errorNotFound": {
      "description": "Error payload for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "404 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "errorNotFound"
    },
    "errorNoContent": {
      "description": "No-content response for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "204 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the situation.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "errorNoContent"
    },
    "detailedErrors": {
      "type": "object",
      "title": "detailedErrors",
      "properties": {
        "additionalProperties": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Products | modify | `store_v2_products` |\n|  Products | read-only | `store_v2_products_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Products | modify | `store_v2_products` |\n|  Products | read-only | `store_v2_products_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "responses": {
    "CatalogSummaryResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Catalog Summary object describes a lightweight summary of the catalog.",
            "title": "Catalog Summary",
            "properties": {
              "inventory_count": {
                "type": "integer",
                "description": "A count of all inventory items in the catalog.\n",
                "example": 2000
              },
              "inventory_value": {
                "type": "number",
                "format": "double",
                "description": "Total value of store's inventory.\n",
                "example": 267000
              },
              "primary_category_id": {
                "type": "integer",
                "description": "ID of the category containing the most products.\n",
                "example": 23
              },
              "primary_category_name": {
                "type": "string",
                "description": "Name of the category containing the most products.\n",
                "example": "Shop All"
              },
              "variant_count": {
                "type": "integer",
                "description": "Total number of variants",
                "example": 46
              },
              "highest_variant_price": {
                "type": "number",
                "format": "double",
                "description": "Highest priced variant",
                "example": 249
              },
              "average_variant_price": {
                "type": "number",
                "format": "double",
                "example": 83.07978261,
                "description": "Average price of all variants"
              },
              "lowest_variant_price": {
                "type": "string",
                "example": "7",
                "description": "Lowest priced variant in the store"
              },
              "oldest_variant_date": {
                "type": "string",
                "example": "2018-08-15"
              },
              "newest_variant_date": {
                "type": "string",
                "example": "2018-08-16"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Catalog Summary Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "inventory_count": 4995,
            "variant_count": 54,
            "inventory_value": 702350.03,
            "highest_variant_price": 555,
            "average_variant_price": 74.40055556,
            "lowest_variant_price": 7,
            "oldest_variant_date": "2018-08-15",
            "newest_variant_date": "2018-09-07",
            "primary_category_id": 23,
            "primary_category_name": "Shop All"
          },
          "meta": {}
        }
      }
    }
  },
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true,
      "showModels": false
    }
  }
}