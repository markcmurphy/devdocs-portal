swagger: '2.0'
info:
  title: BigCommerce Common Models
  version: ''
  description: >-
    - [OAuth Scopes](#oauth-scopes)

    - [Authentication](#authentication)

    - [Available Resources](#available-resources)

    - [FAQ](#faq)


    Introduction


    ## OAuth Scopes

    | UI Name                                      | Permission |
    Parameter                                     |

    |----------------------------------------------|------------|-----------------------------------------------|

    | Carts                                        | modify     |
    `store_cart`                                  |

    | Carts                                        | read-only  |
    `store_cart_read_only`                        |

    | Channel Listings                             | modify     |
    `store_channel_listings`                      |

    | Channel Listings                             | read-only  |
    `store_channel_listings_read_only`            |

    | Channel Settings                             | modify     |
    `store_channel_settings`                      |

    | Channel Settings                             | read-only  |
    `store_channel_settings_read_only`            |

    | Checkout Content                             | modify     |
    `store_content_checkout`                      |

    | Checkout Content                             | read-only  |
    `store_content_checkout_read_only`            |

    | Checkouts                                    | modify     |
    `store_checkout`                              |

    | Checkouts                                    | read-only  |
    `store_checkout_read_only`                    |

    | Content                                      | modify     |
    `store_v2_content`                            |

    | Content                                      | read-only  |
    `store_v2_content_read_only`                  |

    | Create Payments                              | create     |
    `store_payments_access_token_create`          |

    | Customer Login                               | login      |
    `store_v2_customers_login`                    |

    | Customers                                    | modify     |
    `store_v2_customers_login`                    |

    | Customers                                    | read-only  |
    `store_v2_customers_login_read_only`          |

    | Get Payment Methods                          | read-only  |
    `store_payments_methods_read`                 |

    | Information & Settings                       | modify     |
    `store_v2_information`                        |

    | Information & Settings                       | read-only  |
    `store_v2_information_read_only`              |

    | Marketing                                    | modify     |
    `store_v2_marketing`                          |

    | Marketing                                    | read-only  |
    `store_v2_marketing_read_only`                |

    | Order Transactions                           | modify     |
    `store_v2_transactions`                       |

    | Order Transactions                           | read-only  |
    `store_v2_transactions_read_only`             |

    | Orders                                       | modify     |
    `store_v2_orders`                             |

    | Orders                                       | read-only  |
    `store_v2_orders_read_only`                   |

    | Products                                     | modify     |
    `store_v2_products`                           |

    | Products                                     | read-only  |
    `store_v2_products_read_only`                 |

    | Sites & Routes                               | modify     |
    `store_sites`                                 |

    | Sites & Routes                               | read-only  |
    `store_sites_read_only`                       |

    | Storefront API Customer Impersonation Tokens | manage     |
    `store_storefront_api_customer_impersonation` |

    | Storefront API Tokens                        | manage     |
    `store_storefront_api`                        |

    | Themes                                       | modify     |
    `store_themes_manage`                         |


    ## Available Resources

    | Resource / Endpoint                     |
    Description                                                             |

    |-----------------------------------------|-------------------------------------------------------------------------|

    | Banners                                 | Create and manage store
    banners                                         |

    | Blog Posts                              | Create and manage store blog
    posts                                      |

    | Blog Tags                               | Create and manage store blog
    tags                                       |

    | Brand Images                            | Create and manage brand
    images                                          |

    | Brand Metafields                        | Create and manage brand
    metafields                                      |

    | Brands                                  | Create and manage
    brands                                                |

    | Carts                                   | Create an manage store
    carts                                            |

    | Catalog                                 | Create and manage store
    categories, products, and brands                |

    | Categories                              | Create and manage
    categorties                                           |

    | Category Images                         | Create and manage category
    images                                       |

    | Category Metafields                     | Create and manage category
    metafields                                   |

    | Channels                                | Create and manage catalog
    listings and channels                         |

    | Checkouts                               | Create checkouts for a
    store                                            |

    | Coupons                                 | Create and manage store
    coupons                                         |

    | Currenies                               | Create and manage store
    currencies and their display                    |

    | Current Customer                        | Identify customer's on the
    front-end securely                           |

    | Customer Login                          | Use JWT & SSO to login a
    customer                                       |

    | Customers Attribute Values              | Create and manage customer
    attribute values                             |

    | Customers Attributes                    | Create and manage customer
    attributes                                   |

    | Customers Form Field Values             | Create an manage customer form
    field values                             |

    | Customers Groups                        | Create and manage customer
    groups                                       |

    | Customers v2                            | Create and manage  customers and
    their addresses                        |

    | Customers v3                            | Create and manage customers and
    their addresses                         |

    | Customers Validate Password             | Validate customer
    passwords                                             |

    | Geography                               | Get a list of states,
    provincies, and countries                         |

    | Gift Certificates                       | Manage gift
    certificates                                                |

    | Order Transactions                      | View order payment
    information                                          |

    | Orders                                  | Create and manage
    orders                                                |

    | Pages                                   | Create and manage store content
    pages                                   |

    | Payment Methods                         | Get a store's enabled payment
    methods                                   |

    | Payment Processing                      | Process payments on orders and
    checkouts                                |

    | Payment Processing Methods              | Get order payment methods for
    processing                                |

    | Payment Processing Token                | Get an access token for payment
    processing                              |

    | Price List Records                      | Create and manage price list
    records                                    |

    | Price Lists                             | Create and manage catalog
    pricing variations                            |

    | Product Bulk Pricing Rules              | Create and manage product bulk
    pricing rules                            |

    | Product Complex Rules                   | Create and manage product
    complex rules                                 |

    | Product Custom Fields                   | Create and manage product custom
    fields                                 |

    | Product Images                          | Create and manage product
    images                                        |

    | Product Metafields                      | Create and manage product meta
    fields                                   |

    | Product Modifier Images                 | Create and manage product
    modifer images                                |

    | Product Modifier Values                 | Create and manage product
    modifier values                               |

    | Product Modifiers                       | Create and manage product
    midifiers                                     |

    | Product Reviews                         | Create and manage product
    reviews                                       |

    | Product Variant Option Values           | Create and manage product
    variant option values                         |

    | Product Variant Options                 | Create and manage product
    variant options                               |

    | Product Variants                        | Create and manage product
    variants                                      |

    | Product Videos                          | Create and manage product
    videos                                        |

    | Products                                | Create and manage
    products                                              |

    | ProductVariant Metafields               | Create and manage product meta
    flields                                  |

    | Redirects                               | Manage a store's URL
    redirects                                          |

    | Scripts                                 | Add client-side code to a
    store                                         |

    | Shipping                                | Create and manage a store's
    shipping methods and zones.                 |

    | Shipping Carriers                       | Create and manage shipping
    carriers                                     |

    | Shipping Methods                        | Create and manage shipping
    methods                                      |

    | Shipping Poviders Connection Options    | Specification for creating an
    external shipping carrier service         |

    | Shipping Provider Rate Request          | Specification for creating an
    external shipping carrier service         |

    | Shipping Zones                          | Create and manage shipping
    zones                                        |

    | Sites                                   | Manage sites and routing for
    headless storefronts                       |

    | Store Infomation                        | Get store
    metadata                                                      |

    | Storefront API Token                    | Create Auth Tokens for use with
    Storefront APIs                         |

    | Storefront Carts                        | Create and get carts on the
    front-end                                   |

    | Storefront Checkouts                    | Create and get checkouts on the
    front-end                               |

    | Storefront Customer Impersonation Token | Create a storefront API token
    for customer impersonation                |

    | Storefront Orders                       | Get order data on the front-end
    after order is palced                   |

    | Subscribers                             | Create and manage store
    newsletter subscribers                          |

    | Tax Class                               | Get a store's available tax
    classes                                     |

    | Themes                                  | Create and manage store
    theme's                                         |

    | Time Zone                               | Get store system
    timestamp                                              |

    | Variants                                | Get and update all
    variants                                             |

    | Webhooks                                | Manage store
    Webhooks                                                   |

    | Widgets                                 | Create and manage store
    widgets                                         |

    | Widgets Placements                      | Place, move, and remove store
    widgets                                   |

    | Widgets Regions                         | Get list of regions widgets can
    be placed for a specified template file |

    | Widgets Templates                       | Create and manage widget
    templates                                      |

    | Wishlist                                | Create and manage customer
    wishlists                                    |


    ## Authentication

    |Header|Parameter|Description|

    |-|-|-|

    |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|

    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Client: {client_id}

    X-Auth-Token: {access_token}

    ```


    For more information on Authenticating BigCommerce APIs, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).


    ## Usage Notes


    ## FAQ


    **question** 


    answer


    **question**


    answer


    ## Resources


    ### Related Endpoints

    * [link]()

    * [link]()

    * [link]()


    ### Related Articles

    * [link]()

    * [link]()

    * [link]()
      
    ### Additional Resources

    * [link]() (domain)

    * [link]() (domain)

    * [link]() (domain) 
  contact:
    url: 'https://developer.bigcommerce.com'
    name: BigCommerce Developer Documentation
  license:
    name: ''
  termsOfService: ''
host: api.bigcommerce.com
paths:
  /example:
    get:
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties: {}
      description: >-
        ## OAuth Scopes

        | UI Name                                      | Permission |
        Parameter                                     |

        |----------------------------------------------|------------|-----------------------------------------------|

        | Carts                                        | modify     |
        `store_cart`                                  |

        | Carts                                        | read-only  |
        `store_cart_read_only`                        |

        | Channel Listings                             | modify     |
        `store_channel_listings`                      |

        | Channel Listings                             | read-only  |
        `store_channel_listings_read_only`            |

        | Channel Settings                             | modify     |
        `store_channel_settings`                      |

        | Channel Settings                             | read-only  |
        `store_channel_settings_read_only`            |

        | Checkout Content                             | modify     |
        `store_content_checkout`                      |

        | Checkout Content                             | read-only  |
        `store_content_checkout_read_only`            |

        | Checkouts                                    | modify     |
        `store_checkout`                              |

        | Checkouts                                    | read-only  |
        `store_checkout_read_only`                    |

        | Content                                      | modify     |
        `store_v2_content`                            |

        | Content                                      | read-only  |
        `store_v2_content_read_only`                  |

        | Create Payments                              | create     |
        `store_payments_access_token_create`          |

        | Customer Login                               | login      |
        `store_v2_customers_login`                    |

        | Customers                                    | modify     |
        `store_v2_customers_login`                    |

        | Customers                                    | read-only  |
        `store_v2_customers_login_read_only`          |

        | Get Payment Methods                          | read-only  |
        `store_payments_methods_read`                 |

        | Information & Settings                       | modify     |
        `store_v2_information`                        |

        | Information & Settings                       | read-only  |
        `store_v2_information_read_only`              |

        | Marketing                                    | modify     |
        `store_v2_marketing`                          |

        | Marketing                                    | read-only  |
        `store_v2_marketing_read_only`                |

        | Order Transactions                           | modify     |
        `store_v2_transactions`                       |

        | Order Transactions                           | read-only  |
        `store_v2_transactions_read_only`             |

        | Orders                                       | modify     |
        `store_v2_orders`                             |

        | Orders                                       | read-only  |
        `store_v2_orders_read_only`                   |

        | Products                                     | modify     |
        `store_v2_products`                           |

        | Products                                     | read-only  |
        `store_v2_products_read_only`                 |

        | Sites & Routes                               | modify     |
        `store_sites`                                 |

        | Sites & Routes                               | read-only  |
        `store_sites_read_only`                       |

        | Storefront API Customer Impersonation Tokens | manage     |
        `store_storefront_api_customer_impersonation` |

        | Storefront API Tokens                        | manage     |
        `store_storefront_api`                        |

        | Themes                                       | modify     |
        `store_themes_manage`                         |


        ## Usage Notes


        **Topic**

        * thing

        * thing

        * thing


        **Topic**

        * thing

        * thing

        * thing
      summary: Get a Thing
      tags:
        - Example
      operationId: getExample
definitions:
  _metaEmpty:
    type: object
    description: Used in responses for single objects
    title: _metaEmpty
  _pagination:
    type: object
    title: _pagination
    properties:
      total:
        description: Total number of items in the result set.
        type: integer
        format: int32
      count:
        description: Total number of items in the collection response.
        type: integer
        format: int32
      per_page:
        description: >-
          The amount of items returned in the collection per page, controlled by
          the limit parameter.
        type: integer
        format: int32
      current_page:
        description: The page you are currently on within the collection.
        type: integer
        format: int32
      total_pages:
        description: The total number of pages in the collection.
        type: integer
        format: int32
      links:
        $ref: '#/definitions/_links'
    description: In metaCollection
  _metaCollection:
    type: object
    title: _metaCollection
    properties:
      pagination:
        $ref: '#/definitions/_pagination'
    description: Used in responses that contains collections.
  _links:
    type: object
    description: >
      Links for the previous and next parts of the whole collection. In
      pagination.
    properties:
      previous:
        type: string
        description: |
          Link to the previous page returned in the response.
      current:
        type: string
        description: |
          Link to the current page returned in the response.
        example: '?page=1&limit=50'
      next:
        type: string
        description: |
          Link to the next page returned in the response.
    title: _links
  response_defaultError:
    allOf:
      - $ref: '#/definitions/_errorBase'
      - $ref: '#/definitions/_errorDetailed'
    title: response_defaultError
    description: Error message.
  _errorBase:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
    title: _errorBase
  response_404:
    description: Error payload for the BigCommerce API.
    type: object
    properties:
      status:
        description: |
          404 HTTP status code.
        type: integer
      title:
        description: The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
    title: response_404
  _errorDetailed:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          type: string
        title: DetailedErrors
  _requestHeaders:
    type: object
    title: Request Headers
    properties:
      Accept:
        type: string
      Content-Type:
        type: string
      User-Agent:
        type: string
schemes:
  - https
parameters:
  Accept:
    in: header
    type: string
    name: Accept
    default: application/json
    required: true
    description: Accept
  Content-Type:
    name: Content-Type
    in: header
    type: string
    default: application/json
    required: true
    description: Content-Type
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
    description: >-
      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Accept: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  X-Auth-Token:
    type: apiKey
    in: header
    description: >-
      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Accept: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)
    name: X-Auth-Token
  OAuth:
    type: oauth2
    flow: application
    tokenUrl: 'https://login.bigcommerce.com/oauth2/token'
    description: >-
      ## Request Headers


      API requests are authenticated by the following HTTP headers:


      * `X-Auth-Client` -- The Client ID of the requesting app. 

      * `X-Auth-Token` -- Access token authorizing an app to access store data
      on behalf of a user.


      In addition, while not all resources require the Accept and Content-Type
      headers, many do. To ensure that your calls succeed, always include these
      headers. For more details on request headers and their accepted values,
      see [Request
      Headers](https://developer.bigcommerce.com/api-docs/getting-started/about-our-api#request-headers).


      `https://login.bigcommerce.com/oauth2/token`


      ### Request


      ```http

      POST /oauth2/token HTTP/1.1

      Host: login.bigcommerce.com

      Content-Type: application/x-www-form-urlencoded

      Content-Length: 186

      client_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&code=qr6h3thvbvag2ffq&scope=store_v2_orders&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}

      ```


      ### Response


      ```json

      {
        "access_token": "ACCESS_TOKEN",
        "scope": "store_v2_orders",
        "user": {
          "id": 24654,
          "email": "merchant@mybigcommerce.com"
        },
        "context": "stores/STORE_HASH"
      }

      ```
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
consumes: []
produces: []
basePath: '/stores/{$$.env.store_hash}/v3'
tags:
  - name: Example
