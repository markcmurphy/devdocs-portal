{
  "swagger": "2.0",
  "info": {
    "title": "Sites",
    "version": "3.0",
    "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authentication](#authentication)\n- [Sites](#sites)\n- [Site routes](#site-routes)\n- [Additional Information](#additional-information)\n\n</div>\n\nCreate and manage [sites](#sites) and [routes](#routes) for [headless storefront](https://support.bigcommerce.com/s/article/The-Headless-Approach#what-mean) sales [channels](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api).\n\n## Authentication\n\nAuthenticate requests by sending a `client_id` and `access_token` via `X-Auth-Client` and `X-Auth-Token` HTTP headers.\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nAccept: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n### OAuth Scopes\n\n| UI Name        | Permission | Parameter               |\n|----------------|------------|-------------------------|\n| Sites & Routes | modify     | `store_sites`           |\n| Sites & Routes | read-only  | `store_sites_read_only` |\n\nFor more information on authenticating BigCommerce APIs, see [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## [Sites](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites)\n\nSites link [headless storefronts](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) to sales [channels](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api). To [create a site](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites`.\n\n```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites\nX-Auth-Token: {{ACCESS_TOKEN}}\nX-Auth-Client: {{CLIENT_ID}}\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"url\": \"http://store.example.com/\",\n  \"channel_id\": 5\n}\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site#requestrunner)\n\n**[Response:](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/post-site#responses)**\n\n```json\n{\n  \"id\": 1,\n  \"url\": \"http://store.example.com/\",\n  \"channel_id\": 5,\n  \"created_at\": \"2018-01-04T04:15:50.000Z\",\n  \"updated_at\": \"2018-01-04T04:15:50.000Z\"\n}\n```\n\nTo [get a list of sites](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/getsites), send a `GET` request to `/stores/{{STORE_HASH}}/v3/sites`.\n\n```http\nGET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites\nX-Auth-Token: {{ACCESS_TOKEN}}\nX-Auth-Client: {{CLIENT_ID}}\nAccept: application/json\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/sites/getsites#requestrunner)\n\n</div>\n\n## [Site routes](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes)\n\nSite routes tell BigCommerce how to link to pages on a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless). To [create a route](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes/post-site-route) for a [site](#sites), send a `POST` request to `/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes`.\n\n```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes\nX-Auth-Token: {{ACCESS_TOKEN}}\nX-Auth-Client: {{CLIENT_ID}}\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"type\": \"product\",\n  \"matching\": \"12\",\n  \"route\": \"/en/product?id=12\"\n}\n```\n\n[![Open in Request Runner](https://storage.googleapis.com/bigcommerce-production-dev-center/images/Open-Request-Runner.svg)](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api/site-routes/post-site-route#requestrunner)\n\n### Route types\n\nThe following route types are supported.\n\n| Type | Description |\n|-|-|\n|`account_new_return`|Route for shopper account page|\n|`account_order_status`|Route for shopper order status account page|\n|`cart`|Route to shopper's cart|\n|`checkout`|Route to checkout|\n|`create_account`|Route to the create a shopper account page|\n|`forgot_password`|Route to shopper forgot password page|\n|`home`|Route to headless storefront homepage|\n|`order_confirmation`|Route to the order confirmation page|\n|`product`|Route for product details pages |\n|`recover_abandoned_cart`|Route for URL in emails for a shopper to recover their abandoned cart|\n|`unsubscribe`|Route for unsubscribe URL in emails|\n\n### Route variables\n\nThe following route variables are supported\n\n|Variable|Description|\n|-|-|-|\n|`{id}`|The **ID** of the requested item|\n|`{slug}`|The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash|\n|`{lang}`|The **language** string that the client is using|\n\n**Example:**\n\n```http\nPOST https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/sites/{site_id}/routes\nX-Auth-Token: {{ACCESS_TOKEN}}\nX-Auth-Client: {{CLIENT_ID}}\nContent-Type: application/json\nAccept: application/json\n\n{\n  \"type\": \"product\",\n  \"matching\": \"*\",\n  \"route\": \"/{lang}/{slug}?id={id}\"\n}\n```\n\n## Additional Information\n\n### Related resources\n* [Channels and Listings Reference](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api)\n* [Channels Overview](https://developer.bigcommerce.com/api-docs/channels/overview)\n* [Building Headless Storefronts Guide](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless)",
    "contact": {}
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{$$.env.store_hash}/v3",
  "paths": {
    "/sites": {
      "post": {
        "summary": "Create a Site",
        "operationId": "post-site",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post_Site"
            },
            "x-examples": {
              "application/json": {
                "url": "http://store.example.com/",
                "channel_id": 2
              }
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/response_Site"
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n \nCreate a site that links a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) to a sales [channel](https://developer.bigcommerce.com/api-reference/cart-checkout/channels-listings-api)"
      },
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/site_RespCollection"
          }
        },
        "summary": "Get Sites",
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n \nGet sites linked to a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless) sales channels.\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n> ### Note\n> * `page` and `limit` query params are requred and must be `>=1`\n\n</div>\n</div>\n</div>",
        "tags": [
          "Sites"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "/sites/{site_id}": {
      "get": {
        "summary": "Get a Site",
        "operationId": "get-site",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/response_Site"
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Get site with site ID `{site_id}`.\n\n<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n ",
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Update a Site",
        "operationId": "put-site",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/put_Site"
            },
            "x-examples": {
              "application/json": {
                "url": "https://remote-site.com/"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/response_Site"
          }
        },
        "tags": [
          "Sites"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Update site with site ID `{site_id}`.\n\n<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n "
      },
      "delete": {
        "summary": "Delete a Site",
        "operationId": "delete-site",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "examples": {}
          }
        },
        "tags": [
          "Sites"
        ],
        "description": "Delete site with site ID `{site_id`}.\n\n<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n "
      }
    },
    "/sites/{site_id}/routes": {
      "parameters": [
        {
          "name": "site_id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Site's Routes",
        "operationId": "index-site-routes",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter routes by a given resource type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/siteRoute_Full"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/_metaCollection"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 1,
                    "type": "product",
                    "matching": "5",
                    "route": "/products?id={id}"
                  },
                  {
                    "id": 2,
                    "type": "category",
                    "matching": "44",
                    "route": "/category/{slug}"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Site Routes"
        ],
        "description": "Get a site's routes.\n\n<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n "
      },
      "post": {
        "summary": "Create a Site Route",
        "operationId": "post-site-route",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/siteRoute_Base"
            },
            "x-examples": {
              "application/json": {
                "type": "returns",
                "matching": "5",
                "route": "/my-amazing-product"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/siteRoute_Resp"
          },
          "422": {
            "$ref": "#/responses/ErrorResponse"
          }
        },
        "tags": [
          "Site Routes"
        ],
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n \n\nCreate routes that tell BigCommerce how to link to pages on a [headless storefront](https://developer.bigcommerce.com/api-docs/storefronts/developers-guide-headless). For a list of [supported route types](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api#route-types), see [Sites and Routes API Description](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api)."
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/siteRoute_Full"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/_metaCollection"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 123,
                    "type": "brand",
                    "matching": "5",
                    "route": "/my-amazing-product"
                  },
                  {
                    "id": 345,
                    "type": "blog",
                    "matching": "5",
                    "route": "/my-amazing-product"
                  },
                  {
                    "id": 234,
                    "type": "returns",
                    "matching": "5",
                    "route": "/my-amazing-product"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 80,
                    "count": 50,
                    "per_page": 50,
                    "current_page": 50,
                    "total_pages": 2,
                    "links": {
                      "current": "?page=1&limit=50",
                      "next": "?page=2&limit=50"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/responses/BulkErrorResponse"
          }
        },
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n \n\nUpsert of routes for a site.\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--info\">\n<div class=\"HubBlock-content\">\n\n> ### Note\n> * `id` is required when updating existing route.\n\n</div>\n</div>\n</div> \n\n",
        "summary": "Update Site's Routes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/siteRoute_Full"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "id": 1,
                  "type": "product",
                  "matching": "*",
                  "route": "/products/{id}"
                },
                {
                  "type": "product",
                  "matching": "10",
                  "route": "/products?id={id}"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "site_id",
            "type": "integer",
            "required": true
          }
        ],
        "tags": [
          "Site Routes"
        ]
      }
    },
    "/sites/{site_id}/routes/{route_id}": {
      "get": {
        "summary": "Get a Site Route",
        "operationId": "get-site-route",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/siteRoute_Full"
                },
                "meta": {
                  "type": "object"
                }
              }
            },
            "examples": {}
          }
        },
        "tags": [
          "Site Routes"
        ],
        "description": "Get a site's route.\n\n<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n "
      },
      "put": {
        "summary": "Update a Site Route",
        "operationId": "put-site-route",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/siteRoute_Full"
            },
            "x-examples": {
              "application/json": [
                {
                  "id": 1,
                  "type": "product",
                  "matching": "*",
                  "route": "/products/{id}"
                },
                {
                  "id": 2,
                  "type": "product",
                  "matching": "10",
                  "route": "/products?id={id}"
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/siteRoute_Resp"
          }
        },
        "tags": [
          "Site Routes"
        ],
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Request Body](#request-body)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n\nUpdate a site's route."
      },
      "delete": {
        "summary": "Delete a Site Route",
        "operationId": "delete-route",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "examples": {}
          }
        },
        "tags": [
          "Site Routes"
        ],
        "description": "<div class=\"otp\" id=\"no-index\">\n\n### On This Page\n\n- [Authorization](#authorization)\n- [Request Parameters](#request-parameters)\n- [Responses](#responses)\n- [Send a Test Request](#send-a-test-request)\n\n</div>\n\nDelete a site's route.\n "
      }
    }
  },
  "definitions": {
    "_metaCollection": {
      "$ref": "./BigCommerce_All_Common.oas2.yml#/definitions/metaCollection_Full"
    },
    "siteRoute_Full": {
      "title": "siteRoute_Full",
      "description": "Route object used in responses.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique ID for this route. Required when updating an existing route"
            }
          }
        },
        {
          "$ref": "#/definitions/siteRoute_Base"
        }
      ]
    },
    "put_Site": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.",
          "example": "http://kittens.mybigcommerce.com/"
        }
      },
      "title": "put_Site"
    },
    "_site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.",
          "example": "http://kittens.mybigcommerce.com/"
        },
        "channel_id": {
          "type": "integer",
          "description": "The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites."
        },
        "created_at": {
          "type": "string",
          "description": "When was this site created? RFC 3339",
          "example": "2018-01-04T04:15:50.000Z"
        },
        "updated_at": {
          "type": "string",
          "description": "When was this site defintion last updated? RFC 3339",
          "example": "2018-01-04T04:15:50.000Z"
        },
        "routes": {
          "type": "array",
          "description": "(optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)",
          "items": {
            "$ref": "#/definitions/siteRoute_Full"
          }
        }
      },
      "title": "_site"
    },
    "_metaEmpty": {
      "type": "object",
      "description": "Empty meta object; may be used later.",
      "title": "_metaEmpty"
    },
    "_pagination": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.\n",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of items in the result set.\n"
        },
        "count": {
          "type": "integer",
          "description": "Total number of items in the collection response.\n"
        },
        "per_page": {
          "type": "integer",
          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n"
        },
        "current_page": {
          "type": "integer",
          "description": "The page you are currently on within the collection.\n"
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages in the collection.\n"
        },
        "links": {
          "type": "object",
          "description": "Pagination links for the previous and next parts of the whole collection.\n",
          "properties": {
            "previous": {
              "type": "string",
              "description": "Link to the previous page returned in the response.\n"
            },
            "current": {
              "type": "string",
              "description": "Link to the current page returned in the response.\n"
            },
            "next": {
              "type": "string",
              "description": "Link to the next page returned in the response.\n"
            }
          }
        }
      },
      "title": "_pagination"
    },
    "_errors": {
      "type": "object",
      "description": "The keys and values in an errors object will vary depending on the error received.",
      "title": "_errors"
    },
    "error_Full": {
      "type": "object",
      "title": "error_Full",
      "properties": {
        "status": {
          "description": "The HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.\n",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "errorDetailed_Full": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "DetailedErrors"
        }
      },
      "title": "errorDetailed_Full"
    },
    "post_Site": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.",
          "example": "http://kittens.mybigcommerce.com/"
        },
        "channel_id": {
          "type": "integer",
          "description": "The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites."
        }
      },
      "title": "post_Site"
    },
    "siteRoute_Base": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "What type of resource are we routing to?",
          "enum": [
            "product",
            "brand",
            "category",
            "page",
            "blog",
            "home",
            "cart",
            "checkout",
            "search",
            "account",
            "login",
            "returns",
            "static"
          ]
        },
        "matching": {
          "type": "string",
          "description": "(entity_id?) For a given type, which resources should match this route? e.g For a route with the type: \"product\" and matching: \"5\" this route would be used for the product with the ID of 5.\n\nDepending on the type of resource, this may be an ID (matching a specific item), or a \"*\" wildcard matching all items of that type.",
          "example": "5"
        },
        "route": {
          "type": "string",
          "description": "The route template that will be used to generate the URL for the requested resource.\n\nSupports several tokens:\n- `{id}` The **ID** of the requested item\n- `{slug}` The **slug** for the requested item (if available). Note: the `slug` value may contain `/` slash\n- `{language}` The **language** string that the client is using",
          "example": "/my-amazing-product"
        }
      },
      "title": "siteRoute_Base"
    }
  },
  "tags": [
    {
      "name": "Sites",
      "description": "Enables creation and management of external sites (domains) where shoppers shop. Allows for the correct shopping experience to be delivered and maintained (i.e. redirect URLs, email links) when a shopper goes through the purchasing process."
    },
    {
      "name": "Routes",
      "description": "Allows for specific page routes to be set so that shoppers can be directed to the proper domain pages in their shopping experience."
    },
    {
      "name": "Site Routes"
    }
  ],
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Channel Listings | modify | `store_channel_listings` |\n|  Channel Listings | read-only | `store_channel_listings_read_only` |\n|  Channel Settings | modify | `store_channel_settings` |\n|  Channel Settings | read-only | `store_channel_settings_read_only` |\n|  Sites & Routes | modify | `store_sites` |\n|  Sites & Routes | read-only | `store_sites_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)."
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Auth-Token",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Channel Listings | modify | `store_channel_listings` |\n|  Channel Listings | read-only | `store_channel_listings_read_only` |\n|  Channel Settings | modify | `store_channel_settings` |\n|  Channel Settings | read-only | `store_channel_settings_read_only` |\n|  Sites & Routes | modify | `store_sites` |\n|  Sites & Routes | read-only | `store_sites_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)."
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "parameters": {},
  "responses": {
    "502_GatewayError": {
      "description": "If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.",
      "schema": {
        "$ref": "#/definitions/error_Full"
      },
      "examples": {
        "application/json": {
          "status": 502,
          "title": "A login URL could not be generated. Please try another request.",
          "type": "https://developer.bigcommerce.com/api#api-status-codes"
        }
      }
    },
    "504_GatewayTimeout": {
      "description": "If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)",
      "schema": {
        "$ref": "#/definitions/errorDetailed_Full"
      },
      "examples": {
        "application/json": {
          "status": 504,
          "title": "Gateway Timeout",
          "type": "https://developer.bigcommerce.com/api#api-status-codes",
          "errors": {}
        }
      }
    },
    "403_Unauthorized": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/error_Full"
      },
      "examples": {
        "application/json": {
          "status": 403,
          "title": "Unauthorized Access. You do not have permission to make this request.",
          "type": "https://developer.bigcommerce.com/api#api-status-codes"
        }
      }
    },
    "400_BadRequest": {
      "description": "Malformed request syntax. Typically need to fix the JSON\nBody to resend successfully.",
      "schema": {
        "$ref": "#/definitions/error_Full"
      },
      "examples": {
        "application/json": {
          "status": 400,
          "title": "Input is invalid.",
          "type": "https://developer.bigcommerce.com/api#api-status-codes"
        }
      }
    },
    "404_NotFound": {
      "description": "If the requested account resource is not found for the franchise, return a 404 Not Found.",
      "schema": {
        "$ref": "#/definitions/error_Full"
      },
      "examples": {
        "application/json": {
          "status": 404,
          "title": "Account with {id} not found",
          "type": "https://developer.bigcommerce.com/api#api-status-codes"
        }
      }
    },
    "422_UnprocessableEntity": {
      "description": "This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.",
      "schema": {
        "$ref": "#/definitions/errorDetailed_Full"
      },
      "examples": {
        "application/json": {
          "status": 422,
          "title": "JSON data is missing or invalid",
          "type": "https://developer.bigcommerce.com/api#api-status-codes",
          "errors": {
            "name": "error.expected.jsstring",
            "primary_contact.district": "error.expected.jsstring."
          }
        }
      }
    },
    "503_ServiceUnavailable": {
      "description": "If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)",
      "schema": {
        "$ref": "#/definitions/error_Full"
      },
      "examples": {
        "application/json": {
          "status": 503,
          "title": "Service Unavailable",
          "type": "https://developer.bigcommerce.com/api#api-status-codes"
        }
      }
    },
    "response_Site": {
      "description": "",
      "examples": {
        "application/json": {
          "data": {
            "id": 1,
            "url": "https://www.my-awesome-site.com",
            "channel_id": 18735,
            "created_at": "2019-08-05T18:26:21Z",
            "updated_at": "2019-08-05T18:26:21Z"
          },
          "meta": {}
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/_site"
          },
          "meta": {
            "$ref": "#/definitions/_metaEmpty"
          }
        }
      }
    },
    "BulkErrorResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "The HTTP status code."
          },
          "title": {
            "type": "string"
          },
          "errors": {
            "$ref": "#/definitions/_errors"
          },
          "meta": {
            "$ref": "#/definitions/_metaEmpty"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "examples": {
        "application/json": {
          "meta": {
            "saved_records": 0
          },
          "title": "Bulk operation has failed",
          "type": "https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes",
          "errors": {
            "0.matching.type": "Route already exists for site 1 matching 5 for type product",
            "1.matching.type": "Route already exists for site 1 matching * for type home"
          },
          "status": 422
        }
      }
    },
    "ErrorResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "General error message"
          },
          "status": {
            "type": "string",
            "description": "HTTP status code"
          },
          "errors": {
            "$ref": "#/definitions/_errors"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "examples": {
        "application/json": {
          "status": 422,
          "title": "JSON data is missing or invalid",
          "type": "https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes",
          "errors": {
            "matching": "error.path.missing"
          }
        }
      }
    },
    "site_RespCollection": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/_site"
            }
          },
          "meta": {
            "$ref": "#/definitions/_metaCollection"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "channel_id": 16905,
              "created_at": "2019-05-14T15:43:11Z",
              "id": 1,
              "updated_at": "2019-12-09T23:19:59Z",
              "url": "https://2wy5z.csb.app"
            }
          ],
          "meta": {
            "pagination": {
              "limit": 50,
              "offset": 0,
              "total_items": 1
            }
          }
        }
      }
    },
    "siteRoute_Resp": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/siteRoute_Full"
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 123,
            "type": "checkout",
            "matching": "5",
            "route": "/my-amazing-product"
          },
          "meta": {}
        }
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true,
      "showModels": false
    }
  }
}