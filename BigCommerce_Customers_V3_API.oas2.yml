{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "BigCommerce API",
    "description": "Customers API",
    "contact": {}
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{store_hash}/v3",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customers": {
      "get": {
        "description": "Returns a list of *Customers*. Optional filter parameters can be passed in. \n\n**Notes**\n\nAttribute names are not available on the customer object. ",
        "summary": "Get All Customers",
        "tags": [
          "Customers"
        ],
        "operationId": "CustomersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterPageParam"
          },
          {
            "$ref": "#/parameters/FilterLimitParam"
          },
          {
            "$ref": "#/parameters/FilterIdParam"
          },
          {
            "$ref": "#/parameters/FilterCompanyParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerGroupParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedMaxParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedMinParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedMinParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedMaxParam"
          },
          {
            "$ref": "#/parameters/FilterEmailParam"
          },
          {
            "$ref": "#/parameters/FilterNameParam"
          },
          {
            "$ref": "#/parameters/FilterNameLikeParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerRegistrationIPAddressParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerIncludeParam"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerCollectionResponse"
          }
        }
      },
      "post": {
        "description": "Creates a *Customer*. Multiple customers can be created in one call.\n\n**Required Fields**\n* last_name\n* first_name\n* email\n\n**Required Fields Customer Address**\n* first_name\n* city\n* country_code\n* state_or_province\n* last_name\n* address1\n* postal_code\n\n**Required Fields Attributes**\n* attribute_name\n* attribute_value -- This is input as a string, regardless of the [Type](http://).",
        "summary": "Create a Customer",
        "tags": [
          "Customers"
        ],
        "operationId": "CustomersPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPost"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "email": "johndoe@email.com",
                  "first_name": "John",
                  "last_name": "Doe",
                  "company": "BigCommerce",
                  "phone": "1234567890",
                  "notes": "Warehouse",
                  "customer_group_id": 5,
                  "addresses": [
                    {
                      "first_name": "John",
                      "last_name": "Doe",
                      "address1": "Bennelong Point ",
                      "city": "Sydney",
                      "state_or_province": "New South Wales",
                      "postal_code": "2000",
                      "country_code": "AU",
                      "phone": "1234567890",
                      "address_type": "commercial"
                    },
                    {
                      "first_name": "John",
                      "last_name": "Doe",
                      "address1": "111 E West Street",
                      "address2": "654",
                      "city": "Akron",
                      "state_or_province": "Ohio",
                      "postal_code": "44325",
                      "country_code": "US",
                      "phone": "1234567890",
                      "address_type": "residential"
                    }
                  ],
                  "attributes": [
                    {
                      "attribute_id": 1,
                      "value": "45"
                    },
                    {
                      "attribute_id": 2,
                      "value": 12
                    }
                  ],
                  "authentication": {
                    "force_password_reset": true,
                    "new_password": "tempPassword1"
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerResponse"
          },
          "422": {
            "description": "The *Customer* was not valid. This is the result of missing required fields or trying to edit a read only field. See the response for more details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "status": 422,
                "title": "Create customers failed.",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {
                  ".customer_create": "Error creating customers"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Updates a *Customer*. Subresource updates are not supported. Multiple customers can be updated in one call.\n\n**Required Fields**\n* id -- ID of the *Customer* This must be included in the request body\n\n**Notes**\n\nAttributes Values can not be updated using Update a Customer. Use the Update a Customer Attribute Values endpoint.",
        "summary": "Update a Customer",
        "tags": [
          "Customers"
        ],
        "operationId": "CustomersPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerPut"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "id": 65206491,
                  "email": "etu",
                  "first_name": "Excepte",
                  "last_name": "incidi",
                  "company": "anim",
                  "phone": "quis ",
                  "registration_ip_address": "l",
                  "notes": "adipisicing incididunt quis dolor",
                  "tax_exempt_category": "Excepteur ",
                  "customer_group_id": -76846758,
                  "authentication": {
                    "force_password_reset": true,
                    "new_password": "cupidatat dolore"
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerResponse"
          },
          "422": {
            "description": "The `Customer` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes *Customers*. \n\n**Required Query**\n* id:in -- ID of the customer",
        "summary": "Delete Customers",
        "tags": [
          "Customers"
        ],
        "operationId": "CustomersDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "in": "query",
            "name": "id:in",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Filter items by id.\n`id:in=4,5,6`",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/customers/addresses": {
      "get": {
        "description": "Returns a list of *Customer Addresses*. Optional filter parameters can be passed in.",
        "summary": "Get All Customer Addresses",
        "operationId": "CustomersAddressesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/FilterPageParam"
          },
          {
            "$ref": "#/parameters/FilterLimitParam"
          },
          {
            "$ref": "#/parameters/FilterCompanyParam"
          },
          {
            "$ref": "#/parameters/FilterNameParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerIdParam"
          },
          {
            "$ref": "#/parameters/FilterAddressIncludeParam"
          },
          {
            "$ref": "#/parameters/FilterIdParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddressCollectionResponse"
          }
        },
        "tags": [
          "Customer Addresses"
        ]
      },
      "post": {
        "description": "Creates a *Customer Address*. Multiple customer addresses can be created in one call.\n\n**Required Fields**\n* first_name\n* city\n* customer_id\n* country_code\n* state_or_province\n* last_name\n* address1\n* postal_code",
        "summary": "Create a Customer Address",
        "operationId": "CustomersAddressesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressPost"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "first_name": "John",
                  "last_name": "Doe",
                  "address1": "111 E West Street",
                  "address2": "654",
                  "city": "Akron",
                  "state_or_province": "Ohio",
                  "postal_code": "44325",
                  "country_code": "US",
                  "phone": "1234567890",
                  "address_type": "residential",
                  "customer_id": 11
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddressResponse"
          },
          "422": {
            "description": "The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Customer Addresses"
        ]
      },
      "put": {
        "description": "Updates a *Customer Addresses*. Multiple customers addresses can be updated in one call.\n\n**Required Fields**\n* id -- ID of the *Customer Address*\n* customer_id -- ID of the *Customer*.",
        "summary": "Update a Customer Address",
        "operationId": "CustomersAddressesPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressPut"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "first_name": "John",
                  "last_name": "Doe",
                  "address1": "111 E West Street",
                  "address2": "654",
                  "city": "Akron",
                  "state_or_province": "OH",
                  "postal_code": "44325",
                  "country_code": "USA",
                  "phone": "1234567890",
                  "address_type": "residential",
                  "customer_id": 23
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddressResponse"
          },
          "422": {
            "description": "The `Address` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Customer Addresses"
        ]
      },
      "delete": {
        "description": "Deletes a *Customer Address*.\n\n**Required Query**\n* id:in -- ID of the *Customer Address*",
        "summary": "Delete Customer Address",
        "operationId": "CustomersAddressesDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "in": "query",
            "name": "id:in",
            "type": "array",
            "required": true,
            "description": "Filter items by id.\n`id:in=4,5,6`",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Customer Addresses"
        ]
      }
    },
    "/customers/attributes": {
      "get": {
        "description": "Returns a list of *Customer Attributes*. Optional filter parameters can be passed in.",
        "summary": "Get All Customer Attributes",
        "operationId": "CustomersAttributesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterPageParam"
          },
          {
            "$ref": "#/parameters/FilterLimitParam"
          },
          {
            "name": "name:in",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter items by first_name and last_name."
          },
          {
            "name": "name:like",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter items by substring in first_name and last_name (%substring% - use with % symbols)."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The type of the customer attrribute."
          },
          {
            "name": "date_created",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_created."
          },
          {
            "name": "date_created:max",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_created."
          },
          {
            "name": "date_created:min",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_created."
          },
          {
            "name": "date_modified",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_modified."
          },
          {
            "name": "date_modified:max",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_modified."
          },
          {
            "name": "date_modified:min",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Filter items by date_modified."
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerAttributeCollectionResponse"
          }
        },
        "tags": [
          "Customer Attributes"
        ]
      },
      "post": {
        "description": "Creates a *Customer Attribute*. Multiple customer attributes can be created in one call.  \n\n**Required Fields**\n* name\n* type\n\n**Notes**\n\nOnce the data type is set, it can not be changed. The attribute will need to be deleted then created again with the new data type. This will also delete it from the customer.\n\nCustomer attributes are created separately from the customer. After the name and type are created, then the attributes can be added to the customer.",
        "summary": "Create a Customer Attribute",
        "operationId": "CustomersAttributesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerAttributePost"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "name": "Date Joined",
                  "type": "date"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerAttributesResponse"
          },
          "422": {
            "description": "The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Customer Attributes"
        ]
      },
      "put": {
        "description": "Updates a *Customer Attribute* Multiple customer attributes can be updated in one call.\n\n**Required Fields**\n* id -- ID of the *Customer Attribute*",
        "summary": "Update a Customer Attribute",
        "operationId": "CustomersAttributesPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerAttributePut"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "name": "Date Joined",
                  "type": "date",
                  "id": 1
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerAttributesResponse"
          },
          "422": {
            "description": "The `Attribute` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Customer Attributes"
        ]
      },
      "delete": {
        "description": "Deletes *Customer Attributes* from the store. \n\n**Required Query**\n* id:in -- ID of the *Customer Attribute*",
        "summary": "Delete Customer Attributes",
        "operationId": "CustomersAttributesDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id:in",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Filter items by id."
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Customer Attributes"
        ]
      }
    },
    "/customers/attribute-values": {
      "get": {
        "description": "Returns a list of *Customer Attribute Values*. Optional filter parameters can be passed in.",
        "summary": "Get All Customer Attribute Values",
        "operationId": "CustomersAttributeValuesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/FilterPageParam"
          },
          {
            "$ref": "#/parameters/FilterLimitParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerIdParam"
          },
          {
            "$ref": "#/parameters/FilterAttributeIdParam"
          },
          {
            "$ref": "#/parameters/FilterAttributeValueByNameParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedMaxParam"
          },
          {
            "$ref": "#/parameters/FilterDateCreatedMinParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedMaxParam"
          },
          {
            "$ref": "#/parameters/FilterDateModifiedMinParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerAttributeValueCollectionResponse"
          }
        },
        "tags": [
          "Customer Attribute Values"
        ]
      },
      "put": {
        "description": "Upserts *Customer Attribute Values*. Updates the attribute values on the *Customer*. Multiple customer attribute values can be updated in one call.\n\nUpsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record. \n\n**Required Fields**\n* customer_id -- ID of the *Customer*\n* id -- ID of the *Customer Attribute*\n* value -- Value of the *Customer Attribute*",
        "summary": "Upsert Customer Attribue Values",
        "operationId": "CustomersAttributeValuesPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerAttributeValueBase"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "attribute_id": -52528392,
                  "value": "aliqua",
                  "customer_id": 12990306,
                  "id": 47143304
                },
                {
                  "attribute_id": -8263909,
                  "value": "n",
                  "customer_id": 1122433,
                  "id": -34305734
                },
                {
                  "attribute_id": -62186196,
                  "value": "",
                  "customer_id": 10906989,
                  "id": 21175547
                },
                {
                  "attribute_id": -68742149,
                  "value": "l",
                  "customer_id": -74084818,
                  "id": 99359610
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CustomerAttributeValueResponse"
          },
          "422": {
            "description": "The `CustomerAttributeValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Customer Attribute Values"
        ]
      },
      "delete": {
        "description": "Deletes *Customer Attribute Values*. Deletes the attribute value from the customer.\n\n**Required Query**\n* id:in - ID of the *Customer Attribute Value*",
        "summary": "Delete Customer Attribute Values",
        "operationId": "CustomersAttributeValuesDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id:in",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Filter items by id.\n`id:in=4,5,6`"
          },
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          }
        },
        "tags": [
          "Customer Attribute Values"
        ]
      }
    },
    "/customers/form-field-values": {
      "get": {
        "responses": {
          "200": {
            "$ref": "#/responses/FormFieldValuesResponse"
          },
          "422": {
            "description": "The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Get Customer Form Fields",
        "description": "Returns a list of *Form Fields* for Customer Addresses.",
        "operationId": "CustomerFormFieldsGet",
        "tags": [
          "Customer Form Fields"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Accept"
          },
          {
            "$ref": "#/parameters/Content-Type"
          },
          {
            "$ref": "#/parameters/FilterPageParam"
          },
          {
            "$ref": "#/parameters/FilterLimitParam"
          },
          {
            "$ref": "#/parameters/FilterCustomerIdEqualsParam"
          },
          {
            "$ref": "#/parameters/FilterAddressIdEqualsParam"
          },
          {
            "$ref": "#/parameters/FilterFormFieldNameParam"
          },
          {
            "$ref": "#/parameters/FilterFormFieldTypeParam"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "$ref": "#/responses/FormFieldValuesResponse"
          },
          "422": {
            "description": "The form field value was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Upsert Customer Form Field Values",
        "description": "Upserts *Customer Form Field Values*. Updates the form field values on the *Customer*. Multiple form field values can be updated in one call.\n\nUpsert checks for an existing record, if there is none it creates the record, if there is a matching record it updates that record. \n\n**Required Fields**\n* name\n* value\n* customer_id\n\nOR\n\n* name\n* value\n* address_id",
        "operationId": "CustomerFormFieldValuePUT",
        "tags": [
          "Customer Form Fields"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FormFieldValuesPutRequest"
            },
            "x-examples": {
              "application/json": [
                {
                  "customer_id": 1,
                  "name": "color",
                  "value": "blue"
                },
                {
                  "customer_id": 1,
                  "name": "weight",
                  "value": 12.345
                },
                {
                  "customer_id": 1,
                  "name": "colors",
                  "value": [
                    "red",
                    "green",
                    "black"
                  ]
                },
                {
                  "address_id": 2,
                  "name": "color",
                  "value": "blue"
                },
                {
                  "address_id": 2,
                  "name": "weight",
                  "value": 12.345
                },
                {
                  "address_id": 2,
                  "name": "colors",
                  "value": [
                    "red",
                    "green",
                    "black"
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "Pagination": {
      "title": "Pagination",
      "description": "Data about the response, including pagination and collection totals.",
      "type": "object",
      "properties": {
        "total": {
          "description": "Total number of items in the result set.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "description": "Total number of items in the collection response.",
          "type": "integer",
          "format": "int32"
        },
        "per_page": {
          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.",
          "type": "integer",
          "format": "int32"
        },
        "current_page": {
          "description": "The page you are currently on within the collection.",
          "type": "integer",
          "format": "int32"
        },
        "total_pages": {
          "description": "The total number of pages in the collection.",
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "CollectionMeta": {
      "title": "Collection Meta",
      "description": "Data about the response, including pagination and collection totals.",
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "ErrorResponse": {
      "title": "Error Response",
      "type": "object",
      "properties": {
        "status": {
          "description": "The HTTP status code.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "The error title describing the particular error.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        },
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BaseError": {
      "title": "Base Error",
      "description": "Error payload for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The HTTP status code.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "The error title describing the particular error.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "title": "Customer",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the customer. Must be unique.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "first_name": {
          "description": "The first name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "last_name": {
          "description": "The last name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "company": {
          "description": "The company of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "description": "The phone number of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "registration_ip_address": {
          "description": "The IP address from which this customer was registered.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "notes": {
          "description": "The customer notes.",
          "type": "string"
        },
        "tax_exempt_category": {
          "description": "The tax exempt category code for the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "customer_group_id": {
          "description": "Id of the group which this customer belongs to.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The unique numeric ID of the customer.",
          "type": "integer",
          "format": "int32"
        },
        "date_modified": {
          "description": "The date on which the customer was modified.",
          "type": "string",
          "format": "date-time"
        },
        "date_created": {
          "description": "The date of which the customer was created.",
          "type": "string",
          "format": "date-time"
        },
        "address_count": {
          "description": "Total number of customer addresses",
          "type": "integer",
          "format": "int32"
        },
        "attribute_count": {
          "description": "Total number of customer attributes",
          "type": "integer",
          "format": "int32"
        },
        "authentication": {
          "$ref": "#/definitions/CustomerAuthenticationBase"
        },
        "addresses": {
          "description": "Array of customer addresses. Limited to 10",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "maxItems": 10
        },
        "attributes": {
          "description": "Array of customer attributes. Limited to 10",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAttributeValue"
          },
          "maxItems": 10
        },
        "form_fields": {
          "description": "Array of form fields. Controlled by `formfields` parameter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFieldValue"
          }
        },
        "store_credit": {
          "description": "Store credit. Controlled by `storecredit` parameter.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "CustomerPost": {
      "title": "Customer Post",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the customer. Must be unique.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "first_name": {
          "description": "The first name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "last_name": {
          "description": "The last name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "company": {
          "description": "The company of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "description": "The phone number of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "notes": {
          "description": "The customer notes.",
          "type": "string"
        },
        "tax_exempt_category": {
          "description": "The tax exempt category code for the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "customer_group_id": {
          "description": "Id of the group which this customer belongs to.",
          "type": "integer",
          "format": "int32"
        },
        "addresses": {
          "description": "Array of customer addresses. Limited to 10",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/AddressForCustomer"
          }
        },
        "attributes": {
          "description": "Array of customer attributes. Limited to 10",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/CustomerAttributeValueForCustomer"
          }
        },
        "authentication": {
          "$ref": "#/definitions/CustomerAuthentication"
        }
      },
      "required": [
        "email",
        "first_name",
        "last_name"
      ]
    },
    "CustomerPut": {
      "title": "Customer Put",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the customer. Must be unique.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "first_name": {
          "description": "The first name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "last_name": {
          "description": "The last name of the customer.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "company": {
          "description": "The company of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "description": "The phone number of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "registration_ip_address": {
          "description": "The IP address from which this customer was registered.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "notes": {
          "description": "The customer notes.",
          "type": "string"
        },
        "tax_exempt_category": {
          "description": "The tax exempt category code for the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "customer_group_id": {
          "description": "Id of the group which this customer belongs to.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The unique numeric ID of the customer.",
          "type": "integer",
          "format": "int32"
        },
        "authentication": {
          "$ref": "#/definitions/CustomerAuthentication"
        }
      },
      "required": [
        "id"
      ]
    },
    "CustomerAttributeValue": {
      "title": "Customer Attribute Value",
      "type": "object",
      "properties": {
        "attribute_id": {
          "description": "Attribute ID.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Attribute value. This will always be a string, regardless of the attributes type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "description": "Attribute value ID.",
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "description": "Customer ID.",
          "type": "integer",
          "format": "int32"
        },
        "date_modified": {
          "description": "The date on which the customer attribute value was modified.",
          "type": "string",
          "format": "date-time"
        },
        "date_created": {
          "description": "The date of which the customer attribute value was created.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "attribute_id",
        "value",
        "customer_id"
      ]
    },
    "CustomerAttributeValueBase": {
      "title": "Customer Attribute Value Base",
      "type": "object",
      "properties": {
        "attribute_id": {
          "description": "Attribute ID.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Attribute value. This will always be a string, regardless of the attributes type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "description": "Attribute value ID.",
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "description": "Customer ID.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "attribute_id",
        "value",
        "customer_id"
      ]
    },
    "CustomerAttributeValueForCustomer": {
      "title": "Customer Attribute Value For Customer",
      "example": {
        "attribute_id": 55,
        "value": "string value"
      },
      "type": "object",
      "properties": {
        "attribute_id": {
          "description": "Attribute ID.",
          "type": "integer",
          "format": "int32"
        },
        "attribute_value": {
          "description": "Attribute value. This will always be a string, regardless of the attributes type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "attribute_id",
        "attribute_value"
      ]
    },
    "CustomerAttribute": {
      "title": "Customer Attribute",
      "type": "object",
      "properties": {
        "name": {
          "description": "Attribute name.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "id": {
          "description": "Attribute ID.",
          "type": "integer",
          "format": "int32"
        },
        "date_modified": {
          "description": "The date on which the customer attribute was modified.",
          "type": "string",
          "format": "date-time"
        },
        "date_created": {
          "description": "The date of which the customer attribute was created.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "name",
        "type",
        "id"
      ]
    },
    "CustomerAttributePut": {
      "title": "Customer Attribute Put",
      "type": "object",
      "properties": {
        "name": {
          "description": "Attribute name.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "id": {
          "description": "Attribute ID.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "name",
        "type",
        "id"
      ]
    },
    "CustomerAttributePost": {
      "title": "Customer Attribute Post",
      "example": {
        "name": "attribute_string 01",
        "type": "string"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Attribute name.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "The first name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "last_name": {
          "description": "The last name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "company": {
          "description": "The company of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address1": {
          "description": "The address 1 line.",
          "type": "string"
        },
        "address2": {
          "description": "The address 2 line.",
          "type": "string"
        },
        "city": {
          "description": "The city of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "state_or_province": {
          "description": "The state or province name",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "postal_code": {
          "description": "The postal code of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "country_code": {
          "description": "The country code of the customer address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "phone": {
          "description": "The phone number of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "address_type": {
          "$ref": "#/definitions/AddressType"
        },
        "customer_id": {
          "description": "The customer ID.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The unique numeric ID of the address.",
          "type": "integer",
          "format": "int32"
        },
        "country": {
          "description": "The country name of the customer address.",
          "type": "string"
        },
        "form_fields": {
          "description": "Array of form fields. Controlled by `formfields` parameter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFieldValue"
          }
        }
      },
      "required": [
        "first_name",
        "last_name",
        "address1",
        "city",
        "state_or_province",
        "postal_code",
        "country_code",
        "customer_id",
        "id"
      ]
    },
    "AddressPut": {
      "title": "Address Put",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "The first name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "last_name": {
          "description": "The last name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "company": {
          "description": "The company of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address1": {
          "description": "The address 1 line.",
          "type": "string"
        },
        "address2": {
          "description": "The address 2 line.",
          "type": "string"
        },
        "city": {
          "description": "The city of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "state_or_province": {
          "description": "The state or province name",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "postal_code": {
          "description": "The postal code of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "country_code": {
          "description": "The country code of the customer address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "phone": {
          "description": "The phone number of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "address_type": {
          "$ref": "#/definitions/AddressType"
        },
        "customer_id": {
          "description": "The customer ID.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The unique numeric ID of the address.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "address1",
        "city",
        "state_or_province",
        "postal_code",
        "country_code",
        "customer_id",
        "id"
      ]
    },
    "AddressPost": {
      "title": "Address Post",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "The first name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "last_name": {
          "description": "The last name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "company": {
          "description": "The company of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address1": {
          "description": "The address 1 line.",
          "type": "string"
        },
        "address2": {
          "description": "The address 2 line.",
          "type": "string"
        },
        "city": {
          "description": "The city of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "state_or_province": {
          "description": "The state or province name",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "postal_code": {
          "description": "The postal code of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "country_code": {
          "description": "The country code of the customer address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "phone": {
          "description": "The phone number of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "address_type": {
          "$ref": "#/definitions/AddressType"
        },
        "customer_id": {
          "description": "The customer ID.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "address1",
        "city",
        "state_or_province",
        "postal_code",
        "country_code",
        "customer_id"
      ]
    },
    "AddressForCustomer": {
      "title": "Address For Customer",
      "example": {
        "address1": "Addr 1",
        "address2": "",
        "address_type": "residential",
        "city": "San Francisco",
        "company": "History",
        "country_code": "US",
        "first_name": "Ronald",
        "last_name": "Swimmer",
        "phone": "707070707",
        "postal_code": "33333",
        "state_or_province": "California"
      },
      "type": "object",
      "properties": {
        "first_name": {
          "description": "The first name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "last_name": {
          "description": "The last name of the customer address.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "company": {
          "description": "The company of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address1": {
          "description": "The address 1 line.",
          "type": "string"
        },
        "address2": {
          "description": "The address 2 line.",
          "type": "string"
        },
        "city": {
          "description": "The city of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "state_or_province": {
          "description": "The state or province name",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "postal_code": {
          "description": "The postal code of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "country_code": {
          "description": "The country code of the customer address.",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "phone": {
          "description": "The phone number of the customer address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "address_type": {
          "$ref": "#/definitions/AddressType"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "address1",
        "city",
        "state_or_province",
        "postal_code",
        "country_code"
      ]
    },
    "CustomerAuthentication": {
      "title": "Customer Authentication",
      "type": "object",
      "properties": {
        "force_password_reset": {
          "description": "If `true`, this customer will be forced to change password on next login.",
          "type": "boolean"
        },
        "new_password": {
          "description": "New password for customer. Write only field",
          "type": "string"
        }
      }
    },
    "CustomerAuthenticationBase": {
      "title": "Customer Authentication Base",
      "example": {
        "force_password_reset": true
      },
      "type": "object",
      "properties": {
        "force_password_reset": {
          "description": "If `true`, this customer will be forced to change password on next login.",
          "type": "boolean"
        }
      }
    },
    "AddressType": {
      "title": "Address Type",
      "description": "The address type. Residential or Commercial",
      "example": "residential",
      "type": "string",
      "enum": [
        "residential",
        "commercial"
      ]
    },
    "Links": {
      "title": "Links",
      "description": "Pagination links for the previous and next parts of the whole collection.",
      "type": "object",
      "properties": {
        "previous": {
          "description": "Link to the previous page returned in the response.",
          "type": "string"
        },
        "current": {
          "description": "Link to the current page returned in the response.",
          "type": "string"
        },
        "next": {
          "description": "Link to the next page returned in the response.",
          "type": "string"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "Attribute type should match one of: string, number, date. When doing a ",
      "example": "string",
      "type": "string",
      "enum": [
        "string",
        "number",
        "date"
      ]
    },
    "FormFieldValueBase": {
      "type": "object",
      "title": "Form Field Value Base",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The form field name.",
          "example": "color"
        },
        "value": {
          "oneOf": [
            {
              "type": "string",
              "example": "blue"
            },
            {
              "type": "number",
              "format": "double",
              "example": 12.345
            },
            {
              "type": "array",
              "example": [
                "red",
                "green",
                "black"
              ],
              "items": {
                "type": "string"
              }
            }
          ]
        }
      }
    },
    "CustomerFormFieldValue": {
      "allOf": [
        {
          "$ref": "#/definitions/FormFieldValueBase"
        },
        {
          "type": "object",
          "properties": {
            "customer_id": {
              "type": "integer"
            }
          },
          "required": [
            "customer_id"
          ]
        }
      ],
      "title": "Customer Form Field Value"
    },
    "CustomerAddressFormFieldValue": {
      "allOf": [
        {
          "$ref": "#/definitions/FormFieldValueBase"
        },
        {
          "type": "object",
          "properties": {
            "address_id": {
              "type": "integer",
              "description": "The Customer Address ID."
            }
          },
          "required": [
            "address_id"
          ]
        }
      ],
      "title": "Customer Address Form Field Value"
    },
    "FormFieldValue": {
      "oneOf": [
        {
          "$ref": "#/definitions/CustomerFormFieldValue"
        },
        {
          "$ref": "#/definitions/CustomerAddressFormFieldValue"
        }
      ],
      "title": "Form Field Value "
    },
    "FormFieldValuesPutRequest": {
      "type": "array",
      "title": "Form Field Values Put Request",
      "items": {
        "$ref": "#/definitions/FormFieldValue"
      }
    }
  },
  "tags": [
    {
      "name": "Customers",
      "description": "BigCommerce Customers API Definition."
    },
    {
      "name": "Customer Addresses"
    },
    {
      "name": "Customer Attributes"
    },
    {
      "name": "Customer Attribute Values"
    },
    {
      "name": "Customer Form Fields"
    }
  ],
  "parameters": {
    "FilterNameParam": {
      "name": "name",
      "in": "query",
      "type": "array",
      "description": "Filter items by first_name and last_name. `name=moriarty,holmes`",
      "items": {
        "type": "string"
      }
    },
    "FilterEmailParam": {
      "name": "email:in",
      "in": "query",
      "type": "string",
      "description": "Filter items by email. `email:in=janedoe@email.com`"
    },
    "FilterNameLikeParam": {
      "name": "name:like",
      "in": "query",
      "type": "array",
      "description": "Filter items by substring in first_name and last_name (%substring% - use with % symbols).\n`name:like=moriarty&name:like=doe`",
      "items": {
        "type": "string"
      }
    },
    "FilterAttributeNameLikeParam": {
      "name": "name:like",
      "in": "query",
      "type": "string",
      "description": "Filter items by substring in first_name and last_name (%substring% - use with % symbols).\n`name:like=moriarty,doe`"
    },
    "FilterIdParam": {
      "name": "id:in",
      "in": "query",
      "type": "array",
      "description": "Filter items by id.\n`id:in=4,5,6`",
      "items": {
        "type": "integer"
      }
    },
    "FilterDateModifiedParam": {
      "name": "date_modified",
      "in": "query",
      "type": "string",
      "description": "Filter items by date_modified. `date_modified=2018-09-05T13:45:03`",
      "format": "date-time"
    },
    "FilterDateModifiedMinParam": {
      "name": "date_modified:min",
      "in": "query",
      "type": "string",
      "description": "Filter items by mininum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`"
    },
    "FilterDateModifiedMaxParam": {
      "name": "date_modified:max",
      "in": "query",
      "type": "string",
      "format": "date-time",
      "description": "Filter items by maximum date_modified `date_modified:max=2018-09-05T13:45:03` or `date_modified:max=2019-09-04`"
    },
    "FilterDateCreatedParam": {
      "name": "date_created",
      "in": "query",
      "type": "string",
      "description": "Filter items by date_created. `date_created=2018-09-05T13:43:54`",
      "format": "date-time"
    },
    "FilterDateCreatedMinParam": {
      "name": "date_created:min",
      "in": "query",
      "type": "string",
      "description": "Filter items by date_created. `date_created:min=2018-09-05`",
      "format": "date-time"
    },
    "FilterDateCreatedMaxParam": {
      "name": "date_created:max",
      "in": "query",
      "type": "string",
      "description": "Filter items by maximum date_created. `date_created:max=2018-09-10`"
    },
    "FilterCustomerRegistrationIPAddressParam": {
      "name": "registration_ip_address:in",
      "in": "query",
      "type": "array",
      "description": "Filter items by registration_ip_address. If the customer was created using the API, then registration address is blank.\n`registration_ip_address:in=12.345.6.789`",
      "items": {
        "type": "integer"
      }
    },
    "FilterCompanyParam": {
      "name": "company:in",
      "in": "query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Filter items by company. `company:in=bigcommerce,commongood`"
    },
    "FilterCustomerGroupParam": {
      "name": "customer_group_id:in",
      "in": "query",
      "type": "array",
      "description": "Filter items by customer_group_id. `customer_group_id:in=5,6`",
      "items": {
        "type": "string"
      }
    },
    "FilterCustomerAttributeTypeParam": {
      "name": "type",
      "in": "query",
      "type": "string",
      "description": "The type of the customer attrribute. `type=string`",
      "enum": [
        "string",
        "number",
        "date"
      ]
    },
    "FilterAttributeValueByNameParam": {
      "name": "name",
      "in": "query",
      "type": "string",
      "description": "The attribute name for which we should return values. `name=age`"
    },
    "FilterPageParam": {
      "name": "page",
      "in": "query",
      "type": "integer",
      "description": "Page number. `page=1`"
    },
    "FilterLimitParam": {
      "in": "query",
      "type": "number",
      "name": "limit",
      "description": "Items count per page. `limit=50`"
    },
    "FilterCustomerIncludeParam": {
      "name": "include",
      "in": "query",
      "type": "string",
      "description": "Indicates whether to include customer sub-resources:\n * `addresses` - customer addresses\n * `storecredit` - store credit\n * `attributes` - customer attributes and address attributes\n * `formfields` - customer and address form fields\n\n `include=addresses,storecredit,attributes,formfields`",
      "enum": [
        "addresses",
        "storecredit",
        "attributes",
        "formfields"
      ]
    },
    "FilterAddressIncludeParam": {
      "name": "include",
      "in": "query",
      "type": "string",
      "description": "Indicates whether to include customer address sub-resources:\n* `formfields` - address form fields\n`include=formfields`",
      "enum": [
        "formfields"
      ]
    },
    "Accept": {
      "name": "Accept",
      "in": "header",
      "type": "string",
      "default": "application/json"
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "default": "application/json"
    },
    "FilterCustomerIdParam": {
      "in": "query",
      "type": "array",
      "name": "customer_id:in",
      "description": "The ID of the customer. `customer_id:in=23,24,55`",
      "items": {
        "type": "integer"
      }
    },
    "FilterAttributeIdParam": {
      "name": "attribute_id:in",
      "in": "query",
      "type": "array",
      "description": "The attribute id for which we should return values. `attribute_id:in=1,2`",
      "items": {
        "type": "integer"
      }
    },
    "FilterCustomerIdEqualsParam": {
      "in": "query",
      "type": "integer",
      "name": "customer_id",
      "description": "The ID of the *Customer*."
    },
    "FilterAddressIdEqualsParam": {
      "name": "address_id",
      "in": "query",
      "type": "integer",
      "description": "The ID of the *Customer Address*."
    },
    "FilterFormFieldNameParam": {
      "name": "field_name",
      "in": "query",
      "type": "string",
      "description": "The fields name."
    },
    "FilterFormFieldTypeParam": {
      "name": "field_type",
      "in": "query",
      "type": "string",
      "description": "The field type. \n * `checkboxes` - checkboxes field\n * `date` - date field\n * `multiline` - multiline text field\n * `numbers` - numbers only field\n * `password` - password field\n * `radiobuttons` - radio buttons field\n * `text` - text field\n * `picklist` - pick list field",
      "enum": [
        "checkboxes",
        "date",
        "multiline",
        "numbers",
        "password",
        "radiobuttons",
        "text",
        "picklist"
      ]
    }
  },
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header"
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "responses": {
    "CustomerCollectionResponse": {
      "schema": {
        "title": "CustomerCollectionResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Customer"
            }
          },
          "meta": {
            "$ref": "#/definitions/CollectionMeta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 11,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 0,
              "email": "janedoe@email.com",
              "first_name": "Jane",
              "last_name": "Doe",
              "notes": "",
              "phone": "1234567890",
              "registration_ip_address": "",
              "tax_exempt_category": "",
              "date_created": "2018-09-05T13:43:54Z",
              "date_modified": "2019-02-19T17:26:17Z"
            },
            {
              "id": 12,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 0,
              "email": "johndoe@email.com",
              "first_name": "John",
              "last_name": "Doe",
              "notes": "",
              "phone": "1234567890",
              "registration_ip_address": "",
              "tax_exempt_category": "",
              "date_created": "2018-09-05T13:46:16Z",
              "date_modified": "2018-09-05T13:56:52Z"
            },
            {
              "id": 14,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 0,
              "email": "nathanielhornblower@testing.com",
              "first_name": "Nathaniel",
              "last_name": "Hornblower",
              "notes": "",
              "phone": "123456788900",
              "registration_ip_address": "64.183.182.114",
              "tax_exempt_category": "",
              "date_created": "2018-11-13T17:55:36Z",
              "date_modified": "2018-11-13T17:55:36Z"
            },
            {
              "id": 15,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 0,
              "email": "patriciamoriarty@test.com",
              "first_name": "Patricia",
              "last_name": "Moriarty",
              "notes": "",
              "phone": "5122134567",
              "registration_ip_address": "64.183.182.114",
              "tax_exempt_category": "",
              "date_created": "2018-11-13T17:57:33Z",
              "date_modified": "2018-11-13T17:57:33Z"
            },
            {
              "id": 18,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 5,
              "email": "dwaynecole@testing.com",
              "first_name": "Dwayne",
              "last_name": "Cole",
              "notes": "",
              "phone": "1234567890",
              "registration_ip_address": "",
              "tax_exempt_category": "",
              "date_created": "2018-11-13T18:38:31Z",
              "date_modified": "2019-01-29T20:41:52Z"
            },
            {
              "id": 19,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 7,
              "email": "cadenwhitfield@testing.com",
              "first_name": "Caden",
              "last_name": "Whitfield",
              "notes": "",
              "phone": "1234567890",
              "registration_ip_address": "",
              "tax_exempt_category": "",
              "date_created": "2018-11-13T20:41:18Z",
              "date_modified": "2019-02-12T17:47:47Z"
            },
            {
              "id": 20,
              "authentication": {
                "force_password_reset": false
              },
              "company": "",
              "customer_group_id": 5,
              "email": "golightly5@testing.com",
              "first_name": "Alice",
              "last_name": "Golightly",
              "notes": "",
              "phone": "1234567840",
              "registration_ip_address": "",
              "tax_exempt_category": "",
              "date_created": "2018-11-13T20:42:16Z",
              "date_modified": "2019-01-29T20:41:47Z"
            }
          ],
          "meta": {
            "pagination": {
              "total": 7,
              "count": 7,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1
            }
          }
        },
        "with include": "{\n  \"data\": [\n    {\n      \"id\": 11,\n      \"address_count\": 5,\n      \"addresses\": [\n        {\n          \"id\": 16,\n          \"address1\": \"555 East Street\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Austin\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 11,\n          \"first_name\": \"Jane\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"78751\",\n          \"state_or_province\": \"Texas\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"Leave in backyard\"\n            }\n          ]\n        },\n        {\n          \"id\": 23,\n          \"address1\": \"111 E West Street\",\n          \"address2\": \"654\",\n          \"address_type\": \"commercial\",\n          \"city\": \"Akron\",\n          \"company\": \"BigCommerce\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 11,\n          \"first_name\": \"Jane\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"44325\",\n          \"state_or_province\": \"Ohio\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        {\n          \"id\": 30,\n          \"address1\": \"122 First Street\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Austin\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 11,\n          \"first_name\": \"Jon\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"6789012345\",\n          \"postal_code\": \"78726\",\n          \"state_or_province\": \"Texas\",\n          \"form_fields\": []\n        },\n        {\n          \"id\": 31,\n          \"address1\": \"11305 4 Points Drive\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Austin\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 11,\n          \"first_name\": \"Testing\",\n          \"last_name\": \"Bigcommerce\",\n          \"phone\": \"5122134567\",\n          \"postal_code\": \"78726\",\n          \"state_or_province\": \"Texas\",\n          \"form_fields\": []\n        },\n        {\n          \"id\": 40,\n          \"address1\": \"111 E West Street\",\n          \"address2\": \"654\",\n          \"address_type\": \"residential\",\n          \"city\": \"Akron\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 11,\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"44325\",\n          \"state_or_province\": \"Ohio\",\n          \"form_fields\": []\n        }\n      ],\n      \"attributes\": [\n        {\n          \"id\": 1,\n          \"customer_id\": 11,\n          \"attribute_id\": 1,\n          \"attribute_value\": \"52\",\n          \"date_created\": \"2018-11-14T18:58:08Z\",\n          \"date_modified\": \"2019-02-19T19:26:21Z\"\n        }\n      ],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 0,\n      \"email\": \"janedoe@email.com\",\n      \"first_name\": \"Jane\",\n      \"last_name\": \"Doe\",\n      \"notes\": \"\",\n      \"phone\": \"1234567890\",\n      \"registration_ip_address\": \"\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-09-05T13:43:54Z\",\n      \"date_modified\": \"2019-02-19T17:26:17Z\",\n      \"attribute_count\": 1,\n      \"form_fields\": [\n        {\n          \"name\": \"AccountSignUpField\",\n          \"value\": \"345678ABC\"\n        }\n      ],\n      \"store_credit\": 0\n    },\n    {\n      \"id\": 14,\n      \"address_count\": 1,\n      \"addresses\": [\n        {\n          \"id\": 24,\n          \"address1\": \"St Katharine's & Wapping\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"London\",\n          \"company\": \"\",\n          \"country\": \"United Kingdom\",\n          \"country_code\": \"GB\",\n          \"customer_id\": 14,\n          \"first_name\": \"Nathaniel\",\n          \"last_name\": \"Hornblower\",\n          \"phone\": \"5122134567\",\n          \"postal_code\": \"EC3N 4AB\",\n          \"state_or_province\": \"UK\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 0,\n      \"email\": \"nathanielhornblower@testing.com\",\n      \"first_name\": \"Nathaniel\",\n      \"last_name\": \"Hornblower\",\n      \"notes\": \"\",\n      \"phone\": \"123456788900\",\n      \"registration_ip_address\": \"64.183.182.114\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-11-13T17:55:36Z\",\n      \"date_modified\": \"2018-11-13T17:55:36Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [\n        {\n          \"name\": \"AccountSignUpField\",\n          \"value\": \"\"\n        }\n      ],\n      \"store_credit\": 0\n    },\n    {\n      \"id\": 15,\n      \"address_count\": 3,\n      \"addresses\": [\n        {\n          \"id\": 25,\n          \"address1\": \"221B Baker Street\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"London\",\n          \"company\": \"\",\n          \"country\": \"United Kingdom\",\n          \"country_code\": \"GB\",\n          \"customer_id\": 15,\n          \"first_name\": \"Patricia\",\n          \"last_name\": \"Moriarty\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"NW1 5LR\",\n          \"state_or_province\": \"UK\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        {\n          \"id\": 33,\n          \"address1\": \"161 Sajik-ro\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Seoul\",\n          \"company\": \"\",\n          \"country\": \"Korea, Republic of\",\n          \"country_code\": \"KR\",\n          \"customer_id\": 15,\n          \"first_name\": \"Patricia\",\n          \"last_name\": \"Moriarty\",\n          \"phone\": \"5121234567\",\n          \"postal_code\": \"Jongno-gu\",\n          \"state_or_province\": \"Sejongno\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        {\n          \"id\": 34,\n          \"address1\": \"161 Sajik-ro\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Seoul\",\n          \"company\": \"\",\n          \"country\": \"Korea, Republic of\",\n          \"country_code\": \"KR\",\n          \"customer_id\": 15,\n          \"first_name\": \"Patricia\",\n          \"last_name\": \"Moriarty\",\n          \"phone\": \"5121234567\",\n          \"postal_code\": \"Jongno-gu\",\n          \"state_or_province\": \"Sejongno\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 0,\n      \"email\": \"patriciamoriarty@test.com\",\n      \"first_name\": \"Patricia\",\n      \"last_name\": \"Moriarty\",\n      \"notes\": \"\",\n      \"phone\": \"5122134567\",\n      \"registration_ip_address\": \"64.183.182.114\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-11-13T17:57:33Z\",\n      \"date_modified\": \"2018-11-13T17:57:33Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [\n        {\n          \"name\": \"AccountSignUpField\",\n          \"value\": \"\"\n        }\n      ],\n      \"store_credit\": 0\n    },\n    {\n      \"id\": 18,\n      \"address_count\": 1,\n      \"addresses\": [\n        {\n          \"id\": 27,\n          \"address1\": \"Mauna Kea Access Rd\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Hilo\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 18,\n          \"first_name\": \"Dwayne\",\n          \"last_name\": \"Cole\",\n          \"phone\": \"8081234567\",\n          \"postal_code\": \"96720\",\n          \"state_or_province\": \"Hawaii\",\n          \"form_fields\": []\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 5,\n      \"email\": \"dwaynecole@testing.com\",\n      \"first_name\": \"Dwayne\",\n      \"last_name\": \"Cole\",\n      \"notes\": \"\",\n      \"phone\": \"1234567890\",\n      \"registration_ip_address\": \"\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-11-13T18:38:31Z\",\n      \"date_modified\": \"2019-01-29T20:41:52Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [],\n      \"store_credit\": 0\n    },\n    {\n      \"id\": 19,\n      \"address_count\": 1,\n      \"addresses\": [\n        {\n          \"id\": 28,\n          \"address1\": \"Rue de Rivoli\",\n          \"address2\": \"\",\n          \"address_type\": \"commercial\",\n          \"city\": \"Paris\",\n          \"company\": \"\",\n          \"country\": \"France\",\n          \"country_code\": \"FR\",\n          \"customer_id\": 19,\n          \"first_name\": \"Caden\",\n          \"last_name\": \"Whitfield\",\n          \"phone\": \"+33(0)140205050\",\n          \"postal_code\": \"75001\",\n          \"state_or_province\": \"France\",\n          \"form_fields\": []\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 7,\n      \"email\": \"cadenwhitfield@testing.com\",\n      \"first_name\": \"Caden\",\n      \"last_name\": \"Whitfield\",\n      \"notes\": \"\",\n      \"phone\": \"1234567890\",\n      \"registration_ip_address\": \"\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-11-13T20:41:18Z\",\n      \"date_modified\": \"2019-02-12T17:47:47Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [],\n      \"store_credit\": 0\n    },\n    {\n      \"id\": 20,\n      \"address_count\": 2,\n      \"addresses\": [\n        {\n          \"id\": 29,\n          \"address1\": \"5555 Hermann Park Dr\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Houston\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 20,\n          \"first_name\": \"Alice\",\n          \"last_name\": \"Golightly\",\n          \"phone\": \"8901234564\",\n          \"postal_code\": \"77030\",\n          \"state_or_province\": \"Texas\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"\"\n            }\n          ]\n        },\n        {\n          \"id\": 32,\n          \"address1\": \"11305 4 Points Drive\",\n          \"address2\": \"\",\n          \"address_type\": \"residential\",\n          \"city\": \"Austin\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 20,\n          \"first_name\": \"Testing\",\n          \"last_name\": \"Bigcommerce\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"78726\",\n          \"state_or_province\": \"Texas\",\n          \"form_fields\": [\n            {\n              \"name\": \"Delivery Instructions\",\n              \"value\": \"11305 4 Points Drive\"\n            }\n          ]\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": false\n      },\n      \"company\": \"\",\n      \"customer_group_id\": 5,\n      \"email\": \"golightly5@testing.com\",\n      \"first_name\": \"Alice\",\n      \"last_name\": \"Golightly\",\n      \"notes\": \"\",\n      \"phone\": \"1234567840\",\n      \"registration_ip_address\": \"\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2018-11-13T20:42:16Z\",\n      \"date_modified\": \"2019-01-29T20:41:47Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [],\n      \"store_credit\": 10\n    },\n    {\n      \"id\": 23,\n      \"address_count\": 2,\n      \"addresses\": [\n        {\n          \"id\": 38,\n          \"address1\": \"Bennelong Point \",\n          \"address2\": \"\",\n          \"address_type\": \"commercial\",\n          \"city\": \"Sydney\",\n          \"company\": \"\",\n          \"country\": \"Australia\",\n          \"country_code\": \"AU\",\n          \"customer_id\": 23,\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"2000\",\n          \"state_or_province\": \"New South Wales\",\n          \"form_fields\": []\n        },\n        {\n          \"id\": 39,\n          \"address1\": \"111 E West Street\",\n          \"address2\": \"654\",\n          \"address_type\": \"residential\",\n          \"city\": \"Akron\",\n          \"company\": \"\",\n          \"country\": \"United States\",\n          \"country_code\": \"US\",\n          \"customer_id\": 23,\n          \"first_name\": \"John\",\n          \"last_name\": \"Doe\",\n          \"phone\": \"1234567890\",\n          \"postal_code\": \"44325\",\n          \"state_or_province\": \"Ohio\",\n          \"form_fields\": []\n        }\n      ],\n      \"attributes\": [],\n      \"authentication\": {\n        \"force_password_reset\": true\n      },\n      \"company\": \"BigCommerce\",\n      \"customer_group_id\": 5,\n      \"email\": \"johndoe@email.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"notes\": \"Warehouse\",\n      \"phone\": \"1234567890\",\n      \"registration_ip_address\": \"123.4.56.789\",\n      \"tax_exempt_category\": \"\",\n      \"date_created\": \"2019-02-19T18:34:16Z\",\n      \"date_modified\": \"2019-02-19T18:34:16Z\",\n      \"attribute_count\": 0,\n      \"form_fields\": [],\n      \"store_credit\": 0\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 7,\n      \"count\": 7,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1\n    }\n  }\n}"
      },
      "description": "Customer Collection Response"
    },
    "CustomerResponse": {
      "description": "Customer Response",
      "schema": {
        "title": "CustomersResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Customer"
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 23,
              "address_count": 2,
              "addresses": [
                {
                  "id": 38,
                  "address1": "Bennelong Point ",
                  "address2": "",
                  "address_type": "commercial",
                  "city": "Sydney",
                  "company": "",
                  "country": "Australia",
                  "country_code": "AU",
                  "customer_id": 23,
                  "first_name": "John",
                  "last_name": "Doe",
                  "phone": "1234567890",
                  "postal_code": "2000",
                  "state_or_province": "New South Wales"
                },
                {
                  "id": 39,
                  "address1": "111 E West Street",
                  "address2": "654",
                  "address_type": "residential",
                  "city": "Akron",
                  "company": "",
                  "country": "United States",
                  "country_code": "US",
                  "customer_id": 23,
                  "first_name": "John",
                  "last_name": "Doe",
                  "phone": "1234567890",
                  "postal_code": "44325",
                  "state_or_province": "Ohio"
                }
              ],
              "authentication": {
                "force_password_reset": true
              },
              "company": "BigCommerce",
              "customer_group_id": 5,
              "email": "johndoe@email.com",
              "first_name": "John",
              "last_name": "Doe",
              "notes": "Warehouse",
              "phone": "1234567890",
              "registration_ip_address": "123.4.56.789",
              "tax_exempt_category": "",
              "date_created": "2019-02-19T18:34:16Z",
              "date_modified": "2019-02-19T18:34:16Z"
            }
          ],
          "meta": {}
        },
        "with include": "{\n    \"data\": [\n        {\n            \"id\": 11,\n            \"address_count\": 5,\n            \"addresses\": [\n                {\n                    \"id\": 16,\n                    \"address1\": \"555 East Street\",\n                    \"address2\": \"\",\n                    \"address_type\": \"residential\",\n                    \"city\": \"Austin\",\n                    \"company\": \"\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"US\",\n                    \"customer_id\": 11,\n                    \"first_name\": \"Jane\",\n                    \"last_name\": \"Doe\",\n                    \"phone\": \"1234567890\",\n                    \"postal_code\": \"78751\",\n                    \"state_or_province\": \"Texas\",\n                    \"form_fields\": [\n                        {\n                            \"name\": \"Delivery Instructions\",\n                            \"value\": \"Leave in backyard\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": 23,\n                    \"address1\": \"111 E West Street\",\n                    \"address2\": \"654\",\n                    \"address_type\": \"commercial\",\n                    \"city\": \"Akron\",\n                    \"company\": \"BigCommerce\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"US\",\n                    \"customer_id\": 11,\n                    \"first_name\": \"Jane\",\n                    \"last_name\": \"Doe\",\n                    \"phone\": \"1234567890\",\n                    \"postal_code\": \"44325\",\n                    \"state_or_province\": \"Ohio\",\n                    \"form_fields\": [\n                        {\n                            \"name\": \"Delivery Instructions\",\n                            \"value\": \"\"\n                        }\n                    ]\n                },\n                {\n                    \"id\": 30,\n                    \"address1\": \"122 First Street\",\n                    \"address2\": \"\",\n                    \"address_type\": \"residential\",\n                    \"city\": \"Austin\",\n                    \"company\": \"\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"US\",\n                    \"customer_id\": 11,\n                    \"first_name\": \"Jon\",\n                    \"last_name\": \"Doe\",\n                    \"phone\": \"6789012345\",\n                    \"postal_code\": \"78726\",\n                    \"state_or_province\": \"Texas\",\n                    \"form_fields\": []\n                },\n                {\n                    \"id\": 31,\n                    \"address1\": \"11305 4 Points Drive\",\n                    \"address2\": \"\",\n                    \"address_type\": \"residential\",\n                    \"city\": \"Austin\",\n                    \"company\": \"\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"US\",\n                    \"customer_id\": 11,\n                    \"first_name\": \"Testing\",\n                    \"last_name\": \"Bigcommerce\",\n                    \"phone\": \"5122134567\",\n                    \"postal_code\": \"78726\",\n                    \"state_or_province\": \"Texas\",\n                    \"form_fields\": []\n                },\n                {\n                    \"id\": 40,\n                    \"address1\": \"111 E West Street\",\n                    \"address2\": \"654\",\n                    \"address_type\": \"residential\",\n                    \"city\": \"Akron\",\n                    \"company\": \"\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"US\",\n                    \"customer_id\": 11,\n                    \"first_name\": \"John\",\n                    \"last_name\": \"Doe\",\n                    \"phone\": \"1234567890\",\n                    \"postal_code\": \"44325\",\n                    \"state_or_province\": \"Ohio\",\n                    \"form_fields\": []\n                }\n            ],\n            \"attributes\": [\n                {\n                    \"id\": 1,\n                    \"customer_id\": 11,\n                    \"attribute_id\": 1,\n                    \"attribute_value\": \"52\",\n                    \"date_created\": \"2018-11-14T18:58:08Z\",\n                    \"date_modified\": \"2019-02-19T19:26:21Z\"\n                }\n            ],\n            \"authentication\": {\n                \"force_password_reset\": false\n            },\n            \"company\": \"\",\n            \"customer_group_id\": 0,\n            \"email\": \"janedoe@email.com\",\n            \"first_name\": \"Jane\",\n            \"last_name\": \"Doe\",\n            \"notes\": \"\",\n            \"phone\": \"1234567890\",\n            \"registration_ip_address\": \"\",\n            \"tax_exempt_category\": \"\",\n            \"date_created\": \"2018-09-05T13:43:54Z\",\n            \"date_modified\": \"2019-02-19T17:26:17Z\",\n            \"attribute_count\": 1,\n            \"form_fields\": [\n                {\n                    \"name\": \"AccountSignUpField\",\n                    \"value\": \"345678ABC\"\n                }\n            ],\n            \"store_credit\": 0\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"total\": 1,\n            \"count\": 1,\n            \"per_page\": 50,\n            \"current_page\": 1,\n            \"total_pages\": 1\n        }\n    }\n}"
      }
    },
    "AddressCollectionResponse": {
      "description": "",
      "schema": {
        "title": "AddressCollectionResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Address"
            }
          },
          "meta": {
            "$ref": "#/definitions/CollectionMeta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 16,
              "address1": "555 East Street",
              "address2": "",
              "address_type": "residential",
              "city": "Austin",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 11,
              "first_name": "Jane",
              "last_name": "Doe",
              "phone": "1234567890",
              "postal_code": "78751",
              "state_or_province": "Texas"
            },
            {
              "id": 23,
              "address1": "111 E West Street",
              "address2": "654",
              "address_type": "commercial",
              "city": "Akron",
              "company": "BigCommerce",
              "country": "United States",
              "country_code": "US",
              "customer_id": 11,
              "first_name": "Jane",
              "last_name": "Doe",
              "phone": "1234567890",
              "postal_code": "44325",
              "state_or_province": "Ohio"
            },
            {
              "id": 24,
              "address1": "St Katharine's & Wapping",
              "address2": "",
              "address_type": "residential",
              "city": "London",
              "company": "",
              "country": "United Kingdom",
              "country_code": "GB",
              "customer_id": 14,
              "first_name": "Nathaniel",
              "last_name": "Hornblower",
              "phone": "5122134567",
              "postal_code": "EC3N 4AB",
              "state_or_province": "UK"
            },
            {
              "id": 25,
              "address1": "221B Baker Street",
              "address2": "",
              "address_type": "residential",
              "city": "London",
              "company": "",
              "country": "United Kingdom",
              "country_code": "GB",
              "customer_id": 15,
              "first_name": "Patricia",
              "last_name": "Moriarty",
              "phone": "1234567890",
              "postal_code": "NW1 5LR",
              "state_or_province": "UK"
            },
            {
              "id": 27,
              "address1": "Mauna Kea Access Rd",
              "address2": "",
              "address_type": "residential",
              "city": "Hilo",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 18,
              "first_name": "Dwayne",
              "last_name": "Cole",
              "phone": "8081234567",
              "postal_code": "96720",
              "state_or_province": "Hawaii"
            },
            {
              "id": 28,
              "address1": "Rue de Rivoli",
              "address2": "",
              "address_type": "commercial",
              "city": "Paris",
              "company": "",
              "country": "France",
              "country_code": "FR",
              "customer_id": 19,
              "first_name": "Caden",
              "last_name": "Whitfield",
              "phone": "+33(0)140205050",
              "postal_code": "75001",
              "state_or_province": "France"
            },
            {
              "id": 29,
              "address1": "5555 Hermann Park Dr",
              "address2": "",
              "address_type": "residential",
              "city": "Houston",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 20,
              "first_name": "Alice",
              "last_name": "Golightly",
              "phone": "8901234564",
              "postal_code": "77030",
              "state_or_province": "Texas"
            },
            {
              "id": 30,
              "address1": "122 First Street",
              "address2": "",
              "address_type": "residential",
              "city": "Austin",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 11,
              "first_name": "Jon",
              "last_name": "Doe",
              "phone": "6789012345",
              "postal_code": "78726",
              "state_or_province": "Texas"
            },
            {
              "id": 31,
              "address1": "11305 4 Points Drive",
              "address2": "",
              "address_type": "residential",
              "city": "Austin",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 11,
              "first_name": "Testing",
              "last_name": "Bigcommerce",
              "phone": "5122134567",
              "postal_code": "78726",
              "state_or_province": "Texas"
            },
            {
              "id": 32,
              "address1": "11305 4 Points Drive",
              "address2": "",
              "address_type": "residential",
              "city": "Austin",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 20,
              "first_name": "Testing",
              "last_name": "Bigcommerce",
              "phone": "1234567890",
              "postal_code": "78726",
              "state_or_province": "Texas"
            },
            {
              "id": 33,
              "address1": "161 Sajik-ro",
              "address2": "",
              "address_type": "residential",
              "city": "Seoul",
              "company": "",
              "country": "Korea, Republic of",
              "country_code": "KR",
              "customer_id": 15,
              "first_name": "Patricia",
              "last_name": "Moriarty",
              "phone": "5121234567",
              "postal_code": "Jongno-gu",
              "state_or_province": "Sejongno"
            },
            {
              "id": 34,
              "address1": "161 Sajik-ro",
              "address2": "",
              "address_type": "residential",
              "city": "Seoul",
              "company": "",
              "country": "Korea, Republic of",
              "country_code": "KR",
              "customer_id": 15,
              "first_name": "Patricia",
              "last_name": "Moriarty",
              "phone": "5121234567",
              "postal_code": "Jongno-gu",
              "state_or_province": "Sejongno"
            },
            {
              "id": 38,
              "address1": "Bennelong Point ",
              "address2": "",
              "address_type": "commercial",
              "city": "Sydney",
              "company": "",
              "country": "Australia",
              "country_code": "AU",
              "customer_id": 23,
              "first_name": "John",
              "last_name": "Doe",
              "phone": "1234567890",
              "postal_code": "2000",
              "state_or_province": "New South Wales"
            },
            {
              "id": 39,
              "address1": "111 E West Street",
              "address2": "654",
              "address_type": "residential",
              "city": "Akron",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 23,
              "first_name": "John",
              "last_name": "Doe",
              "phone": "1234567890",
              "postal_code": "44325",
              "state_or_province": "Ohio"
            }
          ],
          "meta": {
            "pagination": {
              "total": 14,
              "count": 14,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1
            }
          }
        }
      }
    },
    "AddressResponse": {
      "description": "",
      "schema": {
        "title": "AddressesResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Address"
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 40,
              "address1": "111 E West Street",
              "address2": "654",
              "address_type": "residential",
              "city": "Akron",
              "company": "",
              "country": "United States",
              "country_code": "US",
              "customer_id": 11,
              "first_name": "John",
              "last_name": "Doe",
              "phone": "1234567890",
              "postal_code": "44325",
              "state_or_province": "Ohio"
            }
          ],
          "meta": {}
        }
      }
    },
    "CustomerAttributeValueCollectionResponse": {
      "description": "",
      "schema": {
        "title": "CustomerAttributeValueCollectionResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerAttributeValue"
            }
          },
          "meta": {
            "$ref": "#/definitions/CollectionMeta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 1,
              "customer_id": 11,
              "attribute_id": 1,
              "attribute_value": "55",
              "date_created": "2018-11-14T18:58:08Z",
              "date_modified": "2018-11-14T18:58:08Z"
            },
            {
              "id": 2,
              "customer_id": 12,
              "attribute_id": 2,
              "attribute_value": "10",
              "date_created": "2018-11-14T21:57:08Z",
              "date_modified": "2018-11-14T21:57:08Z"
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1
            }
          }
        }
      }
    },
    "CustomerAttributeValueResponse": {
      "description": "",
      "schema": {
        "title": "CustomerAttributeValuesResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerAttributeValue"
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 1,
              "customer_id": 11,
              "attribute_id": 1,
              "attribute_value": "52",
              "date_created": "2018-11-14T18:58:08Z",
              "date_modified": "2019-02-19T19:26:21Z"
            }
          ],
          "meta": {}
        }
      }
    },
    "CustomerAttributeCollectionResponse": {
      "description": "",
      "schema": {
        "title": "CustomerAttributeValueCollectionResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerAttributeValue"
            }
          },
          "meta": {
            "$ref": "#/definitions/CollectionMeta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 1,
              "name": "Age",
              "type": "string",
              "date_created": "2018-11-13T21:42:06Z",
              "date_modified": "2018-11-14T16:46:23Z"
            },
            {
              "id": 2,
              "name": "Shoe Size",
              "type": "number",
              "date_created": "2018-11-14T16:34:57Z",
              "date_modified": "2018-11-14T16:34:57Z"
            },
            {
              "id": 3,
              "name": "Date Joined",
              "type": "date",
              "date_created": "2019-02-19T19:13:21Z",
              "date_modified": "2019-02-19T19:13:21Z"
            }
          ],
          "meta": {
            "pagination": {
              "total": 3,
              "count": 3,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1
            }
          }
        }
      }
    },
    "CustomerAttributesResponse": {
      "description": "",
      "schema": {
        "title": "CustomerAttributesResponse",
        "description": "Response payload for the BigCommerce API.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerAttribute"
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 1,
              "name": "Age",
              "type": "string",
              "date_created": "2018-11-13T21:42:06Z",
              "date_modified": "2018-11-14T16:46:23Z"
            }
          ],
          "meta": {}
        }
      }
    },
    "FormFieldValueCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FormFieldValue"
            }
          },
          "meta": {
            "$ref": "#/definitions/CollectionMeta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "customer_id": 1,
              "name": "color",
              "value": "blue"
            },
            {
              "customer_id": 1,
              "name": "weight",
              "value": 12.345
            },
            {
              "customer_id": 1,
              "name": "colors",
              "value": [
                "red",
                "green",
                "black"
              ]
            },
            {
              "address_id": 2,
              "name": "color",
              "value": "blue"
            },
            {
              "address_id": 2,
              "name": "weight",
              "value": 12.345
            },
            {
              "address_id": 2,
              "name": "colors",
              "value": [
                "red",
                "green",
                "black"
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 6,
              "count": 6,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1
            }
          }
        }
      }
    },
    "FormFieldValuesResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FormFieldValue"
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "customer_id": 1,
              "name": "color",
              "value": "blue"
            },
            {
              "customer_id": 1,
              "name": "weight",
              "value": 12.345
            },
            {
              "customer_id": 1,
              "name": "colors",
              "value": [
                "red",
                "green",
                "black"
              ]
            },
            {
              "address_id": 2,
              "name": "color",
              "value": "blue"
            },
            {
              "address_id": 2,
              "name": "weight",
              "value": 12.345
            },
            {
              "address_id": 2,
              "name": "colors",
              "value": [
                "red",
                "green",
                "black"
              ]
            }
          ],
          "meta": {}
        }
      }
    }
  }
}