swagger: '2.0'
info:
  version: '1.0'
  title: BigCommerce V2 API
  description: 'TODO: Add a description'
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v2'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/stores/{store_hash}/v2/blog/tags':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                tag:
                  type: string
                post_ids:
                  type: array
                  items:
                    type: integer
          examples:
            application/json:
              - tag: Blog
                post_ids:
                  - 1
              - tag: cupcakes
                post_ids:
                  - 2
              - tag: everything
                post_ids:
                  - 3
              - tag: nice
                post_ids:
                  - 3
              - tag: Seo
                post_ids:
                  - 1
              - tag: spice
                post_ids:
                  - 3
              - tag: sugar
                post_ids:
                  - 2
                  - 3
              - tag: sweet
                post_ids:
                  - 2
                  - 3
      parameters:
        - in: header
          name: Accept
          type: string
          required: true
          default: application/json
        - in: header
          name: Content-Type
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: path
          name: store_hash
          type: string
          required: true
      produces:
        - application/json
      summary: Get All Blog Tags
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts':
    get:
      description: >-
        Gets the collection of blog posts. (Default sorting is by
        published_date, from most-recently published posts to earliest published
        posts.)
      summary: Get All Blog Posts
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: is_published
          in: query
          required: false
          type: string
          description: Filter param.
        - name: url
          in: query
          required: false
          type: string
          description: Filter param.
        - name: tag
          in: query
          required: false
          type: string
          description: Filter param.
        - name: published_date
          in: query
          required: false
          type: string
          description: Filter param.
          format: date-time
        - name: page
          in: query
          required: false
          type: number
          exclusiveMinimum: false
          description: Filter param.
          maximum: 50
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 250
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              - id: 3
                title: Hello Again
                url: /blog/hello-again/
                preview_url: /blog/hello-again/
                body: >-
                  <p>Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar chocolate bar
                  tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                  cupcake sweet roll candy marshmallow caramels cotton candy pie
                  icing. Powder jelly beans chupa chups lollipop liquorice
                  marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                  gummies cheesecake ice cream caramels sesame snaps cotton
                  candy gingerbread. Chocolate cake fruitcake tart bear claw
                  lemon drops tart dragée tart apple pie. Halvah chupa chups
                  soufflé jelly soufflé marshmallow. Croissant tart tart.
                  Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                  pastry brownie chocolate bar jelly. Dragée muffin cupcake
                  liquorice caramels marzipan gingerbread marzipan. Apple pie
                  pudding jelly sweet roll croissant bonbon wafer. Cookie
                  chocolate bar sesame snaps bonbon macaroon candy canes donut
                  sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                  gummies donut sweet. Marzipan bear claw cotton candy topping
                  dragée bonbon danish powder.</p>
                tags:
                  - sugar
                  - sweet
                  - spice
                  - everything
                  - nice
                summary: >-
                  Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar [...]
                is_published: true
                published_date:
                  date: '2018-05-18 08:26:42.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:42+0000'
                meta_description: Cupcakes post 2
                meta_keywords: 'sugar,sweet,spice,everything,nice'
                author: ''
                thumbnail_path: ''
              - id: 2
                title: Hello
                url: /blog/hello/
                preview_url: /blog/hello/
                body: >-
                  <p>Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar chocolate bar
                  tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                  cupcake sweet roll candy marshmallow caramels cotton candy pie
                  icing. Powder jelly beans chupa chups lollipop liquorice
                  marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                  gummies cheesecake ice cream caramels sesame snaps cotton
                  candy gingerbread. Chocolate cake fruitcake tart bear claw
                  lemon drops tart dragée tart apple pie. Halvah chupa chups
                  soufflé jelly soufflé marshmallow. Croissant tart tart.
                  Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                  pastry brownie chocolate bar jelly. Dragée muffin cupcake
                  liquorice caramels marzipan gingerbread marzipan. Apple pie
                  pudding jelly sweet roll croissant bonbon wafer. Cookie
                  chocolate bar sesame snaps bonbon macaroon candy canes donut
                  sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                  gummies donut sweet. Marzipan bear claw cotton candy topping
                  dragée bonbon danish powder.</p>
                tags:
                  - cupcakes
                  - sugar
                  - sweet
                summary: >-
                  Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar [...]
                is_published: true
                published_date:
                  date: '2018-05-18 08:26:00.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:00+0000'
                meta_description: cupcake blog post
                meta_keywords: 'cupcakes,sugar,sweet'
                author: ''
                thumbnail_path: ''
              - id: 1
                title: Your first blog post!
                url: /your-first-blog-post/
                preview_url: /your-first-blog-post/
                body: >-
                  <p> <strong>Welcome to your blog!</strong><br> A blog is a
                  great place to share details on your products, business and
                  whatever else you think your shoppers might like to hear from
                  you. You can include photos in your blog posts and even
                  videos. For ideas and inspiration on how to structure your
                  blog, take a look at the Bigcommerce <a
                  href='http://blog.bigcommerce.com/' target='_blank'
                  rel='nofollow'>ecommerce blog</a>.</p><p><strong>How can I
                  delete this post?</strong><br>To delete this post and add your
                  own, login to your <a href='/admin' target='_blank'>admin
                  area</a> and go to Storefront > Blog in the left hand
                  menu.</p><p><strong>Powered by Bigcommerce</strong><br>Your
                  website, online store and blog are powered by Bigcommerce <a
                  href='http://www.bigcommerce.com/' target='_blank'
                  rel='nofollow'>ecommerce software</a>. It includes everything
                  you need to run a beautiful online store including <a
                  href='http://www.bigcommerce.com/templates/' target='_blank'
                  rel='nofollow'>ecommerce website templates</a>, <a
                  href='http://www.bigcommerce.com/features/hosting/'
                  target='_blank' rel='nofollow'>ecommerce hosting</a>, an <a
                  href='http://www.bigcommerce.com/features/setup/'
                  target='_blank' rel='nofollow'>online shopping cart</a> and
                  more.</p>
                tags:
                  - Blog
                  - SEO
                summary: ' Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]'
                is_published: true
                published_date:
                  date: '2014-02-15 14:46:34.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2014-02-15T19:46:34+0000'
                meta_description: ''
                meta_keywords: 'Blog,SEO'
                author: ''
                thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      consumes:
        - application/json
      tags:
        - Blog Posts
        - Store Content
    post:
      description: Creates a new blog post.
      summary: Create A Blog Post
      operationId: StoresV2BlogPostsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          x-examples:
            application/json:
              title: A Sample Blog Post
              body: <p>This is a blog post.</p>
              author: Author Name
              thumbnail_path: 'http://cdn.example.com/sample-post.jpg'
              is_published: true
              tags:
                - Blog
                - Example
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
    delete:
      description: Deletes all blog posts on the store.
      summary: Delete All Blog Posts
      operationId: StoresV2BlogPostsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 250
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 50
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      consumes:
        - application/json
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts/{id}':
    get:
      description: Gets a blog post.
      summary: Get A Single Blog Post
      tags:
        - Blog Posts
        - Store Content
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Updates an existing blog post.
      summary: Update A Blog Post
      tags:
        - Blog Posts
        - Store Content
      operationId: StoresV2BlogPostsByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          x-examples:
            application/json:
              title: 'New: A Sample Blog Post'
              url: /blog/sample-post
              published_date: 'Wed, 01 Jan 2017 15:33:33 +0400'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a single blog post.
      summary: Delete A Blog Post
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts/count':
    get:
      description: Gets a count of all blog posts in a store.
      summary: Get A Count of All Blog Posts
      operationId: StoresV2BlogPostsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/pages':
    get:
      description: >-
        Gets the collection of pages. (Default sorting is by auto-generated ID.
        This usually generates an order of oldest-to-newest)
      summary: Get All Pages
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Page'
          examples:
            application/json:
              - id: 1
                name: RSS Syndication
                meta_title: ''
                body: '%%Syndicate%%'
                is_visible: true
                parent_id: 0
                sort_order: 5
                meta_keywords: '0'
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: ''
                is_customers_only: false
                search_keywords: '0'
                has_mobile_version: false
                mobile_body: '0'
                url: /rss-syndication/
              - id: 2
                name: Shipping & Returns
                meta_title: ''
                body: >-
                  <em>To edit this page simply login to the control panel, click
                  the <strong style="font-weight: 400">Website Content</strong>
                  tab and choose the </em> <strong style="font-weight:
                  400"><em>View Web Pages option. Click Edit next to the
                  Shipping & Returns page and you can change this text. A sample
                  returns policy is shown below which you can edit as
                  needed.</em><em style="font-style:
                  normal"><br/><br/></em></strong><em style="font-style:
                  normal"><strong>Returns Policy</strong></em><strong
                  style="font-weight: 400"></em></em><em style="font-style:
                  normal"><br/><br/></em>You may return most new, unopened items
                  within 30 days of delivery for a full refund. We'll also pay
                  the return shipping costs if the return is a result of our
                  error (you received an incorrect or defective item,
                  etc.).<br/><br/>You should expect to receive your refund
                  within four weeks of giving your package to the return
                  shipper, however, in many cases you will receive a refund more
                  quickly. This time period includes the transit time for us to
                  receive your return from the shipper (5 to 10 business days),
                  the time it takes us to process your return once we receive it
                  (3 to 5 business days), and the time it takes your bank to
                  process our refund request (5 to 10 business
                  days).<br/><br/>If you need to return an item, please <a
                  href="/contact-us/">Contact Us</a> with your order number and
                  details about the product you would like to return. We will
                  respond quickly with instructions for how to return items from
                  your
                  order.<br/><br/></strong><strong>Shipping</em></em></em></strong><strong
                  style="font-weight: 400"><em style="font-style:
                  normal"><br/><br/></em>We can ship to virtually any address in
                  the world. Note that there are restrictions on some products,
                  and some products cannot be shipped to international
                  destinations.<br/><br/>When you place an order, we will
                  estimate shipping and delivery dates for you based on the
                  availability of your items and the shipping options you
                  choose. Depending on the shipping provider you choose,
                  shipping date estimates may appear on the shipping quotes
                  page.<br/><br/>Please also note that the shipping rates for
                  many items we sell are weight-based. The weight of any such
                  item can be found on its detail page. To reflect the policies
                  of the shipping companies we use, all weights will be rounded
                  up to the next full pound.<br/>
                is_visible: true
                parent_id: 0
                sort_order: 2
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                mobile_body: ''
                url: /shipping-returns/
              - id: 3
                name: Blog
                is_visible: true
                parent_id: 0
                sort_order: 4
                type: blog_index
                is_homepage: false
                is_customers_only: false
              - id: 4
                name: Contact Us
                meta_title: ''
                email: ''
                body: >-
                  <p>We're happy to answer questions or help you with
                  returns.<br />Please fill out the form below if you need
                  assistance.</p>
                is_visible: true
                parent_id: 0
                sort_order: 3
                meta_keywords: ''
                type: contact_form
                contact_fields: 'fullname,companyname,phone,orderno,rma'
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                mobile_body: '0'
                url: /contact-us/
              - id: 5
                name: Test Page
                meta_title: ''
                body: "<p>Redirect webpage</p>\r\n<p>&nbsp;</p>\r\n<p><img class=\"__mce_add_custom__\" title=\"screen-shot-2018-06-11-at-8.38.00-am.png\" src=\"%%GLOBAL_ShopPathSSL%%/product_images/uploaded_images/screen-shot-2018-06-11-at-8.38.00-am.png\" alt=\"screen-shot-2018-06-11-at-8.38.00-am.png\" width=\"1026\" height=\"586\" /></p>"
                is_visible: true
                parent_id: 0
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /test-page/
              - id: 6
                name: Child Pages
                meta_title: ''
                body: ''
                is_visible: true
                parent_id: 5
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /child-pages/
              - id: 7
                name: Footer only page
                meta_title: ''
                body: <p>Testing</p>
                is_visible: true
                parent_id: 0
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /footer-only-page/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Creates a new page.
      summary: Create A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Page'
          x-examples:
            application/json:
              id: 12
              name: 404 Page for Cats
              body: >-
                <html><head><title>Hairball! Not
                Found</title></head><body>Sorry! You can not haz
                cheeseburger.</body></html>
              is_visible: true
              parent_id: 0
              sort_order: 12
              type: raw
              is_homepage: false
              is_customers_only: false
              search_keywords: 'dead, missing, broken'
              has_mobile_version: false
              mobile_body: ''
              url: /404-meow/
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Page'
          examples:
            application/json:
              - id: 6
                parent_id: 5
                type: page
                contact_fields: 'fullname,companyname,phone,orderno,rma'
                email: janedoes@email.com
                name: Contact Form
                url: /contact-us/
                meta_description: ''
                body: >-
                  <p>We're happy to answer questions or help you with
                  returns.<br />Please fill out the form below if you need
                  assistance.</p>
                mobile_body: 0
                has_mobile_version: false
                is_visible: true
                is_homepage: false
                layout_file: page.html
                sort_order: 3
                meta_title: ''
                search_keywords: ''
                meta_keywords: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/pages/{id}':
    get:
      description: Gets a single page.
      summary: Get A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the page.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Page'
          examples:
            application/json:
              id: 1
              name: RSS Syndication
              meta_title: ''
              body: '%%Syndicate%%'
              is_visible: true
              parent_id: 0
              sort_order: 5
              meta_keywords: '0'
              type: page
              meta_description: ''
              is_homepage: false
              layout_file: ''
              is_customers_only: false
              search_keywords: '0'
              has_mobile_version: false
              mobile_body: '0'
              url: /rss-syndication/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a single page.
      summary: Delete A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the page.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects':
    get:
      description: Gets all redirect urls.
      summary: Get A List of Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
        - name: limit
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Redirect'
          examples:
            application/json:
              - id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: '111'
                url: >-
                  http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Creates a new URL redirect.
      summary: Create A Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          x-examples:
            application/json:
              path: /mens_clothing
              forward:
                type: category
                ref: 3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          examples:
            application/json:
              id: 3
              path: /mens_clothing
              forward:
                type: category
                ref: 3
              url: 'http://store.example.com/mens'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete all URL redirects in a store.
      summary: Delete All Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects/{id}':
    get:
      description: Gets a single url.
      summary: Get A Single Redirect URL
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema: {}
          examples:
            application/json:
              id: 1
              path: /smith-journal-13/
              forward:
                type: product
                ref: 111
              url: >-
                http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: >-
        Updates an existing URL redirect.


        **Note:** The path, forward.type, and forward.ref fields of an existing
        redirect can be updated. 
      summary: Update A Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          x-examples:
            application/json:
              path: /mens_clothing
              forward:
                type: category
                ref: 3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          examples:
            application/json:
              id: 1
              path: /smith-journal-13/
              forward:
                type: product
                ref: 111
              url: >-
                http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a URL redirect.
      summary: Delete A Single Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects/count':
    get:
      description: Gets a count of redirects in a store.
      summary: Get A Count of Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  BlogPosts:
    title: Blog Posts
    example:
      id: 3
      title: Welcome to BigCommerce
      url: /blog/welcome-bigcommerce/
      preview_url: /blog/welcome-bigcommerce/
      body: >-
        <p>Customize your site, manage shipping and payments, and list your
        products on Amazon, eBay, and Facebook with the #1 ecommerce platform.
        </p>
      tags:
        - BigCommerce
        - welcome
        - ecommerce
      summary: >-
        <p>We power ecommerce websites for successful retailers all over the
        world</p>
      is_published: true
      published_date:
        date: '2018-05-18T08:26:42.000Z'
        timezone_type: 1
        timezone: '+00:00'
      published_date_iso8601: '2018-05-18T13:26:42.000Z'
      meta_description: Welcome Post
      meta_keywords: 'BigCommerce, welcome, ecommerce'
      author: BigCommerce
      thumbnail_path: ''
    type: object
    properties:
      id:
        description: ID of this blog post. (READ-ONLY)
        example: 3
        type: integer
      title:
        type: string
        description: Title of this blog post.
        example: Welcome to BigCommerce
      url:
        description: URL for the public blog post.
        example: /blog/welcome-bigcommerce/
        type: string
      preview_url:
        description: URL to preview the blog post. (READ-ONLY)
        example: /blog/welcome-bigcommerce/
        type: string
      body:
        type: string
        description: Text body of the blog post.
        example: >-
          <p>Customize your site, manage shipping and payments, and list your
          products on Amazon, eBay, and Facebook with the #1 ecommerce platform.
          </p>
      tags:
        description: Tags to characterize the blog post.
        type: array
        items:
          type: string
      summary:
        description: Summary of the blog post. (READ-ONLY)
        example: >-
          <p>We power ecommerce websites for successful retailers all over the
          world</p>
        type: string
      is_published:
        description: Whether the blog post is published.
        example: true
        type: boolean
      published_date:
        type: object
        properties:
          timezone_type:
            type: string
            example: 1
          date:
            type: string
            format: date-time
            example: '2018-05-18T08:26:42.000Z'
          timezone:
            type: string
            format: time
            example: '+00:00'
      published_date_iso8601:
        description: Published date in ISO 8601 format.
        example: '5/18/2018 1:26:42 PM'
        type: string
      meta_description:
        description: Description text for this blog post’s <meta> element.
        example: Welcome Post
        type: string
      meta_keywords:
        description: Keywords for this blog post’s <meta> element.
        example: 'BigCommerce, welcome, ecommerce'
        type: string
      author:
        description: Name of the blog post’s author.
        example: BigCommerce
        type: string
      thumbnail_path:
        description: >-
          Local path to a thumbnail image within the product_images folder to
          accompany the blog post.
        type: string
    required:
      - title
      - body
  Page:
    title: Page
    example:
      id: 6
      parent_id: 5
      type: page
      contact_fields: 'fullname,companyname,phone,orderno,rma'
      email: janedoes@email.com
      name: Contact Form
      url: /contact-us/
      meta_description: ''
      body: >-
        <p>We're happy to answer questions or help you with returns.<br />Please
        fill out the form below if you need assistance.</p>
      mobile_body: 0
      has_mobile_version: false
      is_visible: true
      is_homepage: false
      layout_file: page.html
      sort_order: 3
      meta_title: ''
      search_keywords: ''
      meta_keywords: ''
    type: object
    properties:
      id:
        description: Unique ID of this Web page. Read Only
        example: 6
        type: intger
      parent_id:
        description: ID of any parent Web page.
        example: 5
        type: integer
      type:
        type: string
        description: "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t"
        enum:
          - page
          - rss_feed
          - contact_form
          - raw
          - link
      contact_fields:
        description: >-
          Where the page’s type is a contact form: object whose members are the
          fields enabled (in the control panel) for storefront display. Possible
          members are:`fullname`: full name of the customer submitting the form;
          `phone`: customer’s phone number, as submitted on the form;
          `companyname`: customer’s submitted company name; `orderno`:
          customer’s submitted order number; `rma`: customer’s submitted RMA
          (Return Merchandise Authorization) number.
        example: 'fullname,companyname,phone,orderno,rma'
        type: string
      email:
        description: >-
          Where the page’s type is a contact form: email address that receives
          messages sent via the form.
        example: janedoes@email.com
        type: string
      name:
        type: string
        description: 'Page name, as displayed on the storefront.'
        example: Contact Form
      url:
        description: Relative URL on the storefront for this page.
        example: /contact-us/
        type: string
      meta_description:
        description: Description contained within this page’s <meta> element.
        type: string
      body:
        type: string
        description: >-
          HTML or variable that populates this page’s <body> element, in
          default/desktop view. Required in POST if page type is `raw`.
        example: >-
          <p>We're happy to answer questions or help you with returns.<br
          />Please fill out the form below if you need assistance.</p>
      mobile_body:
        description: >-
          HTML to use for this page's body when viewed in the mobile template
          (deprecated).
        example: 0
        type: string
      has_mobile_version:
        description: 'If true, this page has a mobile version.'
        example: false
        type: boolean
      is_visible:
        description: 'If true, this page appears in the storefront’s navigation menu.'
        example: true
        type: boolean
      is_homepage:
        description: 'If true, this page is the storefront’s home page.'
        example: false
        type: boolean
      meta_title:
        description: >-
          Text specified for this page’s <title> element. (If empty, the value
          of the name property is used.)
        type: string
      layout_file:
        description: Layout template for this page.
        example: page.html
        type: string
      sort_order:
        description: >-
          Order in which this page should display on the storefront. (Lower
          integers specify earlier display.)
        example: 3
        type: integer
      search_keywords:
        description: >-
          Comma-separated list of keywords that shoppers can use to locate this
          page when searching the store.
        type: string
      meta_keywords:
        description: >-
          Comma-separated list of SEO-relevant keywords to include in the page’s
          <meta> element.
        type: string
      feed:
        type: string
        description: >-
          If page type is `rss_feed` the n this field is visisble. Required in
          POST required for `rss page` type.
      link:
        type: string
        description: >-
          If page type is `link` this field is returned. Required in  POST to
          create a `link` page.
    required:
      - type
      - name
      - body
      - feed
      - link
  Redirect:
    title: Redirect
    example:
      id: 1
      path: /smith-journal-13/
      forward:
        type: product
        ref: 111
      url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
    type: object
    properties:
      id:
        description: Numeric ID of the redirect.
        example: 1
        type: integer
      path:
        type: string
        description: The path from which to redirect.
        example: /smith-journal-13/
      forward:
        type: object
        properties:
          type:
            type: string
            description: >
              The type of redirect. If it is a manual redirect then type will
              always be manual. Dynamic redirects will have the type of the
              page. Such as product or category.
            example: product
          ref:
            type: string
            description: >-
              Reference of the redirect. Dynamic redirects will have the
              category or product number. Manual redirects will have the url
              that is being directed to.
            example: 111
      url:
        description: URL of the redirect. READ-ONLY
        example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
        type: string
    required:
      - path
      - forward
  RedirectForward:
    title: Redirect Forward
    type: object
    properties:
      type:
        description: >-
          The type of redirect. If it is a `manual` redirect then type will
          always be manual. Dynamic redirects will have the type of the page.
          Such as product or category.
        example: product
        type: string
      ref:
        description: >-
          Reference of the redirect. Dynamic redirects will have the category or
          product number. Manual redirects will have the url that is being
          directed to.
        example: 111
        type: number
  Customer:
    title: Customers
    example:
      id: 1
      _authentication: {}
      company: BigCommerce
      first_name: Jane
      last_name: Doe
      email: janedoe@email.com
      phone: 1234567890
      date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
      date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
      store_credit: 0
      registration_ip_address: 12.345.678.910
      customer_group_id: 2
      notes: ''
      tax_exempt_category: ''
      accepts_marketing: true
      addresses:
        url: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
        resource: /customers/5/addresses
      form_fields:
        - name: ''
          value: ''
      reset_pass_on_login: false
    type: object
    properties:
      id:
        description: >-
          Unique numeric ID of this customer. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 1
        type: integer
      _authentication:
        description: >-
          Not returned in any responses, but accepts up to two fields allowing
          you to set the customer’s password. If a password is not supplied, it
          is generated automatically. For further information about using this
          object, please see the Customers resource documentation.
        type: object
        properties:
          force_reset:
            type: string
          password:
            type: string
          password_confirmation:
            type: string
      company:
        description: The name of the company for which the customer works.
        example: BigCommerce
        type: string
      first_name:
        type: string
        description: First name of the customer.
        example: Jane
      last_name:
        type: string
        description: Last name of the customer.
        example: Doe
      email:
        type: string
        description: Email address of the customer.
        example: janedoe@email.com
      phone:
        description: Phone number of the customer.
        example: 1234567890
        type: string
      date_created:
        description: >-
          Date on which the customer registered from the storefront or was
          created in the control panel. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: 'Thu, 11 Jan 2018 20:57:52 +0000'
        type: string
        format: date-time
      date_modified:
        description: >
          Date on which the customer updated their details in the storefront or
          was updated in the control panel. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 'Tue, 10 Apr 2018 18:59:05 +0000'
        type: string
        format: date-time
      store_credit:
        description: >-
          The amount of credit the customer has. (Float, Float as String,
          Integer)
        example: 0
        type: string
      registration_ip_address:
        description: The customer’s IP address when they signed up.
        example: 12.345.678.910
        type: string
      customer_group_id:
        description: The group to which the customer belongs.
        example: 2
        type: integer
      notes:
        description: Store-owner notes on the customer.
        type: string
      tax_exempt_category:
        description: >-
          Used to identify customers who fall into special sales-tax categories
          – in particular, those who are fully or partially exempt from paying
          sales tax. Can be blank, or can contain a single AvaTax code. (The
          codes are case-sensitive.) Stores that subscribe to BigCommerce’s
          Avalara Premium integration will use this code to determine
          how/whether to apply sales tax. Does not affect sales-tax calculations
          for stores that do not subscribe to Avalara Premium.
        type: string
      accepts_marketing:
        description: >
          Records whether the customer would like to receive marketing content
          from this store. READ-ONLY.This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: true
        type: boolean
      addresses:
        $ref: '#/definitions/AddressFieldResource'
      form_fields:
        description: >-
          Array of custom fields. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        type: array
        items:
          $ref: '#/definitions/FormFields'
      reset_pass_on_login:
        description: Force a password change on next login.
        example: false
        type: boolean
    required:
      - first_name
      - last_name
      - email
  CategoryAccess:
    title: Category Access Level
    type: object
    properties:
      type:
        type: string
        enum:
          - all
          - specific
          - none
        description: >-
          + `all` - Customers can access all categories
           + `specific`  - Customers can access a specific list of categories
          + `none` - Customers are prevented from viewing any of the categories
          in this group.
      categories:
        description: >-
          Is an array of category IDs and should be supplied only if `type` is
          specific.
        type: array
        example: '18,19,23,34'
        items:
          type: string
  Timezone:
    title: Time Zone
    type: object
    properties:
      name:
        description: >-
          a string identifying the time zone, in the format:
          <Continent-name>/<City-name>.
        example: America/Chicago
        type: string
      raw_offset:
        description: >-
          a negative or positive number, identifying the offset from UTC/GMT, in
          seconds, during winter/standard time.
        example: -21600
        type: integer
      dst_offset:
        description: >-
          "-/+" offset from UTC/GMT, in seconds, during summer/daylight saving
          time.
        example: -18000
        type: integer
      dst_correction:
        description: >-
          a boolean indicating whether this time zone observes daylight saving
          time.
        example: true
        type: boolean
      date_format:
        $ref: '#/definitions/DateFormat'
  DateFormat:
    title: Date Format
    type: object
    properties:
      display:
        description: 'string that defines dates’ display format, in the pattern: M jS Y'
        example: M jS Y
        type: string
      export:
        description: >-
          string that defines the CSV export format for orders, customers, and
          products, in the pattern: M jS Y
        example: M jS Y
        type: string
      extended_display:
        description: >-
          string that defines dates’ extended-display format, in the pattern: M
          jS Y @ g:i A.
        example: 'M jS Y @ g:i A'
        type: string
  BlogTags:
    type: array
    title: Blog Tags
    items:
      type: object
      properties:
        tag:
          type: string
          example: Blog
        post_ids:
          type: array
          example: '1,2,4'
          items:
            type: integer
tags:
  - name: Blog Posts
  - name: Pages
  - name: Redirects
