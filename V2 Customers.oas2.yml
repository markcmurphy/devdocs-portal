swagger: '2.0'
info:
  version: '1.0'
  title: BigCommerce V2 API
  description: 'TODO: Add a description'
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v2'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/stores/{store_hash}/v2/customers':
    get:
      description: >-
        Gets the collection of customers. (Default sorting is by customer id,
        from lowest to highest.)

        This request can be filtered by any of the _Customer_ object properties
        except form fields.
      summary: Get All Customers
      operationId: StoresV2CustomersByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
        - in: query
          name: first_name
          type: string
        - in: query
          name: last_name
          type: string
        - in: query
          name: company
          type: string
        - in: query
          name: email
          type: string
        - in: query
          name: phone
          type: string
        - in: query
          name: store_credit
          type: string
        - in: query
          name: customer_group_id
          type: integer
        - in: query
          name: min_id
          type: integer
        - in: query
          name: max_id
          type: integer
        - in: query
          name: min_date_created
          type: string
          format: date-time
        - in: query
          name: "max_date_created\t"
          type: string
          format: date-time
        - in: query
          name: min_date_modified
          type: string
          format: date-time
        - in: query
          name: max_date_modified
          type: string
          format: date-time
        - in: query
          name: tax_exempt_category
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
          examples:
            application/json:
              - id: 1
                company: ''
                first_name: Jane
                last_name: Doe
                email: jane@email.com
                phone: ''
                form_fields:
                  - name: Account Sign Up Field
                    value: 123dadf
                date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
                date_modified: 'Thu, 10 May 2018 20:18:01 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 1
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                  resource: /customers/1/addresses
              - id: 2
                company: ''
                first_name: BigCommerce
                last_name: BigCommerce
                email: bc@email.com
                phone: ''
                form_fields: null
                date_created: 'Wed, 10 Jan 2018 21:24:05 +0000'
                date_modified: 'Wed, 10 Jan 2018 21:24:05 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 0
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/2/addresses
                  resource: /customers/2/addresses
      x-unitTests:
        - request:
            method: GET
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "id": 1,  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "email":
              "janedoe@email.com",  "phone": "1234567890",  "date_created":
              "Thu, 11 Jan 2018 20:57:52 +0000",  "date_modified": "Tue, 10 Apr
              2018 18:59:05 +0000",  "store_credit": 0, 
              "registration_ip_address": "12.345.678.910",  "customer_group_id":
              2,  "notes": "",  "tax_exempt_category": "",  "accepts_marketing":
              true,  "addresses": {    "url":
              "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",   
              "resource": "/customers/5/addresses"  },  "form_fields": [   
              {      "name": "",      "value": ""    }  ], 
              "reset_pass_on_login": false}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get All Customers1
          x-testDescription: >-
            Gets the collection of customers. (Default sorting is by customer
            id, from lowest to highest.)

            This request can be filtered by any of the _Customer_ object
            properties except form fields.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customers
    post:
      description: >-
        The `_authentication` object exposes functionality associated with the
        customer’s ability to log in to the store. All properties of the
        `_authentication` object are optional. 


        When the _authentication object is not supplied with an update request,
        then the existing customer password remains the same
      summary: Create a New Customer
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            type: object
            properties:
              _authentication:
                type: object
                description: >-
                  This can vary depending on the action being taken to update,
                  validate or force a password change. See Update Customer
              company:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              phone:
                type: string
              date_modified:
                type: string
              store_credit:
                type: integer
              registration_ip_address:
                type: string
              customer_group_id:
                type: integer
              notes:
                type: string
              tax_exempt_category:
                type: string
          x-examples:
            application/json:
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              phone: '1234567890'
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              _authentication: {}
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              email: janedoe@email.com
              phone: 1234567890
              date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
              date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
              store_credit: 0
              registration_ip_address: 12.345.678.910
              customer_group_id: 2
              notes: ''
              tax_exempt_category: ''
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
                resource: /customers/5/addresses
              form_fields:
                - name: ''
                  value: ''
              reset_pass_on_login: false
      x-unitTests:
        - request:
            method: POST
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
            body: >-
              {  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "phone":
              "1234567890",  "date_modified": "Tue, 10 Apr 2018 18:59:05
              +0000",  "store_credit": 0,  "registration_ip_address":
              "12.345.678.910",  "customer_group_id": 2,  "notes": "", 
              "tax_exempt_category": ""}
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "id": 1,  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "email":
              "janedoe@email.com",  "phone": "1234567890",  "date_created":
              "Thu, 11 Jan 2018 20:57:52 +0000",  "date_modified": "Tue, 10 Apr
              2018 18:59:05 +0000",  "store_credit": 0, 
              "registration_ip_address": "12.345.678.910",  "customer_group_id":
              2,  "notes": "",  "tax_exempt_category": "",  "accepts_marketing":
              true,  "addresses": {    "url":
              "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",   
              "resource": "/customers/5/addresses"  },  "form_fields": [   
              {      "name": "",      "value": ""    }  ], 
              "reset_pass_on_login": false}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create a New Customer1
          x-testDescription: Testcase for testing endpoint Create a New Customer
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes all customers
      summary: Delete All Customers in a Store
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests:
        - request:
            method: DELETE
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Delete All Customers1
          x-testDescription: Deletes all customers
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/customers/{id}':
    get:
      description: Gets a single customer.
      summary: Get a Single Customer
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              _authentication: {}
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              email: janedoe@email.com
              phone: 1234567890
              date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
              date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
              store_credit: 0
              registration_ip_address: 12.345.678.910
              customer_group_id: 2
              notes: ''
              tax_exempt_category: ''
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
                resource: /customers/5/addresses
              form_fields:
                - name: ''
                  value: ''
              reset_pass_on_login: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a customer.
      summary: Delete a Customer
      operationId: StoresV2CustomersByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store_hash
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customers
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              company: ''
              first_name: Jane
              last_name: Doe
              email: janedoes@email.com
              phone: ''
              form_fields:
                - name: License Id
                  value: ''
              date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
              date_modified: 'Mon, 13 Aug 2018 18:11:41 +0000'
              store_credit: '0.0000'
              registration_ip_address: 64.183.182.114
              customer_group_id: 1
              notes: ''
              tax_exempt_category: ''
              reset_pass_on_login: false
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                resource: /customers/1/addresses
      summary: Update a Customer
      tags:
        - Customers
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: path
          name: id
          type: integer
          required: true
          description: Id of the customer
        - in: header
          name: Accept
          type: string
          default: application/json
        - in: header
          name: Content-Type
          type: string
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
        - in: header
          name: X-Auth-Token
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Customer'
          x-examples:
            application/json:
              first_name: Jane
              email: jane@email.com
              phone: '1234567890'
            password-update: |-
              {
                "_authentication": {
                  "password": "12w69Y217PYR96J"
                }
              }
            password-confirm: |2-
                 {
                      "_authentication": {
                         "password": "12w69Y217PYR96J",
                         "password_confirmation": "12w69Y217PYR96J"
                      }
                  }
            password-reset:
              _authentication:
                force_reset: true
      description: >-
        This endpoint can be used to update a customer or a customers password
        information.  Passwords use the `_authentication` functionality to
        update, confirm or force a password reset.


        ### Update a Password

        To manually update a customer password as you would through the control
        panel, supply a value for the password field.


        ### Confirm a Password

        An additional optional password_confirmation field can also be sent,
        providing password confirmation as a service.


        ### Force Password Resets

        To force a customer to reset their password upon their next login
        attempt, give the force_reset field a value of true.


        On success they return the *Customer* object.
  '/stores/{store_hash}/v2/customers/count':
    get:
      description: Gets a count of the total number of customers in the store.
      summary: Get a Count of Customers
      tags:
        - Customers
      operationId: StoresV2CustomersCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests:
        - request:
            method: GET
            uri: '/stores/{store_hash}/v2/customers/count'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: '{  "count": 27}'
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get a Count of Customers1
          x-testDescription: Gets a count of the total number of customers in the store.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/customers/{id}/validate':
    post:
      description: >-
        **This endpoint has special rate limiting protections to protect against
        abuse.**


        Provided a password, will return a true/false response indicating if the
        provided password matches the customer’s current password. This endpoint
        is useful if you want to power the login of another system using
        BigCommerce’s stored customer accounts, or as a safe way to migrate
        passwords to another system (by checking them against BigCommerce’s
        password, and if correct, storing it in another system securely.)If the
        password matches what’s stored against the customer account, the
        response will be:


        ```

        {
            "success": "true"
        }

        ```

        If the password does NOT match, the response will instead be:


        ```

        {
            "success": "false"
        }

        ```
      summary: Validate a Password
      operationId: StoresV2CustomersValidateByStoreHashAndIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            type: object
            properties:
              password:
                type: string
                description: >-
                  String to run against customer password. Will return a true or
                  false.
          x-examples:
            application/json:
              password: abc12345
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Will return `true` or `false`
          examples:
            application/json:
              success: 'false'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Passwords
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses':
    get:
      description: >-
        Gets the addresses belonging to a customer. (Default sorting is by
        address id, from lowest to highest.) Parameters can be added to the URL
        query string to paginate the collection. The maximum limit is 250. If a
        limit isn’t provided, up to 50 customer_addresses are returned by
        default.
      summary: List All Customer Addresses
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              - id: 1
                company: ''
                first_name: Jane
                last_name: Does
                email: janedoe@email.com
                phone: ''
                form_fields:
                  - name: AccountSignUpField
                    value: B2B
                date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
                date_modified: 'Thu, 10 May 2018 20:18:01 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 1
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                  resource: /customers/1/addresses
              - id: 2
                company: ''
                first_name: BigCommerce
                last_name: BigCommerce
                email: bigcommerce@email.com
                phone: ''
                form_fields: null
                date_created: 'Wed, 10 Jan 2018 21:24:05 +0000'
                date_modified: 'Wed, 10 Jan 2018 21:24:05 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 0
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/2/addresses
                  resource: /customers/2/addresses
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
    post:
      description: >-
        Creates a new customer address. (Note: The “state” property cannot be
        null. As a workaround for addresses that include no state/province
        string, pass a space as the “state” value.)
      summary: Create A New Customer Address
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          x-examples:
            application/json:
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: '78726'
              country: United Statues
              phone: 123-345-7890
              address_type: residental
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
      consumes:
        - application/json
    delete:
      description: Deletes all customer addresses.
      summary: Delete All Customer Address
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses/{id}':
    get:
      description: Gets a customer address.
      summary: Get A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the customer address being accessed.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
    put:
      description: 'Updates an existing customer address. '
      summary: Update A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          x-examples:
            application/json:
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: '78726'
              country: United Statues
              phone: 123-345-7890
              address_type: residental
        - name: id
          in: path
          required: true
          type: integer
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
      consumes:
        - application/json
    delete:
      description: Deletes a customer address.
      summary: Delete A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: path
          required: true
          type: integer
          description: Address Id
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses/count':
    get:
      description: Gets a count of addresses for a customer.
      summary: Get A Count of Customer Addresses
      operationId: StoresV2CustomersAddressesCountByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customer_groups':
    get:
      description: >-
        Gets the collection of customer groups. (Default sorting is by
        customer-group id, from lowest to highest.)
      summary: Get All Customer Groups
      operationId: StoresV2CustomerGroupsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
        - name: name
          in: query
          required: false
          type: string
          description: >-
            Filter customer groups by exact name match. Can use `name:like` to
            filter using a fuzzy matching method. This is good for implementing
            search.
        - name: is_default
          in: query
          required: false
          type: boolean
          description: If customers who signup are added to this group by default
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              - id: 1
                name: B2B
                is_default: false
                category_access:
                  type: all
                discount_rules:
                  - type: price_list
                    price_list_id: 1
              - id: 2
                name: 5% Discount
                is_default: false
                category_access:
                  type: specific
                  categories:
                    - 18
                    - 19
                    - 23
                    - 34
                discount_rules:
                  - type: all
                    method: percent
                    amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    post:
      summary: Create A Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          x-examples:
            application/json:
              name: Bulk Purchasers
              category_access:
                type: specific
                categories:
                  - 7
                  - 12
                  - 20
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              name: 5% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      description: >-
        Creates a new customer group. 



        A minimal request requires only the customer group name:



        ```

        {
            "name": "Wholesale Customers"
        }

        ```



        To assign all new customers to the group by default, set is default to
        true:


        ```

        {
            "name": "Retail Customers",
            "is_default": true
        }

        ```



        To restrict customers in the group to only view and order products from
        a specific set of categories, provide a category access type:


        ```

        {
            "name": "Bulk Purchasers",
            "category_access": {
                "type": "specific",
                "categories": [7, 12, 20]
            }
        }

        ```



        To provide a 5% store-wide discount for customers in the group, use a
        discount rule of type all:


        ```

        {
            "name": "Student Discounts",
            "discount_rules": 
            [{
                "type": "all",
                "method": "percent",
                "amount": 5.00
            }]
        }

        ```
      tags:
        - Customer Groups
        - Customers
    delete:
      description: >-
        Deletes all customer groups in the store. **All existing customers are
        unassigned from the group when it is deleted.**
      summary: Delete All Customer Groups
      operationId: StoresV2CustomerGroupsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
  '/stores/{store_hash}/v2/customer_groups/{id}':
    get:
      description: Gets a customer group.
      summary: Get A Single Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the customer group
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
        - name: name
          in: query
          required: false
          type: string
          description: Name of the customer groups
        - name: is_default
          in: query
          required: false
          type: boolean
          description: If customers who signup are added to this group by default
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              id: 2
              name: 5% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    delete:
      description: >-
        Deletes a customer group. **All existing customers are unassigned from
        the group when it is deleted.**
      summary: Delete A Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the customer group.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              id: 2
              name: 25% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '25.0000'
      summary: Update A Customer Group
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: path
          name: id
          type: integer
          required: true
          description: Id of the customer group
        - in: header
          name: X-Auth-Client
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Token
          type: string
          required: true
          default: application/json
        - in: header
          name: Accepts
          type: string
          required: true
        - in: header
          name: Content-Type
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerGroup'
          x-examples:
            application/json:
              name: 25% off
              discount_rules:
                - type: all
                  method: percent
                  amount: '25.0000'
      description: >-
        The rules do not stack. 


        Any combination of fields can be updated at once. Discount rules are
        treated in bulk. The entire set of rules is overwritten when a request
        is sent.


        The following request will remove any existing rules, and apply the new
        ones:


        ```

        {
                "discount_rules": [
                    {
                        "type": "all",
                        "method": "percent",
                        "amount": 2.50
                    },
                    {
                        "type": "product",
                        "product_id": 33,
                        "method": "percent",
                        "amount": 5.00
                    },
                    {
                        "type": "category",
                        "category_id": 7,
                        "method": "price",
                        "amount": 12.00
                    }
                ]
        }

        ```
      tags:
        - Customer Groups
        - Customers
  '/stores/{store_hash}/v2/customer_groups/count':
    get:
      description: Gets a count of all customer groups in a store.
      summary: Get A Count of Customer Groups
      operationId: StoresV2CustomerGroupsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
definitions:
  BillingAddress:
    title: Billing Address
    type: object
    properties:
      first_name:
        description: ''
        example: Jane
        type: string
      last_name:
        description: ''
        example: Doe
        type: string
      company:
        description: ''
        type: string
      street_1:
        description: ''
        example: 123 Main Street
        type: string
      street_2:
        description: ''
        type: string
      city:
        description: ''
        example: Austin
        type: string
      state:
        description: ''
        example: TX
        type: string
      zip:
        description: ''
        example: '12345'
        type: string
      country:
        description: ''
        example: United States
        type: string
      country_iso2:
        description: ''
        example: US
        type: string
      phone:
        description: ''
        type: string
      email:
        description: ''
        example: janedoe@email.com
        type: string
      form_fields:
        description: ''
        type: array
        items:
          $ref: '#/definitions/FormFields'
  FormFields:
    title: Form Fields
    type: object
    properties:
      name:
        description: Name of the form field
        type: string
        example: License Id
      value:
        description: Value of the form field
        type: string
        example: 123BAF
  ShippingAddressesResource:
    title: Shipping Address Resource
    type: object
    properties:
      url:
        description: URL of the shipping address for api requests
        example: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
        type: string
      resource:
        description: ''
        example: /orders/129/shippingaddresses
        type: string
  Customer:
    title: Customers
    example:
      id: 1
      _authentication: {}
      company: BigCommerce
      first_name: Jane
      last_name: Doe
      email: janedoe@email.com
      phone: 1234567890
      date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
      date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
      store_credit: 0
      registration_ip_address: 12.345.678.910
      customer_group_id: 2
      notes: ''
      tax_exempt_category: ''
      accepts_marketing: true
      addresses:
        url: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
        resource: /customers/5/addresses
      form_fields:
        - name: ''
          value: ''
      reset_pass_on_login: false
    type: object
    properties:
      id:
        description: >-
          Unique numeric ID of this customer. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 1
        type: integer
      _authentication:
        description: >-
          Not returned in any responses, but accepts up to two fields allowing
          you to set the customer’s password. If a password is not supplied, it
          is generated automatically. For further information about using this
          object, please see the Customers resource documentation.
        type: object
        properties:
          force_reset:
            type: string
          password:
            type: string
          password_confirmation:
            type: string
      company:
        description: The name of the company for which the customer works.
        example: BigCommerce
        type: string
      first_name:
        type: string
        description: First name of the customer.
        example: Jane
      last_name:
        type: string
        description: Last name of the customer.
        example: Doe
      email:
        type: string
        description: Email address of the customer.
        example: janedoe@email.com
      phone:
        description: Phone number of the customer.
        example: 1234567890
        type: string
      date_created:
        description: >-
          Date on which the customer registered from the storefront or was
          created in the control panel. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: 'Thu, 11 Jan 2018 20:57:52 +0000'
        type: string
        format: date-time
      date_modified:
        description: >
          Date on which the customer updated their details in the storefront or
          was updated in the control panel. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 'Tue, 10 Apr 2018 18:59:05 +0000'
        type: string
        format: date-time
      store_credit:
        description: >-
          The amount of credit the customer has. (Float, Float as String,
          Integer)
        example: 0
        type: string
      registration_ip_address:
        description: The customer’s IP address when they signed up.
        example: 12.345.678.910
        type: string
      customer_group_id:
        description: The group to which the customer belongs.
        example: 2
        type: integer
      notes:
        description: Store-owner notes on the customer.
        type: string
      tax_exempt_category:
        description: >-
          Used to identify customers who fall into special sales-tax categories
          – in particular, those who are fully or partially exempt from paying
          sales tax. Can be blank, or can contain a single AvaTax code. (The
          codes are case-sensitive.) Stores that subscribe to BigCommerce’s
          Avalara Premium integration will use this code to determine
          how/whether to apply sales tax. Does not affect sales-tax calculations
          for stores that do not subscribe to Avalara Premium.
        type: string
      accepts_marketing:
        description: >
          Records whether the customer would like to receive marketing content
          from this store. READ-ONLY.This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: true
        type: boolean
      addresses:
        $ref: '#/definitions/AddressFieldResource'
      form_fields:
        description: >-
          Array of custom fields. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        type: array
        items:
          $ref: '#/definitions/FormFields'
      reset_pass_on_login:
        description: Force a password change on next login.
        example: false
        type: boolean
    required:
      - first_name
      - last_name
      - email
  AddressFieldResource:
    title: Address Field Resource
    type: object
    properties:
      url:
        description: Full URL of where the resource is located.
        example: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
        type: string
      resource:
        description: Resource being accessed.
        example: /customers/5/addresses
        type: string
  CustomerAddress:
    title: Customer Address
    example:
      id: 3
      customer_id: 5
      first_name: Jane
      last_name: Doe
      company: BigCommerce
      street_1: 123 Main Street
      street_2: ''
      city: Austin
      state: Texas
      zip: 78726
      country: United States
      country_iso2: US
      phone: 123-345-7890
      address_type: residental
    type: object
    properties:
      id:
        description: ID of this customer address. READ-ONLY
        example: 3
        type: integer
      customer_id:
        description: ID of the associated customer.
        example: 5
        type: integer
      first_name:
        type: string
        description: The customer’s first name.
        example: Jane
      last_name:
        type: string
        description: The customer’s last name.
        example: Doe
      company:
        description: The customer’s company name.
        example: BigCommerce
        type: string
      street_1:
        type: string
        description: 'The customer’s street address, line 1.'
        example: 123 Main Street
      street_2:
        description: 'The customer’s street address, line 2.'
        type: string
      city:
        type: string
        description: The customer’s city/town/suburb.
        example: Austin
      state:
        type: string
        description: >-
          The customer’s state/province. Do not abbreviate the state; spell out
          the entire word, e.g.: California. (Cannot be null. As a workaround
          for addresses that include no state/province string, pass a space as
          the “state” value.)
        example: Texas
      zip:
        type: string
        description: The customer’s ZIP or postal code.
        example: 78726
      country:
        type: string
        description: The customer’s country. Must be the full country name.
        example: United States
      country_iso2:
        description: 2-letter ISO Alpha-2 code for the customer’s country. READ-ONLY
        example: US
        type: string
      phone:
        type: string
        description: The customer’s phone number.
        example: 123-345-7890
      address_type:
        type: string
        enum:
          - residential
          - commercial
        example: residential
    required:
      - first_name
      - last_name
      - street_1
      - city
      - state
      - zip
      - country
      - phone
  CustomerGroup:
    title: Customer Group
    type: object
    properties:
      id:
        description: Id of the customer group
        example: 1
        type: integer
      name:
        description: Name of the group
        example: Wholesale
        type: string
      is_default:
        description: >-
          Determines whether new customers are assigned to this group by
          default.
        example: false
        type: boolean
      category_access:
        $ref: '#/definitions/CategoryAccess'
      discount_rules:
        description: >-
          A collection of discount rules that are automatically applied to
          customers who are members of the group
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: all
            method:
              type: string
              example: percent
            amount:
              type: string
              example: '"5.0000" (Float, Float as String, Integer)'
              description: A float that specifies the value applied to the price modified
  Country:
    title: Country
    example:
      id: 13
      country: Australia
      country_iso2: AU
      country_iso3: AUS
      states:
        url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
        resource: /countries/13/states
    type: object
    properties:
      id:
        description: Id of the country.
        example: 13
        type: integer
      country:
        description: Country name.
        example: Australia
        type: string
      country_iso2:
        description: 2-letter country code.
        example: AU
        type: string
      country_iso3:
        description: 3-letter country code.
        example: AUS
        type: string
      states:
        $ref: '#/definitions/States'
  States:
    title: States Resource
    type: object
    properties:
      url:
        description: ''
        example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
        type: string
      resource:
        description: ''
        example: /countries/13/states
        type: string
  State:
    title: State
    example:
      id: 208
      state: Australian Capital Territory
      state_abbreviation: ACT
      country_id: 13
    type: object
    properties:
      id:
        description: Numeric ID of the state/province.
        example: 208
        type: integer
      state:
        description: Name of the state/province.
        example: Australian Capital Territory
        type: string
      state_abbreviation:
        description: Abbreviation for the state/province.
        example: ACT
        type: string
      country_id:
        description: Numeric ID of the state’s/province’s associated country.
        example: 13
        type: integer
tags:
  - name: Customers
  - name: Customer Groups
  - name: Customer Addresses
  - name: Customer Passwords
securityDefinitions:
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
