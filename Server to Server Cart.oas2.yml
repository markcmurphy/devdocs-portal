swagger: '2.0'
info:
  title: Data Model for BigCommerce's v3 Server-to-Server Cart API
  version: v0.0.1
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v3'
consumes:
  - application/json
produces:
  - application/json
paths:
  /carts:
    post:
      description: Creates a cart and generates a cart ID.
      parameters:
        - name: cartData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CartCreateRequestData'
          x-examples:
            Simple Product:
              line_items:
                - quantity: 5
                  product_id: 191
            Create a Cart with a Variant: |-
              {
                  "line_items":[
                      {
                          "quantity": 2,
                          "product_id": 107,
                          "variant_id": 185
                      }
                  ]
              }
            With a Variant of Checkbox and Picklist: |-
              {
                "line_items": [
                  {
                    "quantity": 1,
                    "product_id": 77,
                    "option_selections": [
                      {
                        "option_id": 120,
                        "option_value": 69
                      },
                      {
                        "option_id": 121,
                        "option_value": 10
                      },

                      {
                        "option_id": 124,
                        "option_value": 106
                      },
                      {
                        "option_id": 122,
                        "option_value": "Hello"
                      },
                      {
                        "option_id": 123,
                        "option_value": 104
                      }

                    ]
                  }
                ]
              } 
          description: >-
            1. Creating a cart by adding a simple product (a product without
            option selections)

            2. Creating a cart with a variant. This works when a product can be
            specified purely by a variant, without any other required options.

            3. With a variant and a checkbox and picklist modifier added.


            For a full explanation of creating a Cart see [Creating
            Carts](http://).
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/line_items'
      tags:
        - Cart
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
          examples:
            application/json:
              data:
                id: bc218c65-7a32-4ab7-8082-68730c074d02
                customer_id: 0
                email: ''
                currency:
                  code: USD
                tax_included: false
                base_amount: 139.75
                discount_amount: 0
                cart_amount: 162.81
                coupons: []
                line_items:
                  physical_items:
                    - id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                      parent_id: null
                      variant_id: 362
                      product_id: 191
                      sku: ''
                      name: Openhouse No. 3
                      url: 'http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/'
                      quantity: 5
                      taxable: true
                      image_url: >-
                        https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      list_price: 27.95
                      sale_price: 27.95
                      extended_list_price: 139.75
                      extended_sale_price: 139.75
                      is_require_shipping: true
                      options:
                        - name: Add a $5 Donation
                          nameId: 82
                          value: 'No'
                          valueId: 186
                  digital_items: []
                  gift_certificates: []
                created_time: '2018-09-17T14:27:39+00:00'
                updated_time: '2018-09-17T14:27:39+00:00'
                redirect_urls:
                  cart_url: >-
                    https://store-id30h7ohwf.mybigcommerce.com/cart.php?action=load&id=bc218c65-7a32-4ab7-8082-68730c074d02&token=aa958e2b7922035bf3339215d95d145ebd9193deb36ae847caa780aa2e003e4b
                  checkout_url: >-
                    https://store-id30h7ohwf.mybigcommerce.com/cart.php?action=loadInCheckout&id=bc218c65-7a32-4ab7-8082-68730c074d02&token=aa958e2b7922035bf3339215d95d145ebd9193deb36ae847caa780aa2e003e4b
              meta: {}
      summary: Create a Cart
      security:
        - X-Auth-Client: []
        - X-Auth-Token: []
  '/carts/{cartId}/items':
    post:
      description: Adds line item(s) to the cart.
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
        - name: ItemData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CartRequestData'
      tags:
        - Cart
      responses:
        '201':
          description: Returns Cart Entity object.
          schema:
            $ref: '#/definitions/Cart'
  '/carts/{cartId}/redirect_urls':
    post:
      description: Creates a set of URLs to redirect the shopper to the BigCommerce store.
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
      tags:
        - Cart
      responses:
        '201':
          description: Returns the object that contains the `redirect_urls`.
          schema:
            type: object
            properties:
              cart_url:
                type: string
                format: url
              checkout_url:
                type: string
                format: url
  '/carts/{cartId}/items/{itemId}':
    put:
      description: 'Updates an existing, single line item in the cart.'
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
        - name: itemId
          in: path
          required: true
          type: string
          format: number
        - name: lineItem
          in: body
          required: true
          schema:
            $ref: '#/definitions/CartUpdateRequest'
      tags:
        - Cart
      responses:
        '200':
          description: Returns Cart Entity object.
          schema:
            $ref: '#/definitions/Cart'
    delete:
      description: Removes a line item from the cart.
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
        - name: itemId
          in: path
          required: true
          type: string
          format: number
      tags:
        - Cart
      responses:
        '200':
          description: Returns Cart Entity Object.
          schema:
            $ref: '#/definitions/Cart'
        '204':
          description: >-
            If the action's result is an empty cart, the cart gets automatically
            deleted.
  '/carts/{cartId}':
    get:
      description: Get a stores cart using the `cartId`.
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
          description: The identifier of a specific cart.
        - $ref: '#/parameters/line_items'
      tags:
        - Cart
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
          examples:
            application/json:
              data:
                id: bc218c65-7a32-4ab7-8082-68730c074d02
                customer_id: 0
                email: ''
                currency:
                  code: USD
                tax_included: false
                base_amount: 139.75
                discount_amount: 0
                cart_amount: 162.81
                coupons: []
                line_items:
                  physical_items:
                    - id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                      parent_id: null
                      variant_id: 362
                      product_id: 191
                      sku: ''
                      name: Openhouse No. 3
                      url: 'http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/'
                      quantity: 5
                      taxable: true
                      image_url: >-
                        https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      list_price: 27.95
                      sale_price: 27.95
                      extended_list_price: 139.75
                      extended_sale_price: 139.75
                      is_require_shipping: true
                  digital_items: []
                  gift_certificates: []
                created_time: '2018-09-17T14:27:39+00:00'
                updated_time: '2018-09-17T14:27:39+00:00'
              meta: {}
        '404':
          description: Cart not found.
      summary: Get a Cart
    put:
      description: Update a cart using the `cartId`. The `customer_id` can be updated.
      parameters:
        - name: cartId
          in: path
          required: true
          type: string
          format: UUID
        - name: CartUpdateData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CartUpdateRequestData'
          x-examples:
            application/json:
              customer_id: 5
      tags:
        - Cart
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
          examples:
            application/json:
              data:
                id: bc218c65-7a32-4ab7-8082-68730c074d02
                customer_id: 5
                email: ''
                currency:
                  code: USD
                tax_included: false
                base_amount: 139.75
                discount_amount: 0
                cart_amount: 162.81
                coupons: []
                line_items:
                  physical_items:
                    - id: 6e193ce6-f327-4dcc-b75e-72cf6738525e
                      parent_id: null
                      variant_id: 362
                      product_id: 191
                      sku: ''
                      name: Openhouse No. 3
                      url: 'http://id30h7ohwf.mybigcommerce.com/all/openhouse-no-3/'
                      quantity: 5
                      taxable: true
                      image_url: >-
                        https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2
                      discounts: []
                      coupons: []
                      discount_amount: 0
                      coupon_amount: 0
                      list_price: 27.95
                      sale_price: 27.95
                      extended_list_price: 139.75
                      extended_sale_price: 139.75
                      is_require_shipping: true
                  digital_items: []
                  gift_certificates: []
                created_time: '2018-09-17T14:27:39+00:00'
                updated_time: '2018-09-17T14:27:39+00:00'
              meta: {}
      summary: Update a Cart Customer Id.
    delete:
      description: Delete a stores cart using the `cartId`.
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          type: string
          format: UUID
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Cart
      responses:
        '204':
          description: ''
      summary: Delete a Cart
definitions:
  CartUpdateRequest:
    type: object
    properties:
      line_item:
        $ref: '#/definitions/LineItemRequestData'
      gift_certificate:
        $ref: '#/definitions/LineItemGiftCertificateRequestData'
  CartCreateRequestData:
    type: object
    properties:
      customer_id:
        type: integer
      line_items:
        type: array
        items:
          $ref: '#/definitions/LineItemRequestData'
      gift_certificates:
        type: array
        items:
          $ref: '#/definitions/LineItemGiftCertificateRequestData'
  CartRequestData:
    type: object
    properties:
      line_items:
        type: array
        items:
          $ref: '#/definitions/LineItemRequestData'
      gift_certificates:
        type: array
        items:
          $ref: '#/definitions/LineItemGiftCertificateRequestData'
  CartUpdateRequestData:
    type: object
    properties:
      customer_id:
        type: integer
  LineItemRequestData:
    type: object
    required:
      - quantity
    properties:
      quantity:
        type: number
      product_id:
        type: number
      variant_id:
        type: number
      list_price:
        type: number
      option_selections:
        type: array
        items:
          $ref: '#/definitions/ProductOptionSelection'
  ProductOptionSelection:
    type: object
    properties:
      option_id:
        type: number
      option_value:
        type: string
  LineItemGiftCertificateRequestData:
    type: object
    required:
      - sender
      - recipient
      - amount
      - theme
      - name
      - quantity
    properties:
      name:
        type: string
        description: Given name for gift certificate line item.
      theme:
        type: string
        description: >-
          Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`,
          `General`, and `Girl`.
      amount:
        type: number
        minimum: 1
        maximum: 1000
      quantity:
        type: integer
        minimum: 1
      sender:
        $ref: '#/definitions/ContactEntity'
      recipient:
        $ref: '#/definitions/ContactEntity'
      message:
        type: string
        maximum: 200
        description: 'Message shown to recipient, as provided by sender.'
  Cart:
    description: >-
      A cart contains a collection of items, prices, discounts, etc.. It does
      not contain customer-related data.
    type: object
    properties:
      id:
        description: 'Cart ID, provided after creating a cart with a POST.'
        type: string
        format: UUID
      parent_id:
        type: string
        description: Bundled items will have their parent's item Id.
      customer_id:
        description: ID of the customer to which the cart belongs.
        type: integer
      email:
        description: >-
          The cart's email. This is the same email that is used in the billing
          address
        type: string
      currency:
        $ref: '#/definitions/Currency'
      tax_included:
        type: boolean
      base_amount:
        type: number
        description: 'Cost of cart''s contents, before applying discounts.'
      discount_amount:
        type: number
        description: Discounted amount.
      cart_amount:
        type: number
        description: >-
          Sum of line-items amounts, minus cart-level discounts and coupons.
          This amount includes taxes (where applicable).
      coupons:
        type: array
        items:
          $ref: '#/definitions/AppliedCoupon'
      discounts:
        type: array
        items:
          $ref: '#/definitions/AppliedDiscount'
      line_items:
        type: array
        items:
          $ref: '#/definitions/LineItem'
      created_time:
        type: string
        format: ISO-8601
        description: Time when the cart was created.
      updated_time:
        type: string
        format: ISO-8601
        description: Time when the cart was last updated.
  Currency:
    type: object
    description: This will always be the same between cart and checkout.
    properties:
      code:
        type: string
        format: ISO-4217
        description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
  LineItem:
    type: object
    required:
      - physical_items
      - digital_items
      - gift_certificates
    properties:
      physical_items:
        type: array
        items:
          $ref: '#/definitions/ItemPhysical'
      digital_items:
        type: array
        items:
          $ref: '#/definitions/ItemDigital'
      gift_certificates:
        type: array
        items:
          $ref: '#/definitions/ItemGiftCertificate'
  ItemGiftCertificate:
    type: object
    required:
      - sender
      - recipient
      - amount
      - theme
    properties:
      id:
        type: string
      name:
        type: string
        description: GiftCertificate-provided name that will appear in the control panel.
      theme:
        type: string
        description: >-
          Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`,
          `General`, and `Girl`.
      amount:
        type: number
        description: >-
          Value must be between 1.00 and 1,000.00 in the store's default
          currency.
      is_taxable:
        type: boolean
      sender:
        $ref: '#/definitions/ContactEntity'
      recipient:
        $ref: '#/definitions/ContactEntity'
      message:
        type: string
        description: Limited to 200 characters.
  ContactEntity:
    properties:
      name:
        type: string
      email:
        type: string
        format: email
  ItemDigital:
    allOf:
      - $ref: '#/definitions/BaseItem'
      - type: object
        properties:
          download_file_urls:
            description: URLs to download all product files.
            type: array
            items:
              type: string
              format: url
          download_page_url:
            description: The URL for the combined downloads page.
            type: string
            format: url
          download_size:
            description: 'Combined download size, in human-readable style. E.g.: `30MB`.'
            type: string
  ItemPhysical:
    allOf:
      - $ref: '#/definitions/BaseItem'
      - type: object
        properties:
          is_require_shipping:
            type: boolean
          gift_wrapping:
            $ref: '#/definitions/GiftWrapping'
  BaseItem:
    type: object
    required:
      - quantity
    properties:
      id:
        type: string
        description: The line-item ID.
      variant_id:
        type: number
      product_id:
        type: number
      sku:
        type: string
      name:
        type: string
        description: The item's product name.
      url:
        description: The product URL.
        type: string
        format: uri
      quantity:
        type: number
      is_taxable:
        type: boolean
      image_url:
        type: string
        format: uri
      discounts:
        type: array
        items:
          $ref: '#/definitions/AppliedDiscount'
      coupons:
        type: array
        items:
          $ref: '#/definitions/AppliedCoupon'
      discount_amount:
        type: number
        description: The total value of all discounts applied to this item.
      coupon_amount:
        type: number
        description: The total value of all coupons applied to this item.
      list_price:
        type: number
        description: 'Item''s list price, as quoted by the manufacturer/distributor.'
      sale_price:
        type: number
        description: >-
          Item's price after all discounts are applied. (The final price before
          tax calculation.)
      extended_list_price:
        type: number
        description: Item's list price multiplied by the quantity.
      extended_sale_price:
        type: number
        description: Item's sale price multiplied by the quantity.
      options:
        description: The list of selected options for this product.
        type: array
        items:
          $ref: '#/definitions/ProductOption'
  ProductOption:
    type: object
    properties:
      name:
        type: string
        description: 'The product option name. For example, Color or Size'
      name_id:
        type: number
        description: The product option identifier.
      value:
        type: string
        description: 'The product option value. For example, Red or Medium'
      value_id:
        type: number
        description: The product option value identifier.
  AppliedCoupon:
    type: object
    required:
      - code
    properties:
      id:
        type: string
        description: The coupon ID.
      code:
        type: string
      name:
        type: string
        description: 'The coupon name, as specified by the merchant.'
      slug:
        type: string
        description: Automatically-generated description for the discount.
      coupon_type:
        type: string
        description: Key name to identify the type of coupon.
      discounted_amount:
        type: number
        description: The discounted amount applied within a given context.
  AppliedDiscount:
    type: object
    properties:
      id:
        type: number
        description: ID of the applied discount.
      discounted_amount:
        type: number
        description: The discounted amount applied within a given context.
  GiftWrapping:
    properties:
      name:
        type: string
      message:
        type: string
      amount:
        type: number
        format: float
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
parameters:
  Accept:
    in: header
    type: string
    default: application/json
    name: Accept
  Content-Type:
    name: Content-Type
    in: header
    type: string
    default: application/json
  line_items:
    name: include
    in: query
    type: string
    description: >-
      * `redirect_urls`: Create a direct link to a Cart. This can be used during
      the /POST request for Carts.

      * `line_items.physical_items.options`: The Cart returns an abbreviated
      result. Use this to return physical items product options. Can also be
      used in a /POST to have the extended Cart object return.

      * `line_items.digital_items.options`: The Cart returns an abbreviated
      result. Use this to return digital items product options.  Can also be
      used in a /POST to have the extended Cart object return.
    enum:
      - redirect_urls
      - line_items.physical_items.options
      - line_items.digital_items.options
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
