{
  "title": "Dev Center",
  "header": {
    "nav": {
      "left": [
        {
          "title": "API Docs",
          "path": "/api-docs"
        },
        {
          "title": "Stencil Docs",
          "path": "/stencil-docs"
        },
        {
          "title": "Tools & Resources",
          "path": "/tools-resources"
        },
        {
          "title": "Changelog",
          "path": "/changelog"
        }
      ],
      "right": [
        {
          "title": "My Apps",
          "path": "https://devtools.bigcommerce.com"
        },
        {
          "title": "Create Account",
          "path": "https://login.bigcommerce.com/signup"
        }
      ]
    }
  },
  "pages": {
    "/": {
      "title": "Developer Documentation",
      "data": {
        "$ref": "./Home.html"
      }
    },
    "/stencil-docs": {
      "title": "Stencil Docs",
      "data": {
        "children": [
{
            "title": "Getting Started",
            "route": {
              "path": "/getting-started"
            },
            "data": {
              "children": [
                {
                  "title": "About Stencil",
                  "route": {
                    "path": "/about-stencil"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>About Stencil</h1>"
                      },
                      {
                        "type": "html",
                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#what-is-stencil\"> What is Stencil?</a></li>\n\t\t<li><a href=\"#features-and-stack\"> Stencil Development Features and Technology Stack</a></li>\n\t\t<li><a href=\"#key-components\">Key Components (Video Demo)</a></li>\n\t\t<li><a href=\"#blueprint\"> Blueprint (Legacy Framework) Documentation </a></li>\n\t</ul>\n</div>\n"
                      },
                      {
                        "type": "text",
                        "data": "## What is Stencil?\n\nStencil is the theming engine for the BigCommerce platform and for BigCommerce's Cornerstone theme, which is the foundation a developer needs to quickly start developing premium, custom themes with Stencil. \n\n[Cornerstone](https://github.com/bigcommerce/cornerstone) is available on Github as an open source software, and will be the Stencil engined theme we reference in this documentation in order to demonstrate Stencil's capabilities in a fully functioning storefront theme. Here is a demo of the [BigCommerce Cornerstone theme](http://cornerstone-light-demo.mybigcommerce.com/).\n\nStencil also provides features that allow merchants to customize a storefront's look and feel with no coding, making Stencil a powerful and useful engine for all audiences.",
                        "header": {
                          "anchor": "what-is-stencil"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Stencil Development Features and Technology Stack\n\nStencil's provides the following features, allowing BigCommerce theme developers to create beautiful, dynamic, and powerful storefronts.\n\n\n### Stencil Command Line Interface (Stencil CLI)\n\nThe Stencil CLI enables developers to locally develop and customize on any Stencil theme with no impact on a merchant's live storefront during the development process. When locally developing, you will have access to real-time Browsersync preview and testing across desktop, mobile, and tablet devices/viewports.\n\nStencil CLI runs on the Node.js runtime environment. Installing Node.js also provides the required npm package manager.\n\n### Logic-Based Templates\n\nStencil's logic based templates allow BigCommerce developers to customize storefront pages efficiently with the lightweight templating languge, Handlebars.js.  Handlebars allows you to efficiently embed dynamic and conditional logic onto your storefront pages.\n\n### Sass/SCSS Support\n\nStencils Sass and SCSS support allows developers to nest properties, variables, and mixins. Use the familiar Foundation framework (provided) or substitute your choice of framework.\n\nStencil's Cornerstone base theme uses a BigCommerce pattern library called Citadel, which is built on top of the ZURB Foundation framework, version 5.5.3. Stencil does not support Foundation 6.x, due to breaking changes introduced between versions 5.x and 6.x.\n\nFoundation offers the framework for creating a responsive theme. You have the option of swapping out Foundation for another framework, although doing so would require significant work.\n\nFoundation assets bundled with Cornerstone are located in these subdirectories: \n\n* `Cornerstone/assets/scss/settings/foundation/ `\n* `Cornerstone/assets/scss/components/foundation/`\n\nCitadel extends Foundation’s mixins and components to provide Stencil’s own mixins, extensible components, and utilities. These include drop-down lists, forms, and similar resources. Citadel resources are named according to BEM and SUIT CSS conventions. Classes are named functionally, rather than based on visual presentation or content. Our style guide is published here.\nCitadel assets bundled with Cornerstone are located in these Cornerstone subdirectories: \n\n* `Cornerstone/assets/scss/settings/citadel/`\n* `Cornerstone/assets/scss/components/citadel/`\n\nMore detailed information about the Citadel and Foundation SCSS components, and their naming conventions will be covered in *Components and Design Patterns*.\n\n### Page-specific Resource Definition\n\nSpecify the dynamic content you want to be displayed on your storefront pages with YAML formatted front matter.\n\n### Javascript Event Hooks\n\nYour Stencil themes can access remote objects through event hooks, using the hooks to trigger defined events based on shopper behavior. This will allow you to collect product data and optimize a shopper's experience.\n\nTo facilitate theme-building, BigCommerce provides the stencil-utils client-side JavaScript library for managing event hooks.\n\n---\n\n## Stencil Theme Editor\n\nThe Stencil Theme Editor is a browser-based tool that enables merchants to rapidly customize a theme's look and feel with no coding. \n\nBigCommerce theme developers' configuration choices determine which theme aspects merchants can customize, and the range of choices for each aspect.\n\nStencil's Theme Editor graphical interface enables merchants and store administrators to make styling changes to the theme currently applied to their storefront. \n\nAs a theme developer, you have the capability to define which style settings appear in the Stencil Theme Editor. You can grant access to colors, fonts, display/hiding of page features, and number of products/entries to display per feature.\n\n### Stencil Theme Variations\n\nEach Stencil theme can contain one to four variations. You can optimize individual variations for specific markets, audiences and styles – while still managing and distributing all of these variations as one theme.\nCornerstone comes with 3 variations: Cornerstone Light, Cornerstone Warm, and Cornerstone Bold.\n\n### Responsive, Mobile-Friendly Themes\n\nBigCommerce stores powered by Stencil allow shoppers to have a first class experience across any device.\n\n\n_Note that this is simply a summary Stencil's core features. Continue reading through the Stencil Developer Documentation to learn about Stencil's full capabilities._",
                        "header": {
                          "anchor": "features-and-stack"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Key Components (Video Demo)\n\nWatch Stencil senior developer's tour of Stencil's key components:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/p5SR8N0SeCg\" frameborder=\"0\" allowfullscreen></iframe>",
                        "header": {
                          "anchor": "video-demo"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Blueprint (Legacy Framework) Documentation\n\nIf you are looking for information on Blueprint, BigCommerce's legacy theme framework, you can access that below:\n\n* [Themes (Blueprint)](https://developer.bigcommerce.com/themes)\n* [Stores API reference](https://developer.bigcommerce.com/api)",
                        "header": {
                          "anchor": "blueprint"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Transitioning to Stencil",
                  "route": {
                    "path": "/transitionining-to-stencil"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Transitioning to Stencil</h1>"
                      },
                      {
                        "type": "html",
                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#choosing-dev-path\"> Choosing a Development Path</a></li>\n\t\t<li><a href=\"#front-matter-quick-start\">Front-Matter Quick Start</a></li>\n    <li><a href=\"#front-matter-quick-start\">Handlebars Quick Start</a></li>\n\t\t<li><a href=\"#seo-tips\">SEO Tips and Best Practices</a></li>\n\t\t<li><a href=\"#blueprint-to-stencil\">Blueprint to Stencil Features Map</a></li>\n    <li><a href=\"#interacting-with-api\">Interacting with the BigCommerce API</a></li>\n    <li><a href=\"#partnering-with-bc\">Partnering with BigCommerce</a></li>\n    <li><a href=\"#next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## Choosing a Development Path\n\nAre you approaching Stencil from a different theming framework, like Blueprint, BigCommerce's legacy framework? Or moving to the Stencil templating environment from a pure HTML and CSS-based design?\n\nYou have four (non-mutually exclusive) options for developing Stencil themes:\n\n* Find a Design & Solutions Partner\n* Light Customization using the Theme Editor\n* Light Customization using HTML and CSS\n* Adapting a Stencil Theme or Developing from Scratch\n\n###  Find a Design & Solutions Partner\n\nIf you prefer to have an expert collaborator customize your theme, we recommend working with one of our certified BigCommerce Design & Solutions Partners. Reference the following resources to do so:\n\n* [Partner Directory](https://partners.bigcommerce.com/directory/search?i=75)\n* [Working with a Design Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner) (Support Guide)\n\n### Light Customization with Stencil Theme Editor\n\nStencil can be customized without the use of any specialized development tools or techniques by using of the Stencil Theme Editor. The Stencil Theme Editor still enables customization of a theme's colors, typography, banners, headings, carousel, and footer. It also enables customization of broader layout characteristics, such as the number of products displayed in various panels, category pages, and brand pages.\n\nFor details, please see:\n\n* [Theme Editor](https://support.bigcommerce.com/articles/Public/Using-the-Stencil-Theme-Editor/) (Support article)\n* [Stencil and the BigCommerce Control Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2) (Video introduction to Theme Editor)\n* [Changing Your Store's Theme](https://support.bigcommerce.com/articles/Learning/What-to-Consider-When-Changing-Your-Theme) (Support guide)\n* [Personalizing Your Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme) (Support guide)\n\n### Light Customization with HTML and CSS\n\nIf you are most comfortable working in HTML and CSS, Stencil's *Edit Theme Files* feature allows you to directly edit most of your theme's files from the Control Panel. For details, please see:\n\n* [Editing Stencil Theme Files](https://support.bigcommerce.com/articles/Public/Editing-Stencil-Theme-Files) (Support article)\n* [Getting Started with the Stencil Framework](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Video overview of copying and editing a theme's files)\n\n### Adapt a Stencil Theme, or Develop from Scratch\n\nFor complete control over a theme's appearance and logic – including the ability to edit _all_ theme configuration files – you will want to use the Stencil Command-line interface, also known as the Stencil CLI.\n\nTo learn Stencil CLI's templating conventions, see Installing Stencil CLI. Also take a look at BigCommerce's [Getting Started with the Stencil Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) video playlist.",
                        "header": {
                          "anchor": "choosing-dev-path"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Front-Matter Quick Start\n\nStencil templates start with a section of \"front matter\" where you can and concisely customize each page's design and layout details. \n\nThis front-matter section uses conventions from YAML, a simple, widely used markup language. If you haven't used these conventions before, refer to our [Front-Matter Overview](https://stencil.bigcommerce.com/docs/using-yaml-front-matter).",
                        "header": {
                          "anchor": "front-matter-quick-start"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Handlebars Quick Start\n\nStencil uses Handlebars.js to assemble dynamic content into the storefront pages that are displayed to shoppers. The dynamic content can be drawn from a few sources, like the store's catalog.\n\nHandlebars' syntax is quite simple, and it allows you to accomplish powerful JavaScript operations with minimal JavaScript code. To learn more about Handlebars.js, see these third-party tutorials: \n\n* [Learn Handlebars in 10 Minutes or Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/)\n* [A Beginner’s Guide to Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/)\n* [Getting Started with Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js)\n* [Handlebars interactive tutorial](http://tryhandlebarsjs.com/)",
                        "header": {
                          "anchor": "handlebars-quick-start"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## SEO Tips and Best Practices\n\nSearch-engine optimization (SEO) helps translate an elegant theme into a successful, high-conversion storefront. Because so many shoppers reach online stores through a search engine, a search-optimized site will be more visible – attracting more traffic. \n\nThe Stencil framework is [designed for high SEO performance](https://www.bigcommerce.com/improve-organic-traffic/). However, you will want to keep SEO in mind as you build out each theme and storefront. For guidelines, please see these BigCommerce support articles (which are a series of intermediate to advanced chapters in our Guide to SEO):\n\n* [SEO Do's and Don'ts](https://support.bigcommerce.com/articles/Learning/Things-to-Know/)\n* [Developing a Keyword Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/)\n* [SEO Success Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/)\n* [Advanced SEO on BigCommerce](https://support.bigcommerce.com/articles/Learning/Advanced-SEO-on-Bigcommerce/)\n\nAlso checkout our [Guide to Keyword Research](https://support.bigcommerce.com/articles/Learning/Value-of-Keywords/).",
                        "header": {
                          "anchor": "seo-tips"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Blueprint-to-Stencil Features Map \n\nThis following resources are designed to help you identify the Stencil counterparts to familiar Blueprint components.\n\n* What to Consider When Changing Your Theme (Support article)\n* Stencil and the BigCommerce Control Panel (Video tour of Blueprint-to-Stencil  changes in the BigCommerce control panel)",
                        "header": {
                          "anchor": "blueprint-to-stencil"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Interacting with the BigCommerce API\n\nInteracting with the BigCommerce API\nBigCommerce's growing API resources enable application developers to create private scripts or apps that support a single store, or to create public apps offered to multiple stores via BigCommerce's App Marketplace.\n\nAs a theme developer, you can rely on apps to enhance your themes' capabilities, and to extend or complement the storefront features built into the BigCommerce platform. Popular app areas include inventory management, email marketing, coupons, reviews, shipping, tax accounting, and security. For more information, see BigCommerce's:\n\n* App Marketplace\n* API documentation",
                        "header": {
                          "anchor": "interacting-with-api"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Partnering with BigCommerce\n\nDo we belong together? No formal business relationship is required to develop themes on the BigCommerce platform. However, consider applying to become a BigCommerce Design & Solutions Partner (DSP), in order to accelerate your development of new business and revenue. For details, see our:\n\n* Overview of BigCommerce Partnerships\n* Design & Solutions Partners – basics and application links\n* Technology Partners – basics and application links\n* Partnership Application",
                        "header": {
                          "anchor": "partnering-with-bc"
                        }
                      },
                      {
                        "type": "text",
                        "data": "## Next Steps\n\nProceed to: \n\n* Installation and Launch instructions\n* Development Quick Start tutorial\n* Front-matter overview of YAML conventions\n* Front-matter attributes reference\n* Handlebars overview",
                        "header": {
                          "anchor": "next-steps"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Supported Browsers",
                  "route": {
                    "path": "/supported-browsers"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Supported Browsers</h1>"
                      },
                      {
                        "type": "html",
                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Supported Desktop and Mobile Browsers</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## Supported Desktop and Mobile Browsers\n\nThe following browsers are supported for BigCommerce storefronts that use Stencil-based themes. \n\nThe browsers are sorted by popularity, beginning with the most popular browsers. Please ensure that your theme functions properly with all supported browsers.\n\n### Desktop Browsers\n\n* Google Chrome (latest edition)\n* Firefox (latest edition)\n* Internet Explorer 10 and 11\n* Safari (latest edition)\n* Microsoft Edge (latest edition)\n\n### Mobile Browsers \n\n* Android Chrome browser (latest edition)\n* iOS Safari browser (latest edition)",
                        "header": {
                          "anchor": "desktop-and-mobile"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "warning",
                          "body": "Browser support will cease to be offered if browser usage falls below 2%.",
                          "title": "Usage Support"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Installing and Launching Stencil",
                  "route": {
                    "path": "/installation-and-launch"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Mac OS Prerequisites",
                        "route": {
                          "path": "/mac-os-prerequisites"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Mac OS Prerequisites</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"mac_xcode\">Installing Xcode</a></li>\n    <li><a href=\"mac_nodejs\">Installing Node.js</a></li>\n    <li><a href=\"mac_troubleshooting\">Troubleshooting</a></li>\n    <li><a href=\"mac_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Platform Support",
                                "body": "These instructions have been tested on Mac OS X Yosemite. Dependencies for other platforms will be added upon further testing."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Node.js \n\nStencil requires the <a href=\"https://nodejs.org/\">Node.js</a> runtime environment, version <a href=\"https://nodejs.org/en/blog/release/\">6.x or later</a>. We have tested Stencil on selected Node.js versions, from <a href=\"https://nodejs.org/en/blog/release/v6.10.3/\">6.10.3</a> to <a href=\"https://nodejs.org/en/blog/release/v7.9.0/\">7.9.0</a>. \n\nWe recommend that you install or update Node.js using <a href=\"https://github.com/creationix/nvm#installation\">nvm</a>. First install nvm, version <a href=\"https://github.com/creationix/nvm/tree/v0.31.0\">0.31.0</a>, as follows:\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\nNext, explicitly install a supported Node.js version, using this convention:<br>\n\n```\nnvm install 6.4.0\n```"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Notes on Dependencies",
                                "body": "You can choose to instead download the latest x.x version of Node.js from the Node.js Foundation's archives, using URLs of the form: https://nodejs.org/dist/latest-v6.x/, https://nodejs.org/dist/latest-v7.x/, etc. We recommend installing only LTS (\"Long-Term Support\"/\"Mature and Dependable\") versions."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n\nIf you run into any problems with Stencil installation or launch, first consult Troubleshooting Your Setup. \n\nIf that does not resolve your issue, consult our [Support resources](), which include community and peer support via BigCommerce and Stack Overflow forums.\n\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "body": "While alternate versions might also support Stencil, BigCommerce does not offer technical assistance on, substitutions for, or customized versions of, the tested dependencies listed here.",
                                "title": "Customization Support"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nNow that you've completed the installation for Xcode and Node.js, proceed to [Installing Stencil]()."
                            }
                          ]
                        }
                      },
                      {
                        "title": "Linux Prerequisities",
                        "route": {
                          "path": "/linux-prerequisites"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Linux Prerequisites</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#linux_root\">Root Permissions</a></li>\n     <li><a href=\"#linux_git-client\">Git Client</a></li>\n     <li><a href=\"#linux_node.js\">Node.js</a></li>\n      <li><a href=\"#linux_node.js\">Troubleshooting</a></li>\n     <li><a href=\"#linux_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Platform Support",
                                "body": "These instructions have been tested on Linux/Ubuntu v.14.04.4. Dependencies for other platforms will be added upon further testing."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Root Permissions\n\nYou should have administrator/root permissions on your machine. (If not, you may need to precede some of the below commands with the `sudo` prefix.)",
                              "header": {
                                "anchor": "linux_root"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Git Client\n\nYou must have a [Git client]() installed.",
                              "header": {
                                "anchor": "linux_git-client"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Node.js\n\nStencil requires the Node.js runtime environment, version 6.x or later. We have tested Stencil on selected Node.js versions, from 6.10.3 to 7.9.0.\n\nWe recommend that you install or update Node.js using nvm. First install nvm, version 0.31.0, as follows:\n\n`curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash`\n\nNext, explicitly install a supported Node.js version, using this convention:\n\n`nvm install 6.4.0`",
                              "header": {
                                "anchor": "linux_node"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n\nIf you run into any problems with Stencil installation or launch, please first see our Troubleshooting Your Setup page. Next, please consult our Support resources, which include community/peer support via BigCommerce and Stack Overflow forums.",
                              "header": {
                                "anchor": "linux_troubleshooting"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nNow that you've completed the steps outlined in this article, proceed to [Installing Stencil CLI]().",
                              "header": {
                                "anchor": "linux_next-steps"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Windows Prerequisites ",
                        "route": {
                          "path": "/windows-prerequisites"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Windows Prerequisites</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n     <li><a href=\"#windows_root-permissions\">Root Permissions</a></li>\n     <li><a href=\"#windows_git-client\">Git Client and Git BASH</a></li>\n     <li><a href=\"#windows_python-installation\">Python Installation</a></li>\n     <li><a href=\"#windows_python-node-config\">Python/Node Configuration</a></li>\n     <li><a href=\"#windows_node-installation\">Node.js Installation</a></li>\n     <li><a href=\"#windows_compiler-options\">C++ Compiler Options</a></li>\n     <li><a href=\"#windows_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "The following instructions have been tested on Windows 8. Dependencies for other platforms will be added upon further testing.",
                                "title": "Platform Support"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Root Permissions\n\nYou must have authorization to run Powershell \"as administrator\" on your machine.",
                              "header": {
                                "anchor": "windows_root"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Git Client and Git BASH\n\nYou must have a Git client installed. The Git for Windows distribution includes a Git client, and also provides the Git BASH emulator for command-line access. All commands should be run in Git Bash from here.",
                              "header": {
                                "anchor": "windows_git-client-and-bash"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Python Installation\n\nInstall Python 2.7.x for Windows. (This is required for Visual Studio's Windows Build Tools, installed below.\nPython 3.x is not supported.)\n\nIn the installer dialog shown below, change the bottom default, so as to enable the Add python.exe to Path option. This provides global command-line access to Python.",
                              "header": {
                                "anchor": "windows_python-installation"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1537369644912",
                              "config": {
                                "maxWidth": "500",
                                "maxHeight": "500",
                                "centered": true
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Node.js Installation\n\nStencil requires the Node.js runtime environment, version 6.x or later.\n\nOn Windows, we have tested Stencil CLI on selected Node.js version href=\"https://nodejs.org/en/blog/release/v7.10.0/\"7.10.0. We recommend that you install only an LTS (\"Long-Term Support\"/\"Mature and Dependable\") version, and that you download that version's .msi installer (not its .exe binary).\n\nTo verify your Node.js installation or reinstallation, this [blog post](http://blog.teamtreehouse.com/install-node-js-npm-windows) provides Windows-specific tips and tests.",
                              "header": {
                                "anchor": "windows_node"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "title": "Restart Required",
                                "body": "You will need to restart your computer to complete Node.js installation."
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1537370001235",
                              "config": {
                                "maxWidth": "500",
                                "maxHeight": "500",
                                "centered": true
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "You can choose to instead download the latest x.x version of Node.js from the Node.js Foundation's archives, using URLs of the form: https://nodejs.org/dist/latest-v8.x/, https://nodejs.org/dist/latest-v8.x/, etc. In all cases, we recommend installing only LTS (\"Long-Term Support\"/\"Mature and Dependable\") versions. However, please see the restriction on technical assistance in the Notes on Dependencies below.",
                                "title": "Notes on Dependencies"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Python and Node Configuration\n\nAfter installing both Python and Node.js, configure Python within the Node.js runtime environment by running this npm command:\n\n`npm config set python python2.7`",
                              "header": {
                                "anchor": "windows_python-node-config"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "\nThe npm package manager was installed as part of Node.js. As you proceed through Stencil CLI setup (and later refreshes), you will use this command-line utility to install packages/modules, and to configure and manage dependencies and their versions.\n",
                                "title": "About npm (Node Package Manager)"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## C++ Installation\n\n### Turbo C++\n\n### Visual Studio",
                              "header": {
                                "anchor": "windows_c++-installation"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Visual Studio Version and Node Configuration\n\nFinally, configure Visual Studio within the Node.js runtime environment by running the following npm command.\n(Replace the `2015` parameter with `2013` or `2017`, as needed, to match the Visual Studio release you have installed)\n\n`npm config set msvs_version 2015`\n\n",
                              "header": {
                                "anchor": "windows_visual-studio"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting",
                              "header": {
                                "anchor": "windows_troubleshooting"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nNow that you've completed the steps outlined in this article, proceed to [Installing Stencil CLI]().",
                              "header": {
                                "anchor": "windows_next-steps"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Installing Stencil",
                        "route": {
                          "path": "/installing-stencil"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Installing Stencil</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#installing_prerequisites\">Prerequisites by OS</a></li>\n    <li><a href=\"#installing_installing-the-cli\">Installing the Stencil Command Line Interface (CLI)</a></li>\n    <li><a href=\"#installing_video-demo\">Cloning The Cornerstone Theme Using Github</a></li>\n    <li><a href=\"#installing_video-demo\">Installing Stencil's Javascript Utilities</a></li>\n    <li><a href=\"#installing_video-demo\">Video Demo</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "tabs",
                              "data": {
                                "children": [
                                  {
                                    "title": " Mac OS Prerequisites",
                                    "blocks": [
                                      {
                                        "type": "html",
                                        "data": "<h1>Mac OS Prerequisites</h1>"
                                      },
                                      {
                                        "type": "html",
                                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Tab</h3>\n\t<ul>\n    <li><a href=\"mac_xcode\">Installing Xcode</a></li>\n    <li><a href=\"mac_nodejs\">Installing Node.js</a></li>\n    <li><a href=\"mac_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>\n"
                                      },
                                      {
                                        "type": "callout",
                                        "data": {
                                          "body": "These instructions have been tested on Mac OS X Yosemite. Dependencies for other platforms will be added upon further testing.",
                                          "title": "Platform Support"
                                        }
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Installing Xcode \n\nYou must install the Xcode development tools (latest stable version)."
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Node.js \n\nStencil requires the <a href=\"https://nodejs.org/\">Node.js</a> runtime environment, version <a href=\"https://nodejs.org/en/blog/release/\">6.x or later</a>. We have tested Stencil on selected Node.js versions, from <a href=\"https://nodejs.org/en/blog/release/v6.10.3/\">6.10.3</a> to <a href=\"https://nodejs.org/en/blog/release/v7.9.0/\">7.9.0</a>. \n\nWe recommend that you install or update Node.js using <a href=\"https://github.com/creationix/nvm#installation\">nvm</a>. First install nvm, version <a href=\"https://github.com/creationix/nvm/tree/v0.31.0\">0.31.0</a>, as follows:\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash\n```\n\nNext, explicitly install a supported Node.js version, using this convention:<br>\n\n```\nnvm install 6.4.0\n```"
                                      },
                                      {
                                        "type": "callout",
                                        "data": {
                                          "body": "You can choose to instead download the latest x.x version of Node.js from the Node.js Foundation's archives, using URLs of the form: https://nodejs.org/dist/latest-v6.x/, https://nodejs.org/dist/latest-v7.x/, etc. We recommend installing only LTS (\"Long-Term Support\"/\"Mature and Dependable\") versions.",
                                          "title": "Notes on Dependencies"
                                        }
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Troubleshooting\n\nIf you run into any problems with Stencil installation or launch, first consult [Troubleshooting Your Setup](). \n\nIf that does not resolve your issue, consult our [Support resources](), which include community and peer support via BigCommerce and Stack Overflow forums.\n"
                                      }
                                    ]
                                  },
                                  {
                                    "title": "Linux Prerequisites",
                                    "blocks": [
                                      {
                                        "type": "html",
                                        "data": "<h1>Linux Prerequisites</h1>"
                                      },
                                      {
                                        "type": "html",
                                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Tab</h3>\n\t<ul>\n    <li><a href=\"#linux_root\">Root Permissions</a></li>\n     <li><a href=\"#linux_git-client\">Git Client</a></li>\n     <li><a href=\"#linux_node.js\">Node.js</a></li>\n      <li><a href=\"#linux_node.js\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                                      },
                                      {
                                        "type": "callout",
                                        "data": {
                                          "body": "These instructions have been tested on Linux/Ubuntu v.14.04.4. Dependencies for other platforms will be added upon further testing",
                                          "title": "Platform Support"
                                        }
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Root Permissions\n\nYou should have administrator/root permissions on your machine. (If not, you may need to precede some of the below commands with the `sudo` prefix.)"
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Git Client\n\nYou must have a [Git client]() installed."
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Node.js\n\nStencil requires the Node.js runtime environment, version 6.x or later. We have tested Stencil on selected Node.js versions, from 6.10.3 to 7.9.0.\n\nWe recommend that you install or update Node.js using nvm. First install nvm, version 0.31.0, as follows:\n\n`curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | bash`\n\nNext, explicitly install a supported Node.js version, using this convention:\n\n`nvm install 6.4.0`"
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Troubleshooting\n\nIf you run into any problems with Stencil installation or launch, please first see our Troubleshooting Your Setup page. Next, please consult our Support resources, which include community/peer support via BigCommerce and Stack Overflow forums."
                                      }
                                    ]
                                  },
                                  {
                                    "title": "Windows Prerequisites",
                                    "blocks": [
                                      {
                                        "type": "html",
                                        "data": "<h1>Windows Prerequisites</h1>"
                                      },
                                      {
                                        "type": "html",
                                        "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Tab </h3>\n\t<ul>\n     <li><a href=\"#windows_root-permissions\">Root Permissions</a></li>\n     <li><a href=\"#windows_git-client\">Git Client and Git BASH</a></li>\n     <li><a href=\"#windows_python-installation\">Python Installation</a></li>\n     <li><a href=\"#windows_python-node-config\">Python/Node Configuration</a></li>\n     <li><a href=\"#windows_node-installation\">Node.js Installation</a></li>\n     <li><a href=\"#windows_compiler-options\">C++ Compiler Options</a></li>\n\t</ul>\n</div>"
                                      },
                                      {
                                        "type": "callout",
                                        "data": {
                                          "body": "The following instructions have been tested on Windows 8. Dependencies for other platforms will be added upon further testing.",
                                          "title": "Platform Support"
                                        }
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Root Permissions\n\nYou must have authorization to run Powershell \"as administrator\" on your machine."
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Git Client and Git BASH\n\nYou must have a Git client installed. The Git for Windows distribution includes a Git client, and also provides the Git BASH emulator for command-line access. All commands should be run in Git Bash from here."
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Python Installation\n\nInstall Python 2.7.x for Windows. (This is required for Visual Studio's Windows Build Tools, installed below.\nPython 3.x is not supported.)\n\nIn the installer dialog shown below, change the bottom default, so as to enable the Add python.exe to Path option. This provides global command-line access to Python."
                                      },
                                      {
                                        "type": "image",
                                        "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539115629012"
                                      },
                                      {
                                        "type": "text",
                                        "data": "---"
                                      },
                                      {
                                        "type": "text",
                                        "data": "## Node.js Installation\n\nStencil requires the Node.js runtime environment, version 6.x or later.\n\nOn Windows, we have tested Stencil CLI on selected Node.js version href=\"https://nodejs.org/en/blog/release/v7.10.0/\"7.10.0. We recommend that you install only an LTS (\"Long-Term Support\"/\"Mature and Dependable\") version, and that you download that version's .msi installer (not its .exe binary).\n\nTo verify your Node.js installation or reinstallation, this [blog post](http://blog.teamtreehouse.com/install-node-js-npm-windows) provides Windows-specific tips and tests."
                                      },
                                      {
                                        "type": "callout",
                                        "data": {
                                          "body": "You will need to restart your computer to complete Node.js installation.",
                                          "type": "warning",
                                          "title": "Restart Required"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "header": {
                                "title": "Stencil Prerequisites by OS",
                                "anchor": "installing_prerequisites"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Installing the Stencil Command Line Interface\n\nThe first step toward developing on Stencil is to install the Stencil CLI. \n\nYou can do this via the following command (_If you are using Windows, you will need to run this command in git bash._):\n\n`npm install -g @bigcommerce/stencil-cli`\n\n### Items to Note\n\n* The command above requires <a href=\"https://www.npmjs.com/\">npm</a> to be installed in your local development environment.\n\n* In Windows, this <span class=\"inline-code\">npm</span> command's execution might at times appear to freeze. However, the installer is running. \nGive it several minutes to complete installation.\n\n* On Mac OS machines with installed xcode, version 5.x, this <span class=\"inline-code\">npm</span> command has generated errors of the form: \n<span class=\"inline-code\">npm ERR! invalid: string_decoder</span>. The workaround is to upgrade xcode to the latest stable xcode version \n(7.3.1 as of this page's last revision). \n\n* If you receive a file-permissions error, and you did not install Node.js via <a href=\"https://github.com/creationix/nvm#installation\">nvm</a> (Node Version Manager), \nthen either install nvm now, or follow one of the workarounds on this external page: \n  [https://docs.npmjs.com/getting-started/fixing-npm-permissions](https://docs.npmjs.com/getting-started/fixing-npm-permissions)"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "To ensure the Stencil CLI is compatible with all the changes introduced in Cornerstone 2.0.0, you must upgrade to the latest version of Stencil CLI (1.15.1) if using Cornerstone 2.x.x.\n\nOccasionally, you will receive a command line prompt to run the installation command when you restart your Stencil server. This occurs when BigCommerce publishes a critical fix in Stencil CLI, to resolve an issue like a newly discovered security exploit.",
                                "title": "CLI Force Upgrade and Cornerstone 2.0.0",
                                "type": "warning"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Cloning Cornerstone using Github\n\n_Windows users need to run this in git bash._\n\nNavigate to a directory where you would like to install a subdirectory for your theme. You must have appropriate write permissions in this directory. \n\nExecute the following command to clone Stencil's base theme, Cornerstone, into a new subdirectory named `.../cornerstone/`\n\n`git clone https://github.com/bigcommerce/cornerstone.git`\n  \nIf the above command fails, and you are accessing GitHub anonymously, give the URL this alternate prefix:\n\n`git clone git://github.com/bigcommerce/cornerstone.git`\n\n\n<!-- Add a note here: If downloading a marketplace theme, must install jspm, register your jspm instance, and set up BitBucket access...  -->\n\n<!-- If you are installing Stencil for the first time, then in--> In the next step, you will install Stencil's <a href=\"/docs/stencil-docs/getting-started/installing-and-launching/javascript-utilities\">JavaScript utilities</a> to enable API access via Ajax.\n\n/stencil-docs/getting-started/installing-and-launching/adding-a-base-theme"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "If you are reinstalling over a base theme on which you have already begun development, first back up your theme's `.stencil` file. This contains your store URL, BigCommerce username and access tokens, and other basic settings. Preserving those settings will speed up initializing and launching the new version. If you would like to allow for complete rollback, back up your entire theme's directory.",
                                "type": "error",
                                "title": "Back Up before Reinstalling"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Installing Stencil's Javascript Utilities\n\nStencil's Cornerstone theme provides utilities called `stencil-utils` to enable API usage (via Ajax) to BigCommerce's backend. \n\nYou will learn more about Stencil Utils in our Stencil Utils overview, but for now, you'll want to be sure you have it installed in your theme. \n\nYou must use [npm](https://www.npmjs.com/) to install the `stencil-utils` module in your theme during initial installation. You must run `npm install` after downloading and installing a refreshed Cornerstone version to ensure that all your dependencies are up to date.\n\n_Windows users need to run this in git bash._\n\nComplete the following steps:\n\nNavigate to your Stencil theme directory. This example assumes that this target directory has the default name `cornerstone`.\n\n`cd cornerstone`\n\nNext, execute the following command inside of that directory:\n\t\n`npm install`\n\nThis will install the required npm modules to properly leverage the Stencil event framework.\n\nNow that your installation is complete, start \n<a href=\"/docs/preparing-your-store-tokens\">preparing your store/tokens</a>."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Video Demo\n\nWatch a brief demonstration of the Stencil installation and launch:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/iWBrJalyM0A\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Authentication",
                  "route": {
                    "path": "/authentication"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Creating an API Account",
                        "route": {
                          "path": "/creating-an-api-account"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Creating an API Account</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#creating_oauth-accounts\">Creating OAuth Accounts</a></li>\n    <li><a href=\"#creating_issuing-additional\">Creating OAuth Accounts</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "body": "If you've successfully installed Stencil you're ready to create a BigCommerce API Account. \n_If you have not yet installed Stencil, see the articles in \"Installing and Launching Stencil._",
                                "title": "Status Check"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Creating OAuth Accounts\n\n1. Log into the control panel of the store for which you are developing. (Use the store owner's credentials.)\n\n2. From the left nav, select Advanced Settings > API Accounts.\n\n3. From the resulting Store API Accounts page, select the Create API Account button.\n\n4. Give your account a Name that reflects its purpose. (The BigCommerce platform does not validate this name – so just assign a name that will make the account's purpose clear to you and other store administrators.)\n\n5. Under OAuth Scopes, set the Themes selector to either modify or read-only.\n\n(The read-only scope is sufficient to authorize/initialize a Stencil theme. However, the modify scope will achieve the same goal, while also authorizing this account to upload themes to the store from the command line.)\n\n6. Click Save. As outlined in this support article, doing so will display a modal, from which you can copy your Client ID and Access Token values. It will also prompt your browser to download a .txt file that contains your credentials.\n\nYou will need these values to authorize/initialize your Stencil theme. If you're ready to do so now, move ahead to Authorizing and Initializing Stencil.\n\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "title": "Reserved Role",
                                "body": "Currently, only the store owner can create an OAuth API account according to the instructions below. Also, note that each store is limited to 50 accounts at a time."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Issuing Additional Tokens\n\nTo issue store tokens for additional themes or developers, repeat the process outlined in Creating an API Account.\n\n(Even if you originally initialized your theme using a legacy API [Basic-Auth] token, we strongly encourage you to generate any new tokens using the new OAuth flow. However, Stencil CLI will still honor your legacy tokens to restart this theme.)\n\nYou can create up to 50 API accounts/tokens per store. If you hit this limit and still need to create new tokens, you will need to delete existing accounts."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "title": "Token-Management Tips",
                                "body": "Deleting an account will invalidate the corresponding token. This will affect any developer using that token.\n\nWe recommend naming accounts by purpose, to help you keep track of which accounts you need to keep active."
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Revoking Tokens",
                        "route": {
                          "path": "/revoking-tokens"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Revoking Tokens</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#revoking_revoking-oauth\">Revoking OAuth Tokens</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Revoking OAuth Tokens\n\nTo revoke an existing OAuth store token, delete the corresponding Store API account:\n\nNavigate to the control panel's API Accounts page.\n\nSelect the trash-can button to the right of the account that you want to delete.\n(You can also use the check boxes at left to select multiple accounts, and then delete them all at once.)\n\n",
                              "header": {
                                "anchor": "revoking_revoking-oauth"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1537421464104"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Revoke with Caution!",
                                "type": "error",
                                "body": "There is no undo. This process completely deletes the selected account(s), revoking the corresponding token(s)."
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Copying a Token to Initialize Stencil",
                        "route": {
                          "path": "/copying-token-to-initialize"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Copying a Token to Intialize Stencil</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#copying_copying-oauth\"></a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Copying OAuth Tokens \n\nTo access an existing OAuth token to authorize your theme:\n\n1. Open the .txt file that the BigCommerce control panel generated when you created the API account.\n\n(If you did not retain this file, you will need to generate a new token by repeating the Creating an API Account procedure.)\n\n2. Note the Client ID and Access Token hashes in the file (or in the control-panel modal for your newly created token).\n\n3. If you are a merchant granting an outside theme developer access to your store, provide these two values to the developer. They will need them when [Authorizing and Initializing Stencil]().\n\n4. If you are developing a theme against your own store, you will use the same two values in the same [Authorizing and Initializing Stencil]() step, described on the following page."
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Launching Stencil",
                  "route": {
                    "path": "/launching-stencil"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Authorizing and Initializing Stencil",
                        "route": {
                          "path": "/authorizing-and-initializing"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Authorizing and Initializing Stencil</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authorizing_authorizing-oauth\">Authorizing with OAuth Tokens</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Even when you share a theme across storefronts, we strongly recommend that you clone a separate subdirectory (each containing its own .stencil file) for each store. This helps isolate and secure each merchant's data.\n\nYou can clone your .../cornerstone/ subdirectory now to create your first isolated copy, and then switch to the resulting new subdirectory to continue. (Prior to March 2017, Stencil's default subdirectory name was .../stencil/.)",
                                "title": " Best Practice: Isolate Stores by Subdirectory"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Authorizing with OAuth Tokens\n\nUse the following steps to authorize your theme using an OAuth API account:\n\n1. Have your store API account's Client ID and Access Token hashes ready. \n(Refer back to the Copying a Token to Initialize Stencil or Creating an API Account instructions.)\n\n2. Starting from the subdirectory for the appropriate theme (and store), initialize Stencil CLI by running the following command (_Windows users need to run this in git bash_):\n\n`stencil init`\n\n3. You will be prompted to provide the homepage URL of the production store against which you want to develop. This can be your own store, or a client store that you are customizing.\n\n4. Next, you will be prompted to enter the port where you would like to run your store on your local machine. This can be any port you like, but we recommend using port 3000.\n\n5. Next, you will be prompted: What is your Stencil OAuth Client ID? Enter your store API account's Client ID.\n\n(If you used this Client ID when you last ran stencil init, you'll see it hinted on the command line, and can just confirm it.)\n\n6. Finally, you will be prompted: What is your Stencil OAuth Access Token? If you entered these credentials when you last ran stencil init, you'll see the token hinted in cleartext. If not, paste your Access Token hash onto the command line. Then press Enter.\n\n\nYour terminal window should now confirm that you have successfully initialized Stencil CLI on your local machine. With Stencil CLI initialized, you are ready to start Stencil and begin development.\n\n\n"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Running Stencil Locally",
                        "route": {
                          "path": "/running-stencil-locally"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Running Stencil Locally</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#root-permissions\">Local Launch: Theme Only</a></li>\n    <li><a href=\"#node.js\">Local Launch: Theme and Theme Editor</a></li>\n    <li><a href=\"#next-steps\">Customizing Theme Editor's Port</a></li>\n    <li><a href=\"#next-steps\">Local Launch: Disabling Caching</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Local Launch: Theme Only\n\nIn order to run Stencil locally, issue the following command in your initialized Stencil theme directory (_Windows users need to run this in git bash_):\n\n`stencil start`\n\nAssuming that you set Stencil to run on `port 3000`, when you navigate to http://localhost:3000, you should see the storefront to which you pointed your local instance – but with the stencil theme applied to it.\n\n## Troubleshooting Token Errors\n\nIf you receive the following error message, \n\n`Unauthorized, please use a valid username/token`\n\nthen store token authentication has failed.\n\nIn this case, please track back and review the following articles:\n\n* [Creating an API Account](creating-an-api-account): How to issue or reissue tokens in the BigCommerce control panel.\n* [Authorizing and Initializing Stencil:](authorizing-and-initializing-stencil): How to initialize Stencil with your username and token."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting Token Errors\n\nIf you receive the following error message, then store token authentication has failed:\n\n`Unauthorized, please use a valid username/token`\n\nIn this case, please review these steps:\n* Creating an API Account: How to issue or reissue tokens in the BigCommerce control panel.\n* Authorizing and Initializing Stencil: How to initialize Stencil with your username and token."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Local Launch: Theme and Theme Editor\n\nTo run Stencil locally while also launching a local version of Theme Editor, start in your theme directory and run the following command, but append the -e option:\n\n`stencil start -e`\n\nThe Theme Editor server will run in parallel with the stencil theme at [http://localhost:8181](http://localhost:8181/). The use case for this is a developer who is reconfiguring the Theme Editor/Store Design (check terminology) settings. It is important to note this is a tool to understand the experience changes when editing the schema.json file. Making changes to your store on the Theme Editor/Using store design on the local host port will not affect your life store."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Customizing Theme Editor's Port\n\nYou can override Theme Editor's default port by appending the \"--theme-editor-port [port]\" option. For example, to specify port 9000, you would enter:\n\n`stencil start -e --theme-editor-port 9000\n`\n\nTo verify Theme Editor's launch, you would then go to http://localhost:9000. Using this option, you can specify any port between `1024` and `65535`."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Local Launch: Disabling Caching\n\nBy default, Stencil caches API resource data per storefront page. This minimizes server traffic while you develop your theme locally.\nIf you prefer to see your changes reflected immediately in your live store, you can turn off caching by appending the `--no-cache` or `-n` option:\n\n`stencil start --no-cache`\n`stencil start -n`\n\n### To re-enable caching:\n\nKill the current Stencil server (_ctrl + c will do the job_) and restart Stencil, this time omitting the `--no-cache` or `-n` option.\n\n`stencil start` \n"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Troubleshooting Your Setup",
                        "route": {
                          "path": "/troubleshooting-your-setup"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Troubleshooting Your Setup</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Unsupported Node Version</a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install errors (\"Unmet Peer Dependency\")</a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install/stencil init Errors/a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install permissions Errors</a></li>\n    <li><a href=\"#desktop-and-mobile\">\"Uncaught TypeError: Illegal invocation\" error: Re-run npm install inside Theme Directory</a></li>\n    <li><a href=\"#desktop-and-mobile\">\"js/bundle\" Errors upon stencil init</a></li>\n    <li><a href=\"#desktop-and-mobile\">stencil init/stencil start Errors</a></li>\n    <li><a href=\"#desktop-and-mobile\">Mac OS:\"Xcode/iOS license...\" Errors upon Stencil Commands</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "First Check the Terminal Window",
                                "body": "For any unexpected behavior that you encounter while developing your Stencil theme, first check your terminal window where you started Stencil CLI. \n\nIn some cases, the terminal will provide a verbose error message specifying where to look for problems. In any case, it has the potential to provide further insight on the issue. Diagnostic suggestions are listed on this page for error messages that may not be helpful in revealing the issue you're experiencing."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Unsupported Node Version\n"
                            },
                            {
                              "type": "text",
                              "data": "## `npm install` Errors\n\nIf you get any `Unmet Peer Dependency` errors when issuing the `npm install` command – or at other times – make sure you are running the `npm install` command **inside** your theme directory.\n\nIf running the `npm install ` command inside your theme directory does not resolve the error, try one of the following:\n\n* Try removing your theme directory's `/node_modules/` subdirectory, by running `rm -rf node_modules`\n\n* Run the `npm cache clean` command\n\n* Re-run `npm install`"
                            },
                            {
                              "type": "text",
                              "data": "## `npm install` and `stencil init` Errors\n\nPlease similarly check and adjust your Node.js version – by following the Prerequisites link above to see platform-specific recommendations – if you get unexpected error messages when issuing the npm install or stencil init commands."
                            },
                            {
                              "type": "text",
                              "data": "## \"Uncaught TypeError: Illegal invocation\" error\n\nIf you receive an `Uncaught TypeError: Illegal invocation` console error, and previously installed Stencil using the original jspm-based installation flow, then later switched to our current webpack installation flow: Please remove your theme's `/node_modules/` subdirectory, then re-run `npm install` inside your theme's directory.\n"
                            },
                            {
                              "type": "text",
                              "data": "## \"js/bundle\" Errors upon `stencil init`\n\nIf you get errors of the following type upon executing the stencil init command:\n\n```\nPotentially unhandled rejection [6] TypeError: Error loading \"js/bundle\" \nat file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js\n\nError evaluating file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js\n\nCannot read property 'createElement' of undefined...\n```\n\ntry the following workaround:\n\n1. Download and unzip a fresh copy of the theme.\n\n3. Refresh theme dependencies by running `npm install && jspm install`\n\n3. Run `stencil init`.\n\n*You will see the same error message as before, but proceed.*\n\n4. Delete the `<theme-name>/assets/js/bundle.js` file.\n\n5. Run `stencil init` again.\nThis should now execute properly.\n6. Run `stencil start`\n\n8. Verify your theme's launch at: http://localhost:3000.\n\n"
                            },
                            {
                              "type": "text",
                              "data": "## stencil init/stencil start Errors\n\nIf you get unexpected error messages or unexpected results upon executing the `stencil init`, `stencil start`, or other Stencil CLI commands, make sure you are working in the subdirectory for the specific theme you intend to launch. \n\nOne way of checking what directory you are working in is by running the `pwd` command in your terminal."
                            },
                            {
                              "type": "text",
                              "data": "## stencil start/missing module Errors\n\nIf executing `stencil start` provokes errors like the following\n\n```\nmodule.js:327\nthrow err;\n^\n\nError: Cannot find module 'webpack'\nat Function.Module._resolveFilename (module.js:325:15)\nat Function.Module._load (module.js:276:25)\nat Module.require (module.js:353:17)\nat require (internal/module.js:12:17)\nat Object. (/Users/jane.doe/themes/cornerstone/stencil.conf.js:2:15)\nat Module._compile (module.js:409:26)\nat Object.Module._extensions..js (module.js:416:10)\nat Module.load (module.js:343:32)\nat Function.Module._load (module.js:300:12)\nat Module.require (module.js:353:17)\n```\n\nswitch to your theme directory and run `npm install`. Running this command will add the missing JavaScript library dependencies.\n\nIf you receive the same error again after running `npm install`, you should completely uninstall and reinstall both the Stencil framework and Node.js.\n\n### Uninstalling and Reinstalling Stencil CLI\n\nIf you encounter persistent problems in initializing or starting Stencil, you have the option of completely removing Stencil CLI and doing a fresh reinstall. You would do so as follows:\n\n1. From your command line, issue the command:\n`npm uninstall -g @bigcommerce/stencil-cli`\n\n2. Navigate back to the Installing and Launching Stencil section and repeat all installation steps to reinstall dependencies and restore your theme, according to your development scenario."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Alternative Options",
                                "body": "A more-drastic measure is to **also** uninstall and reinstall Stencil CLI's Node.js prerequisites (along with uninstalling Stencil CLI). We do not recommend this, as it might disable other Node.js applications on your local machine.",
                                "type": "error"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Stencil CLI Options and Commands",
                        "route": {
                          "path": "/stencil-cli-options-and-commands"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Stencil CLI Options and Commands</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_basic-cli\">Basic CLI Options and Commands</a></li>\n    <li><a href=\"#stencil_stencil-start\">Stencil Start Options</a></li>\n    <li><a href=\"#stencil_stencil-push\">Stencil Push Options</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Basic CLI Options and Commands\n\nThe syntax to run a basic Stencil CLI command is: stencil <commands> [options] <parameter>.\n\nTo see the basic options and commands that the Stencil CLI package supports, enter any of the following forms of the help option on your command line:\n\n`stencil <command> [option] <parameter>`\n\nTo see the basic options and commands that the Stencil CLI package supports, enter any of the following forms of the help option on your command line:\n\n```\nstencil\nstencil help\nstencil --help\nstencil -h\n```\n\nYour terminal window will display options and commands listed in the tables below. \n",
                              "header": {
                                "anchor": "#stencil_basic-cli"
                              }
                            },
                            {
                              "type": "html",
                              "data": "<table>\n  <tr>\n    <th>Option</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>-h, --help</td>\n    <td>Outputs usage information.</td>\n  </tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>Outputs the version number (which is read from package.json file</span>).</td>\n  </tr>\n</table>\n\n<p></p>\n<table>\n  <tr>\n    <th>Command</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>init</td>\n    <td >Interactively creates a .stencil file, which configures how to run a BigCommerce store locally.</td>\n  </tr>\n  <tr>\n    <td>start</td>\n    <td>Starts up the BigCommerce store, using theme files in the current directory. \n\n<b>Note:</b> If stencil start generates an \"Unauthorized, please use a valid username/token error: Please make sure that the .stencil file contains the correct store URL and (for OAuth) the correct URL prefix). Also, verify that you have copied the correct credentials, as outlined here. If you continue to get the same error, please reissue tokens, as outlined here.\n    </td>\n  </tr>\n \n  \n  <tr>\n    <td>bundle</td>\n    <td>Bundles up the theme into a structured .zip file, which can be uploaded to BigCommerce. (Please see restrictions here).</td>\n  </tr>\n  \n  <tr>\n    <td></a>push</td>\n    <td>Bundles up the theme into a structured .zip file; then directly uploads (pushes) the .zip to BigCommerce.(Please see</nobr> usage instructions here. The same restrictions apply as for the bundle command.)</td>\n  </tr>\n  \n  <tr>\n    <td>release</td>\n    <td>Creates a new release in a theme's GitHub repository. Developers outside BigCommerce can use this for forks (not master) of Stencil's Cornerstone base theme, or for their own parallel themes independent of Cornerstone.</td>\n  </tr>\n    \n  <tr>\n    <td>help &lt;command&gt;</td>\n    <td>return all the options available to use for the specified command. For example, <code>stencil help bundle</code> will return the options that are available to use specifically with the stencil bundle command.\t\n    </td>\n  </tr>  \n  \n</table>"
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538055264839",
                              "header": {
                                "title": "Basic Stencil CLI Options and Commands"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "'stencil start' and 'stencil push' Options",
                                "body": "The `stencil start` and `stencil push` CLI Commands have additional custom options that can be used with the command, which are detailed below."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Stencil Start Options\n\nTo see Stencil CLI's additional options for the `stencil start` command (described above), enter the following on your command line:\n\n`stencil help start` \n\nYour terminal screen should read similar to the image below.\n",
                              "header": {
                                "anchor": "#stencil_stencil-start"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538029681278",
                              "config": {
                                "maxWidth": "1300",
                                "maxHeight": "1300"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Stencil Push Options\n\nTo see Stencil CLI's additional options for the stencil push command (described above), enter the following on your command line:\n\n`stencil help push`\n\nYour terminal screen should read similar to the image below."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538055086025",
                              "config": {
                                "maxHeight": "800",
                                "maxWidth": "800"
                              }
                            },
                            {
                              "type": "text",
                              "data": "You can use the `-f` or `--filename` option in cases where you have already run `stencil bundle` to bundle your theme, but the resulting .zip file has not yet uploaded to BigCommerce. Use the generated .zip file's **filename** as a parameter to identify the generated file in your theme directory. An example of the command is outlined below.\n\n`stencil push -f Cornerstone-2.3.2.zip`\n\nIn this example, `Cornerstone-2.3.2.zip` is the name of the file that was generated after running `stencil bundle`.\n\nWhen you run `stencil push` with the `-f` or `--filename` option, Stencil CLI skips all its bundling steps and diagnostics. It proceeds directly to uploading the specified file, displaying its processing progress bar to show upload status.\n\n"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Cornerstone File Structure",
                        "route": {
                          "path": "/cornerstone-file-structure"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Cornerstone File Structure</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cornerstone_cornerstone-file-structure\">The Cornerstone Theme File Structure</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## The Cornerstone Theme File Structure\n\nCornerstone is the base Stencil theme, and it is also the default theme for all newly initialized local storefronts. Cornerstone provides the standard file structure, base design pattern, and default file assets necessary to start developing a custom storefront experience.\n\nThe Cornerstone file structure consists of four main subdirectories. Within those subdirectories, you'll be directed to specific files in the Development Quick Start tutorial and in Stencil reference material:\n\n### `template/pages`\n`templates/pages` contains all the base template pages used in a BigCommerce online storefront. The pages are grouped by page category. In order to prevent any rendering errors, please avoid changing page names. For details, please see Templates Required Directory > Pages Subdirectory.\n\n\n### `template/components`\n`templates/components` Components consist of code snippets and partials that can be reused throughout your theme. This directory is grouped by component type. For details, please see Templates Required Directory > Component Subdirectory.\n\n### `template/layout`\n`templates/layout` define the overall structure (header, footer, etc.) for your storefront. You can implement multiple layouts here, for different use cases – to make it easy to switch between different look-and-feel variations for the same theme. For details, please see Templates Required Directory > Layout Subdirectory.\n\n### `assets/`\n`assets/` (images, CSS and JavaScript files) will be located in this directory. For details, please see CSS, JavaScript, and Design Resources.\n\n### `lang/`\n`lang/` contains translation files, including the required `en.json`. For details, please see the Internationalization/Localization section of the documentation.\n\nWhen developing in your local environment, all files that you change in your Stencil theme directory (/cornerstone/ in our default installation) will be reflected immediately at [http://localhost:3000](http://localhost:3000).\n",
                              "header": {
                                "anchor": "cornerstone_cornerstone-file-structure"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "blocks": []
                  }
                },
                {
                  "title": "Advanced Installation Options",
                  "route": {
                    "path": "/advanced-installation-options"
                  },
                  "data": {
                    "blocks": [],
                    "children": [
                      {
                        "title": "Navigating Your Setup Scenario",
                        "route": {
                          "path": "/navigating-your-setup-scenario"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Navigating Your Setup Scenario</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_illustration\">Illustration of Stencil's Setup Options</a></li>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone Setup</a></li>\n    <li><a href=\"#navigating_cornerstone-refresh\">Cornerstone Refresh</a></li>\n    <li><a href=\"#navigating_download-marketplace\">Download a Marketplace Theme</a></li>\n    <li><a href=\"#navigating_implementing-custom-build\">Implementing a Custom Build System</a></li>\n    <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "title": "Notes on Dependencies",
                                "body": "Our installation instructions have been tested on Mac OS X Yosemite, Linux/Ubuntu v.14.04.4, and Windows. Dependencies for other platforms/releases will be added upon further testing.\n"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Illustration of Stencil's Setup Options\n\nThe diagram below visually illustrates _all_ currently supported workflows for setting up a Stencil theme. You will choose one pathway to setup Stencil for your store. The color codes for each setup scenario are as follows: \n\n* [Black arrows: Initial setup with the default Cornerstone theme.](#navigating_initial)\n\n* [Orange arrows: Refresh Cornerstone from Theme Marketplace.](#navigating_cornerstone-refresh)\n\n* [Purple arrows: Customize a theme (_other than_ Cornerstone) downloaded from Theme Marketplace.](#navigating_download-marketplace)\n\n* [Green arrows: Configure a custom JavaScript build system](#navigating_implementing-custom-build)\n\n* [Blue arrows: Adds onto any of the preceding four scenarios. If developing for a BigCommerce Blueprint production store launched before Jan. 26, 2016, you must add one extra step to enable Stencil in the store's control panel.](#navigating_blueprint-store)",
                              "header": {
                                "anchor": "navigating_illustration"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538540242143",
                              "config": {
                                "centered": true,
                                "fluid": true,
                                "bordered": true
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Detailed Steps Described Below",
                                "body": "Continue reading to get a detailed description and breakdown of the steps required for each setup scenario."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Initial Cornerstone Setup \n\nThis is the workflow to start developing based on BigCommerce's default Cornerstone theme. This workflow uses Webpack as the JavaScript build system. Steps required:\n\n* Install your necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to prepare store and tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n\n\nOnce you have completed these steps, proceed to the _Launching Stencil_ section.",
                              "header": {
                                "anchor": "navigating_initial"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Download and Install a New Version of Cornerstone \n\nIf you would like to download and install a **new** version of Cornerstone from BigCommerce's Theme Marketplace, perform the following steps:\n\n* Ensure all necessary prerequisites are installed\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Ensure Stencil CLI is installed](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Download a new Cornerstone .zip file](/stencil-docs/advanced-installation-options/downloading-cornerstone)\n* [Reinstall JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* Repeat steps in _Launching Stencil_",
                              "header": {
                                "anchor": "navigating_cornerstone"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Download a Marketplace Theme \n\nIf you would like to customize a theme _other than_ Cornerstone, follow the required steps to download a theme from BigCommerce's Theme Marketplace. This workflow requires BitBucket. Some earlier theme versions will also require additional steps for the jspm JavaScript build system. Steps required:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Set up BitBucket and Download the Marketplace theme's .zip file](/stencil-docs/advanced-installation-options/downloading-a-marketplace-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Complete the steps outlined in _Launching Stencil_",
                              "header": {
                                "anchor": "navigating_download-marketplace"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Implement a Custom JavaScript Build System \n\nThe Stencil framework currently uses Webpack 4 as its default Javascript Build system (jspm for older versions), but if you prefer, you can substitute this for a custom JavaScript build system such as Grunt. Steps recommended:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Configure your custom build system](/stencil-docs/getting-started/installing-and-launching/configuring-webpack-or-custom-build)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Proceed to _Launching Stencil_",
                              "header": {
                                "anchor": "navigating_custom-build"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Blueprint Store Launched before January 26th, 2016\n\nIf your store is **both**:\n* running on a Blueprint theme\n* was launched before Jan. 26th, 2016 \n\nand you would like to enable Stencil development on it, you must perform the following steps:\n\n* Follow the installation path above that corresponds to your development scenario\n* Enable Stencil in the store’s control panel",
                              "header": {
                                "anchor": "navigating_blueprint-store"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Downloading the Cornerstone Theme",
                        "route": {
                          "path": "/downloading-the-cornerstone-theme"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Downloading the Cornerstone Theme from the BigCommerce Control Panel</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_downloading-cornerstone-zip\">Downloading the Cornerstone .zip file</a></li>\n    <li><a href=\"#downloading_reinstalling-dependencies\">Reinstalling Dependencies and Relaunching</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "title": "Back Up Before Reinstalling",
                                "body": "If you are reinstalling over a base theme on which you have already begun development, first back up at least your theme's .stencil file. This file contains your store URL, your BigCommerce username and access tokens, and other basic settings. Preserving those settings will speed up initializing and launching the new version. To allow complete rollback, back up your whole theme directory. (In a current default installation, this directory is named `cornerstone`. Prior to March 2017, this directory's name defaulted to `stencil`)."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Downloading the Cornerstone .zip file from the Control Panel\n\n_If you have not yet added Cornerstone to your store, navigate to `Storefront` > `Themes Marketplace` and add the Cornerstone theme to your store._\n\nUse these steps to download a the Cornerstone theme from the store Control Panel: \n\n**Note:** The steps below are required only if you are downloading a refreshed copy of Stencil's default Cornerstone theme, specifically from the BigCommerce Theme Marketplace. \n\nIf you are downloading a Marketplace theme (other than Cornerstone) for customization, you must follow the workflow outlined in Downloading a Marketplace Themes.\n    \n* Go to `Storefront` -> `My Themes`.\n\n* Click the Cornerstone theme's thumbnail:\n\t* If Cornerstone is the store's currently active theme, click its image thumbnail at the top of the page, under the `Current Theme` heading.\n\t* If Cornerstone is _not_ the current theme, scroll down below the lower My Themes subheading, find, and click the Cornerstone thumbnail.\n\n_The Cornerstone theme's description should zoom to full-page and display a Theme Options drop-down list at the upper right._\n\n* From the `Theme Options` drop-down list, select `Download theme file` to download this Cornerstone release as it was refreshed on Theme Marketplace. \n\n* Unpack the zipped theme to a working directory. This can either be the directory where you have been developing your theme or a new directory.\n",
                              "header": {
                                "anchor": "#downloading_downloading-cornerstone-zip"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Reinstalling Dependencies and Relaunching\n\n* Ensure that your theme includes all current dependencies by repeating the [Stencil Utils installation.](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils) \n\n* To relaunch, repeat the steps listed in the _Launching Stencil_ section.\n",
                              "header": {
                                "anchor": "#downloading_reinstalling-dependencies"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nWhen you are ready to upload your custom theme to a store, follow the instructions in Bundling and Submitting a Theme and Troubleshooting Theme Uploads.",
                              "header": {
                                "anchor": "#downloading_next-steps"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Distribution of Cornerstone-based themes is subject to BigCommerce's Cornerstone license, including the mandatory incorporation of BigCommerce's copyright statement.",
                                "title": "Distribution of Cornerstone-based Themes",
                                "type": "error"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Downloading a Marketplace Theme",
                        "route": {
                          "path": "/downloadining-a-marketplace-theme"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Downloading a Marketplace Theme from the BigCommerce Control Panel</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_setting-up-bitbucket\">Setting Up BitBucket SSH Keys</a></li>\n    <li><a href=\"#downloading_downloading-a-marketplace-theme\">Downloading a Marketplace Theme for Customization</a></li>\n    <li><a href=\"#downloading_checking-theme-version\">Checking the Theme's Version</a></li>\n    <li><a href=\"#downloading_jspm-steps\">jspm Steps for Earlier Versions</a></li>\n    <li><a href=\"#downloading_installing-modules\">Installing Modules (Webpack themes)</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n    </ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "BitBucket registry access is required for all Marketplace themes (excluding Cornerstone). jspm Extra Steps (to enable jspm and jspm-git) are required only for theme versions earlier than v1.2.1, as outlined on this article.",
                                "title": "BitBucket Registry Access",
                                "type": "warning"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Setting Up BitBucket SSH Keys\n\nTo set up Stencil CLI for themes other than Cornerstone, you must authorize communication among your local system, the BitBucket registry, and GitHub.\n\n**Note:** _Steps beyond this point require that you have active accounts on both BitBucket and GitHub._\n\nTo authorize ongoing communication, you must set up a secure shell (SSH) key that is shared between BitBucket and GitHub. This is a multi-step process, which is beyond the scope of this documentation. However, we have tested the following instructions and found them to be reliable:\n\n* [Setting up SSH for Git on BitBucket](\nhttps://confluence.atlassian.com/bitbucket/set-up-ssh-for-git-728138079.html)\n\n_Follow the default instructions to create a key in your `~/.ssh/config`_\n\n* [Setting up SSH on GitHub (a series of linked steps)](\nhttps://help.github.com/articles/connecting-to-github-with-ssh/)\n\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Marketplace themes other than Cornerstone must be purchased in order to be downloadable.\n\nYou are entitled to customize a free or purchased theme for a store that you support. However, the theme's original creator retains rights to that theme's design. So, except for Cornerstone-based themes, you may not upload a derived theme to a public theme marketplace (whether BigCommerce's or third-party), nor sell it privately.",
                                "title": " Theme Access, Copyright/Ownership, and Distribution"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Downloading a Marketplace Theme for Customization\n\nUse these steps to download a theme (other than Cornerstone) available in the store control panel's Storefront Design area. \n\n1. If you have not yet added the theme to your store, start at Storefront Design > Themes Marketplace, and add the theme.\n\n2. Go to Storefront Design > My Themes.\n\n3. Click the theme's thumbnail:\n\t \n\t* To download the store's currently active theme, click the image thumbnail at the top of the page, under the Current Theme heading.\n\t\n\t* To download an inactive theme, scroll down below the lower My Themes subheading, and click the appropriate theme's thumbnail.\n\nYour selected theme will zoom up to a full-page description and display a Theme Options drop-down list at the upper right.\n\n4. Note the version number displayed under the theme's title and credits. At Checking the Theme's Version below, you will use this number to choose between two installation flows.\n\n5. From the Theme Options drop-down list, select the appropriate Download option. (The options visible depend on your theme's current state:)\n\n\t* Download current theme: Download the theme version that is now active on the storefront. (This option appears only if you selected the Current Theme.)\n\n\t* Download your latest customizations: Download the theme's most recently saved version. (This option appears only for themes that have been customized for this store.)\n\n\t* Download theme file: Download the theme as it was originally uploaded to Theme Marketplace. \n\n6. Unpack the zipped theme to a working directory.\n(In the remainder of this documentation, substitute this working directory's name for the default `stencil` path or the `theme-name` placeholder.)"
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538543505088",
                              "header": {
                                "title": "Theme Options",
                                "subtitle": "Dropdown list options as related to step #5"
                              },
                              "config": {
                                "centered": true,
                                "fluid": true,
                                "bordered": true,
                                "maxWidth": "300",
                                "maxHeight": "300"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Some versions of the BigCommerce control panel offer you shortcuts for steps 3–5 above, removing the need to click the theme card/thumbnail:\n\n* For your store's currently active theme, look for a version number to the right of the thumbnail. You can select the Advanced drop-down list to display options similar to those at step 5 above.\n\n* For inactive themes, look for a version number at the theme card's lower left. Also, you can select the \"...\" menu at the theme card's lower right to display options similar to those at step 5 above.",
                                "title": "Theme Download Shortcuts"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Checking the Theme's Version\n\nRefer to the theme's version number that you noted above at Downloading a Theme for Customization:\n\n* If the version number is 1.10.0 or higher, the theme uses Webpack as its JavaScript build system. Skip ahead to the simplified installation instructions in Installing Modules (Webpack Themes).\n\n* If the theme's version number is lower than 1.10.0, the theme uses jspm as its JavaScript build system. Follow the steps outlined on [jspm Steps for Earlier Versions]()\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "For version numbers below 1.10.0, consider using the options within control panel > My Themes to download a newer version of the same theme. This will allow you to jump ahead to the streamlined instructions below at Installing Modules (Webpack Themes).\n\n**Note**: These version numbers do not apply to the Cornerstone theme. All currently supported Cornerstone versions use Webpack, and can be refreshed using the even simpler refresh instructions in [Downloading the Cornerstone Theme]().",
                                "title": "Consider Updating Your Theme",
                                "type": "warning"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## jspm Steps for Earlier Versions\n\nlink to legacy article"
                            },
                            {
                              "type": "text",
                              "data": "## Installing Modules (Webpack themes)\n\nFor Marketplace themes whose version number is 1.10.0 or higher, simply use npm to install the modules required to access Stencil JavaScript events:\n\n1. Navigate to your theme directory. This example assumes that this target directory has the default name Cornerstone:\n\n`cd cornerstone`\n\n2. Within that directory, install the stencil-utils module to ensure that all your dependencies are up to date:\n\n`npm install`"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nTo authorize, initialize, and launch your theme, follow the steps in the _Launching Stencil_ section.\n\nLater, when you are ready to upload your customized theme to a store, you should follow the zipping and uploading instructions in Bundling and Submitting a Theme and Troubleshooting Theme Uploads.\n"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "When you issue the `stencil init` command to authorize and initialize Stencil, you might receive error messages about resolving BitBucket as an SSH host. These errors occur when you have not recently logged into BitBucket.\n\nWhen prompted, enter the BitBucket password you used in Setting Up BitBucket SSH Keys above. This will clear the errors and allow you to proceed.",
                                "type": "warning",
                                "title": "BitBucket Reauthentication"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Theme Updates and Version Control",
                        "route": {
                          "path": "/theme-updates-and-version-control"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Theme Updates and Version Control</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#theme-updates_isolating\">Customizing Strategically for Easier Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-cornerstone\">Synchronizing Your Theme With Cornerstone's Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-multiple\">Synchronizing Updates for Multiple Themes</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Distributed Version Control via Git",
                                "body": "Many techniques discussed below rely on GitHub's _distributed version control_ model and features. For the underlying principles, please see [Git's own documentation](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Customizing Strategically for Easier Updates\n\nIn order to keep your store and Stencil theme performant, it's crucial to know the best way to set up your customized Stencil theme in order to smoothly incorporate future bug fixes, enhancements, and updates that are applied to the base theme. "
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## GoRuck's Best Practices for Handling Theme Updates\n\nThe guidelines provided are from Web Developement team from the BigCommerce client, [GoRuck](https://www.goruck.com/). \n\nGoRuck's scenario addresses maintaining a single custom theme that is based on a third-party Marketplace theme (a theme other than Cornerstone). These guidelines can also apply to maintaining a custom theme based on Stencil's default Cornerstone theme.\n\n### Handling and Managing Theme Updates\n\n_We've made significant changes to our theme, and one principle that I've found successful is isolating my changes as much as possible. I try to put my changes into their own files, whether they're changes to templates, JavaScript, or SCSS._\n\n_I also name all my files, CSS classes and identifiers, and JavaScript methods and classes with a `gr-` prefix (as an abbreviation for our company, GORUCK LLC). Also, any changes I make to standard theme files are identified with a comment, such as:_\n\n`//Go Ruck Customization`\n\t\t\n_For example, I have a file in `assets/scss/` named `gr-theme.scss`. All of the styles I've added to the theme are either in this file, or imported by this file. So for styling, my only changes to the theme itself are in a handful of places where I had to change an existing theme style (identified with a comment), plus this one line in `templates/layout/base.html`:_\n\n`{{{stylesheet '/assets/css/gr-theme.css'}}}`\n\n_I've found that this approach provides several advantages:_\n\n* It makes it easier to distinguish my custom code from code supplied by the default theme.\n* It makes it less likely that my code will get intermingled with the standard theme code. This, in turn, prevents my code from unexpectedly being affected by theme updates.\n* It makes it easier to merge base-theme updates into my theme code.\n\n### Comparing and Merging Theme Updates\n\n_Having isolated my changes as much as I can, I identify theme changes and updates by comparing base themes, rather than by comparing base themes to my customized theme. When a new version of the theme is released, I download the .zip file from the BigCommerce Control Panel._\n\n_I then use a desktop diff tool (Beyond Compare) to \ncompare the new version to the .zip file of the theme's previous release. I ignore changes in the .zip file's\n `meta/` and `parsed/` folders, and to its `manifest.json`, and do a `Compare Contents` on the rest of the files._\n\nUltimately, I need to examine the changes carefully, to identify any changes that might affect, or be affected by, my customizations. And I need to test thoroughly. But comparing the stock themes to each other reduces the number of changes I have to examine. \n\nAlso, because I isolate my changes, most of the theme changes can be copied directly into the corresponding file in my customized theme. In practice, this means that I can limit my testing to the areas affected by changes in the standard theme, rather than having to re-test all my own changes.\n\nI personally find that it is also helpful to migrate *every* theme update into my customized version, as the update is released. If I were to wait, and to allow changes to accumulate and become more substantial, I think it would be more difficult to adequately test – and correctly integrate – the changes. Similarly, I'm grateful to the developer of our base theme (Pixel Union) for updates that have always made small, incremental changes.\n\n### Dynamic Content Injection\n\n_We've also come up with a variety of techniques for dynamically placing content on a page. For example, we can dynamically add tabs to a product page, using content stored on our WebDAV. Similarly, we can inject content from an external file into the body of a page. This allows us to put something that appears in many places, like a sizing chart, in a single place where it can be easily updated._\n\n_Or, we can use the BigCommerce control panel's various HTML editors – for Products, Categories, and Content > Web Pages – to inject content into predefined \"dropzones\" (custom div's). This allows us to generate a wide variety of content pages using a single custom template._\n\nAll of these techniques minimize the complexity of merging base-theme updates into our customized theme. For further details and examples on how we implement these techniques, see [Dynamic Content Rendering on Stencil Storefronts]()."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Synchronizing Your Theme With Cornerstone's Updates\n\nThis section addresses two methods that will allow you to keep your customized Stencil theme up to date with Cornerstone's updates, enhancements, and bug fixes\n\nUpdating Lightly Customized Themes\nUpdating Heavily Customized Themes\n\nWe've adapted these tips from a Stencil developer's titled Stencil Version Control Best Practices? on the BigCommerce Community forums.\n\n### Updating Lightly Customized Themes\n\nIn this scenario, you can use Git's cherry-pick option to merge in specific Cornerstone commits.\n\nUse the Stencil Framework Release Notes to look up specific updates' commit hashes on the Cornerstone repository.\n\nSee this Stack Overflow explanation of how to use the cherry-pick option.\n\n### Updating Highly Customized Themes\n\nHere, unexpected errors from automatic merges can be time-consuming to undo. So, consider this handtooled approach:\n\nUse GitHub's Web interface to inspect each Cornerstone commit (change) of interest. Each commit will show you – for all changed files – a diff view highlighting any deletions (left/red) and any insertions (right/green).\n\nFor changes that you want to incorporate into your theme, access the source code.\n\nAs illustrated below, you can either access individual files via Github's Raw view, or you can download a .zip of the whole Cornerstone repo in order to access all files locally.\n\nManually edit the changes into your theme's affected files.\n\n### Accessing Individual Files\n\nIn the file-by-file approach: For each commit that you would like to incorporate into your custom theme, do the following for each of the commit's changed files.\n\nIn GitHub's diff view, click the View button at the upper right. (We show it highlighted with a red border and a tooltip.) You will see the file's full contents, as shown below.\n\nClick the Raw button at the upper right (which we show highlighted in red). This will reveal the file's full contents as plaintext – allowing you to copy and paste without picking up the table metadata used to display line numbering.\n\n### Downloading the Cornerstone Repository\n\nThis approach downloads all theme files at once, allowing you to copy/paste their relevant contents locally.\n\n1. Navigate to the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone).\n2. On the right hand side of the page, click the green `Clone or download` button, and select Download ZIP.\n\n\n\n"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Configuring Webpack or a Custom Build System",
                        "route": {
                          "path": "/configuring-webpack-or-custom-build"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Configuring Webpack or a Custom Build System</h1>"
                            },
                            {
                              "type": "html",
                              "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#configuring_webpack-jspm-other\">Webpack, jspm, or Other JavaScript Managers</a></li>\n    <li><a href=\"#configuring_webpack-specific\">Webpack-Specific Configuration</a></li>\n    <li><a href=\"#configuring_downloaded\">Build-System Configuration File</a></li>\n    <li><a href=\"#configuring_custom-build\">Watched Folders: watchOptions Object</a></li>\n    <li><a href=\"#configuring_blueprint-store\">JavaScript Rebundling: development Function</a></li>\n    <li><a href=\"#configuring_blueprint-store\">Theme Packaging: production Function</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                            },
                            {
                              "type": "text",
                              "data": "## Webpack, jspm, or Other JavaScript Managers\n\nStencil themes are Node.js applications, and therefore contain dependencies on other JavaScript libraries. For the default Cornerstone theme, we provide the [Webpack](https://webpack.github.io/docs/) build manager to handle these dependencies. \n\nAs you develop and customize a theme based on Cornerstone, you have option to reconfigure Webpack's watched folders, and to even substitute a different build system. These options are explained below.\n\nAll themes in the BigCommerce Theme Marketplace use Webpack. However, older versions of certain themes used the jspm JavaScript dependency manager instead of Webpack. Please see this page to determine (by version number) whether you are developing based on one of these earlier versions, and to find the required jspm setup procedures."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "info",
                                "body": "The steps below are required only if you plan to modify or override the default Webpack-based workflow that installs with Stencil's default Cornerstone theme or and current theme in the BigCommerce Theme Marketplace. If you do not require these advanced configuration options, you can safely skip this page.",
                                "title": "Optional Workflow"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Webpack-Specific Javascript Diagnostics\n\nThe following Webpack configuration options can aid in troubleshooting.\n\nIf JavaScript errors in your browser's developer tools are not reporting filenames and line numbers, try changing your `webpack.conf.js` file's [sourcemap](https://webpack.js.org/guides/build-performance/#devtool) entry from:\n\n```\ndevtool: 'source-map'\n```\nto:\n\n```\ndevtool: 'eval-source-map'\n```\n\nThe `eval-source-map` option is slower, but more verbose. This [Webpack Devtool Configuration](https://webpack.js.org/configuration/devtool/) article provides an overview of all devtool options and details regarding each."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Build-System Configuration File\n\nTo take advantage of automatic JavaScript bundling and browser refresh, Stencil themes require the [`stencil.conf.js`](https://github.com/bigcommerce/cornerstone/blob/master/stencil.conf.js) file. If you would like to enable a custom build system, you will need to edit this file.\n\nWithin `stencil.conf.js`, Stencil CLI looks for the exported `watchOptions` object, and `development` and `production` callbacks, shown below. \n\nContinue reading to take a closer look at each of these three references."
                            },
                            {
                              "type": "text",
                              "data": "## Watched Folders: watchOptions Object\n\nThe `watchOptions` object defines directories for the [Browsersync](https://browsersync.io/docs) preview engine to watch or ignore, in two respective lists. You are free to edit these lists:\n\n```\nvar watchOptions = {\n    // If files in these directories change, reload the page.\n    files: [\n        '/templates',\n        '/lang'\n    ],\n\n    //Do not watch files in these directories\n     ignored: [\n        '/assets/scss',\n        '/assets/less',\n        '/assets/css',\n        '/assets/dist',\n    ]\n};\n```"
                            },
                            {
                              "type": "text",
                              "data": "### JavaScript Rebundling: `development` Function\n\nUpon the command-line instruction `stencil start`, Stencil CLI will look for and call the `development` function. \n\nIn the base Cornerstone theme, we have created a Webpack watcher to trigger a browser reload whenever theme edits cause JavaScript to be rebundled to the theme's `bundle.js` file. This watcher uses options configured in the `webpack.conf.js` file passed by `webpackConfig`. So a JavaScript rebuild will refresh the browser:\n\n```\nfunction development() {\n    webpack(webpackConfig).watch({}, err => {\n        if (err) {\n            console.error(err.message, err.details);\n        }\n\n        process.send('reload');\n    });\n}\n```"
                            },
                            {
                              "type": "text",
                              "data": "## Theme Packaging: `production` Function \n\nWhen you issue the command-line instruction `stencil bundle`, to process and package a completed theme for upload to a store, Stencil CLI will look for and call the `production` function. This function passes a callback as its first argument to support asynchronous builds. \n\nThe callback must be invoked somewhere inside the `production` function to notify Stencil CLI that the theme-specific build has completed and is ready to package:\n\n```\nfunction production() {\n    webpackConfig.watch = false;\n    webpackConfig.devtool = false;\n    webpackConfig.plugins.push(new webpack.LoaderOptionsPlugin({\n        minimize: true,\n    }));\n    webpackConfig.plugins.push(new webpack.optimize.UglifyJsPlugin({\n        comments: false,\n        compress: {\n            warnings: true,\n        },\n        sourceMap: false, // Toggle to turn on source maps.\n    }));\n\n    webpack(webpackConfig).run(err => {\n        if (err) {\n            console.error(err.message, err.details);\n            throw err;\n        }\n\n        process.send('done');\n    });\n}\n\nif (process.send) {\n    // running as a forked worker\n    process.on('message', message => {\n        if (message === 'development') {\n            development();\n        }\n\n        if (message === 'production') {\n            production();\n        }\n    });\n\n    process.send('ready');\n}\n```"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Development Quickstart",
            "route": {
              "path": "/new-page-hyafc"
            },
            "data": {
              "children": [
                {
                  "title": "Creating a New Theme",
                  "route": {
                    "path": "/new-subpage-4"
                  },
                  "data": {}
                },
                {
                  "title": "Making Basic Design and Layout Changes",
                  "route": {
                    "path": "/new-subpage-3"
                  },
                  "data": {}
                },
                {
                  "title": "config.json-resource Interactions",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {}
                },
                {
                  "title": "Customizing Javascript",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "Rendering HTML with Ajax",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "Testing and Debugging Your Theme",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "Managing Theme Variations",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Theme Editor Configuration",
            "route": {
              "path": "/theme-editor-configuration"
            },
            "data": {
              "children": [
                {
                  "title": "What is the Stencil Theme Editor?",
                  "route": {
                    "path": "/new-subpage-3"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "Two JSON files in your Stencil theme's home directory, config.json and schema.json, govern which settings the theme will expose.\n\nThe config.json file's key/value pairs define:\n* Global, theme-wide variables\n* Theme variations\n* Variation-specific variables\n\nThe schema.json file specifies which theme settings will be accessible through the Theme Editor GUI. Your entries here also define the graphical controls presented to merchants for each setting."
                      }
                    ]
                  }
                },
                {
                  "title": "Configuration Overview",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {}
                },
                {
                  "title": "config.json Metedata",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "Preparing Thumbnail Images",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "scheme.json/Theme Editor Metadata",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "Preparing Thumbnail Images",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "Theme Editor Troubleshooting",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Shipping A Theme",
            "route": {
              "path": "/shipping-a-theme"
            },
            "data": {
              "children": [
                {
                  "title": "Shrinking Your Theme by Excluding Static Assets",
                  "route": {
                    "path": "/shrinking-your-theme"
                  },
                  "data": {}
                },
                {
                  "title": "Staging a theme for CDN Delivery",
                  "route": {
                    "path": "/staging-a-theme"
                  },
                  "data": {}
                },
                {
                  "title": "Bundling and Submitting a Theme",
                  "route": {
                    "path": "/bundling-and-submitting"
                  },
                  "data": {}
                },
                {
                  "title": "Adding Recaptcha V2",
                  "route": {
                    "path": "/adding-recaptcha"
                  },
                  "data": {}
                },
                {
                  "title": "Troubleshooting Theme Uploads",
                  "route": {
                    "path": "/new-subpage-4"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Front-Matter Attributes",
            "route": {
              "path": "/front-matter-attributes"
            },
            "data": {
              "children": [
                {
                  "title": "Front Matter Reference",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Handlebars Syntax and Helpers",
            "route": {
              "path": "/handlebars-syntax-and-helpers"
            },
            "data": {
              "children": [
                {
                  "title": "Handlebars Helpers Reference",
                  "route": {
                    "path": "/handlebars-helpers-reference"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "# Handlebars Helpers Reference"
                      },
                      {
                        "type": "text",
                        "data": "## {{itemAt}}\n\n_Block helper that returns the item at the specified index._\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `returns` {any} `value`\n\n#### {{itemAt}} Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```\n{{itemAt array 1}}\n//=> 'b'\n\n```\n---\n\n## {{join}}\n\nThe `join` helper is custom to Stencil. It joins an array of string items, with separators. It returns a string. \n\n#### Parameters\n\n- `values`: {Array}\n- `separator`: {String}\n- `limit=<number>`: An optional limit.\n\n#### {{join}} Example\n\ninsert join example\n\n---\n\n### {{limit}}\n\nThe `limit` helper is custom to Stencil. It limits the number of items returned from an array variable, and returns a new array.\n\n#### Parameters\n\n- `data`: {Array}\n- `limit`: {Number}\n\n#### {{limit}} Example \n\nAssume that `{{cart.items}}` would return 10 items. You could use this helper to limit that behavior to only the first four items, by specifying: \n\n```\n{{limit cart.items 4}}\n```\n\n---\n\n### {{pluck}}\n\nThe `pluck` helper is custom to Stencil. For one or more specified search key(s), it retrieves corresponding values from some or all elements in a specified collection. \n\nThe `pluck` helper returns the retrieved values in a comma-separated string. This helper's general form is:\n\n```\n{{pluck ([limit] <collection> [<limit-value>]) '<search-key>'}}\n```\n\n#### Parameters\n\n- `limit`, `limit-value`: Optional parameters to limit the number of results returned.\n- `collection`: The collection to search.\n- `search-key`: The string to search for.\n\n\n#### {{pluck}} Example 1\n\nAssume that the `categories` collection contains:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\" },\n  { \"id\": 2, \"name\": \"Cookware\" },\n  { \"id\": 3, \"name\": \"Cutlery\" }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'name'}}\n```\n\n...would return:\n\n```\n\"Bakeware,Cookware\"\n```\n\n#### {{pluck}} Example 2\n\nIf the `categories` themselves each contained an image object, then you could use dot notation to access that image object's children:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\", \"image\": { \"data\": \"http://...\", \"alt\": \"Bakeware image\"} },\n  { \"id\": 2, \"name\": \"Cookware\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cookware image\"} },\n  { \"id\": 3, \"name\": \"Cutlery\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cutlery image\"} }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'image.data'}}\n```\n\n...would return a comma-separated list of image URLs.\n\n---\n\n\n## <a name=\"array_std\"></a> Standard Array Helpers\n\nThe following standard array helpers are supported on the Stencil framework.\n\n### <a name=\"after\"></a> {{after}}\n\nReturns all of the items in an array after the specified index. Opposite of [before](#before).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}: Collection.\n* `n` {Number}: Starting index (number of items to exclude).\n* `returns` {Array}: Array exluding `n` items.\n\n#### Example\n\n```handlebars\n{{after array 1}}\n//=> '[\"c\"]'\n```\n\n---\n\n## {{arrayify}}\n\nCasts the given `value` to an array.\n\n#### Parameters\n\n* `value` {any}\n* `returns` {Array}\n\n#### {{arrayify}} Example\n\n```handlebars\n{{arrayify \"foo\"}}\n//=> '[\"foo\"]'\n```\n---\n\n## <a name=\"before\"></a> {{before}}\n\nReturns all of the items in the collection before the specified count. Opposite of [after](#after).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}\n* `returns` {Array}: Array excluding items after the given number.\n\n#### {{before}} Example\n\n```handlebars\n{{before array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n---\n\n## {{eachIndex}}\n\n#### Parameters\n\n* `array` {Array}\n* `options` {Object}\n* `returns` {String}\n\n#### {{eachIndex}} Example\n\n```handlebars\n{{#eachIndex collection}}\n  {{item}} is {{index}}\n{{/eachIndex}}\n```\n\n---\n\n### {{filter}}\n\nBlock helper that filters the given array. Renders the block for values that evaluate to `true`; otherwise, returns the inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### {{filter}} Example\n\n```handlebars\n{{#filter array \"foo\"}}AAA{{else}}BBB{{/filter}}\n//=> 'BBB\n```\n\n---\n\n## <a name=\"first\"></a> {{first}}\n\nReturns the first item, or first `n` items, of an array.\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting at `0`.\n* `returns` {Array}\n\n#### {{first}} Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{first array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n---\n\n\n### {{forEach}}\n\nIterates over each item in an array, and exposes the current item in the array as context to the inner block. In addition to the current array item, the helper exposes the following variables to the inner block:\n\n* `index`\n* `total`\n* `isFirst`\n* `isLast`\n\nAlso, `@index` is exposed as a private variable, and additional private variables may be defined as hash arguments.\n\n#### Parameters\n\n* `array` {Array}\n* `returns` {String}\n\n#### {{forEach}} Example\n\n```js\nvar accounts = [\n{'name': 'John', 'email': 'john@example.com'},\n{'name': 'Malcolm', 'email': 'malcolm@example.com'},\n{'name': 'David', 'email': 'david@example.com'}\n];\n\n// example usage\n// {{#forEach accounts}}\n//   <a href=\"mailto:{{ email }}\" title=\"Send an email to {{ name }}\">\n//     {{ name }}\n//   </a>{{#unless isLast}}, {{/unless}}\n// {{/forEach}}\n```\n\n---\n\n### {{inArray}}\n\nBlock helper that renders the block if an array has the given `value`. Optionally, you can specify an inverse block to render when the array does not have the given value.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### {{inArray}} Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#inArray array \"d\"}}\n  foo\n{{else}}\n  bar\n{{/inArray}}\n//=> 'bar'\n```\n\n---\n\n### {{isArray}}\n\nReturns true if `value` is an es5 array.\n\n#### Parameters\n\n* `value` {any}: The value to test.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isArray \"abc\"}}\n//=> 'false'\n```\n\n### <a name=\"last\"></a> {{last}}\n\nReturns the last item, or last `n` items, of an array. Opposite of [first](#first).\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting with the last item.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{last array 2}}\n//=> '[\"d\", \"e\"]'\n```\n\n### {{lengthEqual}}\n\nBlock helper that compares the length of the given array to the number passed as the second argument. If the array length is equal to the given `length`, the block is returned. Otherwise, you have the option of returning an inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `length` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}\n//=> 'BBB'\n```\n\n### {{map}}\n\nReturns a new array, created by calling `function` on each element of the given `array`.\n\n#### Parameters\n\n* `array` {Array}\n* `fn` {Function}\n* `returns` {String}\n\n#### Example\n\nGiven an array `['a', 'b', 'c']`:\n\n```js\n// register `double` as a helper\nfunction double(str) {\n  return str + str;\n}\n// then used like this:\n// {{map array double}}\n//=> '[\"aa\", \"bb\", \"cc\"]'\n```\n\n### {{some}}\n\nBlock helper that returns the block *if* the callback returns true for some value in the given array.\n\n#### Parameters\n\n* `array` {Array}\n* `cb` {Function}: Callback function.\n* {Options}: Handlebars-provided options object.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `[1, 'b', 3]`:\n\n```handlebars\n{{#some array isString}}\n  Render me if the array has a string.\n{{else}}\n  Render me if it doesn't.\n{{/some}}\n//=> 'Render me if the array has a string.'\n```\n\n### {{sort}}\n\nSorts the given `array`. If an array of objects is passed, you may optionally pass (as the second argument) a `key` to sort on. Alternatively, you may pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `key` {String|Function}: The object key to sort by, or a sorting function.\n\n#### Example\n\nGiven an array `['b', 'a', 'c']`:\n\n\n```handlebars\n{{sort array}}\n//=> '[\"a\", \"b\", \"c\"]'\n```\n\n### {{sortBy}}\n\nSorts an `array`. If an array of objects is passed, you may optionally pass a `key` to sort on as the second argument. You may alternatively pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `props` {String|Function}: One or more properties to sort by, or sorting functions to use.\n\n#### {{sortBy}} Example\n\nGiven an array `[{a: 'zzz'}, {a: 'aaa'}]`:\n\n```handlebars\n{{sortBy array \"a\"}}\n//=> '[{\"a\":\"aaa\"}, {\"a\":\"zzz\"}]'\n```\n---\n\n### <a name=\"withAfter\"></a> {{withAfter}}\n\nUse the items in the array, _after_ the specified index, as context inside a block. Opposite of [withBefore](#withBefore).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### {{withAfter}} Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withAfter array 3}}\n  {{this}}\n{{/withAfter}}\n//=> \"de\"\n```\n\n### <a name=\"withBefore\"></a> {{withBefore}}\n\nUse the items in the array, _before_ the specified index, as context inside a block. Opposite of [withAfter](#withAfter).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### {{withBefore}} Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withBefore array 3}}\n  {{this}}\n{{/withBefore}}\n//=> 'ab'\n```\n\n### <a name=\"withFirst\"></a> {{withFirst}}\n\nUses a collection's first item inside a Handlebars block expression. Opposite of [withLast](#withLast).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### {{withFirst}} Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withFirst array}}\n  {{this}}\n{{/withFirst}}\n//=> 'a'\n```\n"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Stencil Object Model Reference",
            "route": {
              "path": "/stencil-object-model-reference"
            },
            "data": {
              "children": [
                {
                  "title": "Stencil Objects",
                  "route": {
                    "path": "/stencil-objects"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Global Objects & Properties",
                        "route": {
                          "path": "/global-objects"
                        },
                        "data": {
                          "children": [
                            {
                              "title": "Banners",
                              "route": {
                                "path": "/banners"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Elements of marketing banners at page’s top and/or bottom<br>\n\n<b>Handlebars Expressions:</b> <span class=\"inline-code\">{{banner}}</span>, <span class=\"inline-code\">{{{banner}}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">banners</td>\n    <td class=\"\">Blocks of static HTML content to define banners</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">top</span></td>\n    <td class=\"\">Array of HTML content/strings, for custom top-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">bottom</span></td>\n    <td class=\"\">Array of HTML content/strings, for custom bottom-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "Banner"
                                    },
                                    "config": {}
                                  },
                                  {
                                    "type": "callout",
                                    "data": {
                                      "type": "warning",
                                      "body": "Where a banner contains HTML, the <span class=\"inline-code\">banner</span> helper must be placed in triple braces, as in this \nexample: <span class=\"inline-code\">{{{banner}}}</span>. (Double braces would escape the HTML.)",
                                      "title": "Handlebars Formatting Exception"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Breadcrumbs",
                              "route": {
                                "path": "/breadcrumbs"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> Defines a page's breadcrumbs – available on virtually all pages that have a breadcrumb trail<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{breadcrumbs}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Displayed name of this breadcrumb element</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL of this breadcrumb element</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "Stencil-Bread-ref"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Categories",
                              "route": {
                                "path": "/categories"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "text",
                                    "data": "<A NAME=\"Categories\"></a>\n<b>Description:</b> A list of all product categories shown in the current page context; default sorting is by category id, from lowest to highest<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{categories}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">id</td>\n    <td class=\"\">ID of the top-level category listed</td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Name of the top-level category</td>\n  </tr>\n  <tr>\n    <td class=\"\">description</td>\n    <td class=\"\">Description of the top-level category (optional &ndash; when requested in front matter)</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL to the category page</td>\n  </tr>\n  <tr>\n    <td class=\"\">count</td>\n    <td class=\"\">Number of products in this category</td>\n  </tr>\n  <tr>\n    <td class=\"\">children</td>\n    <td class=\"\">List of child categories for this top-level category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">ID of the child category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the child category</td>\n  </tr>\n    <tr>\n    <td class=\"\"><span class=\"indent1\"> description</span></td>\n    <td class=\"\">Description of the child category (optional &ndash; when requested in front matter)</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> url</span></td>\n    <td class=\"\">URL of the child category</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> count</span></td>\n    <td class=\"\">Number of products in this child category</td>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Currency Selector",
                              "route": {
                                "path": "/currency-selector"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of all supported currencies, and the currency that is actively in use in the storefront<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{currency_selector}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_id</td>\n    <td class=\"\">ID of the currency actively in use in the storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_flag</td>\n    <td class=\"\">Country flag used to represent the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_name</td>\n    <td class=\"\">Name of the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">active_currency_code</td>\n    <td class=\"\">Code for the active currency</td>\n  </tr>\n  <tr>\n    <td class=\"\">currencies</td>\n    <td class=\"\">List of all the currencies supported for this storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> is_active</span></td>\n    <td class=\"\">Boolean that indicates whether this currency is active for use in the storefront</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> switch_url</span></td>\n    <td class=\"\">The URL to invoke a switch to this currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">ID of the currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the currency</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> flag</span></td>\n    <td class=\"\">Country flag used to visually represent the currency</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "CurrencySel"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Faceted Search",
                              "route": {
                                "path": "/new-subpage-6"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<A NAME=\"FacSearch\"></a>\n<b>Description: </b>Faceted-search object for searching globally, by category, or by brand<br>\n\n<b>Handlebars Expression</b><b>:</b> <span class=\"inline-code\">{{faceted_search}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">facets</td>\n    <td class=\"\">List of all search facets available</td>\n  </tr>\n  <tr>\n    <td class=\"\">selected</td>\n    <td class=\"\">Container for the selected search facets</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">remove_all_url</span></td>\n    <td class=\"\">URL to remove all selected search restrictions</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">items</span></td>\n    <td class=\"\">Currently enabled search facets</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "FacetedSearch"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Featured Products",
                              "route": {
                                "path": "/new-subpage-2"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of all the featured products for the BigCommerce storefront<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{products.featured}}</span><br>\n\n<b>Object Properties:</b> References the <a href=\"/docs/common-product-card-model\">product card model</a>.",
                                    "header": {
                                      "anchor": "FeatProducts"
                                    }
                                  },
                                  {
                                    "type": "text",
                                    "data": "<b> Usage Example: </b>\n\nFrom Stencil's base Cornerstone theme, the example below displays the global `{{products.featured}}` object on the `<theme-name>/templates/pages/home.html` page template.\n\nFirst, to declare the object, the following [front matter](/docs/using-yaml-front-matter) must be placed at the top of this template. This particular declaration also limits the number of featured products to be displayed:\n\n```\n---\nproducts:\n    [...]\n    featured:\n        limit: {{theme_settings.homepage_featured_products_count}}\n---\n```\nThe `homepage_featured_products_count` limit is one of two relevant variables defined in Cornerstone's [`config.json`&#160;file](/docs/configjson-reference), here:\n\n```\n  \"settings\": {\n    [...]\n    \"homepage_featured_products_count\": 8,\n    [...]\n    \"homepage_featured_products_column_count\": 4,\n    [...]    \n```\n\nIn the body of the `home.html` template, the following Handlebars conditional statement displays the featured-products object declared above:\n\n```\n    {{#if products.featured}}\n        {{> components/products/featured products=products.featured columns=theme_settings.homepage_featured_products_column_count}}\n    {{/if}}\n```\n\nThis statement formats the featured-products display according to the `homepage_featured_products_column_count` variable, also defined in the `config.json` excerpt above."
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Footer",
                              "route": {
                                "path": "/footer"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>The footer content for each storefront page<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{footer}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">sitemap_url</td>\n    <td class=\"\">The URL to the sitemap, based on store’s SEO setting</td>\n  </tr>\n  <tr>\n    <td class=\"\">scripts</td>\n    <td class=\"\">Scripts to be loaded after the HTML has loaded; includes performance metrics</td>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Home Slide Show",
                              "route": {
                                "path": "/home-slide-show"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description:</b> A list of images, text, and style assets for a storefront’s image slide show<br>\n\n<b>Handlebars Expression: </b><span class=\"inline-code\">{{carousel}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">swap_frequency</td>\n    <td class=\"\">Indicates how often (in seconds) the slides will change; the value must be between 1 and 90,000 seconds</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">slides</td>\n    <td class=\"\">Object containing properties for each slide in the slideshow</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"><span class=\"indent1\">image</span></td>\n    <td class=\"\">Path to the image file used on this slide</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">alt_text</span></td>\n    <td class=\"\">Alt text for the image</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">url</span></td>\n    <td class=\"\">URL to which the image will link</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">heading</span></td>\n    <td class=\"\">Heading message defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">heading_color</span></td>\n    <td class=\"\">Color of the heading text</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">text</span></td>\n    <td class=\"\">Subheading defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">text_color</span></td>\n    <td class=\"\">Color of the subheading text</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">button_text</span></td>\n    <td class=\"\">Text displayed on a call-to-action button defined by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">button_text_color</span></td>\n    <td class=\"\">Color of the button</td>\n  </tr>\n</table>",
                                    "header": {
                                      "anchor": "SlideShow"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "HTML Head",
                              "route": {
                                "path": "/html-head"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Data to be included in the HTML &lt;head&gt; element<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{head}}</span><br>\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">character_set</td>\n    <td class=\"\">The character set to specify</td>\n  </tr>\n  <tr>\n    <td class=\"\">meta_tags</td>\n    <td class=\"\">Meta tags to improve store SEO</td>\n  </tr>\n  <tr>\n    <td class=\"\">title</td>\n    <td class=\"\">Current page’s title</td>\n  </tr>\n  <tr>\n    <td class=\"\">stylesheets</td>\n    <td class=\"\">CSS files to be included</td>\n  </tr>\n  <tr>\n    <td class=\"\">scripts</td>\n    <td class=\"\">Scripts to be loaded in the &lt;head&gt; tag</td>\n  </tr>\n  <tr>\n    <td class=\"\">favicon</td>\n    <td class=\"\">The store’s favicon (Favorite icon)</td>\n  </tr>\n  <tr>\n    <td class=\"\">rsslinks</td>\n    <td class=\"\">RSS feeds to improve SEO</td>\n  </tr>\n  </tr>\n</table>"
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Is_ajax",
                              "route": {
                                "path": "/is-ajax"
                              },
                              "data": {
                                "blocks": [
                                  {
                                    "type": "html",
                                    "data": "<b>Description: </b>Boolean; returns true if the current executing request is an Ajax request<br>\n\n<b>Handlebars Expression:</b> <span class=\"inline-code\">{{is_ajax}}</span><br>",
                                    "header": {
                                      "anchor": "IsAjax"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "title": "Login",
                              "route": {
                                "path": "/login"
                              },
                              "data": {}
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "blocks": [
                {
                  "type": "html",
                  "data": "<a name=\"Stencil-Obj-ref\"></a>The entries in this section list and describe the objects<!--, custom operators, and data resources--> and properties that you can access programmatically via Handlebars expressions:\n\n<ul>\n  <!-- <li><a href=\"/docs/custom-handlebars-helpers\">Stencil Custom Handlebars Helpers</a></li> -->\n <li><a href=\"/stencil-object-model-reference/global-objects\">Global Objects (subsection)</a></li>\n <li><a href=\"/stencil-object-model-reference/common-object-formats\">Common Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/product-resources\">Product Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/category-resources\">Category Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/brand-resources\">Brand Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/cart-resources\">Cart Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/customer-resources\">Customer Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/blog-resources\">Blog Objects</a></li>\n <li><a href=\"/stencil-object-model-reference/forms-resources\">Forms Objects</a></li>\n</ul>"
                }
              ]
            }
          },
          {
            "title": "Event Hooks",
            "route": {
              "path": "/event-hooks"
            },
            "data": {
              "children": [
                {
                  "title": "Hook Examples",
                  "route": {
                    "path": "/hook-examples"
                  },
                  "data": {}
                },
                {
                  "title": "Remote API Example",
                  "route": {
                    "path": "/remote-api-example"
                  },
                  "data": {}
                },
                {
                  "title": "Data Tags/Event Hook Reference",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "stencil-utils API Reference",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Conditional-Logic Examples",
            "route": {
              "path": "/conditional-logic-examples"
            },
            "data": {
              "children": [
                {
                  "title": "Catalog Price Object: How Properties interact",
                  "route": {
                    "path": "/catalog-price-object"
                  },
                  "data": {}
                },
                {
                  "title": "Cart Price Properties: Relationships",
                  "route": {
                    "path": "/cart-price-relationships"
                  },
                  "data": {}
                },
                {
                  "title": "Calling Theme-Wide Variables via Handlebars",
                  "route": {
                    "path": "/calling-theme-wide-variables"
                  },
                  "data": {}
                },
                {
                  "title": "Dynamic Content Rendering on Stencil Storefronts",
                  "route": {
                    "path": "/dynamic-content-rendering"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "CSS And Design Assets",
            "route": {
              "path": "/css-and-design-assets"
            },
            "data": {
              "children": [
                {
                  "title": "Navigating Stencil Design Assets",
                  "route": {
                    "path": "/navigating-stencil-design-assets"
                  },
                  "data": {}
                },
                {
                  "title": "Components/Design Patters",
                  "route": {
                    "path": "/components-design-patterns"
                  },
                  "data": {}
                },
                {
                  "title": "Layouts Directory",
                  "route": {
                    "path": "/layouts-directory"
                  },
                  "data": {}
                },
                {
                  "title": "Settings Directory",
                  "route": {
                    "path": "/settings-directory"
                  },
                  "data": {}
                },
                {
                  "title": "Utilities Directory",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "New Subpage",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Templates Reference",
            "route": {
              "path": "/templates-reference"
            },
            "data": {
              "children": [
                {
                  "title": "Navigating the Templates Directory",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Components Subdirectory",
                        "route": {
                          "path": "/new-subpage-3"
                        },
                        "data": {}
                      },
                      {
                        "title": "Layout Subdirectory",
                        "route": {
                          "path": "/new-subpage-2"
                        },
                        "data": {}
                      },
                      {
                        "title": "Pages Subdirectory",
                        "route": {
                          "path": "/new-subpage-1"
                        },
                        "data": {}
                      },
                      {
                        "title": "Stencil with Disqus",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      }
                    ]
                  }
                },
                {
                  "title": "Custom Templates",
                  "route": {
                    "path": "/components-and-compilation"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Authoring, Testing, and Uploading Custom Templates",
                        "route": {
                          "path": "/new-subpage-2"
                        },
                        "data": {}
                      },
                      {
                        "title": "Assigning Templates to Pages",
                        "route": {
                          "path": "/new-subpage-1"
                        },
                        "data": {}
                      },
                      {
                        "title": "Switching Themes with Custom Templates",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Theme Updates with  Custom Templates",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Limitations on Custom Templates",
                        "route": {
                          "path": "/new-subpage-3"
                        },
                        "data": {}
                      }
                    ]
                  }
                },
                {
                  "title": "Stencil Checkout",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Preparing Stencil for Optimized One-Page Checkout",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Optimized One Page Checkout",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Currency Conversion",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Multi Language Checkout",
                        "route": {
                          "path": "/new-subpage"
                        },
                        "data": {}
                      },
                      {
                        "title": "Checkout/Confirmation Injection Options",
                        "route": {
                          "path": "/new-subpage-1"
                        },
                        "data": {}
                      },
                      {
                        "title": "Implementing a custom checkout",
                        "route": {
                          "path": "/new-subpage-2"
                        },
                        "data": {}
                      },
                      {
                        "title": "Styling the Apple Pay Button",
                        "route": {
                          "path": "/new-subpage-3"
                        },
                        "data": {}
                      },
                      {
                        "title": "Customizing Invoices and Packing Slips",
                        "route": {
                          "path": "/new-subpage-4"
                        },
                        "data": {}
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Internationalization/Localization",
            "route": {
              "path": "/internationalization-and-localization"
            },
            "data": {
              "children": [
                {
                  "title": "Localizing Stores",
                  "route": {
                    "path": "/new-subpage-3"
                  },
                  "data": {}
                },
                {
                  "title": "Basis for Internationalization",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {}
                },
                {
                  "title": "Required Subdirectories",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "Localization File Structure",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                },
                {
                  "title": "Invoking Translation Keys",
                  "route": {
                    "path": "/new-subpage-4"
                  },
                  "data": {}
                }
              ]
            }
          },
          {
            "title": "Javascript Customization",
            "route": {
              "path": "/javascript-customization"
            },
            "data": {
              "children": [
                {
                  "title": "Adding Javascript to Stencil Theme",
                  "route": {
                    "path": "/new-subpage-4"
                  },
                  "data": {}
                },
                {
                  "title": "Basic Non NPM Example",
                  "route": {
                    "path": "/new-subpage-3"
                  },
                  "data": {}
                },
                {
                  "title": "Basic NPM example",
                  "route": {
                    "path": "/new-subpage-2"
                  },
                  "data": {}
                },
                {
                  "title": "Advanced NPM Example",
                  "route": {
                    "path": "/new-subpage-1"
                  },
                  "data": {}
                },
                {
                  "title": "Page Types and Life Cycle",
                  "route": {
                    "path": "/new-subpage"
                  },
                  "data": {}
                }
              ]
            }
          }
        ],
        "blocks": [
          {
            "type": "text",
            "data": "# Welcome to the BigCommerce Stencil Developer Documentation"
          },
          {
            "type": "text",
            "data": "---"
          },
          {
            "type": "text",
            "data": "## Objective of this documentation\n\nThis documentation is intended to inform developers about the Stencil theming engine and how it can allow you as a developer to create beautiful, dynamic, and powerful storefronts.\n\n*Reference the [BigCommerce Developer Documentation Glossary](www.google.com) for any terminology that may sound foreign to you when reading the Stencil Developer Documentation.*"
          },
          {
            "type": "text",
            "data": "---"
          },
          {
            "type": "text",
            "data": "## What is Stencil?\n\nStencil is the theming engine for the BigCommerce platform. Stencil is the engine for the BigCommerce Cornerstone theme, which is the foundation a theme developer needs to quickly start developing premium, custom themes with Stencil. \n\nStencil also provides features that allow merchants to customize their storefront's look and feel with no coding, making Stencil a powerful and useful engine for all audiences."
          },
          {
            "type": "text",
            "data": "---"
          },
          {
            "type": "text",
            "data": "<h3></a> Video Demo</h2>\n\nWatch Stencil senior developer's tour of Stencil's key components:<br><p></p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/p5SR8N0SeCg\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n\n\n\n\n\n\n\n\n\n\n"
          },
          {
            "type": "text",
            "data": "---"
          },
          {
            "type": "text",
            "data": "## Stencil Development Features and Technology Stack\n\nStencil's provides the following features, allowing BigCommerce theme developers to create beautiful, dynamic, and powerful storefronts.\n\n---\n\n**Stencil Command Line Interface (Stencil CLI)**\n\nThe Stencil CLI enables developers to locally develop and customize on any Stencil theme with no impact on a merchant's live storefront during the development process. When locally developing, you will have access to real-time Browsersync preview and testing across desktop, mobile, and tablet devices/viewports.\n\nStencil CLI runs on the Node.js runtime environment. Installing Node.js also provides the required npm package manager.\n\n---\n**Logic-Based Templates** \n\nStencil's logic based templates allow BigCommerce developers to customize storefront pages efficiently with the lightweight templating languge, Handlebars.js.  Handlebars allows you to efficiently embed dynamic and conditional logic onto your storefront pages.\n\n---\n\n**Sass/SCSS Support**\n\nStencils Sass and SCSS support allows developers to nest properties, variables, and mixins. Use the familiar Foundation framework (provided) or substitute your choice of framework.\n\nStencil's Cornerstone base theme uses a BigCommerce pattern library called Citadel, which is built on top of the ZURB Foundation framework, version 5.5.3. Stencil does not support Foundation 6.x, due to breaking changes introduced between versions 5.x and 6.x.\n\nFoundation offers the framework for creating a responsive theme. You have the option of swapping out Foundation for another framework, although doing so would require significant work.\n\nFoundation assets bundled with Cornerstone are located in these subdirectories: \n\n* `Cornerstone/assets/scss/settings/foundation/ `\n* `Cornerstone/assets/scss/components/foundation/`\n\nCitadel extends Foundation’s mixins and components to provide Stencil’s own mixins, extensible components, and utilities. These include drop-down lists, forms, and similar resources. Citadel resources are named according to BEM and SUIT CSS conventions. Classes are named functionally, rather than based on visual presentation or content. Our style guide is published here.\nCitadel assets bundled with Cornerstone are located in these Cornerstone subdirectories: \n\n* `Cornerstone/assets/scss/settings/citadel/`\n* `Cornerstone/assets/scss/components/citadel/`\n\nMore detailed information about the Citadel and Foundation SCSS components, and their naming conventions will be covered in *Components and Design Patterns*.\n\n---\n\n**Page-specific Resource Definition**\n\nSpecify the dynamic content you want to be displayed on your storefront pages with YAML formatted front matter.\n\n---\n\n**Javascript Event Hooks**\n\nYour Stencil themes can access remote objects through event hooks, using the hooks to trigger defined events based on shopper behavior. This will allow you to collect product data and optimize a shopper's experience.\n\nTo facilitate theme-building, BigCommerce provides the stencil-utils client-side JavaScript library for managing event hooks.\n\n---\n\n**Stencil Theme Editor**\n\nThe Stencil Theme Editor is a browser-based tool that enables merchants to rapidly customize a theme's look and feel with no coding. \n\nBigCommerce theme developers' configuration choices determine which theme aspects merchants can customize, and the range of choices for each aspect.\n\nStencil's Theme Editor graphical interface enables merchants and store administrators to make styling changes to the theme currently applied to their storefront. \n\nAs a theme developer, you have the capability to define which style settings appear in the Stencil Theme Editor. You can grant access to colors, fonts, display/hiding of page features, and number of products/entries to display per feature.\n\n---\n\n**Stencil Theme Variations**\n\nEach Stencil theme can contain one to four variations. You can optimize individual variations for specific markets, audiences and styles – while still managing and distributing all of these variations as one theme.\nCornerstone comes with 3 variations: Cornerstone Light, Cornerstone Warm, and Cornerstone Bold.\n\n---\n\n**Responsive, Mobile-Friendly Themes**\n\nBigCommerce stores powered by Stencil allow shoppers to have a first class experience across any device.\n\n---\n\nThis is simply a summary Stencil's core features. Continue reading through the Stencil Developer Documentation to learn about Stencil's full capabilities."
          },
          {
            "type": "text",
            "data": "---"
          },
          {
            "type": "text",
            "data": "## Legacy Framework Documentation\n\nIf you are looking for information on Blueprint, BigCommerce's legacy theme framework, you can access that below:\n\n* [Themes (Blueprint)](https://developer.bigcommerce.com/themes)\n* [Stores API reference](https://developer.bigcommerce.com/api)"
          }
        ]
      }
    },
    "/api-docs": {
      "title": "API Docs",
      "data": {
        "blocks": [
          {
            "type": "html",
            "data": "<div class=\"cBrCommunityTheme\" style=\"display:block;\">\n  <div class=\"body-inner main-content\">\n    <div class=\"wrapper-for-sticky-footer-structure bg-x3lightgrey\">\n      <div class=\"header-pad\"></div>\n      <div>\n        <div class=\"siteforceContentArea\">\n          <div class=\"ui-widget\">\n            <div class=\"content-wrap\">\n              <div style=\"padding: 62px 0px 70px;background: url(&#x22;https://cdn6.bigcommerce.com/s-qtmbtj/product_images/uploaded_images/hero-bg.png&#x22;) center bottom no-repeat;background-repeat: repeat-x;background-position-y: 50%;\">\n                <div class=\"container\">\n                  <h1 class=\"h1 panel-title__text\">API Documentation</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div><!-- landing tiles -->\n        <div class=\"container siteforceContentArea\" style=\"margin-top: 10% margin-bottom: 5%;\">\n          <div data-region-name=\"landingTiles\">\n            <div class=\"ui-widget\">\n              <div class=\"lift-content cBrLandingTiles\">\n                <div>\n                  <div class=\"container\">\n                    <div class=\"row row--pad\" style=\"background-color: #F6F7F9;\">\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\">\n                        <div class=\"panel-media\" id=\"community\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/api-docs/catalog/products/products-overview\">Getting Started</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\">\n                        <div class=\"panel-media\" id=\"blog\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/api-docs/api-reference\">Webhooks</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\">\n                        <div class=\"panel-media\" id=\"ideas\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/api-docs/getting-started/webhooks/about-webhooks\">Orders</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\">\n                        <div class=\"panel-media\" id=\"community\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/stencil-docs\">Storefront APIs</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\">\n                        <div class=\"panel-media\" id=\"community\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/stencil-docs\">Catalog Products</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad\">\n                        <div class=\"panel-media\" id=\"community\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://via.placeholder.com/350x350\" srcset=\"https://via.placeholder.com/350x350\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\"><a href=\"/stencil-docs\">Join the App Marketplace</a></h4>\n                            <p class=\"panel-media__text type--sm\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat. Fusce vitae purus vel tortor molestie pulvinar.</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"empty-block-for-sticky-footer\"></div>\n        </div>\n        <footer class=\"footer\">\n          <div class=\"footer__top\">\n            <div class=\"container\">\n              <div class=\"footer__wrap-menu clr\" style=\"padding-left: 3%;\">\n                <ul class=\"footer__menu\">\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://status.bigcommerce.com/\">API Status</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://www.bigcommerce.com/partners/\">Become a Partner</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://www.bigcommerce.com/partners/affiliates/\">Become an Affiliate</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://forum.bigcommerce.com/s/article/BigCommerce-Community-Guide\">Community Guide</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://forum.bigcommerce.com/s/article/Community-Code-of-Conduct\">Community Code of Conduct</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://forum.bigcommerce.com/s/article/Community-Terms-of-Use\">Community Terms of Use</a></li>\n                  <li class=\"footer__menu-item\" style=\"color:#fff\"><a class=\"footer__menu-link\" href=\"https://www.bigcommerce.com/terms/api-terms/\">API Terms of Service</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"footer__bottom\">\n            <div class=\"container\">\n              <div class=\"row--pad clr\">\n                <div class=\"column-md-12 column-lg-6 column--pad\"><a class=\"footer__logo icon-svg-logo-alt\" href=\"#\"></a>\n                  <p class=\"footer__copy\">©2017 BigCommerce Pty. Ltd. Shopping Cart Software</p>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad\">\n                  <div class=\"footer__wrap-soc-sharing\">\n                    <ul class=\"footer__soc-sharing\">\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"http://twitter.com/Bigcommerce\">Twitter</a></li>\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"http://www.facebook.com/Bigcommerce\">Facebook</a></li>\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"http://www.linkedin.com/company/bigcommerce\">Linkedin</a></li>\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"http://www.youtube.com/BigcommerceDotCom\">Youtube</a></li>\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"http://pinterest.com/bigcommerce/\">Pinterest</a></li>\n                      <li class=\"footer__soc-sharing-item\"><a class=\"footer__soc-sharing-link\" href=\"https://www.instagram.com/bigcommerce/\">Google +</a></li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  </div>\n</div>"
          }
        ],
        "children": [
          {
            "title": "Getting Started",
            "route": {
              "path": "/getting-started"
            },
            "data": {
              "children": [
                {
                  "title": "About the API",
                  "route": {
                    "path": "/about-api"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "About Our API",
                        "route": {
                          "path": "/about-our-api"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>About Our API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#about-api__available-api\">Available API's</a></li>\n        <li><a href=\"#about-api_get-help\">Support</a></li>\n        <li><a href=\"#about-api_definitions\">Definitions</a></li>\n    \t\t<li><a href=\"https://www.bigcommerce.com/terms/api-terms/\">Terms of Service</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "Want to get started making API Requests right away? Check out the [QuickStart](http://).\n\n\nThe BigCommerce set of API's allow you to create apps, automate store processes or build headless ecommerce solutions. Need inspiration on what to build? Visit our [apps marketplace](https://www.bigcommerce.com/apps/). "
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Available API's\n\n\n|API | Description |\n|--|--|\n| Catalog | The Catalog API manages products, brands and categories for a store. |\n| Store Infomation | Get system time ttamp and store metadata|\n| Currency | Manage currency displayed on the storefront |\n| Geography | Get a list of states and countries  |\n| Tax Class | Get available tax classes on a store |\n| Storefront Cart | Create a cart or scrape cart data from the front end |\n| Storefront Checkout | Create a checkout or scrape checkout data from the front end |\n| Server to Server Cart | Create a cart and bypass the BigCommerce front end |\n| Server to Server Checkout | Create a checkout and bypass the BigCommerce front end|\n| Orders | Create and manage orders |\n| Order Transactions | View order payment information |\n| Storefront Orders | View storefront order information |\n| Customers | Manage store customers  |\n| Subscribers | Manage newsletter subscribers |\n| Price Lists | Create variations of catalog pricing. |\n| Scripts | Add a script to a stores page |\n| Marketing | Allow for promotions to be created. Includes Coupons, Banners and Gift Certificates. |\n| Payment Methods | Get a list of available payment methods. |\n| Shipping | Create and manage shipping methods and zones. |\n| Store Content | Mange the store's blog, web pages and redirects. |\n| Themes | Manage store's themes. |",
                              "header": {
                                "anchor": "about-api__available-api"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Support\n\n### [Developer Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers)\nThis is a great place to get help from other developers who work on the BigCommerce platform. If you have BigCommerce specific questions this is the best place to ask. It's also great for beginners to get assistance. \n\n### [StackOverflow](https://stackoverflow.com/questions/tagged/bigcommerce)\nAre you a more experienced developer or have a programming language specific language? This is a good place to ask questions and get help. ",
                              "header": {
                                "anchor": "about-api_get-help"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Definitions\n\nThere are a few BigCommerce specific definitions to know when reading the documentation. \n\n* **PDP**: [Product Detail Page.](https://www.quora.com/What-is-PLP-and-PDP) It displays the specifics of a product.\n* **PLP**: [Product Listing Page.](https://www.quora.com/What-is-PLP-and-PDP) It displays a list of products.\n* **x-nullable**: Field can accept a null value.\n* **x-url**: A check to make sure the string format is a url.\n* **x-required**: For API requests. Required on /POST only.\n* **Merchant**: Anyone selling products on BigCommerce.\n* **Shopper**: Anyone browsing or purchasing on a store.",
                              "header": {
                                "anchor": "about-api_definitions"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "QuickStart",
                        "route": {
                          "path": "/making-requests"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Making Requests</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#making-requests_prerequisites\">Prerequisites<a/></li>\n        <li><a href=\"#making-requests_get-products\">Getting a List of Products</a></li>\n        <li><a href=\"#making-requests_create-a-product\">Creating a Product</a></li>\n        <li><a href=\"#making-requests_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Making a Request\n\n### Prerequisites\n* [API Credentials](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials)\n* [Scope](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes) set to `Products Modify`\n* BigCommerce Store (`store_hash`)\n\n*Note: You can use any API client (like Postman) for this walkthrough, but these steps are written with the built-in HTTP request maker in mind.*",
                              "header": {
                                "anchor": "making-requests_prerequisites"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Getting a List of Products\n\nIn this walkthrough, we'll get a list of products from the store, use a limit filter to only show the first 10 products, and sort products by name. \n\nIn the request maker below, we've prefilled the URL to /GET products: `https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products`\n\nTo add [filters](/api-docs/getting-started/about-api/filtering), append `?page=10&sort=name` to the end of the request URL.\n\nIn the request maker tabs, replace these placeholders with the appropriate values:  \n- {X-Auth-Token} Header - Access Token from API Credentials\n- {X-Auth-Client} Header - Client Id from API Credentials\n- store_hash Variable - the hash in your api path \n\t- https://api.bigcommerce.com/stores/{store_hash}/v3/\n\n \nHit the send button and review your response.",
                              "header": {
                                "anchor": "making-requests_get-products"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "method": "get",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "headers": {
                                  "Accept": "application/sjon",
                                  "Content-Type": "application/json",
                                  "X-Auth-Token": "{X-Auth-Token}",
                                  "X-Auth-Client": "{X-Auth-Client}"
                                },
                                "query": {
                                  "limit": "10",
                                  "sort": "name"
                                }
                              },
                              "header": {
                                "title": "Get a List of Products"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": [\n        {\n            \"id\": 174,\n            \"name\": \"1L Le Parfait Jar\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 7.95,\n            \"cost_price\": 0,\n            \"retail_price\": 10,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 7.95,\n            \"categories\": [\n                23,\n                21\n            ],\n            \"brand_id\": 36,\n            \"option_set_id\": null,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 7,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"jar, glass\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:46+00:00\",\n            \"date_modified\": \"2018-09-12T17:32:23+00:00\",\n            \"view_count\": 14,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/1l-le-parfait-jar/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 345,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 167,\n            \"name\": \"Able Brewing System\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 225,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 225,\n            \"categories\": [\n                23,\n                21\n            ],\n            \"brand_id\": 43,\n            \"option_set_id\": 52,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 2,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:36+00:00\",\n            \"date_modified\": \"2018-08-20T15:11:17+00:00\",\n            \"view_count\": 21,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/able-brewing-system/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 338,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 181,\n            \"name\": \"All Purpose Cleaner\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 15,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 15,\n            \"categories\": [\n                21,\n                22\n            ],\n            \"brand_id\": 37,\n            \"option_set_id\": null,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 0,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:51+00:00\",\n            \"date_modified\": \"2018-08-15T15:01:15+00:00\",\n            \"view_count\": 0,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/all-purpose-cleaner/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 352,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 193,\n            \"name\": \"BigCommerce Coffee Mug\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"\",\n            \"weight\": 4,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 10,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 10,\n            \"categories\": [\n                21\n            ],\n            \"brand_id\": 38,\n            \"option_set_id\": 61,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 0,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-09-05T20:19:06+00:00\",\n            \"date_modified\": \"2018-09-20T20:25:01+00:00\",\n            \"view_count\": 0,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/bigcommerce-coffee-mug/\",\n                \"is_customized\": false\n            },\n            \"base_variant_id\": 385,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 194,\n            \"name\": \"BigCommerce Coffee Mug_2\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"\",\n            \"weight\": 3,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 12,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 12,\n            \"categories\": [\n                21\n            ],\n            \"brand_id\": 38,\n            \"option_set_id\": 60,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 0,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-09-05T20:20:47+00:00\",\n            \"date_modified\": \"2018-09-20T19:53:38+00:00\",\n            \"view_count\": 1,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/bigcommerce-coffee-mug_2/\",\n                \"is_customized\": false\n            },\n            \"base_variant_id\": null,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 195,\n            \"name\": \"BigCommerce Coffee Mug_3\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"\",\n            \"weight\": 3,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 11,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 11,\n            \"categories\": [\n                21\n            ],\n            \"brand_id\": 38,\n            \"option_set_id\": 50,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 400,\n            \"inventory_warning_level\": 40,\n            \"inventory_tracking\": \"variant\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 0,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-09-05T20:22:19+00:00\",\n            \"date_modified\": \"2018-09-20T18:08:27+00:00\",\n            \"view_count\": 4,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/bigcommerce-coffee-mug_3/\",\n                \"is_customized\": false\n            },\n            \"base_variant_id\": null,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 184,\n            \"name\": \"Canvas Laundry Cart\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n            \"weight\": 15,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 249,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 249,\n            \"categories\": [\n                23,\n                22\n            ],\n            \"brand_id\": 36,\n            \"option_set_id\": 51,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 1494,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"variant\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 9,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:53+00:00\",\n            \"date_modified\": \"2018-09-18T18:59:38+00:00\",\n            \"view_count\": 34,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/canvas-laundry-cart/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": null,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 173,\n            \"name\": \"Ceramic Measuring Spoon Set\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</p>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 18,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 18,\n            \"categories\": [\n                23,\n                21\n            ],\n            \"brand_id\": 36,\n            \"option_set_id\": null,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 1,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:45+00:00\",\n            \"date_modified\": \"2018-08-20T15:14:23+00:00\",\n            \"view_count\": 0,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/ceramic-measuring-spoon-set/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 344,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 170,\n            \"name\": \"Ceramic Measuring Spoons\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 25,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 25,\n            \"categories\": [\n                23,\n                21\n            ],\n            \"brand_id\": 36,\n            \"option_set_id\": null,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 1,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:42+00:00\",\n            \"date_modified\": \"2018-09-18T18:56:32+00:00\",\n            \"view_count\": 0,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/ceramic-measuring-spoons/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 341,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        },\n        {\n            \"id\": 176,\n            \"name\": \"Ceramic Sugar & Creamer Set\",\n            \"type\": \"physical\",\n            \"sku\": \"\",\n            \"description\": \"<div data-position=\\\"description\\\"> <div class=\\\"description\\\"> <div class=\\\"rte-content\\\"> <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p> </div> </div> </div>\",\n            \"weight\": 1,\n            \"width\": 0,\n            \"depth\": 0,\n            \"height\": 0,\n            \"price\": 59,\n            \"cost_price\": 0,\n            \"retail_price\": 0,\n            \"sale_price\": 0,\n            \"map_price\": 0,\n            \"tax_class_id\": 0,\n            \"product_tax_code\": \"\",\n            \"calculated_price\": 59,\n            \"categories\": [\n                23,\n                21\n            ],\n            \"brand_id\": 36,\n            \"option_set_id\": null,\n            \"option_set_display\": \"right\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"inventory_tracking\": \"none\",\n            \"reviews_rating_sum\": 0,\n            \"reviews_count\": 0,\n            \"total_sold\": 1,\n            \"fixed_cost_shipping_price\": 0,\n            \"is_free_shipping\": false,\n            \"is_visible\": true,\n            \"is_featured\": false,\n            \"related_products\": [\n                -1\n            ],\n            \"warranty\": \"\",\n            \"bin_picking_number\": \"\",\n            \"layout_file\": \"product.html\",\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"search_keywords\": \"\",\n            \"availability\": \"available\",\n            \"availability_description\": \"\",\n            \"gift_wrapping_options_type\": \"any\",\n            \"gift_wrapping_options_list\": [],\n            \"sort_order\": 0,\n            \"condition\": \"New\",\n            \"is_condition_shown\": false,\n            \"order_quantity_minimum\": 0,\n            \"order_quantity_maximum\": 0,\n            \"page_title\": \"\",\n            \"meta_keywords\": [],\n            \"meta_description\": \"\",\n            \"date_created\": \"2018-08-15T14:48:48+00:00\",\n            \"date_modified\": \"2018-08-31T15:19:27+00:00\",\n            \"view_count\": 0,\n            \"preorder_release_date\": null,\n            \"preorder_message\": \"\",\n            \"is_preorder_only\": false,\n            \"is_price_hidden\": false,\n            \"price_hidden_label\": \"\",\n            \"custom_url\": {\n                \"url\": \"/all/ceramic-sugar-creamer-set/\",\n                \"is_customized\": true\n            },\n            \"base_variant_id\": 347,\n            \"open_graph_type\": \"product\",\n            \"open_graph_title\": \"\",\n            \"open_graph_description\": \"\",\n            \"open_graph_use_meta_description\": true,\n            \"open_graph_use_product_name\": true,\n            \"open_graph_use_image\": true\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"total\": 39,\n            \"count\": 10,\n            \"per_page\": 10,\n            \"current_page\": 1,\n            \"total_pages\": 4,\n            \"links\": {\n                \"next\": \"?limit=10&sort=name&page=2\",\n                \"current\": \"?limit=10&sort=name&page=1\"\n            },\n            \"too_many\": false\n        }\n    }\n}",
                              "header": {
                                "title": "GET Products Response",
                                "subtitle": "200 OK"
                              }
                            },
                            {
                              "type": "text",
                              "data": "The products are returned in a data array that contains each product object. Located at the bottom of the response is the meta object that shows the total number of products being returned, but also the products `per_page` which is 10, set using the limit query in the request.\n\n### Next Steps\n\n* Try including other filter paramters such as name or include and exclude. See [Get All Products](/api-docs/api-reference/v3-api/catalog-api/products/getproducts) for a full list of available filters. "
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create a Product\n\nIn this walkthrough, we'll create an example product: BigCommerce Hoodie. The minimum parameters to create a product are: name, price, category, type and weight. \n\n* Name: The name of your product as a string.\n* Price: How much the items costs in number format. \n* Category: The `{category_id}` for the category this product belongs to. An item can be assigned to more than one category. You can /GET the category id by using:\n\n`https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/categories`\n\n* Type: Is the item physical or digital?\n\t- Physical items are anything that is shipped to the customer, such as a t-shirt.\n\t- Digital items are products that the customer downloads, such as a PDF of an ebook. \n* Weight: How much the product weighs as a number. The measurement unit is determined by the [store settings](https://forum.bigcommerce.com/s/article/Store-Settings#physical). \n\nReview the information pre-populated in the Body tab below. Make sure to run a GET request for the categories first and update request with the appropriate category ID.",
                              "header": {
                                "anchor": "making-requests_create-a-product"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "headers": {
                                  "Accept": "application/sjon",
                                  "X-Auth-Token": "{X-Auth-Token}",
                                  "X-Auth-Client": "{X-Auth-Client}",
                                  "Content-Type": "application/json"
                                },
                                "body": "{\n  \"name\": \"BigCommerce Hoodie\",\n  \"type\": \"physical\",\n  \"description\": \"A super soft hoodie to wear\",\n  \"weight\": 5,\n  \"width\": 12,\n  \"price\": 25.99,\n  \"categories\": [\n    // set your category here. Accepts a comma seperated list\n  ],\n  \"condition\": \"New\"\n}\n"
                              },
                              "header": {
                                "title": "Create a Product"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": {\n        \"id\": 196,\n        \"name\": \"BigCommerce Hoodie\",\n        \"type\": \"physical\",\n        \"sku\": \"\",\n        \"description\": \"A super soft hoodie to wear\",\n        \"weight\": 5,\n        \"width\": 12,\n        \"depth\": 0,\n        \"height\": 0,\n        \"price\": 25.99,\n        \"cost_price\": 0,\n        \"retail_price\": 0,\n        \"sale_price\": 0,\n        \"map_price\": 0,\n        \"tax_class_id\": 0,\n        \"product_tax_code\": \"\",\n        \"calculated_price\": 25.99,\n        \"categories\": [\n            20,\n            21\n        ],\n        \"brand_id\": 0,\n        \"option_set_id\": null,\n        \"option_set_display\": \"right\",\n        \"inventory_level\": 0,\n        \"inventory_warning_level\": 0,\n        \"inventory_tracking\": \"none\",\n        \"reviews_rating_sum\": 0,\n        \"reviews_count\": 0,\n        \"total_sold\": 0,\n        \"fixed_cost_shipping_price\": 0,\n        \"is_free_shipping\": false,\n        \"is_visible\": true,\n        \"is_featured\": false,\n        \"related_products\": [\n            -1\n        ],\n        \"warranty\": \"\",\n        \"bin_picking_number\": \"\",\n        \"layout_file\": \"\",\n        \"upc\": \"\",\n        \"mpn\": \"\",\n        \"gtin\": \"\",\n        \"search_keywords\": \"\",\n        \"availability\": \"available\",\n        \"availability_description\": \"\",\n        \"gift_wrapping_options_type\": \"any\",\n        \"gift_wrapping_options_list\": [],\n        \"sort_order\": 0,\n        \"condition\": \"New\",\n        \"is_condition_shown\": false,\n        \"order_quantity_minimum\": 0,\n        \"order_quantity_maximum\": 0,\n        \"page_title\": \"\",\n        \"meta_keywords\": [],\n        \"meta_description\": \"\",\n        \"date_created\": \"2018-09-21T17:12:59+00:00\",\n        \"date_modified\": \"2018-09-21T17:12:59+00:00\",\n        \"view_count\": 0,\n        \"preorder_release_date\": null,\n        \"preorder_message\": \"\",\n        \"is_preorder_only\": false,\n        \"is_price_hidden\": false,\n        \"price_hidden_label\": \"\",\n        \"custom_url\": {\n            \"url\": \"/bigcommerce-hoodie/\",\n            \"is_customized\": false\n        },\n        \"base_variant_id\": 402,\n        \"open_graph_type\": \"product\",\n        \"open_graph_title\": \"\",\n        \"open_graph_description\": \"\",\n        \"open_graph_use_meta_description\": true,\n        \"open_graph_use_product_name\": true,\n        \"open_graph_use_image\": true,\n        \"variants\": [\n            {\n                \"id\": 402,\n                \"product_id\": 196,\n                \"sku\": \"\",\n                \"sku_id\": null,\n                \"price\": 25.99,\n                \"calculated_price\": 25.99,\n                \"sale_price\": 0,\n                \"retail_price\": 0,\n                \"map_price\": 0,\n                \"weight\": 5,\n                \"width\": 12,\n                \"height\": 0,\n                \"depth\": 0,\n                \"is_free_shipping\": false,\n                \"fixed_cost_shipping_price\": 0,\n                \"calculated_weight\": 5,\n                \"purchasing_disabled\": false,\n                \"purchasing_disabled_message\": \"\",\n                \"image_url\": \"\",\n                \"cost_price\": 0,\n                \"upc\": \"\",\n                \"mpn\": \"\",\n                \"gtin\": \"\",\n                \"inventory_level\": 0,\n                \"inventory_warning_level\": 0,\n                \"bin_picking_number\": \"\",\n                \"option_values\": []\n            }\n        ],\n        \"images\": [],\n        \"primary_image\": null,\n        \"videos\": [],\n        \"custom_fields\": [],\n        \"bulk_pricing_rules\": [],\n        \"reviews\": []\n    },\n    \"meta\": {}\n}",
                              "header": {
                                "title": "Response POST Products",
                                "subtitle": "200 OK"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Next Steps\n* To see a full list of fields that can be sent in a request see [Create a Product](/api-docs/api-reference/v3-api/catalog-api/products/createproduct)\n* Try to make a different product with new attributes."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n\nDid you get a status of 403 Forbidden?\n* Check the Client ID and Client Token.\n* Make sure your request headers are correct.\n* Be sure you replaced `{store_hash}` with your store hash. \n* Make sure the request url is correct.\n\nDid you get a 200 but nothing was returned?\n* Make sure your store has products.\n\nDid you get a status of 404?\n* Check the request url for errors.",
                              "header": {
                                "anchor": "making-requests_troubleshooting"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "V2 versus V3",
                        "route": {
                          "path": "/v2-v3"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>V2 versus V3 API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-v3_advantages\">Advantages of V3 over V2</a></li>\n\t\t<li><a href=\"#v2-v3_products\">Products in V3</a></li>\n\t\t<li><a href=\"#v2-v3_whats-not-in-v3\"> What's not in V3</a></li>\n\t\t<li><a href=\"#v2-v3_recommendations\"> Recommendations</a></li>\n\t\t<li><a href=\"#v2-v3_cheat-sheet\"> Cheat Sheet</a></li>\n\t</ul>\n</div>\n"
                            },
                            {
                              "type": "text",
                              "data": "## Advantages of V3 over V2\n\nThe V3 API introduces a number of improvements designed to improve efficiency. Most tasks can be performed with fewer API calls, and the V3 API supports the inclusion of subresources within a request. For example, you can now create a product with variants and custom fields in a single API call.\n\nEach V3 resource includes a `meta` object at the end of the response, making pagination easier.\n\nAdditionally, metafields have been added to the V3 Products resource so data can be stored against the object. Metafield values can be specific to your application or visible to other applications.\n\nLastly, the V3 API has been optimized for performance, allowing data to be synced quickly.\n \n",
                              "header": {
                                "anchor": "v2-v3_advantages"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Products in V3\n\n### Variants\n\nEvery purchasable entity in the catalog is now a variant, including the product itself. This enables enhanced flows around inventory management, such as the ability to solely use the variants endpoint to manage inventory levels. For more on variants see [Variants](/api-docs/catalog/products/product-variant-options).\n\nIn V3 a variant needs to be created for every combination of option values. In V2 it was possible to create a SKU with a subset of product options.\n\nWe recommend creating products using V3 as BigCommerce starts to move operations to the V3 API. \n\n### Interoperability between V2 and V3\n\nWhen a product option is created in V2 and assigned to a product, trying to edit the option using the V3 API returns a 422 error. \n\n```\n{\n    \"status\": 422,\n    \"title\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\",\n    \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\",\n    \"errors\": {\n        \"product_id\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\"\n    }\n}\n```\n\nThis happens because in V2, options are created globally before being assigned to products. In V3, variant options are assigned at the product level. The way to fix this error is to remove the option set in the control panel or delete it using the API, then re-create the options using V3 variants. \n\n### Options and Modifiers\n\nThere is now a clear separation of [options that define variants](/api-docs/catalog/products/product-variant-options) versus [options that are modifiers of a variant](/api-docs/catalog/products/modifier-options). This simplifies the creation and management of variant prices and modifier adjusters and removes the need to use complex rules, in all but the most extreme cases.\n\nIn V3, options and modifiers are attached directly to the product, without the requirement to create an option set beforehand.\n\nCreating Options on V2 has several steps:\n1. Create the product\n2. Create the options\n3. Create an option set\n4. Assign the option set to the product\n5. Create adjustments, such as price adjustment, using rules\n\nCreating Products and Variants on V3:\n1. Create the product with variants in one call\n2. Create adjustments, such as price adjustment, directly on the variant or modifier\n\nVariants can be included with a GET request to lower the number of API calls being made using `?include=variants`.\n\nV3 includes an endpoint for creating a [Catalog Tree](/api-docs/api-reference/v3-api/catalog/getcatalogsummary).",
                              "header": {
                                "anchor": "v2-v3_products"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## What's not in V3\n\nIn V3, options are attached directly to products. So option sets are not required, and v3 includes no endpoint to manage option sets. However, V3 will respect option sets that have been attached via V2 or the control panel.\n\nMoving forward, new resources will be built in V3 and existing V2 resources will eventually be migrated to V3. Some V3 resources do not have V2 counterparts, and vice versa. \n\n### Complex Rules\n\nMost of the use cases for using V2 rules can be solved by making adjustments directly on variants and modifier options. We recommend using variants as best practice, but in cases where an adjustment depends on the selection of multiple modifier values, V3 includes a Complex Rules resource.\n\n### Product Rules \nAny variant created in v3 with non-null core properties (price, weight, image, purchasability) will create a rule under the hood. The same goes for modifier adjusters. These will show in v2 as product rules, and any edits to them will be shared across API versions.\n\n### Option Sets\nIn our control panel’s Add/Edit Product section, any products created by the V3 API will not have an option set applied, but merchants can still edit the options. If the merchant applies an option set to a V3 product, the product's variants will be removed. Currently, the Add/Edit Product area consumes the V2 API, so products created and managed through the control panel will be converted to the V2 model, using option sets.",
                              "header": {
                                "anchor": "v2-v3_whats-not-in-v3"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Recommendations\nWhen the resource is available in V3, it is best practice to use the V3 endpoint. For resources that do not have a V3 counterpart, like Orders, use V2. Both the V2 and V3 APIs authenticate with Oauth and are designed to be used concurrently within a single application.\n\nWe have created a handy [cheat sheet]() that lists all the differences between V2 and V3 of the API. ",
                              "header": {
                                "anchor": "v2-v3_recommendations"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## V3 and V3 Cheat Sheet\n\nThis identifies the differences between major actions on both versions.\n\nIn the examples below: \n* Simple product is defined as not having variants, modifiers or options.\n* Complex Products are defined as having variants, options and modifiers.",
                              "header": {
                                "anchor": "v2-v3_cheat-sheet"
                              }
                            },
                            {
                              "type": "tabs",
                              "data": {
                                "children": [
                                  {
                                    "title": "Simple Product",
                                    "blocks": [
                                      {
                                        "type": "tabs",
                                        "data": {
                                          "children": [
                                            {
                                              "title": "Get a Product",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "GET /v3/catalog/products/{product_id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Response V3 Get Product"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n    \"data\": {\n        \"id\": 195,\n        \"name\": \"BigCommerce Coffee Mug_3\",\n        \"type\": \"physical\",\n        \"sku\": \"\",\n        \"description\": \"\",\n        \"weight\": 3,\n        \"width\": 0,\n        \"depth\": 0,\n        \"height\": 0,\n        \"price\": 11,\n        \"cost_price\": 0,\n        \"retail_price\": 0,\n        \"sale_price\": 0,\n        \"map_price\": 0,\n        \"tax_class_id\": 0,\n        \"product_tax_code\": \"\",\n        \"calculated_price\": 11,\n        \"categories\": [\n            21\n        ],\n        \"brand_id\": 38,\n        \"option_set_id\": 50,\n        \"option_set_display\": \"right\",\n        \"inventory_level\": 400,\n        \"inventory_warning_level\": 40,\n        \"inventory_tracking\": \"variant\",\n        \"reviews_rating_sum\": 0,\n        \"reviews_count\": 0,\n        \"total_sold\": 0,\n        \"fixed_cost_shipping_price\": 0,\n        \"is_free_shipping\": false,\n        \"is_visible\": true,\n        \"is_featured\": false,\n        \"related_products\": [\n            -1\n        ],\n        \"warranty\": \"\",\n        \"bin_picking_number\": \"\",\n        \"layout_file\": \"product.html\",\n        \"upc\": \"\",\n        \"mpn\": \"\",\n        \"gtin\": \"\",\n        \"search_keywords\": \"\",\n        \"availability\": \"available\",\n        \"availability_description\": \"\",\n        \"gift_wrapping_options_type\": \"any\",\n        \"gift_wrapping_options_list\": [],\n        \"sort_order\": 0,\n        \"condition\": \"New\",\n        \"is_condition_shown\": false,\n        \"order_quantity_minimum\": 0,\n        \"order_quantity_maximum\": 0,\n        \"page_title\": \"\",\n        \"meta_keywords\": [],\n        \"meta_description\": \"\",\n        \"date_created\": \"2018-09-05T20:22:19+00:00\",\n        \"date_modified\": \"2018-09-20T15:28:50+00:00\",\n        \"view_count\": 4,\n        \"preorder_release_date\": null,\n        \"preorder_message\": \"\",\n        \"is_preorder_only\": false,\n        \"is_price_hidden\": false,\n        \"price_hidden_label\": \"\",\n        \"custom_url\": {\n            \"url\": \"/bigcommerce-coffee-mug_3/\",\n            \"is_customized\": false\n        },\n        \"base_variant_id\": null,\n        \"open_graph_type\": \"product\",\n        \"open_graph_title\": \"\",\n        \"open_graph_description\": \"\",\n        \"open_graph_use_meta_description\": true,\n        \"open_graph_use_product_name\": true,\n        \"open_graph_use_image\": true\n    },\n    \"meta\": {}\n}",
                                                            "header": {}
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "GET /v2/products/{product_id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Response V2 Get Product"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n    \"id\": 195,\n    \"keyword_filter\": null,\n    \"name\": \"BigCommerce Coffee Mug_3\",\n    \"type\": \"physical\",\n    \"sku\": \"\",\n    \"description\": \"\",\n    \"search_keywords\": \"\",\n    \"availability_description\": \"\",\n    \"price\": \"11.0000\",\n    \"cost_price\": \"0.0000\",\n    \"retail_price\": \"0.0000\",\n    \"sale_price\": \"0.0000\",\n    \"calculated_price\": \"11.0000\",\n    \"sort_order\": 0,\n    \"is_visible\": true,\n    \"is_featured\": false,\n    \"related_products\": \"-1\",\n    \"inventory_level\": 400,\n    \"inventory_warning_level\": 40,\n    \"warranty\": \"\",\n    \"weight\": \"3.0000\",\n    \"width\": \"0.0000\",\n    \"height\": \"0.0000\",\n    \"depth\": \"0.0000\",\n    \"fixed_cost_shipping_price\": \"0.0000\",\n    \"is_free_shipping\": false,\n    \"inventory_tracking\": \"sku\",\n    \"rating_total\": 0,\n    \"rating_count\": 0,\n    \"total_sold\": 0,\n    \"date_created\": \"Wed, 05 Sep 2018 20:22:19 +0000\",\n    \"brand_id\": 38,\n    \"view_count\": 4,\n    \"page_title\": \"\",\n    \"meta_keywords\": \"\",\n    \"meta_description\": \"\",\n    \"layout_file\": \"product.html\",\n    \"is_price_hidden\": false,\n    \"price_hidden_label\": \"\",\n    \"categories\": [\n        21\n    ],\n    \"date_modified\": \"Thu, 20 Sep 2018 15:28:50 +0000\",\n    \"event_date_field_name\": \"\",\n    \"event_date_type\": \"none\",\n    \"event_date_start\": null,\n    \"event_date_end\": null,\n    \"myob_asset_account\": \"\",\n    \"myob_income_account\": \"\",\n    \"myob_expense_account\": \"\",\n    \"peachtree_gl_account\": \"\",\n    \"condition\": \"New\",\n    \"is_condition_shown\": false,\n    \"preorder_release_date\": \"\",\n    \"is_preorder_only\": false,\n    \"preorder_message\": \"\",\n    \"order_quantity_minimum\": 0,\n    \"order_quantity_maximum\": 0,\n    \"open_graph_type\": \"product\",\n    \"open_graph_title\": \"\",\n    \"open_graph_description\": \"\",\n    \"is_open_graph_thumbnail\": true,\n    \"upc\": \"\",\n    \"avalara_product_tax_code\": \"\",\n    \"date_last_imported\": \"\",\n    \"option_set_id\": 50,\n    \"tax_class_id\": 0,\n    \"option_set_display\": \"right\",\n    \"bin_picking_number\": \"\",\n    \"custom_url\": \"/bigcommerce-coffee-mug_3/\",\n    \"primary_image\": {\n        \"id\": 0,\n        \"zoom_url\": null,\n        \"thumbnail_url\": null,\n        \"standard_url\": null,\n        \"tiny_url\": null\n    },\n    \"availability\": \"available\",\n    \"brand\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/brands/38\",\n        \"resource\": \"/brands/38\"\n    },\n    \"downloads\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/downloads\",\n        \"resource\": \"/products/195/downloads\"\n    },\n    \"images\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/images\",\n        \"resource\": \"/products/195/images\"\n    },\n    \"discount_rules\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/discountrules\",\n        \"resource\": \"/products/195/discountrules\"\n    },\n    \"configurable_fields\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/configurablefields\",\n        \"resource\": \"/products/195/configurablefields\"\n    },\n    \"custom_fields\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/customfields\",\n        \"resource\": \"/products/195/customfields\"\n    },\n    \"videos\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/videos\",\n        \"resource\": \"/products/195/videos\"\n    },\n    \"skus\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/skus\",\n        \"resource\": \"/products/195/skus\"\n    },\n    \"rules\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/rules\",\n        \"resource\": \"/products/195/rules\"\n    },\n    \"option_set\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/optionsets/50\",\n        \"resource\": \"/optionsets/50\"\n    },\n    \"options\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/options\",\n        \"resource\": \"/products/195/options\"\n    },\n    \"tax_class\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/taxclasses/0\",\n        \"resource\": \"/taxclasses/0\"\n    },\n    \"reviews\": {\n        \"url\": \"https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/reviews\",\n        \"resource\": \"/products/195/reviews\"\n    },\n    \"metadata\": []\n}",
                                                            "header": {}
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "header": {}
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Create a Product",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "POST /v3/catalog/products ",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V3 Product Request"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\"\n}",
                                                            "header": {},
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "POST /v2/products",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V2 Product Request"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n    \"name\": \"Plain T-Shirt\",\n    \"type\": \"physical\",\n    \"description\": \"This timeless fashion staple will never go out of style!\",\n    \"price\": \"29.99\",\n    \"categories\": [18],\n    \"availability\": \"available\",\n    \"weight\": \"0.5\"\n}",
                                                            "header": {},
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  },
                                                  "header": {}
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Create Product with Images",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "POST /v3/catalog/products/{product_id}/images",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V3 Product with Images\n\n1. Create a product using: `POST /v3/catalog/products`\n2. Add images using: `POST /v3/catalog/products/{product_id}/images`"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"is_thumbnail\": true,\n  \"sort_order\": 1,\n  \"description\": \"Top View\",\n  \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg\"\n}"
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "POST /v2/products/{product_id}/images",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V2 Product with Images\n\n1. Create a product using: `POST /v2/products`\n2. Add images using: `POST /v2/products/{product_id}/images`\n\n**Only accepts form data.**"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "curl -X POST \\\n  https://api.bigcommerce.com/stores/{store_hash}/v2/products/{product_id}/images \\\n  -H 'Accept: application/json' \\\n  -H 'Cache-Control: no-cache' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 841f5f9a-244b-4d2c-900f-938ac2067a4a' \\\n  -H 'X-Auth-Client: {X-Auth-Client}' \\\n  -H 'X-Auth-Token: {X-Auth-Token}' \\\n  -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \\\n  -F image_file=@/Users/{user_name}/Documents/product_images/image_file.png",
                                                            "config": {
                                                              "mode": "http"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Create Product with Videos",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "POST /v3/catalog/products/{{id}}/videos",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V3 Product with Videos\n\n1. Create a product using: `POST /v3/catalog/products`\n2. Add video using: `POST /v3/catalog/products/{{id}}/videos`"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"title\": \"Your Video\",\n  \"description\": \"Company Values\",\n  \"sort_order\": 1,\n  \"type\": \"youtube\",\n  \"video_id\": \"123345AA\"\n}",
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "POST /v2/products/{{id}}/videos",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V2 Product with Videos\n\n1. Create a product using: `POST /v2/products`\n2. Add video using: `POST /v2/products/{{id}}/videos`"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"url\": \"https://www.youtube.com/watch?v=4wZ3ZG_Wams\"\n}",
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "title": "Stock Levels",
                                    "blocks": [
                                      {
                                        "type": "tabs",
                                        "data": {
                                          "children": [
                                            {
                                              "title": "Update Stock Levels",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "PUT /v3/catalog/products/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Request Update V3 Product Stock Levels\n* For a simple product"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "\n{\n  \"inventory_level\": 100,\n  \"inventory_warning_level\": 10\n}\n",
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "PUT /v2/products/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Request Update V2 Product Stock Levels\n* For a simple product"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"inventory_level\": 15,\n  \"inventory_warning_level\": 5,\n}"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Update Stock Levels on Variant/SKU",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "PUT /v3/catalog/products/{id}/variants/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Update V3 Variant Stock Level\n* For a single variant"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"inventory_level\": 100,\n  \"inventory_warning_level\": 10\n}"
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "PUT /v2/products/{id}/skus/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Update V2 SKU Level\n* For a single sku"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "  {\n    \"inventory_level\": 100,\n    \"inventory_warning_level\": 10,\n    \"id\": 388,\n    \"sku\": \"SKU-4484A834\"\n  }"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Update Stock Levels on Multiple Variants/SKU",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "PUT /v3/catalog/products/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Update V3 Multiple Stock Levels"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "[\n{\n  \"inventory_level\": 100,\n  \"inventory_warning_level\": 10,\n  \"id\": 388,\n  \"sku\": \"SKU-4484A834\"\n},\n  {\n  \"inventory_level\": 100,\n  \"inventory_warning_level\": 10,\n  \"id\": 389,\n  \"sku\": \"SKU-9E932372\"\n}\n]",
                                                            "config": {
                                                              "mode": "json"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "PUT /v2/products/{id}/skus/{id}",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Update V2 Multiple Stock Levels\n* A request must be sent for each SKU"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"inventory_level\": 100,\n  \"inventory_warning_level\": 10\n}"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "title": "Complex Products",
                                    "blocks": [
                                      {
                                        "type": "tabs",
                                        "data": {
                                          "children": [
                                            {
                                              "title": "Create Product with Variants/SKU",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "POST /v3/catalog/products",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create a V3 Product with Variants"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\",\n  \"variants\": [\n    {\n      \"sku\": \"SKU-BLU\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Blue\"\n        }\n      ]\n    },\n    {\n      \"sku\": \"SKU-GRAY\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Gray\"\n        }\n      ]\n    }\n  ]\n}"
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "V2 Scenarios",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create V2 Products with SKU's\n\nWhen using the V2 Products API to make product options and option sets. The simplest workflow is when starting from scratch is below:\n\n1. Create an Option (in this example Size)\n2. Add option values\n3. Add the options created in step 1 to the option set\n4. Create an Option Set\n5. Add options created in step 1 and step 2 to the option set.\n6. Assign the option set to the product\n7. Assign SKU's to the Options on the product"
                                                          },
                                                          {
                                                            "type": "text",
                                                            "data": "This will only create an option with no values added."
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"name\": \"Size\",\n  \"display_name\": \"T-Shirt Size\",\n  \"type\": \"RT\"\n}\n",
                                                            "header": {
                                                              "title": "Create an Option",
                                                              "subtitle": "POST /v2/option_sets"
                                                            }
                                                          },
                                                          {
                                                            "type": "text",
                                                            "data": "This will add values such as small, medium and large. Only one value at a time can be created. In this example it will take 3 seperate /POST requests to create all sizes."
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"label\": \"Medium\",\n  \"sort_order\": 1,\n  \"value\": \"Medium\",\n  \"is_default\": false\n}",
                                                            "header": {
                                                              "title": "Add option values",
                                                              "subtitle": "POST /v2/options/{option_id}/values"
                                                            }
                                                          },
                                                          {
                                                            "type": "text",
                                                            "data": "After the option with values has been created, a option set needs to be created so the option and values created in the previous steps can be added to it. "
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n\t\"name\": \"T-Shirt Sizes BigCommerce\"\n}",
                                                            "header": {
                                                              "title": "Create Option Set",
                                                              "subtitle": "POST /v2/optionsets"
                                                            }
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n\t\"option_id\":88\n}",
                                                            "header": {
                                                              "title": "Add the T-Shirt Size Options to Set",
                                                              "subtitle": "POST /optionsets/{option_set_id}/options"
                                                            }
                                                          },
                                                          {
                                                            "type": "text",
                                                            "data": "To assign the option set to a product, do a /PUT request aganist the product and update the `option_set_id` field. "
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n\t\"option_set_id\": 60\n}",
                                                            "header": {
                                                              "title": "Assign the Option Set to the Product",
                                                              "subtitle": "PUT /v2/products/{product_id}"
                                                            }
                                                          },
                                                          {
                                                            "type": "text",
                                                            "data": "To create the SKU's first you need the `option_value_id`. Sent a /GET to \n`optionsets/{option_set_id}/options` .\n\n```\n{\n    \"id\": 119,\n    \"option_id\": 88,\n    \"option_set_id\": 60,\n    \"display_name\": \"T-Shirt Size\",\n    \"sort_order\": 0,\n    \"is_required\": false,\n    \"option\": {\n        \"url\": \"https://api.bigcommerce.com/stores/{store_hash}/v2/options/88\",\n        \"resource\": \"/options/88\"\n    },\n    \"values\": [\n        {\n            \"label\": \"Small\",\n            \"sort_order\": 0,\n            \"value\": \"Small\",\n            \"is_default\": false,\n            \"option_value_id\": 192\n        },\n        {\n            \"label\": \"Medium\",\n            \"sort_order\": 1,\n            \"value\": \"Medium\",\n            \"is_default\": false,\n            \"option_value_id\": 193\n        },\n        {\n            \"label\": \"Large\",\n            \"sort_order\": 2,\n            \"value\": \"Large\",\n            \"is_default\": false,\n            \"option_value_id\": 194\n        }\n    ]\n}\n```\n\nThe `product_option_id` is also required.\n`/v2/products/{product_id}/options`. \n\nEach size will need a seperate POST to create all the SKU's."
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n\t\"sku\": \"SMALL-1\",\n\t\"options\":[\n\t\t{\n\t\t\t\"product_option_id\": 223,\n\t\t\t\"option_value_id\": 192\n\t\t}\n\t]\n}",
                                                            "header": {
                                                              "title": "Add Product SKU",
                                                              "subtitle": "POST /v2/products/{product_id}/skus"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Create a Product with Variants & Modifiers",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": " POST /v3/catalog/products/{product_id}/modifiers",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create Modifier V#\n\nThis examples uses a checkbox which is created in two steps. "
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"type\": \"checkbox\",\n  \"required\": false,\n  \"config\": {\n    \"default_value\": \"Yes\",\n    \"checked_by_default\": false,\n    \"checkbox_label\": \"Check for Donation\"\n  },\n  \"display_name\": \"Add a $5 Donation\"\n}",
                                                            "header": {
                                                              "title": "Create Modifier",
                                                              "subtitle": "POST /v3/catalog/products/{product_id}/modifiers"
                                                            }
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"is_default\": false,\n  \"adjusters\": {\n    \"price\": {\n      \"adjuster\": \"relative\",\n      \"adjuster_value\": 5\n    }\n  }\n}",
                                                            "header": {
                                                              "title": "Update Modifier Values",
                                                              "subtitle": "PUT /v3/catalog/products/{product_id}/modifiers/{modifier_id}/values"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "V2 Modifier",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Create Modifiers V2\n\n* Modifiers are considered an option on V2. They can be assigned a SKU or not. \n* They follow the same steps as Create Product with Variants/SKU\n\n1. Create an Option (in this example Size)\n2. Add option values\n3. Add the options created in step 1 to the option set\n4. Create an Option Set\n5. Add options created in step 1 and step 2 to the option set.\n6. Assign the option set to the product."
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "title": "Create a Product with Rules/Complex Rules",
                                              "blocks": [
                                                {
                                                  "type": "tabs",
                                                  "data": {
                                                    "children": [
                                                      {
                                                        "title": "POST /v3/catalog/products/{product_id}/complex-rules",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Complex Rules V3\n* They are not recommened for V3 products since they can be created at the variant level. See Complex Rules for more information"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n  \"product_id\": 1200,\n  \"enabled\": true,\n  \"price_adjuster\": {\n    \"adjuster_value\": 10\n  },\n  \"conditions\": [\n    {\n      \"modifier_id\": 506,\n      \"modifier_value_id\": 852\n    },\n    {\n      \"modifier_id\": 507,\n      \"modifier_value_id\": 854\n    }\n  ]\n}",
                                                            "header": {}
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "title": "/v2/products/{product_id}/rules",
                                                        "blocks": [
                                                          {
                                                            "type": "text",
                                                            "data": "### Add a Complex Rule\n\n* A complex rule can not be added without an option\n\nThe example below add's a complex rule to increase the price by $5 if the checkbox is selected.\n\n```\n{\n    \"id\": 89,\n    \"product_id\": null,\n    \"name\": \"Checkbox\",\n    \"display_name\": \"$5 for Insurance\",\n    \"type\": \"C\",\n    \"values\": {\n        \"url\": \"https://api.bigcommerce.com/stores/{store_hash}/v2/options/89/values\",\n        \"resource\": \"/options/89/values\"\n    }\n}\n```\n\n"
                                                          },
                                                          {
                                                            "type": "code",
                                                            "data": "{\n        \"price_adjuster\": {\n            \"adjuster\": \"relative\",\n            \"adjuster_value\": 5\n        },\n      \"conditions\": [\n\t\t    {\n\t\t      \"product_option_id\": 89,\n\t\t      \"option_value_id\": 195\n\t\t    }\n\t\t  ]\n}\n",
                                                            "header": {
                                                              "subtitle": "POST /v2/products/{product_id}/rules",
                                                              "title": "Add Product Rule"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "header": {}
                            }
                          ]
                        }
                      },
                      {
                        "title": "Authentication",
                        "route": {
                          "path": "/authentication"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Authentication</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#authentication_what-are-oauth-credentials\">What are OAuth Credentials?</a></li>\n\t\t<li><a href=\"#authentication_getting-api-credentials\"> Getting API Credentials </a></li>\n\t\t<li><a href=\"#authentication_revoking-api-credentials\"> Revoking API Credtials</a></li>\n\t\t<li><a href=\"#authentication_client-id-secret\"> Getting Client ID and Client Secret</a></li>\n\t\t<li><a href=\"#authentication_when-to-use\"> Use Cases by Token Type</a></li>\n    <li><a href=\"#authentication_migration-legacy-oauth\">Migrating from Legacy to OAuth</a></li>\n\t\t<li><a href=\"#authentication_oauth-scopes\"> OAuth Scopes</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## What are OAuth Credentials?\n\nBigCommerce uses [OAuth authentication](https://dev.to/anabella/dancing-with-oauth-emp) for all API and app usage. Currently, there are two workflows to generate tokens, with different use cases. \n\n### API Credentials\nCredentials for making API requests are created in the control panel and can only be created by the store owner. Tokens created manually through the control panel are referred to in this documentation as API Credentials to distinguish them from tokens created programmatically. API Credentials are used for testing purposes and authenticating scripts, and they are tied solely to the store used to generate them.\n\n### Client ID and Client Secret\nCredentials for creating apps for sale in the marketplace or private apps are created in [Dev Tools](https://devtools.bigcommerce.com), the developer workspace for managing apps. They are referred to as Client ID and Client Secret in this documentation.  The Client ID and Client Secret are used by an app to generate an authorization token per store. This allows your app to generate an Oauth token programmatically, eliminating the need to have a merchant manually generate API Credentials to connect an app to their store and allowing your app to generate tokens for multiple stores with a single Client ID and Secret. ",
                              "header": {
                                "anchor": "authentication_what-are-oauth-credentials"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Getting API Credentials\nYou can create and manage API Credentials in the BigCommerce control panel by creating an API account, as described below. Only the store owner can create API accounts; accounts are limited to 50 per store.\n\nTo create your API account and its corresponding token, use the following steps:\n1. Log into the store, using the store owner’s username/password.\n2. Select **Advanced Settings**.\n3. Select **API Accounts**. This will display the Store API Accounts page.\n4. Select **Create API Account**. This will display the Create API Account page shown above.\n5. In the Name field, summarize the purpose for which you will use these credentials. This name is for internal use only, so assign any name that you will recognize.\n6. In the OAuth Scopes section, select at least the minimum scopes your app will require.\n7. Select **Save** at the page’s lower right-hand corner.\n\nA successful save will display a pop-up containing the API credentials that your app will need to run authenticated requests – your Client ID and Access Token. A .txt file containing the same credentials will (on most browsers) automatically download to your computer. This file also contains the base API Path for your store, preconfigured for the v3 API.\n\nFrom a security perspective, these credentials are sensitive – please treat them with the same caution that you would treat a private key or root password\n\nTo get started making requests, see [API Requests](/api-docs/getting-started/about-api/making-requests).",
                              "header": {
                                "anchor": "authentication_getting-api-credentials"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536087816482",
                              "header": {
                                "title": "Create an API Account"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "body": "There is no way to re-display this pop-up after you select Done to dismiss it. \nMake sure you store your credentials before dismissing the popup, either by copying/pasting the contents of each field or by keeping the downloaded .txt file. Otherwise, you will need to repeat all the above steps to generate new credentials. "
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Revoking API Credentials\n\nTo revoke an OAuth token, use the following steps to delete the associated API account:\n1. Log into the store, using the store owner’s username/password.\n2. Select **Advanced Settings**.\n3. Select **API Accounts**. This will display the Store API Accounts page, shown below.\n4. In the Actions column at right, select the trash-can button next to the account you want to delete.",
                              "header": {
                                "anchor": "authentication_revoking-api-credentials"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537388177603",
                              "header": {
                                "title": "Revoking API Credentials"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "title": "Delete Carefully",
                                "body": "There is no undo, so be sure before you delete an account. You can also use the checkboxes on the left side to delete multiple accounts at once – but be especially careful when using this option."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Getting Client ID and Client Secret\n\n* The Client ID value uniquely identifies your app. You will need to pass it in the header of all your requests to the API.\n* The Client Secret value is a secret that your app and BigCommerce share. You only need to pass the Client Secret value once, during the app installation sequence. Thereafter, BigCommerce uses it to sign payloads in load, uninstall, and remove user requests, and your app uses it to verify the signature to ensure that the request is coming from BigCommerce.\n\nTo get a Client ID and Client Secret you will need to log in to Dev Tools. Dev Tools can be accessed by clicking **My Apps** in the top-right corner of the Developer Portal.\n\n1. Click **Create an app**  \n2. Give your app a name. This will only be visible to you\n3. A pop up box will display showing Your Profile, App Summary and Category. ",
                              "header": {
                                "anchor": "authentication_client-id-secret"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537389767940",
                              "header": {
                                "title": "Create an App"
                              }
                            },
                            {
                              "type": "text",
                              "data": "4. Click on **Step 3 - Technical**. Fill out the App Features sections with App Type, Callback URLs and Scope."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537389883100",
                              "header": {
                                "title": "Step 3 - Technical"
                              }
                            },
                            {
                              "type": "text",
                              "data": "5. In the lower right-hand corner of the popup box, click **Update & Close**.\n6. A new pop up will show asking if you want to change the OAuth Scopes. Click **Confirm Update**.\n7. You will be routed back to the Dev Tools home page and your app will be listed. Click **View Client ID**. "
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537390078741",
                              "header": {
                                "title": "View Client Id"
                              }
                            },
                            {
                              "type": "text",
                              "data": "9. Copy your Client ID and Client Secret. The Client ID and Client Secret can be accessed at any time by clicking **View Client ID**. "
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537390135692",
                              "header": {
                                "title": "Client Id and Client Secret"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "body": "If you delete the app, there is no way to recover the Client Id and Client Secret."
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Next Steps\n\nDuring the app installation process, your app will use the Client Id and Client Secret to obtain an Oauth token authorized against the store installing the app. For a detailed look at this process, see [Building an App](/api-docs/getting-started/building-apps-bigcommerce/building-apps)."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Use Cases by Token Type\n\n|  | Client ID / Client Secret | API Credentials |\n|---|:---:|:---:|\n| From Dev Tools| X | |\n|From Store Control Panel| | X |\n| Single Click Apps (Marketplace)| X | |\n| Private Apps | X |\n| Hidden Apps | X | |\n| Connector Apps | | X |\n|Scripts| | X |\n|Testing | | X |\n| V2 | X | X |\n| V3 | X | X |\n|Webhooks | X | X |",
                              "header": {
                                "anchor": "authentication_when-to-use"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---",
                              "header": {}
                            },
                            {
                              "type": "text",
                              "data": "## Migrating from Legacy to OAuth",
                              "header": {
                                "anchor": "authentication_migration-legacy-oauth"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "body": "As of July 31, 2018, new BigCommerce stores are no longer able to create Legacy API Accounts (accounts using HTTP Basic Auth) within their control panels. Existing Legacy API Accounts will continue to work until further notice, but we strongly recommend migrating to OAuth as soon as possible."
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Migrating to OAuth comes with several benefits:\n\n* All OAuth requests are sent to a common hostname: `https://api.bigcommerce.com`. Using a single hostname prevents any interruption of service when the domain or SSL on a particular store changes or expires.\n\n* All of BigCommerce’s newest V3 APIs are exclusively available via OAuth.\n\n* OAuth API accounts have access to subscribe to BigCommerce’s Webhooks for real-time event notifications\n\n* The ability to use new APIs that require a shared secret, such as the Storefront Login API or the Storefront Current Customer identification endpoint.\n\n* Gzip compression on API responses to reduce bandwidth usage\n\n* Better security as all OAuth tokens are scoped to particular endpoints\n\n### How to Migrate\n\nFirst, consider whether your application should reside within the public App Marketplace, where any BigCommerce merchant can quickly discover and install it. To learn more about how to set up this kind of app, see [Becoming a Partner](/api-docs/getting-started/partner/becoming-a-partner).\n\nIf you would like to update your API connection from Basic Authentication to OAuth, you will need to make the following changes:\n\n- Get a Client ID and an Access Token, by creating an API Account within the control panel. You’ll want to make sure the account has the correct Scopes for the API endpoints you need to access. We recommend that you provide the minimum scopes that your application requires to function, as a good security practice.\n- If you use one of the Client Libraries, follow the relevant guide (within the library’s documentation) for establishing an OAuth connection.\n- If you have created your connection, you’ll want to update your connection parameters:\n\t- Where you previously used the BigCommerce store’s secure hostname, you will instead use the `https://api.bigcommerce.com` gateway URL.\nAs an example, requests to `https://store-abc123.mybigcommerce.com/api/v2/orders/123` or `https://my-custom-store-domain.com/api/v2/orders/123 `would instead go to `https://api.bigcommerce.com/stores/{store_hash}/v2/orders/123`.\n- With Basic Auth, you use an Authentication HTTP Header to authenticate your connection. With OAuth, you’ll want to use two headers:\n\t- X-Client-Id for your Client ID, and the \n\t- X-Auth-Token header for your Access Token. You can read more [here]().\n\nRate limiting of API requests works differently for OAuth API connections. To become familiar with the OAuth system, please see the [Rate Limits]()."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## OAuth Scopes\n\nScope limits ability to read or write to data. Set the scope to the minimum level needed to accomplish the task at hand.\n\nAll OAuth scopes except `default` have `read_only` scopes that allow only `GET` and `HEAD` requests.\n\n- Webhooks are accessible from the default scope that is available when an API Credentials are created.\n\n| Scope GUI Name | Resources  | Description |\n|---|---|---|\n| Content | store_v2_content | View and modify store content |\n||| [/v2/pages](/api-docs/api-reference/v2-api/v2-store-content) |\n||| [/v2/blog](/api-docs/api-reference/v2-api/v2-store-content) |\n||| [/v2/redirects](/api-docs/api-reference/v2-api/v2-store-content) |\n||| /v3/widgets |\n||store_v2_content_read_only| View Site Content |\n||| [/v2/pages](/api-docs/api-reference/v2-api/v2-store-content) |\n||| [/v2/blog](/api-docs/api-reference/v2-api/v2-store-content) |\n||| [/v2/redirects](/api-docs/api-reference/v2-api/v2-store-content)  |\n||| /v3/widgets |\n| Checkout Content | store_content_checkout | View and modify content on checkout pages |\n||| [/v3/scripts](/api-docs/api-reference/v3-api/content-api) |\n| Customers | store_v2_customers | View and modify customer information |\n||| [/v2/customers](/api-docs/api-reference/v2-api/v2-customers) |\n||| [/v2/customer_groups](/api-docs/api-reference/v2-api/v2-customers) |\n||| [/v3/customers/subscribers](/api-docs/api-reference/v3-api/customers-api) |\n||store_v2_customers_read_only|View customer information |\n||| [/v2/customers](/api-docs/api-reference/v2-api/v2-customers) |\n||| [/v2/customer_groups](/api-docs/api-reference/v2-api/v2-customers) |\n||| [/v3/customers/subscribers](/api-docs/api-reference/v3-api/customers-api) |\n| Customers Login | store_v2_customers_login | Log in customers to your storefront |\n||| [Access to the Customer Login API](/api-docs/customers/customer-login-api)\n| Information & Settings| store_v2_information | View and modify general store information and settings |\n||| [/v2/shipping/methods](/api-docs/api-reference/v2-api/v2-shipping) |\n||| [/v2/shipping/zones](/api-docs/api-reference/v2-api/v2-shipping) |\n||| [/v2/shipping/carrier](/api-docs/api-reference/v2-api/v2-shipping) |\n|| store_v2_information_read_only | View general store information and settings |\n||| [/v2/shipping/methods](/api-docs/api-reference/v2-api/v2-shipping) |\n||| [/v2/shipping/zones](/api-docs/api-reference/v2-api/v2-shipping) |\n||| [/v2/shipping/carrier](/api-docs/api-reference/v2-api/v2-shipping) |\n||| [/v2/payments/methods](/api-docs/api-reference/v2-api/v2-payment-methods) |\n||| [/v2/tax_classes](/api-docs/api-reference/v2-api/v2-tax-classes) |\n||| [/v2/store](/api-docs/api-reference/v2-api/v2-store) |\n| Marketing | store_v2_marketing | View and modify marketing information |\n||| [/v2/coupons](/api-docs/api-reference/v2-api/v2-marketing) |\n||| [/v2/gift_certificates](/api-docs/api-reference/v2-api/v2-marketing) |\n||| [/v2/banners](/api-docs/api-reference/v2-api/v2-marketing) |\n|| store_v2_marketing_read_only | View marketing information |\n||| [/v2/coupons](/api-docs/api-reference/v2-api/v2-marketing) |\n||| [/v2/gift_certificates](/api-docs/api-reference/v2-api/v2-marketing) |\n||| [/v2/banners](/api-docs/api-reference/v2-api/v2-marketing) |\n| Orders | store_v2_orders | View and modify orders |\n||| [/v2/orders](/api-docs/api-reference/v2-api/v2-orders) |\n||| [/v2/order_statuses](/api-docs/api-reference/v2-api/v2-orders) |\n|| store_v2_orders_read_only | View orders |\n||| [/v2/orders](/api-docs/api-reference/v2-api/v2-orders) |\n||| [/v2/order_statuses](/api-docs/api-reference/v2-api/v2-orders) |\n| Order Transactions | store_v2_transactions_read_only | View order transactions |\n||| [/v3/orders/{id}/transactions](/api-docs/api-reference/v3-api/orders-api) |\n| Products | store_v2_products | View and modify products, brands, categories and other product information. |\n||| [/v3/catalog](/api-docs/api-reference/v3-api/catalog-api) |\n||| [/v3/pricelists](/api-docs/api-reference/v3-api/pricelists-api) |\n|| store_v2_products_read_only | View products |\n||| [/v3/catalog](/api-docs/api-reference/v3-api/catalog-api) |\n||| [/v3/pricelists](/api-docs/api-reference/v3-api/pricelists-api) |\n| Themes | store_themes_manage | View and modify themes |\n||| [/v3/themes](/api-docs/api-reference/v3-api/themes-api) |\n|| store_themes_read_only | View themes |\n||| [/v3/themes](/api-docs/api-reference/v3-api/themes-api) |\n| Carts | store_cart | View and Modify carts |\n||| [/v3/carts](/api-docs/api-reference/cart-and-checkout-api-reference/storefront-cart) |\n|| store_cart_read_only | View Carts |\n||| [/v3/carts](/api-docs/api-reference/cart-and-checkout-api-reference/storefront-cart) |",
                              "header": {
                                "anchor": "authentication_oauth-scopes"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "API Environment",
                        "route": {
                          "path": "/api-environment"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>API Enviroment</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#api-enviroment\">API Environment</a></li>\n        <li><a href=\"#api-environment_request-headers\">Request Headers</a></li>\n        <li><a href=\"#api-environment_response-headers\">Response Headers</a></li>\n        <li><a href=\"#api-environment_media-types\">Media Types</a></li>\n        <li><a href=\"#api-environment_content-types\">Content Types</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## API Environment \n\nBigCommerce API requests can be made in the context of the storefront or server-to-server.  \n\n* Storefront APIs use the store url: `https://your-store.mybigcommerce.com/api/{endpoint}`\n* Server-to-Server requests use the base url:  `https://api.bigcommerce.com/stores/{store_hash}/v3/`\n* V2 API Requests use the base url: `https://api.bigcommerce.com/stores/{store_hash}/v2/`",
                              "header": {
                                "anchor": "api-enviroment"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Request Headers\n\nServer-to-Server request headers require Accept, X-Auth-Client, X-Auth-Token and Content-Type at a minimum.\n\n\n| Header | Allowed Values | Description | Example |\n| --- | --- | --- | --- |\n| `Accept` | `application/json` (for .json requests) `application/xml` (for .xml requests) | The MIME type for the format you want to receive a response in.|`application/xml` |\n| `Content-Type` | `application/json` (for JSON requests) `application/xml` (for XML requests) | The MIME type of the request body. Used to validate and parse the request to the API. | `application/json` |\n| `User-Agent` | String | While it is not required, we ask that you specify a user agent which identifies your integration/client with your requests. |\n| `X-Auth-Client` | String | Client ID of the requesting app |\n| `X-Auth-Token` | String | Access token authorizing the app to access resources on behalf of a user |",
                              "header": {
                                "anchor": "api-environment_request-headers"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Response Headers \n\n| Header | Possible Values | Description | Example |\n| ------ | --------------- | ----------- | ------- |\n| Date | An <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> date. | The date the response was sent. | `Tue, 15 Nov 2011 12:45:26 GMT` |\n| last-modified | An <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> date. | The date the resource was last modified. Please refer to the individual resource pages for support for this header. | `Tue, 15 Nov 2011 12:45:26 GMT` |\n| Content-Type | `application/json` | The MIME type of the response, dependent on the extension of the endpoint that was requested. | `application/json` |\n| Content-Location | A URI | Sent if the request was redirected. | `/api/v2/orders/5.json` |\n| Location | A URI | The URI of a newly created resource. Sent with a `201 Created` response. | `/api/v2/products/7` |\n| X-Retry-After | integer | Rate limited response, indicating the number of seconds before the quota refreshes. See [Platform Limits](https://forum.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) for more information. | `15` |\n| X-BC-ApiLimit-Remaining | integer | The number of API requests remaining for the current period (rolling one hour). See [Platform Limits](https://forum.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) for more information. | `987` |\n| X-BC-Store-Version | A version number | The version of BigCommerce the store is running on. This header is available on versions 7.3.6+. | ` 7.3.6` |\n| Content-Encoding | `gzip` | Allows API clients to request content to be compressed before being sent back in the response to an API request. | `gzip` |\n| Transfer-Encoding | `chunked` | Specifies the form of encoding used to transfer the resource. | `chunked`\n| X-Rate-Limit-Requests-Left | number | Details how many remaining requests your client can make in the current window before being rate-limited. In this case, you would expect to be able to make 6 more requests in the next 3000 milliseconds; on the 7th request within 3000 milliseconds, you would be rate-limited and would receive an HTTP 429 response. | `16101491` |\n| X-Rate-Limit-Requests-Quota | number | Shows how many API requests are allowed in the current window for your client. | `16101495` |\n| X-Rate-Limit-Time-Reset-Ms  | number | Shows how many milliseconds are remaining in the window. In this case, 3000 milliseconds – so, 3000 milliseconds after this request, the API quota will be refreshed. |`30000 `|\n| X-Rate-Limit-Time-Window-Ms | number | Shows the size of your current rate-limiting window. | `9762` |",
                              "header": {
                                "anchor": "api-environment_response-headers"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Media Types\n\nA media type is the format of the request or response body. The BigCommerce API accepts requests and responds in JSON. You should encode requests using the UTF-8 character set. (Other character sets might have unpredictable results).",
                              "header": {
                                "anchor": "api-environment_media-types"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Content Types\n\n### Request Content Type\nWhen performing a request that contains a body (eg. POST or PUT), the type of content you are sending needs to be specified in the Content-Type header. \n\n### Response Content Type\nThere are two ways you can specify the type of content you would like to receive. The first method is to specify an Accept header. The second is to supply an extension to the resource you are requesting. \n\nThe priority in which these methods are processed are:\n* Accept header high-priority types (eg. `Accept: application/json`) extensions on the resource (e.g. `customers.json`).\n* Accept header low priority types (priorities less than 1, e.g. `Accept: application/json;q=0.9`)\n",
                              "header": {
                                "anchor": "api-environment_content-types"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Request and Response Structure\n\n### Request Structure\nThe body of a JSON request is an object containing a set of key-value pairs. A simple representation of a product object is:\n\n```\n{\n     \"id\": 5,\n     \"name\": \"iPod\",\n     \"description\": \"A portable MP3 music player.\"\n } \n```\n\n### Response Structure\nResponses are structured similarly to requests. If a request returns a single object, then the response will contain a single object, containing the fields for that resource.",
                              "header": {
                                "anchor": "api-environment_request-and-response-structure"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": {\n        \"id\": 39,\n        \"parent_id\": 19,\n        \"name\": \"Bath\",\n        \"description\": \"\",\n        \"views\": 0,\n        \"sort_order\": 0,\n        \"page_title\": \"\",\n        \"meta_keywords\": [\n            \"\"\n        ],\n        \"meta_description\": \"\",\n        \"layout_file\": \"category.html\",\n        \"image_url\": \"\",\n        \"is_visible\": true,\n        \"search_keywords\": \"\",\n        \"default_product_sort\": \"use_store_settings\",\n        \"custom_url\": {\n            \"url\": \"/garden/bath/\",\n            \"is_customized\": false\n        }\n    },\n    \"meta\": {}\n}",
                              "header": {
                                "title": "Single Category",
                                "anchor": "api-environment_response-single-category"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "If the request returns more than one result, then the response will consist of an array of objects for each result:"
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"data\": [\n    {\n      \"id\": 19,\n      \"parent_id\": 0,\n      \"name\": \"Garden\",\n      \"description\": \"<p>A collection of products for the garden.</p>\",\n      \"views\": 0,\n      \"sort_order\": 2,\n      \"page_title\": \"page title\",\n      \"meta_keywords\": [\n        \"meta keyword\"\n      ],\n      \"meta_description\": \"meta description\",\n      \"layout_file\": \"category.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"search keywords\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/garden/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 20,\n      \"parent_id\": 0,\n      \"name\": \"Publications\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 4,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/publications/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 21,\n      \"parent_id\": 0,\n      \"name\": \"Kitchen\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 3,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/kitchen/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 22,\n      \"parent_id\": 0,\n      \"name\": \"Utility\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 5,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/utility/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 23,\n      \"parent_id\": 0,\n      \"name\": \"Shop All\",\n      \"description\": \"<h1>Browse our full collection</h1>\",\n      \"views\": 0,\n      \"sort_order\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/shop-all/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 39,\n      \"parent_id\": 19,\n      \"name\": \"Bath\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/garden/bath/\",\n        \"is_customized\": false\n      }\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 6,\n      \"count\": 6,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}",
                              "header": {
                                "title": "Multiple Categories",
                                "anchor": "api-environment_response-multiple-category"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Filtering",
                        "route": {
                          "path": "/filtering"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Filtering</h1>"
                            },
                            {
                              "type": "text",
                              "data": "To filter collections down to a particular set of items, you can add filters to your request as URL query parameters.\n\nThese are the most common filter options available for the V3 API: \n\n| Operator | Expression  | Example | \n|--|--|--|\n| Equals/equivalency | attribute=value  | `/v3/catalog/products?price=10` `/v3/catalog/products?name=My Product` |\n| Greater than or equal to (for numbers or dates) | attribute:min=value  | `/v3/catalog/products?price:min=10` |\n| Less than or equal to (for numbers or dates) | attribute:max=value | `/v3/catalog/products?price:max=10` |\n| Greater than (for numbers or dates)| attribute:greater=value | `/v3/catalog/products?price:greater=10` |\n| Less than (for numbers or dates) | attribute:less=value | `/v3/catalog/products?price:less=10` |\n| SQL LIKE operator (for strings) | attribute:like=pattern | `/v3/catalog/categories?name:like=Shirts` |\n| SQL IN operator (for arrays) | attribute:in=csv,list,of,values | `/v3/catalog/products?categories:in=123,456` |\n| SQL NOT IN operator (for arrays) | attribute:not_in=csv,list,of,values | `/v3/catalog/products?categories:not_in=123,456` |\n\nAvailable filters vary by endpoint. Refer to the GET method for an endpoint to see a list of available filters.\n\n\n### Includes\n\nSome endpoints allow an `?include` parameter to include subresources and other information in the primary GET response for a parent object.\n\nThis allows you to save API calls by getting more information in a response. However, it may slow down your response.\n\nAs an example, you can include a product's variants and images with the product response: `/v3/catalog/products?include=variants,images`\n\nAvailability of the `?include` parameter varies by endpoint. Refer to the GET method for an endpoint to see a list of fields that can be included.\n\n### Including and Excluding fields\n\nSome endpoints support both `?include_fields` and `?exclude_fields`. \n\n`include_fields` will return ONLY the specified fields in the response. `exclude_fields` will omit the specified fields from the response.\n\nYou can specify any field that is available on the object. Excluding fields you don't care about (especially large fields like descriptions) can speed up your API request response time.\n\n\n#### Example\n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products?include_fields=name,price`\n\nHere, product name and price have been included:\n\n```\n{\n    \"data\": [\n        {\n            \"id\": 77,\n            \"name\": \"Red printed scarf\",\n            \"price\": 12\n        }    \n    ]\n}    \n```"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Client Libraries",
                        "route": {
                          "path": "/client-libraries"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "text",
                              "data": "This will link to the tools and resources page directly once built"
                            }
                          ]
                        }
                      },
                      {
                        "title": "Best Practices",
                        "route": {
                          "path": "/best-practices"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Best Practices</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#best-practices_integration-up-to-date\">Ensure That Your Integration is Up-to-Date</a></li>\n        <li><a href=\"#best-practices_use-webhooks\">Use Webhooks Effectively Within Your Application</a></li>\n        <li><a href=\"#best-practices_thread-api-requests\">Thread Your Requests to the BigCommerce API</a></li>\n        <li><a href=\"#best-practices_marketplace-apps\">Marketplace Apps</a></li>\n        <li><a href=\"#best-practices_rate-limits\">API Rate Limits</a></li>\n        <li><a href=\"#best-practices_platform-limits\">Platform Limits</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Ensure that your integration is up-to-date\n\nBigCommerce frequently enhances its core product and is actively developing v3 API endpoints. By using the newest API version, you will ensure that your app has access to the latest resources. You will also be better positioned to provide a user experience consistent with what merchants will see in their BigCommerce store’s control panel. To stay up to date, bookmark our [changelog](/changelog). ",
                              "header": {
                                "anchor": "best-practices_integration-up-to-date"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Use webhooks effectively within your application\n\nTo keep data in your application up-to-date, [webhooks](/api-docs/getting-started/webhooks/about-webhooks) provide a great alternative to doing periodic checks. In order to register a webhook event that your application can listen for, you will need to use OAuth (not legacy “Basic Authentication”).\n\nBigCommerce will send a partial payload when a subscribed event is triggered, with minimal identifying details (such as the order ID when an order is created). Your application could use the order ID returned in the payload to make a subsequent API request for the full order details.",
                              "header": {
                                "anchor": "best-practices_use-webhooks"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Thread your requests to the BigCommerce API\n\nIn order to quickly update information in the API, you can use threaded requests. Threaded requests allow you to send multiple requests at one time. They can come from a different open connection or multiple requests to the same resource. \n\nThe [BigCommerce Ruby API](https://github.com/bigcommerce/bigcommerce-api-ruby) client is thread-safe: It satisfies the need for multiple threads to access the same shared data and the need for a shared piece of data to be accessed by only one thread at any given time. These attributes can reduce the total time that your app will require to complete a series of requests.",
                              "header": {
                                "anchor": "best-practices_thread-api-requests"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Marketplace Apps\n\nMerchants often have more than one person working on their store. BigCommerce allows additional users to access your app when the store owner has granted them appropriate permissions. The requirements for supporting multi-user access are:\n* Tokens must be stored against the store_hash and not against user info.\n* Within the Dev Tools workspace, you must enable your app’s Technical > Multiple Users option.\n\nIn the payload returned when a user launches an app, users are distinguished by `owner_email` versus `user_email`. If these two emails match, the user is the store owner.\n\nIf you wish to enable user removal, you can do by filling in your app’s Technical > Remove User Callback URL field in Dev Tools. (Enabling user removal is optional).\nFor more advanced implementations, you can enable the store owner to grant specific permissions to different non-admin users. For example, person1@email.com could be restricted to editing product inventory but not seeing orders. If you decide to include this feature in your app, it’s a great feature to advertise.",
                              "header": {
                                "anchor": "best-practices_marketplace-apps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## API Rate Limits\nApps that authenticate with OAuth are rate-limited, based on a quota that is refreshed every few seconds. The maximum quota for a store will vary depending on the store’s plan.\n\n* Enterprise plans and Enterprise Sandboxes (Enterprise-Test): Unlimited (7mil / 30sec)\n* Pro plans: 80k per hour (450 / 30sec)\n* All other sandboxes (Dev/Partner/Employee): 20k per hour (150 / 30sec)\n* Plus & Standard plans: 20k per hour (150 / 30sec)\n\nEach request to the API consumes one available request from the quota. When an app hits the quota limit, subsequent requests are rejected until the quota is refreshed.\n\nThe store’s overall quota is distributed across all apps that are accessing the store at a given time. This provides fairness for multiple apps that are accessing the API simultaneously, preventing a single greedy app from consuming the store’s entire quota by itself. The quota might adjust as additional clients connect or disconnect while you’re running requests. ",
                              "header": {
                                "anchor": "best-practices_rate-limits"
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Playing Nicely with the Platform\n\nEvery API response’s HTTP headers give you full visibility into your position in the rate-limiting algorithm:\n```\n{\nContent-Encoding →gzip\nContent-Type →application/json\nDate →Thu, 29 Mar 2018 15:59:24 GMT\nLast-Modified →Tue, 13 Mar 2018 18:00:26 +0000\nTransfer-Encoding →chunked\nVary →Accept-Encoding\nX-Bc-Store-Version →7.6.0\nX-Rate-Limit-Requests-Left →16101494\nX-Rate-Limit-Requests-Quota →16101495\nX-Rate-Limit-Time-Reset-Ms →30000\nX-Rate-Limit-Time-Window-Ms →30000\n}\n```\n\n| Name | Description |\n| -- | -- |\n| X-Rate-Limit-Time-Window-Ms| Shows the size of your current rate limiting window. In this case, it’s 5000 milliseconds.|\n| X-Rate-Limit-Time-Reset-Ms | Shows how many milliseconds are remaining in the window. In this case, 3000 milliseconds. 3000 milliseconds after this request, the API quota will be refreshed. |\n| X-Rate-Limit-Requests-Quota | Shows how many API requests are allowed in the current window for your client. In this case, the number is 25 requests. |\n| X-Rate-Limit-Requests-Left | Details how many remaining requests your client can make in the current window before being rate limited. In this case, you would expect to be able to make 6 more requests in the next 3000 milliseconds; on the 7th request within 3000 milliseconds, you would be rate limited and would receive an HTTP 429 response.|\n\nIf your request to the API triggers a [429 Too Many Requests](/api-docs/getting-started/about-api/api-status-codes#4-client-error) response, then you know you’ve been limited.\n\nThe rate limited response will contain the `X-Rate-Limit-Time-Reset-Ms` header, specifying a time (in milliseconds) that your client must wait before its quota has refreshed. Retry the request after this time has elapsed, and your API service will resume as normal.\n"
                            },
                            {
                              "type": "text",
                              "data": "### Example of 429 Status Code\n\nWhen you see a response with an HTTP 429 status code, your client shouldn’t make any further requests until your quota has refreshed:\n\n```\nHTTP/1.1 429 Too Many Requests\n    \tDate: Mon, 03 Feb 2017 20:36:00 GMT\n    \tContent-Type: application/json\n    \tX-Rate-Limit-Time-Reset-Ms: 15000\n```\n\n\nParse the `X-Rate-Limit-Time-Reset-Ms` header to determine how long you have to wait. In this case, it would be 15000 milliseconds.\nYour client can sleep on the specified interval:\n\n```\n   $milliseconds = $response->getHeader(\"X-Rate-Limit-Time-Reset-Ms\");\n    usleep($milliseconds * 1000);\n```\n\n\nAfter waiting for the given number of milliseconds, you can go back to making API requests."
                            },
                            {
                              "type": "text",
                              "data": "### Making Requests in Parallel\nYou might wish to increase the amount of work your application can do in a given unit of time, by sending multiple HTTP requests to the BigCommerce API in parallel. This is perfectly acceptable.\nHowever, your application should monitor the rate limiting headers to avoid an HTTP 429 response. Methods for doing this might include:\n* Slowing your rate of API requests when X-Rate-Limit-Requests-Left is nearing zero.\n* Determining an acceptable average rate of requests, by dividing X-Rate-Limit-Requests-Quota by X-Rate-Limit-Time-Window-Seconds, and then self-throttling to that rate."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Platform Limits\n\nBigCommerce does have limits on the number of products, categories, brands, etc. that can be created in a store. See [Platform Limits](https://forum.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) for more details.",
                              "header": {
                                "anchor": "best-practices_platform-limits"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "API Status Codes",
                        "route": {
                          "path": "/api-status-codes"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Hello World!</h<h1>API Status Codes</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#api-status-codes_2-success\">2xx Success</a></li>\n        <li><a href=\"#api-status-codes_3-redirection\">3xx Redirection</a></li>\n        <li><a href=\"#api-status-codes_4-client-error\">4xx Client Error</a></li>\n        <li><a href=\"#api-status-codes_5-server-error\">5xx Server Error</a></li>\n        <li><a href=\"#api-status-codes_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "The API responds to requests with different HTTP status codes depending on the result from the request. Error responses might also include an error message in the body to assist in resolving the problem."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## 2xx Success \n\n2xx codes are returned for requests that were understood and processed successfully.\n\n| Code | Definition | Purpose |\n| --- | --- | --- |\n| **200** | **OK** | For successful `GET` and `PUT` requests. |\n| **201** | **Created** | For a successful `POST` request. |\n| **202** | **Accepted** | For a request that resulted in a scheduled task being created to perform the actual request. |\n| **204** | **No Content** | For a successful request that produced no response (such as `DELETE` requests). |",
                              "header": {
                                "anchor": "api-status-codes_2-success"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "### 3xx Redirection \n\n3xx codes are returned for requests that require further action.\n\n| Code | Definition | Purpose |\n| --- | --- | --- |\n| **301** | **Moved Permanently** | When the API routes have changed (unlikely), or if the incoming request is not secure (`http`), the request will be redirected to the secure (`https`) version. |\n| **304** | **Not Modified** | This response will be sent if the request included an `If-Modified-Since` header, but the resource has *not* been modified since the specified date. Please refer to individual resources' documentation regarding support for the `If-Modified-Since` header. |",
                              "header": {
                                "anchor": "api-status-codes_3-redirection"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "### 4xx Client Error \n\n4xx codes are returned for requests that could not be processed due to problems with the request or the data.\n\n| Code | Definition | Purpose |\n| --- | --- | --- |\n| **400** | **Bad Request** | Issued when a malformed request was sent. Examples are: |\n|||*   Invalid syntax\n|||*   Missing required data\n|||*   Webhook requests missing `Content-Type` in the HTTP header.\n|\n| **401** | **Unauthorized** | This response is sent when your client failed to provide credentials or its credentials were invalid. |\n| **403** | **Forbidden** | Returned when permissions do not allow the operation. To correct:\n|||*   Check your app in `My Apps` to review the OAuth scopes you requested, and check whether they support the request that you made.\n|||*   Changes to the store owner's account (including a change to the email address) can also cause this error. Roll back those changes to correct it.\n|||*   This error can also occur when your request exceeds a limit imposed on the resource in question. For example, a store cannot exceed 16,000 categories. For more information, see the corresponding resource's documentation.\n|\n| **404** | **Not Found** | When a particular resource doesn’t exist or couldn’t be found. |\n| **405** | **Method Not Allowed** | The resource was found, but doesn’t support the request method. Issued when either a specific method isn’t yet implemented on a resource, or the resource doesn’t support the method at all. For example, a `PUT` on `/orders` is invalid, but a `PUT` on `/orders/{_id_}` is valid. |\n| **406** | **Not Acceptable** | When the client specifies a response content type in the `Accept` header that is not supported. |\n| **409** | **Conflict** | A change requested by the client is being rejected, due to a condition imposed by the server. The exact reasons for this response will vary from one resource to the next. An example might be attempting to delete a category whose deletion would cause products to be orphaned. Additional information about the conflict, and about how to resolve it, might be available in the response's `details` section. |\n| **413** | **Request Entity Too Large** | When the client requests too many objects. For example, the `limit` parameter exceeded the maximum. |\n| **415** | **Unsupported Media Type** | Returned due to issues with the `Content-Type` header. Examples of such issues are:\n|||*   The header specifies an unsupported content type.\n|||*   The header is missing (except with the webhooks resource, which returns a 400 in this case).|\n| **422** | **Missing or Invalid Data** | The request cannot be processed either because it omitted required fields or because it contained invalid data. See the response for more details. |\n| **429** | **Too Many Requests** | When an OAuth client exceeds the [rate limit](/api-docs/getting-started/about-api/best-practices#rate-limits) for API requests to a store. |",
                              "header": {
                                "anchor": "api-status-codes_4-client-error"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "### 5xx Server Error \n\n5xx codes are returned for requests that could not be processed due to an internal error with the API or server.\n\n| Code | Definition | Purpose |\n| --- | --- | --- |\n| **500** | **Internal Server Error** | When an error has occurred within the API. |\n| **501** | **Not Implemented** | When a request method is sent that is not supported by the API (e.g., `TRACE`, `PATCH`). |\n| **503** | **Service Unavailable** | When the store is marked as “Down for Maintenance,” or the store is being upgraded to a new version. |\n| **507** | **Insufficient Storage** | When the store has reached a limitation for the resource, according to their BigCommerce plan (e.g., 500-product limit). |\n| **509** (Deprecated) | **Bandwidth Limit Exceeded** | Returned to apps using Basic Authentication that have exceeded their [rate limits](). |",
                              "header": {
                                "anchor": "api-status-codes_5-server-error"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n\n### Why am I getting 4xx/5xx errors from the API?\n* A 401 error indicates that your API call is being received but isn’t properly authenticating with our API. Either credentials are absent from the request, or we are receiving invalid credentials. Steps to resolve this:\n\t* Double-check your Access Token and Client ID.\n\t* If your credentials are valid, try sending a cURL request with the same credentials. This will test whether the problem is something within your application, rather than a credentials issue.\n* For 403 errors , there are 4 common causes:\n\t* Your app lacks the appropriate scopes to make the request that it sent. Resolution: Check the OAuth scopes that you requested, either in control panel > API Accounts or in Developer Portal’s My Apps section.\n\t* The store-owner account has changed on a store that installed your app. Resolution: This might require a reinstall by the new store owner, or a rollback of the store-owner changes.\n\t* Your API request exceeded an enforced platform limit. Among other limits, each store is limited to a maximum of 30,000 brands and 16,000 categories. For more information about these limits, see either the API resource you are using or our support documentation on platform limits.\n\t* Check your URL paths. An incorrect path can sometimes trigger a 403 error.\n* 500 errors almost always indicate an internal server error on BigCommerce’s side. Steps to resolve these:\n\t* Re-attempt the request three to five times, with increasing delays of at least a minute between attempts.\n\t* Check our status page.\n\t* 500 errors can also be caused by particularly expensive API calls. To avoid these errors on stores with very complex data, try reducing how many objects you are requesting. In the v2 API, you can request fewer objects by using ?limit={count}. In either the v2 or v3 API, you can request fewer objects by excluding certain fields or only requesting certain fields.\n\t\n### Why am I getting an HTTP 204 or 301/302 response to an API request?\n* Double-check the URL to which you are making an API request. If the response code is 301/302, try the WWW or non-WWW version of the URL.",
                              "header": {
                                "anchor": "api-status-codes_troubleshooting"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Building Apps With BigCommerce",
                  "route": {
                    "path": "/building-apps-bigcommerce"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Apps Quickstart",
                        "route": {
                          "path": "/apps-quickstart"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "text",
                              "data": "The following procedure takes you through the minimum number of steps to successfully register your app and get your Client Secret and Client ID.\n\nIn order to test an app you will first need a [BigCommerce store.](https://www.bigcommerce.com/)\n\n1. Log in to the Dev Tools workspace at the Developer Portal’s top right (My Apps).\n2. In the resulting login page, provide your sandbox store credentials."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "The credentials you use to log in to Dev Tools must be the same as the store owner credentials for the store where you plan to install your draft app."
                              }
                            },
                            {
                              "type": "text",
                              "data": "3. Click **Create an app**."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537537754593",
                              "header": {
                                "subtitle": "Developer Portal Home Page"
                              }
                            },
                            {
                              "type": "text",
                              "data": "4. In the box give the app a name. This is not externally visible. Then click **Create**."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537537906799",
                              "header": {
                                "subtitle": "Name the App"
                              }
                            },
                            {
                              "type": "text",
                              "data": "5. In the next modal, click **3 Technical**. "
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537538028267",
                              "header": {
                                "subtitle": "Step 3 Technical"
                              }
                            },
                            {
                              "type": "text",
                              "data": "6. Fill in the Callback URLs\n7. If you plan to offer multi-user support for your app, fill in the [Remove User Callback URL](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_load-uninstall-removal-requests).\n8. Set the app scopes to the minimum needed."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537538124130",
                              "header": {
                                "subtitle": "App Scope"
                              }
                            },
                            {
                              "type": "text",
                              "data": "9. Click **Update and Close** in the lower right hand corner.\n10. Next to your app's name, click **View Client Id**."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537538265547",
                              "header": {
                                "subtitle": "View Client Id"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Here you can get the Client Id and Client Secret needed to start testing apps on BigCommerce. "
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\nTo help you get started, we have [Hello World Apps](/tools-resources) in several languages."
                            }
                          ]
                        }
                      },
                      {
                        "title": "Types of Apps",
                        "route": {
                          "path": "/types-of-apps"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Hello World!</h1><h1>Types of Apps</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#types-of-apps_single-click-apps\"> Single Click Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_private-apps\"> Private Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_hidden-marketplace-apps\"> Hidden Marketplace Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_scripts\"> Scripts</a></li>\n\t\t<li><a href=\"#types-of-apps_connector\"> Connector and OAuth Apps</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Single Click Apps\n\nSingle-click apps are listed in our App Marketplace, making them available for installation on all BigCommerce stores. The “single-click” app flow does not mean users install the app in a single click, but rather, the app does not require the customer to install OAuth credentials themselves or configure any settings for a third party service. \n\nTo put an app on the Marketplace, you must first be a BigCommerce partner and have your app approved through the App Submission Process. After becoming a partner and having the app approved you have the option of charging merchants to use the app. \n\nSingle-click apps use the Client ID and Client Secret obtained from the Dev Tools workspace to request an OAuth token during the [single-click app authentication flow.](/building-apps-bigcommerce/building-apps#building-apps_oauth-summary)",
                              "header": {
                                "anchor": "types-of-apps_single-click-apps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Private Apps\n\nIn some cases, you might want to create an API Account in your store’s control panel as the fastest way to establish an API connection to an individual store and to start running requests. \n\nUse Cases:\n- You are not creating an application for distribution in the BigCommerce App Marketplace.\n- You are testing your app before submission, and it doesn’t need to be distributed to other stores.\n\nPrivate Apps can request an Oauth token programmatically using the Client ID and Client Secret from [Dev Tools](https://devtools.bigcommerce.com), or you can authenticate using an OAuth token from the store’s [control panel](https://forum.bigcommerce.com/s/article/Store-API-Accounts#creating). ",
                              "header": {
                                "anchor": "types-of-apps_private-apps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Hidden Marketplace Apps\n\nApproved partners have the option of uploading “hidden” apps to the App Marketplace. A hidden app is a published app that does not show up in the public BigCommerce marketplace. To create a hidden app you need to be a BigCommerce Partner. \n\nUse Cases:\n- A partner is beta-testing an integration before a full Marketplace launch.\n- A BigCommerce user with several stores wants to install a custom app on all of them. Submitting a hidden app offers a streamlined alternative to creating a separate draft or test apps for each store.\nTo have an app hidden, please contact <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.",
                              "header": {
                                "anchor": "types-of-apps_hidden-marketplace-apps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Scripts\n\nYou can write a script to test an endpoint, check small portions of app code you are writing, or to create an application that will not be distributed in the BigCommerce Marketplace. Scripts do not have a user interface. \n\nTo get started with writing scripts all you need are API Credentials from the store’s Control Panel. Learn more about [making your first request](/api-docs/getting-started/about-api/making-requests) with the BigCommerce API. ",
                              "header": {
                                "anchor": "types-of-apps_scripts"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Connector and Other OAuth Apps\n\nSome apps qualify to be listed in the BigCommerce App Marketplace as “Connector” apps. These apps use manual OAuth token creation instead of the single-click app flow.\n\nWhile we always recommend and prefer the single-click app flow’s programmatic OAuth exchange, certain use cases might not be compatible.\n\nUse Cases:\n- Customized integrations that vary per store.\n- Integrations that do not provide any content for an iframe.\n- Apps that do not provide Web services for OAuth exchange. (For example: offline sync apps.)\n- Apps that do not provide Web or cloud-hosted components for a dashboard.",
                              "header": {
                                "anchor": "types-of-apps_connector"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Connector apps require the store owner to create API Credentials in the Control Panel and then pass those values into the app manually. The single-click installation process is preferred since it does not require this step."
                              }
                            },
                            {
                              "type": "text",
                              "data": "To create a connector app that uses manual OAuth token creation, make the following selections on the Technical tab when registering your app in Dev Tools: \n\n1. Set the App Type option to Connector.\n2. Enter your app’s Signup URL. This is the URL where a user would begin to configure the connection between your service and the BigCommerce store.\n4. Under OAuth scopes, select the scopes that your app requires for BigCommerce review only. Later, you will need to instruct store users to create a token with the production scopes your app needs.\n\nBigCommerce must review and approve your connector app proposal before we will accept the app’s submission to the Marketplace. \n\nIf you’re interested in submitting your integration as a connector app, please contact out to <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>. to discuss your plan."
                            }
                          ]
                        }
                      },
                      {
                        "title": "Building an App",
                        "route": {
                          "path": "/building-apps"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Building an App</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#building-apps_oauth-summary\">OAuth Summary</a></li>\n\t\t<li><a href=\"#building-apps_request-headers\">Request Headers</a></li>\n\t\t<li><a href=\"#building-apps_session-timeouts\">Managing Users Session Timeouts</a></li>\n\t\t<li><a href=\"#building-apps_installation-update-sequence\">App Installation and Update Sequence</a></li>\n\t\t<li><a href=\"#building-apps_recieving-get-request\">Receiving the GET Request</a></li>\n\t\t<li><a href=\"#building-apps_responding-get-request\">Responding to the GET Request</a></li>\n        <li><a href=\"#building-apps_making-post-request\">Making the POST Request</a></li>\n        <li><a href=\"#building-apps_recieving-post-request\">Receiving the POST Response</a></li>\n        <li><a href=\"#building-apps_load-uninstall-removal-requests\">Load, Uninstall, and User Removal Requests</a></li>\n        <li><a href=\"#building-apps_processing-signed-payload\">Processing the Signed Payload</a></li>\n        <li><a href=\"#building-apps_multi-user-support\">Multi-User Support</a></li>\n    <li><a href=\"#building-apps_external-app-installation\">External App Installation</a></li>\n    <li><a href=\"#building-apps_user-interface-constraints\">User Interface Constraints<a/></li>\n    <li><a href=\"#building-apps_app-walktrhough\"> Sample App Workflow </a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## OAuth Summary\n\nAPI token creation is a permission reserved for the [store owner](https://forum.bigcommerce.com/s/article/Store-API-Accounts#creating) user account. An app can request authentication “on behalf” of a store owner, allowing the app to make API requests against the store data.\n\nTo test an app before release, apply for a [sandbox](link-needed) store.\n \n- When a merchant clicks your app's Install button in the control panel, a [/GET request](#building-apps_recieving-get-request) is sent to your app's [Auth callback URL](#building-apps_recieving-get-request). \n- The /GET request sent from BigCommerce contains a `code` or temporary access token, `client_id`, `client_secret`, `scopes` and [other information](#building-apps_recieving-get-request). Your Auth Callback URL needs to be served over https. You should also have access to your app's server logs which will allow you to see the information in the request.\n- Your app needs to [respond](#building-apps_recieving-get-request) to the /GET  with HTML that will be rendered in an iframe in the store's control panel.\n- Your app then needs to make a /POST request back to BigCommerce that contains the code, client_id and client secret. This should be done programmatically. \n- BigCommerce will respond with a permanent Oauth token authorized against the store that has installed your app.\n- After installation, the store_hash and access_token should be stored somewhere secure so the app does not lose its authorization. \n\n\n### FAQ's\n**How can I make API calls?**   \nWe have built several [Hello World](/tools-resources) apps to get you started quickly. You can use these apps as a starting point or an example for building a Single-click app. \n\nIf you'd like to make test API requests without the overhead of installing a draft app, you can generate [API Credentials](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials) by creating an API Account in your store's control panel.\n\n**How can I sell my app?**  \nThe first step to listing an app in the BigCommerce App Marketplace is to apply to the BigCommerce [partner program](https://www.bigcommerce.com/partners/). \n\nFor more details on including your app in the Marketplace, see [App Store Approval Requirements](link-needed).\n\n**Need a deeper dive on app installation?**  \nKeep reading below.",
                              "header": {
                                "anchor": "building-apps_oauth-summary"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Request Headers\n\nAPI requests are authenticated by the following HTTP headers:\n\n```\nX-Auth-Client: The Client ID of the requesting app. \nX-Auth-Token: Access token authorizing an app to access store data on behalf of a user\n```\n\nIn addition, while not all resources require the Accept and Content-Type headers, many do. To ensure that your calls succeed, always include these headers. For more details on request headers and their accepted values, see [Request Headers](/api-docs/getting-started/about-api/api-environment#api-environment_request-headers).",
                              "header": {
                                "anchor": "building-apps_request-headers"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Managing Users Session Timeouts\n\nWe recommend that you add BigCommerce’s JavaScript SDK to your Single-Click Apps, to protect your apps’ users from getting logged out of the BigCommerce control panel after a period of idleness. To include our SDK, add this script tag to your Single-Click App:\n`<script src=\"//cdn.bigcommerce.com/jssdk/bc-sdk.js\">`\n\n\nOptionally, you can pass a logout callback function within the initialization call:\n\n```\nBigcommerce.init({\n      onLogout: callback\n});\n```\n\n\nThis callback function will run when the user explicitly logs out of the BigCommerce control panel, or is automatically logged out. The callback will allow your app to respond to this logout appropriately.",
                              "header": {
                                "anchor": "building-apps_session-timeouts"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## App Installation and Update Sequence\n\nThe purpose of the App Installation sequence is to obtain an Oauth token for the store installing the app, using the Client ID and Secret from Dev Tools. \n\nA user kicks off the installation or update sequence from within a store's control panel by clicking the “Install” button from your app details page, or by clicking an installed app to update its scopes. BigCommerce redirects the user to the Auth Callback URI provided during app registration. The Auth Callback URI must be publicly available, fully qualified, and served over TLS.",
                              "header": {
                                "anchor": "building-apps_installation-update-sequence"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536263813949",
                              "header": {
                                "title": "App Installation Sequence"
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Handling Requests Securely\n\nThe request comes from the client browser, rather than directly from BigCommerce. This allows you to use a non-publicly-available Auth Callback URI while testing your app.\n\nFor security, Auth and Load callbacks should be handled server-side. If you are building a client-side application (such as an AngularJS Single Page App), you should handle Auth and Load callbacks outside that application. Use a separate service that accepts the Auth and Load callback requests, generates tokens, validates requests, and then redirects the user to your client-side app’s entry point."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Receiving the GET Request\n\nThe GET request to your Auth Callback URI contains a temporary code that you can exchange for a permanent OAuth token. It also includes a unique value that identifies the store installing or updating your app, as well as authorized scopes.\n\nThe following table details the full list of parameters and values included in the GET request from BigCommerce to your Auth Callback URI. BigCommerce passes these within the URI itself as query parameters.\n\n| Parameter | Description |\n| --- | --- |\n| code | Temporary code to exchange for a permanent OAuth token. See [Making the POST request](#building-apps_making-post-request) below for more information about this exchange. |\n| scope | List of scopes authorized by the user. As a best practice, your app should validate this list to ensure that it matches the app&#39;s needs, and fail if it does not. However, at this time, the user does not have any opportunity to pick and choose between scopes. The dialog presented to the user requires the user to approve all scopes or none. |\n| context | The store hash: a unique value that identifies the store on which a logged-in user has clicked to install or your app. BigCommerce passes this along with a context path, as follows: `stores/{store_hash}`. Save the store hash value, because you will need to pass it in all your requests to the API. |\n\n### Example – Initial Installation\n\nThis example initiates the token exchange, with a requested scope of store_v2_orders:\n\n```\nGET /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders&context=stores/g5cd38 HTTP/1.1  \nHost: app.example.com\n```\n\n\n### Example – Updating Scopes\nThe following example requests a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:\n\n```\nGET /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders+store_v2_products&context=stores/g5cd38 HTTP/1.1  \nHost: app.example.com\n```",
                              "header": {
                                "anchor": "building-apps_recieving-get-request"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Note that when your app receives a new token, any previously issued token is invalidated."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Responding to the GET Request\n\nUpon receiving the GET request at your Auth Callback URI, your app should return some HTML to the merchant browser. BigCommerce renders this in an iframe inside of the control panel. It could be a form that collects further information from the user, or you could redirect the user to your app’s main page. If you do not pass back some HTML, the user will be left looking at a blank screen. Such an app would not be accepted into the App Marketplace.",
                              "header": {
                                "anchor": "building-apps_responding-get-request"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Making the POST Request\n\nThe POST request’s primary purpose is to exchange the temporary access code for a permanent OAuth token. However, your app must pass a number of additional values to accomplish the exchange. Pass the parameters and their values inside the request body, using query parameters and URL-encoding. To achieve this, you must include one of the following HTTP headers:\n\n`Content-Type: application/x-www-form-urlencoded` or `Content-Type: application/json`\n\nMake the POST request to the following address: `https://login.bigcommerce.com/oauth2/token`\n\n### Initial Installation\n\nDuring initial installation, upon receiving the POST, BigCommerce marks the status of your app as “Installed”, removes the progress-indicator overlay, and places your app icon in the control panel’s left-hand navigation. With the progress-indicator overlay removed, the user can interact with the HTML that you returned in your GET response.",
                              "header": {
                                "anchor": "building-apps_making-post-request"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "During app updates, upon receiving the POST, BigCommerce removes the update prompt from the control panel."
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Parameters\n\nInclude values for each of the following parameters.\n\n| Parameter | Description |\n| --- | --- |\n| client_id | The Client ID for your app, obtained during [registration](/api-docs/getting-started/building-apps-bigcommerce/apps-quickstart). |\n| client_secret | The Client Secret for your app, obtained during [registration](/api-docs/getting-started/building-apps-bigcommerce/apps-quickstart). |\n| code | Temporary access code received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request) discussed above. |\n| scope | List of OAuth scopes received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#recieving-get-request) discussed above. |\n| grant_type | Always use the following: authorization_code. |\n| redirect_uri | Must be identical to your registered Auth Callback URI. |\n| context | The store hash received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#recieving-get-request), in the format: `stores/{_store_hash_}` |\n\n### Examples – Initial Installation"
                            },
                            {
                              "type": "code",
                              "data": "POST /oauth2/token HTTP/1.1\nHost: login.bigcommerce.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 186\nclient_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&code=qr6h3thvbvag2ffq&scope=store_v2_orders&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}",
                              "header": {
                                "title": "HTTP"
                              },
                              "config": {
                                "mode": "http"
                              }
                            },
                            {
                              "type": "code",
                              "data": "use Bigcommerce\\Api\\Connection;\n$tokenUrl = \"https://login.bigcommerce.com/oauth2/token\";\n$connection = new Connection();\n$connection->useUrlencoded();\n$response = $connection->post($tokenUrl, array(\n    \"client_id\" => \"CLIENT_ID\",\n    \"client_secret\" => \"CLIENT_SECRET\",\n    \"redirect_uri\" => \"https://app.example.com/oauth\",\n    \"grant_type\" => \"authorization_code\",\n    \"code\" => $request->get(\"code\"),\n    \"scope\" => $request->get(\"scope\"),\n    \"context\" => $request->get(\"context\"),\n));\n$token = $response->access_token;",
                              "header": {
                                "title": "PHP"
                              },
                              "config": {
                                "mode": "php"
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Examples – Updating Scopes\n\nThe following examples request a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:"
                            },
                            {
                              "type": "code",
                              "data": "POST /oauth2/token HTTP/1.1\nHost: login.bigcommerce.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 186\nclient_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&scope=store_v2_orders+store_v2_products&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}",
                              "header": {
                                "title": "HTTP"
                              },
                              "config": {
                                "mode": "http"
                              }
                            },
                            {
                              "type": "code",
                              "data": "use Bigcommerce\\Api\\Connection;\n$tokenUrl = \"https://login.bigcommerce.com/oauth2/token\";\n$connection = new Connection();\n$connection->useUrlencoded();\n$response = $connection->post($tokenUrl, array(\n    \"client_id\" => \"CLIENT_ID\",\n    \"client_secret\" => \"CLIENT_SECRET\",\n    \"redirect_uri\" => \"https://app.example.com/oauth\",\n    \"grant_type\" => \"authorization_code\",\n    \"code\" => $request->get(\"code\"),\n    \"scope\" => $request->get(\"scope\"),\n    \"context\" => $request->get(\"context\"),\n));\n\n$token = $response->access_token;",
                              "header": {
                                "title": "PHP"
                              },
                              "config": {
                                "mode": "php"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Receiving the POST Response\n\nThe POST response will include a JSON object containing the permanent OAuth token, user information, and other values. Upon receiving the permanent OAuth token, store it securely. You should also store the user and store hash values, to identify the user and store at load and uninstall. The following sections detail the contents of the JSON body.\n\n### JSON Values\n| Name | Data Type | Value Description |\n| --- | --- | --- |\n| access_token | string | The permanent OAuth token that your app can use to make requests to the Stores API on behalf of the user. Store this value securely. |\n| scope | string | List of authorization scopes. |\n| id | integer | Unique identifier for the user. Store this value to identify the user at load and uninstall. |\n| email | string | The user’s email address. Store this value to identify the user at load and uninstall. |\n| context | string | The store hash, as well as a base path: `stores/{_store_hash_}` |",
                              "header": {
                                "anchor": "building-apps_recieving-post-request"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"access_token\": \"ACCESS_TOKEN\",\n  \"scope\": \"store_v2_orders\",\n  \"user\": {\n    \"id\": 24654,\n    \"email\": \"merchant@mybigcommerce.com\"\n  },\n  \"context\": \"stores/STORE_HASH\"\n}",
                              "header": {
                                "title": "Initial Installation",
                                "subtitle": "JSON"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Update requests will refresh the payload’s access_token and scope values. Here again, the following example requests a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:"
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"access_token\": \"ACCESS_TOKEN\",\n  \"scope\": \"store_v2_orders store_v2_products\",\n  \"user\": {\n    \"id\": 24654,\n    \"email\": \"merchant@mybigcommerce.com\"\n  },\n  \"context\": \"stores/STORE_HASH\"\n}",
                              "header": {
                                "subtitle": "JSON",
                                "title": "Updating Scopes"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Load, Uninstall, and User Removal Requests\nIn addition to the Auth Callback URI, the following URI’s are required for BigCommerce Apps:\n\n| Name | Required? | Event Discussion |\n| --- | --- | --- |\n| Load Callback URI | Yes | Called when the store owner or user clicks to load your app. |\n| Uninstall Callback URI | No | Called when the store owner clicks to uninstall your app. |\n| Remove User Callback URI | No | Called when the store admin revokes a user's access to your app. |\n\nEach event listed here triggers a GET request from BigCommerce containing a signed payload that allows your app to:\n- Verify that the request came from BigCommerce.\n- Identify the store.\n- Identify the store owner or user.\n\n### Load Request and Response\n\nOnce your app has been installed, the store owner or user can click its icon in the control panel to launch it. This causes BigCommerce to send a GET request to the Load Callback URI that you provided during app registration. In a production environment, the Load Callback URI must be publicly available, fully qualified, and served over TLS/SSL.\n\n```\nThe GET request contains a signed payload, as shown below.\nGET /load?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\nHost: app.example.com\n```\n\nUpon receiving a GET request to the Load Callback URI, your app needs to [process the signed payload](#building-apps_processing-signed-payload). After processing the payload, your app returns its user interface as HTML. BigCommerce renders this inside of an iframe. Please see [User Interface Constraints](#building-apps_user-interface-constraints) for important information about your app’s user interface.\n\n### Uninstall Request (Optional)\n\nStore owners have the option to uninstall any app at any time. When a store owner uninstalls an app, the app’s OAuth token is revoked and the app cannot make requests to the Stores API on the store’s behalf anymore.\n\nYou do not need to provide an Uninstall Callback URI. The lack of an Uninstall Callback URI does not prevent uninstallation. Instead, the Uninstall Callback URI allows you to track store owners who uninstall your app and to run cleanup operations, such as removing the store’s user accounts from your system.\n\nShould you choose to avail of this option and provide an Uninstall Callback URI, please note that it must be publicly available, fully qualified, and served over TLS/SSL. If provided, BigCommerce will send a GET request to your Uninstall Callback URI when a store owner clicks to uninstall your app.\n\nExample of a GET Request sent to the Uninstall Callback URI\n```\nGET /uninstall?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\n\tHost: app.example.com\n```\nUpon receiving the GET request, your app will need to process the signed payload.",
                              "header": {
                                "anchor": "building-apps_load-uninstall-removal-requests"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Any HTML that you return in your response will not be rendered."
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Remove User Request (Optional)\n\nIf you have not enabled [multi-user](#building-apps_multi-user-support) support, you will not provide a Remove User Callback URI and can ignore this section. If you enable multi-user support, you can optionally specify a Remove User Callback URI. It must be fully qualified, publicly available, and served over TLS/SSL. BigCommerce will send a GETrequest to your Remove User Callback URI when a store admin revokes a user’s access to your app. \n\nExample of a Get Request sent to the Remove User URI\n\n```\nGET /remove-user?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\nHost: app.example.com\n```\n\nUpon receiving the GET request, your app will need to process the signed payload."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Any HTML that you return in your response will not be rendered."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Processing the Signed Payload\n\nProcessing the signed payload involves splitting and decoding it, verifying the HMAC signature, and processing the JSON object.\n\n### Splitting and Decoding the Signed Payload\n\nThe signed payload is a string containing a base64 url-encoded JSON string and a base64 url-encoded HMAC signature. The parts are delimited by the `.` character:\n\n```\nencoded_json_string.encoded_hmac_signature\n```\n\n\nTo decode the signed payload, complete the following steps:\n1. Split signed_payload into its two parts at the `.` delimiter.\n2. Decode encoded_json_string using base64url.\n3. Convert the decoded JSON string into an object. See Processing the JSON object for more about this object.\n4. Decode encoded_hmac_signature using base64url.\n5. Use your client secret to verify the signature. See the next section for more details.\n\n### Verifying the HMAC Signature\n\nTo verify the payload, you need to sign the payload using your client secret, and confirm that it matches the signature that was sent in the request.",
                              "header": {
                                "anchor": "building-apps_processing-signed-payload"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "To limit the vulnerability of your app to timing attacks, we recommend using a constant time-string comparison function, rather than the equality operator, to check that the signatures match."
                              }
                            },
                            {
                              "type": "code",
                              "data": "function verifySignedRequest($signedRequest)\n{\n    list($encodedData, $encodedSignature) = explode('.', $signedRequest, 2);\n\n    // decode the data\n    $signature = base64_decode($encodedSignature);\n        $jsonStr = base64_decode($encodedData);\n    $data = json_decode($jsonStr, true);\n\n    // confirm the signature\n    $expectedSignature = hash_hmac('sha256', $jsonStr, $clientSecret(), $raw = false);\n    if (!hash_equals($expectedSignature, $signature)) {\n        error_log('Bad signed request from BigCommerce!');\n        return null;\n    }\n    return $data;\n}",
                              "header": {
                                "title": "verifySignedRequest"
                              },
                              "config": {
                                "mode": "php"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "!hash_equals is available in PHP 5.6 and later. If you are running an older version of PHP, pull in a compatibility library such as the following: https://packagist.org/packages/realityking/hash_equals. BigCommerce’s sample app hello-world-app-php-silex app does this automatically."
                              }
                            },
                            {
                              "type": "code",
                              "data": "require \"base64\"\nrequire \"openssl\"\n\ndef verify(signed_payload, client_secret)\n  message_parts = signed_payload.split(\".\")\n\n  encoded_json_payload = message_parts[0]\n  encoded_hmac_signature = message_parts[1]\n\n  payload_object = Base64.strict_decode(encoded_json_payload)\n  provided_signature = Base64.strict_decode(encoded_hmac_signature)\n\n  expected_signature = OpenSSL::HMAC::hexdigest(\"sha256\", client_secret, payload_object)\n\n  return false unless secure_compare(expected_signature, provided_signature)\n\n  JSON.parse(payload_object)\nend\n\ndef secure_compare(a, b)\n  return false if a.blank? || b.blank? || a.bytesize != b.bytesize\n  l = a.unpack \"C#{a.bytesize}\"\n\n  res = 0\n  b.each_byte { |byte| res |= byte ^ l.shift }\n  res == 0\nend\n",
                              "header": {
                                "title": "verify()"
                              },
                              "config": {
                                "mode": "ruby"
                              }
                            },
                            {
                              "type": "text",
                              "data": "### Processing the JSON Object\n\nThe JSON object embedded in the signed_payload contains information about the BigCommerce store and the store owner or user.\n\n### Identifying the Store\nYou should use the store information endpoint to identify the store to which the request pertains.\n\n### Interpreting the User Information\n\nInterpreting the user information varies as follows:\n\n| Request type | Multiple users enabled | Multiple users not enabled |\n| --- | --- | --- |\n| Load | Compare the user information to see if it matches that of the store owner, received at the time of [app installation](#building-apps_installation-update-sequence) or that of an existing user. If the user information does not match either of these, then it represents a new user that you should add to your database or other storage. | The information should match that of the store owner, received at the time of [app installation](#building-apps_installation-update-sequence). |\n| Uninstall | The user information should match that of the store owner. Only the store owner can uninstall your app. | Should match the store owner. |\n| Remove user | The user information should match one of the users that you have stored. After locating the stored user, delete it from your database or other storage. | N/A |\n\n### JSON Values\n\n| Name | Data Type | Value Description |\n| --- | --- | --- |\n| user.id | integer | Unique identifier for the user who initiated the callback. |\n| user.email | string | Email address of the user who initiated the callback. |\n| owner.id | integer | Unique identifier for the user listed as the store owner. |\n| owner.email | string | Email address of the user listed as the store owner. |\n| context | string | The context value is part of the API path for this store and includes the store_hash. |\n| store_hash | string |Unique identifier for the store. |\n| timestamp | float | The time (in Unix time) when the callback was generated.|"
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"user\":\n         {\n        \"id\":9128,\n        \"email\":\"user@mybigcommerce.com\"\n     },\n     \"owner\":\n          {\n         \"id\":9128,\n         \"email\":\"user@mybigcommerce.com\"\n     },\n     \"context\":\"stores/z4zn3wo\",\n     \"store_hash\":\"z4zn3wo\",\n     \"timestamp\":1469823892.9123988\n}",
                              "header": {
                                "title": "User Information"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Multi-User Support\n\nWhen you register your app with BigCommerce, enabling multi-user support will allow store admins to manually authorize users – other than the store owner – to load the app. \n\nAs soon as you enable multi-user support, the control panel of any store that has your app installed will be affected. If you already have an app published in the App Marketplace, be aware that this setting takes effect immediately. Therefore, we recommend testing your multi-user support using a separate app that is in draft status.\n\nLet your customers know that you’ve enabled this feature. Otherwise, they won’t know that they can start granting access to users.\n\nIf multi-user support is added after your app has launched, the update will cause the app scopes to change and users will be alerted of the new permission request.\n\n### The Control Panel Experience\nStore admins will be able to adjust user permissions to grant/deny other store users’ access to your app. The next time the user logs in, they will see any apps for which they have been granted access. The user can then click on the app icon in the left navigation to load it.\nUse your draft app and your sandbox store to review this behavior.\n\n### The Load Request\nApps that support multiple users can expect the email and ID of the user that initiated the callback in addition to the owner’s email and ID in the JSON object sent in the load request. If a load request is sent with information for a user you haven’t seen yet, you should provision the user account and associate it with the store in your database.\n\nBecause you know the store owner’s email and ID from the App Installation sequence, your app can distinguish store owners from other users. This allows you to provide different user experiences based on the information in the load request. Here is a summary of the two types of users:\n\n- Store owner: Can install, uninstall, and load apps.\n- Users: Cannot install or uninstall apps. Permitted only to load the apps that a store admin has authorized.\n\nFor further details, please see [Load Request and Response](#building-apps_load-uninstall-removal-requests).\n\n### The Remove User Request\nIn addition to their ability to add users, store admins can also remove users. This action generates a GET request to the Remove User Callback URI that you provided in My Apps. Your app should delete from its records the user identified in the request.\n\nFor further information, please see [Remove User Request](#building-apps_load-uninstall-removal-requests).",
                              "header": {
                                "anchor": "building-apps_multi-user-support"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## External App Installation\n\nApps can be installed from outside the BigCommerce control panel. For example, you could create an install link on your company’s site that directs the merchant to download your app. \n\n### Render Success/Failure Pages\n\nModify your application code to serve either a success or failure page, depending on whether the external installation was successful or unsuccessful.\n\nIf you skip this step, your application will load in the iframe created by your button. To ensure a good experience for your merchants, we strongly recommend that you return a confirmation page, instead of allowing your application to be loaded in that modal.\n\n### Handling Errors\n\nIf your application’s installation was initiated and completed through an external link, BigCommerce will send your auth callback endpoint an extra parameter called external_install.\nIf you receive this parameter and there are no errors, call:\n\n`https://login.bigcommerce.com/app/<your_app_client_id>/install/succeeded`\n\nIf there were errors, call:\n`https://login.bigcommerce.com/app/<your_app_client_id>/install/failed`\n\nBelow is a sample code snippet of an auth callback that does this:",
                              "header": {
                                "anchor": "building-apps_external-app-installation"
                              }
                            },
                            {
                              "type": "code",
                              "data": "   if params['external_install']\n        return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/succeeded'\n    end\n\n    redirect '/'\n\nrescue => e\n    if params['external_install']\n        return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/failed'\n    end",
                              "header": {
                                "title": "Auth Callback"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Depending on which endpoint you call, we will render one of the following success/failed pages to the modal."
                            },
                            {
                              "type": "text",
                              "data": "## User Interface Constraints\n\nSingle-click apps benefit from a high level of integration with the BigCommerce platform. Users interacting with your app will enjoy a seamless experience. BigCommerce achieves this by rendering your app&#39;s user interface inside of an iframe within the control panel. To ensure acceptance into the App Marketplace, your app should be able to perform all of its functions inside of the iframe.\n\nWhile very usable and friendly, the iframe approach does require special attention from app developers. The remainder of this page discusses several functional areas to consider when designing and developing your app.\n\n### About Mixed Content\n\nThe BigCommerce control panel is served over TLS/SSL. Your app must be hosted on a web server that accepts and sends TLS/SSL requests. In addition, all of the resources referenced in the HTML that you present to the end users must be served over TLS/SSL. You may find protocol-agnostic addressing helpful.\n\nIf the user interface retrieves images, scripts, or other assets over a connection not encrypted with TLS/SSL, the user will experience errors and possibly an inability to interact with your app. Before submitting your app, use an <a href=\"https://www.jitbit.com/sslcheck/\" target=\"_blank\">online crawler</a> to check for insecure content.\n\n### About Same-Origin Policies\n\n<a href=\"http://en.wikipedia.org/wiki/Same-origin_policy\" target=\"_blank\">Same-origin policies</a> restrict apps running within iframes from performing certain activities, such as interacting with other services and making OAuth connections. While apps that operate within the BigCommerce iframe get strong preference during App Marketplace considerations, we sometimes make exceptions for apps that need to interact with, and authenticate to, other services. If your app requires this, we advise you to open a new tab for actions that cannot occur within the iframe.\n\n### About P3P and Cookies\n\nInternet Explorer is one of the browsers that BigCommerce [supports](#supported-browsers), and our merchants do use it to access the control panel. If your app needs to set a cookie, you will need to craft a <a href=\"http://en.wikipedia.org/wiki/P3P\" target=\"_blank\">P3P policy</a>. Otherwise, your app will experience issues on Internet Explorer. Please see the following pages for more information:\n\n*   <a href=\"http://www.techrepublic.com/blog/software-engineer/craft-a-p3p-policy-to-make-ie-behave/\" target=\"_blank\">Craft a P3P policy to make IE behave</a>\n*   <a href=\"http://blogs.msdn.com/b/ieinternals/archive/2013/09/17/simple-introduction-to-p3p-cookie-blocking-frame.aspx\" target=\"_blank\">MSDN Intro to P3P Cookie Blocking</a>",
                              "header": {
                                "anchor": "building-apps_user-interface-constraints"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Webhooks",
                  "route": {
                    "path": "/webhooks"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Overview",
                        "route": {
                          "path": "/about-webhooks"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Making Requests</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#about-webhooks_authentication\">Authentication</a></li>\n        <li><a href=\"#about-webhooks_lightweight-callback-payload\">Lightweight Callback Payload</a></li>\n        <li><a href=\"#about-webhooks_request-and-response\">Request and Response</a></li>\n    \t\t<li><a href=\"#about-webhooks_receiving-the-callback\">Recieving the Callback</a></li>\n    \t\t<li><a href=\"#about-webhooks_respond-to-webhook-callbacks\">Responding to the Callback</a></li>\n        <li><a href=\"#about-webhooks_callback-retry-mechanism\">Callback Retry Mechanism</a></li>\n        <li><a href=\"#about-webhooks_webhook-security\">Webhook Security</a></li>\n    \t\t<li><a href=\"#about-webhooks_webhook-troubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#about-webhooks_tools-for-debugging-and-testing-webhooks\">Tools for Debugging</a></li>\n        <li><a href=\"/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "Webhooks allow app developers to be notified, in near real-time, when specific events occur on a BigCommerce store. For example, your app may need to perform an action when a new order is created, a product’s inventory decreases, or an item is added to a shopper’s cart. When a subscribed event occurs on a store, BigCommerce will POST a payload to your app’s callback URI so your app can take some action based on that event."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "title": "Multiple Events Are Triggered during Bulk Data Imports",
                                "body": "Bulk data imports will trigger the relevant events for every record affected. For example, if you have a hook on `store/product/created`, when the merchant imports 2,000 products, we will send 2,000 individual callback events."
                              },
                              "header": {}
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Authentication\n\nWebhooks are authenticated using Oauth and support the JSON media type. Basic auth and XML are not supported.\n\nBefore you  can begin to send and receive requests, you must have the following:\n\n* **A store:** You can get a sandbox store by joining the Partner Program.\n* **OAuth Client ID:** Obtained by creating an API Account.\n* **OAuth token:** Obtained by creating an API Account.\n* **Valid TLS/SSL configuration:** Verify your app server’s setup at the following site: [https://sslcheck.globalsign.com](https://sslcheck.globalsign.com)",
                              "header": {
                                "anchor": "about-webhooks_authentication"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "error",
                                "title": "Connection Breakers",
                                "body": "Any one of the following conditions on your app server will cause a connection failure:\n* Hostname/DNS mismatch.\n* Self-signed certificate.\n* Intermediate certificates not loaded."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Lightweight Callback Payload\n\nWhen a subscribed event occurs, we send a light payload with only minimum details regarding the event that’s been triggered. This gives you maximum flexibility as to how you want to handle the notification in your application. For instance, if you subscribe to the `store/order/statusUpdated` event, we’ll send you the order ID when the status is updated. You might want to handle the notification by fetching the full order details via a request to the Orders resource.\n\nAn example payload follows:\n\n```\n{\n \"store_id\":11111,\n \"producer\":\"stores/abcde\",\n \"scope\":\"store/order/statusUpdated\",\n \"data\":{\n         \"type\":\"order\",\n         \"id\":173331\n        },\n \"hash\":\"3f9ea420af83450d7ef9f78b08c8af25b2213637\"\n }\n```",
                              "header": {
                                "anchor": "about-webhooks_lightweight-callback-payload"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Request and Response\n\n*Never worked with webhooks before? Check out the tutorial on creating webhooks.*\n\nAll webhooks requests must include the following in their HTTP headers:\n\n```\n     Accept: application/json\n     Content-Type: application/json\n     X-Auth-Client: <the OAuth client id>\n     X-Auth-Token: <the OAuth token>\n```",
                              "header": {
                                "anchor": "about-webhooks_request-and-response"
                              }
                            },
                            {
                              "type": "code",
                              "data": "curl -X POST \\\n  https://api.bigcommerce.com/stores/store_hash/v2/hooks \\\n  -H 'Accept: application/json' \\\n  -H 'X-Auth-Client: your-client-id \\\n  -H 'X-Auth-Token: your-auth-token \\\n  -d '{\n  \"scope\": \"store/cart/lineItem/*\",\n  \"destination\": \"https://myapp.herokuapp.com/\",\n  \"is_active\": true",
                              "header": {
                                "title": "/POST Webhook ",
                                "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks",
                                "anchor": "post-webhooks"
                              },
                              "config": {
                                "mode": "shell"
                              }
                            },
                            {
                              "type": "code",
                              "data": "    {\n        \"id\": 14270456,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/cart/lineItem/*\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": true,\n        \"created_at\": 1531326542,\n        \"updated_at\": 1531337178\n    }",
                              "header": {
                                "title": "Response 201 Created",
                                "subtitle": "/POST Webhook",
                                "anchor": "response-post-webhooks"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "| Name |Description | Type\n|--|--|--|\n| id | A read-only value that uniquely identifies a webhook object. Do not attempt to set this value in a PUT or POST. | integer|\n| client_id | The OAuth client ID that uniquely identifies your application. BigCommerce returns this name-value pair in the JSON body of its responses. | string |\n| store_hash | \tThe hash value that uniquely identifies the store. Your application does not need to set this value via the JSON object; instead, you pass it in the path of your API requests. | string |\n|scope| Value is the event you would like to listen for. See List of Webhook Events for the full list of possibilities. Wild Cards are supported for scope. **(Required)** | string |\n| destination | value is the callback’s fully qualified URI. This should be an endpoint configured on your app server to receive webhook payloads. **(Required)** | string |\n| headers |The headers object contains one or more name-value pairs, both string values. If you choose to include a headers object, BigCommerce will include the name-value pair(s) in the HTTP header of its POST requests to your callback URI at runtime. While this feature could be used for any purpose, one is to use it to set a secret authorization key and check it at runtime. This provides an additional level of assurance that the POST request came from BigCommerce instead of some other party, such as a malicious actor. (Optional) | string |\n|is_active | Value specifies whether a webhook is active or inactive. By default, new webhooks will be set to be inactive and will have a blank value. If you want to create a webhook that should be active initially, you can pass the following name-value pair: \"is_active\": true. (Optional) | boolean |\n| created_at | The time at which the webhook was created.| date-time Unix Epoch|\n| updated_at | The time at which the webhook was last updated. | date-time Unix Epock|"
                            },
                            {
                              "type": "text",
                              "data": "An HTTP 201 response indicates that the webhook was set successfully."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "body": "Following the creation of a webhook, it can take up to one minute for BigCommerce to start sending POST requests to your callback URI.",
                                "title": "One-Minute Timeout"
                              }
                            },
                            {
                              "type": "code",
                              "data": "//Response 200 OK\n\n[\n    {\n        \"id\": 14270466,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/product/created\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": true,\n        \"created_at\": 1531326542,\n        \"updated_at\": 1531337178\n    },\n    {\n        \"id\": 14270713,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/product/updated\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": false,\n        \"created_at\": 1531338589,\n        \"updated_at\": 1531338589\n    }\n]\n",
                              "header": {
                                "title": "/GET All Webhooks",
                                "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks",
                                "anchor": "get-all-webhooks"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"id\": 14270466,\n    \"client_id\": \"your-client-id\",\n    \"store_hash\": \"your_store_hash\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n\n",
                              "header": {
                                "subtitle": "To get a single webhook use the `id`.  Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id",
                                "title": "/GET a Single Webhook",
                                "anchor": "get-a-single-webhook"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n \"scope\": \"store/product/updated\",\n \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n \"is_active\": false\n}\n\n\n//Response 200 OK\n\n{\n    \"id\": 14270466,\n    \"client_id\": \"ejoftto9hv8xlip01cckcg53v7g3lrl\",\n    \"store_hash\": \"jrah6gmn\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n",
                              "header": {
                                "title": "/PUT Webhook",
                                "subtitle": "Update a webhook using the id. Once the webhook is created all the fields below can be changed via an update request. Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id",
                                "anchor": "update-a-webhook"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "code",
                              "data": "//Response 200 OK\n{\n    \"id\": 14270466,\n    \"client_id\": \"ejoftto9hv8xlip01cckcg53v7g3lrl\",\n    \"store_hash\": \"jrah6gmn\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n",
                              "header": {
                                "title": "/DELETE a Wehbook",
                                "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "There is not a way to delete all webhooks on a store. Run a GET request for the webhook id, then send a request to the delete URI to remove each one. It returns a 200 OK for the response with the deleted hook. When requesting a list of hook, the hook id is not available.\n\nIf webhooks are no longer being used, either delete them or set `is_active:false`."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Receiving the Callback\n\nYou’ll need to build an application and configure your server to receive the callback we send when events are triggered. \n\nNeed to set up a quick destination URL for testing? See Tools for Debugging and Testing Webhooks.",
                              "header": {
                                "anchor": "about-webhooks_receiving-the-callback"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Respond to Webhook Callbacks\n\nYou’ll need to build an application and configure your server to receive the callback we send when events are triggered.\n\nTo acknowledge that you received the webhook without issue, your server should return a 200 HTTP status code. Any other information you return in the request headers or request body will be ignored. Any response code outside the 200 range, including 3_xx_ codes, will indicate to us that you did not receive the webhook. When a webhook is not received (for whatever reason), we will retry the callback as described below.\n\nNeed to set up a quick destination URL for testing? See [Tools for testing webhooks.](#about-webhooks_tools-for-debugging-and-testing-webhooks)",
                              "header": {
                                "anchor": "about-webhooks_respond-to-webhook-callbacks"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Callback Retry Mechanism\n\nThe webhooks service will do its best to deliver events to your callback URI. If your server indicates that the webhook payload has not been received, the dispatch service will take the following actions:\nIf an app server responds to a webhook payload with anything other than a 2_xx_ response, or times out, the app will be blocked for 60 seconds.\nWebhooks created during that 60-second block will be queued up to send on the next scheduled retry attempt after the block expires, so that webhooks are not lost.\n\nThe webhook dispatcher will then attempt several retries (at increasing intervals) until the maximum retry limit is reached.\n\n### Retry Intervals\n\n* 60 seconds after the most recent failure  \n* 180 seconds after the most recent failure  \n* 180 seconds after the most recent failure  \n* 300 seconds after the most recent failure  \n* 600 seconds after the most recent failure  \n* 900 seconds after the most recent failure  \n* 1800 seconds after the most recent failure  \n* 3600 seconds after the most recent failure  \n* 7200 seconds after the most recent failure  \n* 21600 seconds after the most recent failure  \n* 50400 seconds after the most recent failure  \n* 86400 seconds (24 hours) after the most recent failure\n\nAfter the final retry attempt (cumulatively, 48 hours after the first delivery attempt), the webhook will automatically be deactivated, and we will send an email to the developer’s email address registered on the subscribing app. You can reactivate the webhook by setting the `is_active` flag back to true via a `/PUT` request to the hooks resource.",
                              "header": {
                                "anchor": "about-webhooks_callback-retry-mechanism"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Webhook Security\nTo ensure that webhook payloads are secure against activity by a malicious actor, we take a three-pronged approach:\n\n* Webhook payloads contain minimal information about the store and event, for example the ID identifying the order or cart. To access potentially sensitive information on a store, a malicious actor would need to be fully authenticated against that store’s API in order to request full details.\n* Webhook payloads are sent over a TLS-encrypted connection.\n* For added security, you can include custom headers in your webhook creation request, and these headers will be sent in the payload when an event you subscribe to occurs. If your app endpoint is secured by basic authentication, you could set your own basic auth headers to authenticate the payload at runtime.",
                              "header": {
                                "anchor": "about-webhooks_webhook-security"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n\n### Why am I not receiving event payloads to my callback URI?\nIf your app does not return an HTTP 2_xx_ to BigCommerce after receiving the webhook event payload, BigCommerce considers it a failure. BigCommerce will keep trying for a little over 48 hours. At the end of that time, BigCommerce sends an email to the email address set during app registration and disables the webhook by setting the is_active flag to false.\n\nYou can proactively check to make sure that everything is OK by periodically making a GET request and checking the is_active flag.\n\nIf you receive an email or discover that the is_active flag has been flipped to false, try the following:\n\nCheck to see if your app is responding to the event payload with something other than HTTP 200.\nCheck to make sure that your server has a valid TLS/SSL setup. One way to do this is by visiting the following website: https://sslcheck.globalsign.com. Any of the following will cause the TLS/SSL handshake to fail:\nSelf-signed certificate.\nHost name of the certificate does not match the server’s DNS.\nYour server’s key or trust store has not been loaded up with the intermediate certificates necessary to establish the chain of trust.\nOnce you have resolved the issue preventing the connection, send a PUT request to flip the is_active flag back to true. This will cause BigCommerce to start sending the event payloads to your callback URI again.\n\n### Why am I not receiving a 201 response after creating a webhook?\nAfter sending a POST request to create a webhook, you should get an HTTP 201 back. If you do not, check your TLS/SSL setup and be sure that your request contains the following headers:\n\n```\n     Accept: application/json\n     Content-Type: application/json\n     X-Auth-Client: <the OAuth client id>\n     X-Auth-Token: <the OAuth token>\n```",
                              "header": {
                                "anchor": "about-webhooks_troubleshooting"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Tools for Debugging and Testing Webhooks\n\n**[ngrok](https://ngrok.com/)**  \nAs you are building your integration, you might want to test webhooks on your local dev machines.\n\nWe suggest using ngrok, which you can use to easily set up tunnels between a server running on localhost and a public URL. This will enable you to send our webhooks to your localhost environments via a public URL. No production push is required.\n\nNeed help on ngrok and webhooks see our [tutorial](/api-docs/getting-started/webhooks/setting-up-webhooks).\n\n**[Webhook Tester](https://webhook.site/#/)**  \nThis allows for webhooks to be quickly tested or checked. ",
                              "header": {
                                "anchor": "about-webhooks_tools-for-debugging-and-testing-webhooks"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Setting Up Webhooks",
                        "route": {
                          "path": "/setting-up-webhooks"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>Setting Up Webhooks</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#setting-up-webhooks_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#setting-up-webhooks_create-project-folder\">Create Project Folder</a></li>\n        <li><a href=\"#setting-up-webhooks_install-ngrok\">Install ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_create-express-app\">Create Express App<</a></li>\n        <li><a href=\"#setting-up-webhooks_start-the-app-ngrok\">Start the App and ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_fire-webhooks\">Fire Webhooks</a></li>\n        <li><a href=\"#setting-up-webhooks_update-via-api\">Update Via the API</a></li>\n        <li><a href=\"#setting-up-webhooks_next-steps\">Next Steps</a></li>\n        <li><a href=\"#setting-up-webhooks_roubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Prerequisites\n\n- NPM is installed (installed automatically with Node)\n- Familiar with Command Line\n- Familiar with Postman\n- [API Access Token & Client ID](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials) with [scope] set to Information & Settings Read-Only and Products Read-Only.\n- [Webhooks Overview](/api-docs/getting-started/webhooks/about-webhooks)",
                              "header": {
                                "anchor": "setting-up-webhooks_prerequisites"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create Project Folder\n\n1. Open the terminal and create a folder that will hold ngrok and the Node app, then move into that directory.\n\n```\n    mkdir webhooks-test\n    cd webhooks-test\n```",
                              "header": {
                                "anchor": "setting-up-webhooks_create-project-folder"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Install ngrok\n\nThere are three ways to install ngrok: \n- Install manually and then set the $PATH so ngrok can be used globally. \n- Download as an [npm](https://www.npmjs.com/package/ngrok) module. \n- Download manually and place in the project folder. (Method we are using)\n\n### Mac/Linux\n\n1. Visit https://ngrok.com/ and click on download.\n2. Choose the version for your operating system.\n3. Unzip ngrok and place the application in the project folder that you created.\n\nThis can be accomplished in one command:\nunzip \"file_to_unzip\" -d  destination\n\n`unzip /Users/your-computer/Downloads/ngrok-stable-darwin-amd64.zip -d /Users/your-computer/Documents/webhooks-test`",
                              "header": {
                                "anchor": "setting-up-webhooks_install-ngrok"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "success",
                                "body": "At this point you should have a project folder with ngrok unzipped inside of it. \n",
                                "title": "Checkpoint"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create Express App\n\n1. In the terminal run `npm init`. You will be prompted with several questions about the app setup. Feel free to hit return to accept the default value.  The final screen will look something like this: \n\n```\n{\n  \"name\": \"webhooks-test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"webhooks-test\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```\n\n2. Take note of the value in main, `index.js`. \n3. Create a file in your project folder called index.js. `touch index.js` or `copy nul > index.js` for Windows.\n4. Install [Express](https://expressjs.com/en/starter/installing.html) using the terminal in the same project folder. `npm install express --save`\t\t\t ",
                              "header": {
                                "anchor": "setting-up-webhooks_create-express-app"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "success",
                                "body": "At this point your project folder should have similar contents:\nindex.js\nnode_modules\npackage.json\nngrok\npackage-lock.json",
                                "title": "Checkpoint"
                              }
                            },
                            {
                              "type": "text",
                              "data": "4. Open index.js in a text editor and add this code snippet: \n\n\n```\n    const express = require('express')\n    const app = express()\n        app.post('/webhooks', function (req, res) {\n        res.send('OK')\n    })\n    app.listen(3000, function () {\n        console.log('Listening for webhooks on port 3000')\n    })\n```\n\n\nThe app is starting a server and listening on port 3000, then returning a response of ok once it receives a POST to the /webhooks url.\n\n```\napp.post('/webhooks', function (req, res) {\n res.send('OK')\n})\n```\n\n\nFrom Express [Website](https://expressjs.com/en/starter/basic-routing.html):\n`app.METHOD(PATH, HANDLER)`\n- app is an instance of express.\n- METHOD is an [HTTP request method](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods), in lowercase.\n- PATH is a path on the server.\n- HANDLER is the function executed when the route is matched.\n- Res.send is the body parameter that sends the HTTP response."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Start the App and ngrok\n\nWe are going to start the app and visit the ngrok url to see the status of our webhooks. \n\n1. Open two terminal tabs. They both should be in your project folder. \n2. In one tab run the app. `node index.js`\n3. In the other start ngrok. `./ngrok http 3000`",
                              "header": {
                                "anchor": "setting-up-webhooks_start-the-app-ngrok"
                              }
                            },
                            {
                              "type": "tabs",
                              "data": {
                                "children": [
                                  {
                                    "title": "node index.js",
                                    "blocks": [
                                      {
                                        "type": "text",
                                        "data": "```\nBIGCOMMERCE:webhooks your.computer$ node index.js\nListening for webhooks on port 3000\n```"
                                      }
                                    ]
                                  },
                                  {
                                    "title": "ngrok http 3000",
                                    "blocks": [
                                      {
                                        "type": "image",
                                        "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500085650",
                                        "config": {
                                          "centered": true
                                        },
                                        "header": {
                                          "title": "nrgok terminal"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "text",
                              "data": "ngrok returns two values we need for webhooks. \n- Web Interface: Where you can monitor the hook from a browser. `https://127.0.0.1:4040`\n- Forwarding: The webhook destination. Make note of the https version. In this example its https://6a35e97b.ngrok.io.\n\n4. Open a web browser and copy in your Web Interface URL. `http://127.0.0.1:4040` -  This is where the webhooks will appear when they fire."
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500191661",
                              "header": {
                                "title": "ngrok Web Interface"
                              },
                              "config": {
                                "centered": true,
                                "maxWidth": "800",
                                "maxHeight": "800"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "The webhook we are going to subscribe to is `store/product/updated`. \n\n1. Create a POST request using the try it now box below or your api enviroment of choice.`https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks`. Replace store_hash with your store.\n2. Create a body request with the webhook we are subscribing to and your forwarding url:\n\n```\n{\n \"scope\": \"store/product/updated\",\n \"destination\": \"https://6a35e97b.ngrok.io/webhooks\",\n \"is_active\": true\n}\n```\n\nThe destination url is the forwarding url from ngrok and /webhooks, matching the URL path set in the app POST.  \n\n3. Update the headers to have:\n```\n    Accept: application/json\n    Content-Type: application/json\n    X-Auth-Client: {{the OAuth client id}}\n    X-Auth-Token: {{the OAuth token}}\n```\n4. Check all the values and then hit POST. The response will be 201 Created if headers and scope are correct."
                            },
                            {
                              "type": "http",
                              "data": {
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/hooks",
                                "headers": {
                                  "Accept": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{the OAuth client id}",
                                  "X-Auth-Token": "{the OAuth token}"
                                },
                                "body": "{\n\"scope\": \"store/product/updated\",\n \"destination\": \"https://{your-url}.ngrok.io/webhooks\",\n \"is_active\": true\n}\n"
                              },
                              "header": {
                                "title": "Create a Webhook",
                                "anchor": "create-a-webhook"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"id\": 14263419,\n    \"client_id\": \"your-client-id\",\n    \"store_hash\": \"your-store-hasha\",\n    \"scope\": \"store/product/updated\",\n    \"destination\": \"https://6a35e97b.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": true,\n    \"created_at\": 1531256030,\n    \"updated_at\": 1531256030\n}",
                              "header": {
                                "title": "201 Created Response",
                                "anchor": "201-response"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Fire Webhooks\nYou can fire the webhook in two ways. Either the API or the store’s control panel. We are going to cover both.\n\n### Update via the Control Panel\n\n1. From your store’s control panel, navigate to Products > View. Choose a product and change some of the information. In this case, the word Hoodie was added to the product name. Then click save.",
                              "header": {
                                "anchor": "setting-up-webhooks_fire-webhooks"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500906129",
                              "config": {
                                "centered": true,
                                "maxWidth": "800",
                                "maxHeight": "800"
                              },
                              "header": {
                                "title": "BigCommerce Control Panel",
                                "subtitle": "Products > View"
                              }
                            },
                            {
                              "type": "text",
                              "data": "2. Visit the Ngrok web interface address (in the sample app it’s http://127.0.0.1:4040), and check for a 200 response. "
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500945565",
                              "config": {
                                "centered": true,
                                "maxWidth": "800",
                                "maxHeight": "800"
                              },
                              "header": {
                                "title": "ngrok Web Interface"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Under Summary you can see the webhook has fired. It returned the text OK. This can be changed. In the original app, res.send(‘OK’). This can be changed to say something different or even post the response to another app.  \n\nThe response will also show in the terminal. "
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500989467",
                              "header": {
                                "title": "ngrok Terminal Response"
                              },
                              "config": {
                                "centered": true,
                                "maxWidth": "800",
                                "maxHeight": "800"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Update Via the API\nCreate a PUT request to the product that needs to be updated. \n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/124`\n\nIn this example, the price of product_id 124 is being changed to 12.99.\n\nAfter hitting send, check the ngrok web interface. You may have more or less events based on how many times the product has been updated in the previous step. ",
                              "header": {
                                "anchor": "setting-up-webhooks_update-via-api "
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}",
                                "headers": {
                                  "X-Auth-Client": "{Your-X-Auth-Client}",
                                  "X-Auth-Token": "{Your-X-Auth-Token}",
                                  "Accept": "application/json",
                                  "Content-Type": "application/json"
                                },
                                "method": "put",
                                "body": "{\n  \"price\": 12.99\n}"
                              },
                              "header": {
                                "title": "Update a Product",
                                "anchor": "update-a-product-webhooks"
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531501115256",
                              "header": {
                                "title": "ngrok Web Interface"
                              },
                              "config": {
                                "centered": true,
                                "maxWidth": "800",
                                "maxHeight": "800"
                              }
                            },
                            {
                              "type": "text",
                              "data": "That’s it. In this walkthrough you created a webhook, setup a server to accept the response and used Express. Some extra things are to change the text in res.send() to have a custom response, print the response to a webpage or setup a different webhook. "
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Unless you have paid for Ngrok, the URL is only valid for a few hours. After that, the webhook will stop working. Send a [DELETE]() request to the specific webhook id. ",
                                "type": "warning",
                                "title": "URL Timeout"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "method": "delete",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/hooks/{hook_id}",
                                "headers": {
                                  "X-Auth-Client": "{your-client-id}",
                                  "X-Auth-Token": "{your-auth-token}",
                                  "Content-Type": "application/json",
                                  "Accept": "application/json"
                                }
                              },
                              "header": {
                                "title": "Delete the webhook",
                                "subtitle": "Get the hook_id by either getting it from the original /POST response or by sending a /GET request to the hooks resource",
                                "anchor": "delete-webhook"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Next Steps\n\nAdditionally, you can change the text in res.send() to have a custom response, print the response to a webpage or set up a different webhook. You can also send in custom headers as a way to verify the hook or get custom hook information back. Setup the destination using a permanent url such as creating an [Heroku](https://www.heroku.com/) app, then having the response print to the screen. \n\nTo send in custom headers, during the /POST or /PUT request add in:\n\n```\n{\n  \"scope\": \"store/order/*\",\n  \"headers\": {\n    \"X-Custom-Auth-Header\": \"{secret_auth_password}\"\n  },\n  \"destination\": \"https://app.example.com/orders\",\n  \"is_active\": true\n}\n```\nThe custom header can be anything you choose. It can be used to check the security of an incoming webhook. Anything without the custom header should be rejected.\n\n\nResponse:\n\n```\n{\n    \"id\": 14422996,\n    \"client_id\": \"{{client_id}}\",\n    \"store_hash\": \"{{store-hash}}\",\n    \"scope\": \"store/product/updated\",\n    \"destination\": \"https://6a35e97b.ngrok.io/webhooks\",\n    \"headers\": {\n        \"A-Custom-Header\": \"some-secret-password\"\n    },\n    \"is_active\": true,\n    \"created_at\": 1533142869,\n    \"updated_at\": 1533142869\n}",
                              "header": {
                                "anchor": "setting-up-webhooks_next-steps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Troubleshooting\n1. Getting a 404 error using the root (/) url?\n\nAdd this snippet to your code to respond to incoming get requests with 'hello'.\n\n```\napp.get('/',(req, res)=>{\n    res.send('Hello!');\n}); \n```\n\n2. Getting error ngrok not found?\nThere are two ways to fix this. Your local setup will determine which command will work.\nUse the command `mv ngrok /usr/local/bin `to move ngrok to your local bin folder. This way it becomes available globally. \nUse the command `./ngrok http 3000` to run ngrok as a sudo user. \n\n3. Windows Users\nIf you are having trouble getting ngrok started try setting the PATH. \n    - [What are PATH and other environment variables, and how can I set or use them?](https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them)",
                              "header": {
                                "anchor": "setting-up-webhooks_troubleshooting"
                              }
                            }
                          ]
                        },
                        "config": {
                          "sidebar": {
                            "token": "GUIDE"
                          }
                        }
                      },
                      {
                        "title": "Webhook Events",
                        "route": {
                          "path": "/webhook-events"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1>List of Webhook Events</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#webhook-events_orders\">Orders</a></li>\n        <li><a href=\"#webhook-events_products\">Products</a></li>\n        <li><a href=\"#webhook-events_category\">Category</a></li>\n        <li><a href=\"#webhook-events_sku\">SKU</a></li>\n        <li><a href=\"#webhook-events_customer\">Customer</a></li>\n        <li><a href=\"#webhook-events_store\">Store</a></li>\n        <li><a href=\"#webhook-events_cart\">Cart</a></li>\n        <li><a href=\"#webhook-events_shipment\">Shipment</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## Orders\n\n| Name | Description |\n| ---| --- |\n| store/order/* | Subscribe to all store/order events  |\n| store/order/created | A new order is created. It can be manual or created on the storefront | \n| store/order/update| Order is updated |\n| store/order/archived | Order is archived |\n| store/order/deleted | Order is deleted |\n| store/order/statusUpdated | Order status is changed |\n| store/order/message/created | Order message is created by customer or in control panel |",
                              "header": {
                                "anchor": "webhook-events_orders"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/order/statusUpdated\",\n  \"store_id\": \"123456\",\n  \"data\": {\n    \"type\": \"order\",\n    \"id\": 169,\n    \"status\": {\n      \"previous_status_id\": 5,\n      \"new_status_id\": 9\n    }\n  },\n  \"hash\": \"6923dda2313a5709b13f9b217a3acd6f8308a0c2\",\n  \"created_at\": 1535486277,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": " store/order/statusUpdated",
                                "anchor": "order-status-updated"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Products\n\n| Name | Description |\n| --- | --- |\n| store/product/*| Subscribe to all store/product events |\n|store/product/deleted| Product is deleted|\n| store/product/created | A new product is created |\n| store/product/updated |Events that fire this webhook are below: |\n| _Brand Changed_ | _Product Type_ |\n| _Category_ | _Inventory_ |\n| _Number Sold_ | _Availibility_ |\n| _Thumbnail Changed_ | _Visibility_ |\n| _Featured_ | _Name_ |\n| _Description_ | _Sort Order_ |\n| _Price_ | _Dimensions_ |\n| _Condition_ | _Tax Price_ |\n| store/product/inventory/updated| Product inventory is updated. |\n| store/product/inventory/order/updated| When an order is placed and product inventory is changed. If subscribed the webhook will fire for products where inventory is being tracked by sku or not. |\nIncluded in the response for `store/product/inventory/order/updated` is an inventory object:\n\n**value**: the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `+2`\n\n**method** : Will always return relative.\n\n**id**: The product id\n\n**product_id**: The product id",
                              "header": {
                                "anchor": "webhook-events_products"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/product/inventory/order/updated\",\n  \"store_id\": \"123456\",\n  \"data\": {\n    \"type\": \"product\",\n    \"id\": 185,\n    \"inventory\": {\n      \"product_id\": 185,\n      \"method\": \"relative\",\n      \"value\": -1\n    }\n  },\n  \"hash\": \"dc475e1059f2a67a55818bea29bf6b23ebbda707\",\n  \"created_at\": 1535480603,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/product/inventory/order/updated",
                                "anchor": "product-inventory-order-updated"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Category\n\n| Name | Description |\n|---|---|\n| store/category/*| Subscribe to all store/category events |\n| store/category/created | Category is created |\n| store/category/updated | Category is updated |\n| store/category/deleted | Category is deleted |",
                              "header": {
                                "anchor": "webhook-events_category"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/category/updated\",\n  \"store_id\": \"123456\",\n  \"data\": {\n    \"type\": \"category\",\n    \"id\": \"19\"\n  },\n  \"hash\": \"9bb5584b3c28e3bb07164405626bd913c14d2209\",\n  \"created_at\": 1535487935,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/category/updated",
                                "anchor": "category-updated"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## SKU\n\n| Name | Description |\n| --- | --- |\n| store/sku/* |Subscribe to all store/sku events |\n| store/sku/created | A new sku is created |\n| store/sku/updated | Sku is updated |\n| store/sku/deleted| Sku is deleted |\n| store/sku/inventory/updated| |\n| store/sku/inventory/order/updated| This webhook will fire if inventory is being tracked by sku on a product. It will also fire the store/product/inventory/order/updated webhook. |\n\nIncluded in the response is a data object:\n\n**value**: the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `+2`\n\n**method** : Will always return relative.\n\n**type**: Will always be sku\n\n**variant_id**: Id of the variant",
                              "header": {
                                "anchor": "webhook-events_sku"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/sku/inventory/order/updated\",\n  \"store_id\": \"123456\",\n  \"data\": {\n    \"type\": \"sku\",\n    \"id\": 330,\n    \"inventory\": {\n      \"product_id\": 184,\n      \"method\": \"relative\",\n      \"value\": +2,\n      \"variant_id\": 364\n    }\n  },\n  \"hash\": \"dc475e1059f2a67a55818bea29bf6b23ebbda707\",\n  \"created_at\": 1535480603,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/sku/inventory/order/updated",
                                "anchor": "sku-inventory-order-updated"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Customer\n| Name | Description |\n|---|---|\n| store/customer/* | Subscribe to all store/customer events |\n| store/customer/created | A new customer is created|\n| store/customer/updated | Customer is updated |\n|store/customer/deleted | Customer is deleted |",
                              "header": {
                                "anchor": "webhook-events_customer"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/customer/deleted\",\n  \"store_id\": \"123456\",\n  \"data\": {\n    \"type\": \"customer\",\n    \"id\": 10\n  },\n  \"hash\": \"4bf08f1ad81eeb460eb12f99f7fd2226b6ea0911\",\n  \"created_at\": 1535488840,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/customer/deleted",
                                "anchor": "customer-deleted"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Store\n|Name|Description|\n|---|---|\n| store/app/uninstalled | Occurs when a client store is cancelled and uninstalled from the platform |\n|store/information/updated | Events that fire this webhook: |\n| *Store Name* | *Store Address* |\n| *Store Phone Number* | *Admin Email* |\n| *Order Email* | *Display Date Format* |\n| *Export Date Format* | *Store DTS Correction* |\n| *Store Time Zone* | *Language* |\n| *Default Currency* | *Currency Token* |\n| *Decimal Token* | *Thousands Place* |\n| *Currency Location* | *Weight Measurement* |\n| *Length Measurement* | *Length Measurement* |\n| *Dimensions Decimal Places* | *Dimensions Decimal Token* |\n *Plan Name* | *Plan Level* |\n| *Store Logo* | *Mobile Template Logo* |\n| *Tax Entered With Prices* | *Stencil Template Enabled* ",
                              "header": {
                                "anchor": "webhook-events_store"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n  \"scope\": \"store/information/updated\",\n  \"store_id\": \"123446\",\n  \"data\": {\n    \"type\": \"store\"\n  },\n  \"hash\": \"c553845e0a5e28dc8b0ea494458692a25586a294\",\n  \"created_at\": 1535489273,\n  \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/information/updated",
                                "anchor": "store-information-updated"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Cart\n\n| Name | Description |\n| --- | --- |\n| store/cart/lineItem/* | This webhook will fire when a change occurs to line items in the cart. This can be items added to a cart, removed or updated.(Ex. change to quantity, product options or price). |\n| store/cart/lineItem/created | When a new item is added to the cart  |\n| store/cart/lineItem/updated | When an item’s quantity has changed or the product options change. |\n| store/cart/lineItem/deleted | When an item is deleted from the cart|\n| store/cart/created | This webhook will fire whenever a new cart is created either via a storefront shopper adding their first item to the cart or when a new cart being created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before) For the API it means a  `POST`  to /carts, (V3 and Storefront API). The  `store/cart/updated`  will also fire.|\n| store/cart/updated | This webhook is fired whenever a cart is modified through the changes in its line items. Eg. when a new item is added to a cart, an existing item’s quantity is updated, when the email changes during guest checkout or an existing item is deleted, the cart is modified triggering this webhook. The payload will include the ID of the cart being updated. <br> This webhook is also fired along with cart created because the first product being added to an empty cart triggers an update. <br> - Logging into customer account after creating a cart (email is inherited from customer account email) <br>- Entering email address via guest checkout <br> -Changing the email in guest checkout |\n| store/cart/deleted| This webhook will fire whenever a cart is deleted. This is can be either when all items have been removed from a cart and it was auto-deleted or it was explicitly removed via a DELETE request by an API consumer. This ends the lifecycle of the cart. The  `store/cart/updated`  webhook will also fire when the last item is removed.|\n| store/cart/couponApplied | This webhook will fire whenever a new coupon code is applied to a cart. It will include the ID of the coupon code |\n| store/cart/abandoned | This webhook will fire whenever a cart is considered abandoned. In the BigCommerce store settings if enabled this is usually set to one hour. [See Abandoned Cart](https://support.bigcommerce.com/articles/Public/Using-the-Abandoned-Cart-Saver/). |\n| store/cart/converted | This hook fires when a cart is converted into an order, which is typically after the payment step of checkout on the storefront. At this point, the Cart is no longer accessible and has been deleted. This hook returns both the Cart ID and Order ID for correlation purposes. |\n",
                              "header": {
                                "anchor": "webhook-events_cart"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"scope\": \"store/cart/lineItem/created\",\n    \"store_id\": \"12074048\",\n    \"data\": {\n        \"type\": \"cart_line_item\",\n        \"id\": \"c676e997-10fc-4049-bf18-1077a062e16d\",\n        \"cartId\": \"351a367f-4198-4108-996a-753ffc1bce21\"\n    },\n    \"hash\": \"23d6ae55d612514cbc3f79619535a184bbf10fc0\",\n    \"created_at\": 1518405112,\n    \"producer\": \"stores/ojgwnqqd0g\"\n}",
                              "header": {
                                "title": "store/cart/lineItem/created",
                                "anchor": "cart-lineitem-created"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"scope\": \"store/cart/created\",\n    \"store_id\": \"12074048\",\n    \"data\": {\n        \"type\": \"cart\",\n        \"id\": \"6121f45e-e3d9-4fcf-828e-b507594a1f96\"\n    },\n    \"hash\": \"54eef7f35f37d770aefcb61c5d3f1df6ed0d5a31\",\n    \"created_at\": 1518403916,\n  \t\"producer\": \"stores/ojgwnqqd0g\"\n}\n  ",
                              "header": {
                                "title": "store/cart/created",
                                "anchor": "cart-created"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Shipment\n\n| Name | Description |\n| --- | --- |\n| store/shipment/* | Subscribe to all store/shipment events |\n| store/shipment/created | Shipment is created |\n| store/shipment/updated | Shipment is updated |\n| store/shipment/deleted | Shipment is deleted |",
                              "header": {
                                "anchor": "webhook-events_shipment"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"scope\": \"store/shipment/created\",\n    \"store_id\": \"123456\",\n    \"data\": {\n        \"type\": \"shipment\",\n        \"id\": 12,\n        \"orderId\": \"319\"\n    },\n    \"hash\": \"a6bc11ea25e8f389a16ee919f0c0db6d4099d7de\",\n    \"created_at\": 1534951410,\n    \"producer\": \"stores/abcdefg\"\n}",
                              "header": {
                                "title": "store/shipment/created",
                                "anchor": "shipment-created"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Partner Information",
            "route": {
              "path": "/partner"
            },
            "data": {
              "children": [
                {
                  "title": "Becoming A Partner",
                  "route": {
                    "path": "/becoming-a-partner"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Becoming a Partner</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#becoming-a-partner_apply-technology-partner-program\">Apply to the Technology Partner Program </a></li>\n\t\t<li><a href=\"#becoming-a-partner_types-of-apps-looking-for\">Types of Apps We Are Looking For</a></li>\n\t\t<li><a href=\"#becoming-a-partner_getting-sandbox-store\">Getting a Sandbox Store</a></li>\n\t\t<li><a href=\"#becoming-a-partner_app-store-approval-requirements\">App Store Approval Requirements</a></li>\n\t\t<li><a href=\"#becoming-a-partner_partner-program-troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "The following sections outline the steps required to become a vendor of Single-Click Apps on the BigCommerce platform. Doing so requires a partnership application, but acceptance will authorize you to provide best-of-breed solutions to the fast-growing online businesses we host.\n\n## Apply to the Technology Partner Program\n\nBefore you can submit an app to the BigCommerce App Marketplace (which merchants also know as our “app store”), you must become an official Partner. BigCommerce offers app developers free sandbox stores through its Technology Partner Program. To be approved as a partner, you will need:\n\n* A website\n* Intent to offer your app publicly\n* Ability to support users of your app\n* Evidence of expertise in app development\n\nOnce approved, you will receive one or more emails listing your partner credentials and next steps. Your Partner ID will be required to submit your app for App Marketplace consideration. If you do not receive these credentials by email, please contact <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.",
                        "header": {
                          "anchor": "becoming-a-partner_apply-technology-partner-program"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Getting a Sandbox Store\n\nTo build a Marketplace app, you will need to have a sandbox store, a developer account at devtools.bigcommerce.com, and be accepted as a BigCommerce partner. We encourage you to create your sandbox store and your Dev Tools account using the same login credentials. A sandbox store cannot process transactions and is for developing and testing apps without the 15-day time time limit of a trial store. ",
                        "header": {
                          "anchor": "becoming-a-partner_getting-sandbox-store"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "warning",
                          "body": "A sandbox store is not required for app development, but if you develop on a trial store instead, after 15 days the store will be erased along with the data and a new store will need to be created. Applying to be a partner and getting a sandbox store is best practice. "
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Create a Sandbox Store\n\n1. Navigate to the [BigCommerce Pricing page](https://www.bigcommerce.com/pricing/).\n2. Select **START YOUR FREE TRIAL**.\n3. Where prompted for an email address, enter the same email that you used when applying to become a Technology Partner. \n4. Select **CONTINUE TO STORE DETAILS**.\n5. In the trial store setup form, enter a store name, password, and other details. Then select **CREATE YOUR STORE**.\n6. Log in to the [Partner Portal](https://partners.bigcommerce.com) and navigate to Support > Create a Case > Issue Type = Portal and Membership. In the case description, enter your new sandbox store’s friendly URL (for example: http://your-store-name.mybigcommerce.com) and request conversion to a Sandbox. We will flag this as a sandbox store to ensure your continued access to the store, as opposed to the normal 15-day trial. This can take around two days.\n7. When you log into your new store, use the same email that you used for step 3 above."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "##  Troubleshooting\n\n### Are all fields required?\n\nWhile not all fields are required to publish edits for your listing, they are all highly recommended. Without filling in all fields, your listing will be missing information that merchants have seen on other listings and expect to see throughout the Marketplace.\n\n###  I’ve logged in to Dev Tools, but I don’t see my published listing. Where is it?\n\nYou may be logged in with the wrong account. Each listing can only be owned by one user, so it is likely assigned to another email address. If you’re unable to track down the correct owner account for your solution, please reach out to <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.\n\n### I saved my changes, but my listing detail page on BigCommerce.com/Apps has not updated yet. What’s the problem?\n\nThe changes will be effective immediately in your control panel app card, but the updates can take up to 24 hours to appear on the public BigCommerce Marketplace. Feel free to use this as a grace period to make additional edits as needed.",
                        "header": {
                          "anchor": "becoming-a-partner_partner-program-troubleshooting"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "success",
                          "body": "Questions? Please contact <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "App Store Approval Requirements",
                  "route": {
                    "path": "/using-dev-tools"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>App Store Approval Requirements</h1>"
                      },
                      {
                        "type": "text",
                        "data": "Dev Tools is the BigCommerce workspace for developing single-click apps. Within Dev Tools, you'll create the Client Id and Client Secret to authenticate your apps, submit new apps to the App Marketplace, and manage existing Marketplace listings.\n\nDev Tools can be found by clicking [My Apps](https://devtools.bigcommerce.com/) in the upper right corner of the page. "
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## App Store Approval Requirements\n\nThe requirements to submit an app are listed below, as well as where the information needs to be updated.\n\n### Prerequisites\n\nMake sure you’ve applied and been approved for our [Technology Partner Program](https://partners.bigcommerce.com/English/register_email.aspx) before you’re ready to submit your app - you’ll need a valid Partner ID to do so. You’ll also need to accept the Terms & Conditions in the [Partner Portal](https://partners.bigcommerce.com/English/) before we can publish your app.\n\n### General Requirements\n\n-   Support resources should be available throughout the app experience, including in your onboarding flow and the app’s dashboard.\n    \n-   Make sure to reference BigCommerce using the proper formatting. You can visit our [Media Kit](https://www.bigcommerce.com/press/media-kit/) for any BigCommerce branding assets needed.\n    \n-   The app and app listing should make no references to competitor platforms.\n\n-   Use the brand name you’ve given your app for your app title throughout your app content. This listing name should be a concise title for easy identification and should not include additional taglines or descriptors. The name will always appear alongside your summary, so there’s no need to muddy your app’s branding with duplicate content when that tagline is already displayed with it!  \n      \n    - If your solution is a connector to a specific third-party service, or you’re offering only a specific feature, make sure to include both the name of the third party service or feature and your company name (Ex: “Marketplace by BigCommerce”, “Search by BigCommerce”), with your company name following the feature.\n    \n-   Your app, including any storefront components, should be compatible with all [browsers](#stencil-link) that the BigCommerce platform supports.\n\n### Functionality\n\n-   Your app must work as intended, be free of defects, and not conflict with or break any default BigCommerce functionality, including the BigCommerce storefront and checkout.\n    \n-   Utilize any V3 API resources that are currently available for the data you need from a BigCommerce store.\n    \n-   The dashboard and callback URLs for your app should operate strictly over HTTPS using a valid SSL certificate.\n    \n-   Apps should offer [multi-user support](/api-docs/getting-started/building-apps-bigcommerce/building-apps#multi-user-support) so that permissions for the app can be distributed by the store owner to additional users, from the BigCommerce control panel.\n    \n-   Any apps that process transactions or handle credit card data will need to pass a PCI Compliance review with our Security team, and also be compatible with our Optimized One-Page Checkout.\n    \n-   Avoid copy/paste for storefront code - use the [V3 Scripts API](/api-docs/api-reference/v3-api/content-api) to programmatically inject code snippets into a store’s Script Manager and storefront theme.\n    \n-   If your app requires payment, you’ll need to collect payment from the user within your app. More info on [monetizing your app here](/api-docs/getting-started/partner/becoming-a-partner#app-store-approval-requirements).  \n\n### Installation\n\n-   Apps should be Single-Click and use our OAuth token exchange flow to authenticate the user\n    \n-   Single-Click does not mean everything  completed in one click, but that authentication is handled in that click - other tasks can be handled post-auth with the user\n    \n-   When the app is installed, a styled HTML page must be returned in the iframe of the BigCommerce control panel - this content cannot be blank and must follow our [user-interface constraints](/api-docs/getting-started/building-apps-bigcommerce/building-apps#user-interface-constraints).\n    \n-   During the OAuth handshake, be sure to store the user’s token against their store hash - rather than their email address - to avoid any problems with ownership changes or multi-user support.\n"
                      },
                      {
                        "type": "callout",
                        "data": {
                          "body": "If your app cannot meet these requirements, please reach out to <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a> in order to discuss the potential for a Connector app listing. In the majority of cases, a Single-Click app will be the more appropriate solution and put your integration on par with other Marketplace partners, but exceptions may be made under certain circumstances"
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Recommendations\n\n-   Have a form to fill out for new users? We recommend auto-filling user input fields with data from the [Store Information API resource](), which already contains much of the info you might need from a new user.\n    \n-   No account approval process needed for your app? Consider automatically generating accounts for stores that install your app and don’t match an existing store in your database.\n    \n-   Require login on launch? Use the information in the BigCommerce payload to your callback URL to authenticate the user without asking for a username and password each time.\n    \n-   Want to share user testimonials? Add a link to your full case study in the Case Studies field, with a title and short description."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "tabs",
                        "data": {
                          "children": [
                            {
                              "title": "App Summary",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536259683439",
                                  "header": {
                                    "anchor": "app-summary"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### Contact Name\nUse the email address that was created when applying for your Partner Id. \n\n### Partner Name\nList the name of your company​, as you want it to be attributed on the detail page.\n\n### Partner Website\nProvide the URL for your homepage so users can learn more about your company.\n\n### Support email\nEmail where users can get help with the app. This should be a formal group email at your company domain (Ex: support@app-partner.com) rather than a personal email. If not provided, this option will not be displayed.\n\n### Support website\nA Support email and website for users to reach out as needed.\nThese will be publicly visible on the Marketplace, so make sure to stay away from personal emails or non-support URLs. Your public detail page will include a button for users to “Get Support,” which will take them to this URL in a new tab. If not provided, the button will not be displayed on your detail page.\n\n### Partner ID\nWhen you’re ready to submit your listing for review, you will need to enter your [Partner ID](https://partners.bigcommerce.com/English/register_email.aspx) for your Technology Partner account. This field is not required to create, save, or edit a Draft prior to submission. "
                                },
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536259722234"
                                },
                                {
                                  "type": "text",
                                  "data": "### App Name\nUse the brand name you’ve given your app for your app title throughout your app content. This listing name should be a concise title for easy identification and should not include additional taglines or descriptors. The name will always appear alongside your summary, so there’s no need to muddy your app’s branding with duplicate content when that tagline is already displayed with it.\n\n#### Pricing & Categorization\nSelect one of our pre-formatted pricing options to call out your app’s starting price. If you offer a forever-free plan, choose the “Free” option. If your app does not fit one of our formatted options, specify your details in a few words in the “Other” selection.\n- If you need to specify more detail on your pricing options, save it for your app description.  \nChoose the most appropriate category for your app."
                                },
                                {
                                  "type": "callout",
                                  "data": {
                                    "body": "If your solution is a connector to a specific third-party service, or you’re offering only a particular feature, make sure to include both the name of the third party service or feature and your company name​ (Ex: “Marketplace by BigCommerce,” “Search by BigCommerce”). The company name needs to follow the feature."
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### App Logo\nYour primary app logo should be 350 x 130px (or larger at this ratio) with a white background and dark branding in the foreground. The logo should only include branding, no taglines necessary.\n\n### App Icon\nThe app icon will be included on the main app detail page and the sidebar in the BigCommerce control panel once the app is installed. This should be a square 200x200px image.\n\n### Price\nSelect one of our pre-formatted pricing options to call out your app’s starting price. If you offer a forever-free plan, choose the “Free” option. If your app does not fit one of our options, specify your details in a few words in the “Other” selection."
                                },
                                {
                                  "type": "callout",
                                  "data": {
                                    "body": "If you need to specify more detail on your pricing options, save it for your app description."
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### App Summary\nA short tagline description of your app that will be used on your app card in category and search results within the Marketplace. 128 characters max.\n\n### App Icon\nYour app icon will be included on the main app detail page and the sidebar in the BigCommerce control panel once the app is installed. This should be a square 200 x 200px image.\n\n### Category\nChoose the most appropriate category for your app. Take a look at the live [Marketplace](https://www.bigcommerce.com/apps/) for an idea of where solutions are currently assigned to help decide the right category. The category selection will also be a search attribute for your listing. BigCommerce will review your category assignment and may re-categorize your listing prior to launch. One category maximum."
                                }
                              ]
                            },
                            {
                              "title": "Details",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260365610",
                                  "header": {
                                    "anchor": "app-details"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### App Details\nA more in-depth value proposition for your listing, including how your solution works, why your solution stands out in its category, and why a merchant should choose you over other competitors. Avoid using fluff or buzzwords, as this field will not be indexed for search. 200 words max recommended.\n\n### Videos\nInclude videos that highlight the purpose and value of your solution. Select the video hosting platform (YouTube or Vimeo) and enter the video ID.\n\n#### Video Best Practices\n\n**YouTube**\n\nTurn off ads for any videos you've already uploaded. \n\n1. Sign in to YouTube.\n\n2. In the top right, click your account icon > Creator Studio.\n\n3. On the left, select Video Manager.\n\n4. Select the video(s) where you want to turn ads off.\n\n5. Click Actions > More actions > Monetization.\n\n6. Select Off.\n\n7. Click Submit.\n\n**Vimeo**\n\nPer Vimeo’s guidelines, businesses may not use Basic or Plus accounts to host videos. If you want to upload commercial videos, you must use Vimeo PRO or Business. Commercial content includes:\n\nVideos promoting or representing a for-profit business or brand \nVideos containing any form of advertising \nVideos hosted on behalf of a business (i.e., uploaded to Vimeo and embedded on your company’s website) \nProduct demos and tutorials\n\n*Note:* Ads appear to viewers based on their level of Vimeo membership - not yours. Basic and non-logged in viewers may see ad banners below the video player.\n\n### Case Studies\nThese can either be “Thought Leadership” case studies and/or traditional case studies that demonstrate how BigCommerce merchants have benefited from using your solution with their business. Use the + ​icon to add a case study, and the x ​icon to remove. Four case studies maximum."
                                },
                                {
                                  "type": "callout",
                                  "data": {
                                    "type": "warning",
                                    "body": "Case studies that include competitor platforms are not allowed and will be removed. Partners will be required to repurpose general case studies, remove competitor platform mentions, and republish the asset accordingly."
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### Features\nUse these fields to enumerate the major features your platform or solution has to offer. Include a brief title for each feature, and a description of the feature to accompany it. The feature title will be search indexed in the Marketplace, so be specific with your feature names and include major functions potential users will search for. Use the + icon to add a feature, and the x icon to remove. Utilize the rich text editing of these fields to bold, underline, or italicize copy as needed. \n\nUp to five features can be added."
                                },
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260434551"
                                },
                                {
                                  "type": "text",
                                  "data": "### Legal Terms & Privacy \nLinks to your privacy policy and terms of service. This requirement is in place due to legal liability and is non-optional. \n\n### International Optimization\nPlease add the countries for which your solution is optimized and those which your solution does not currently support. "
                                },
                                {
                                  "type": "callout",
                                  "data": {
                                    "type": "info",
                                    "body": "This feature will not currently be utilized in the Marketplace, but will be a part of planned internationalization updates."
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### Help Guides\nLinks to your User and Installation Guides as a reference for existing users and prospects.\n\nWe now ask that you include links to your solution’s user installation guide (PDF, support articles, etc.) and standard user guide for prospective users to review before installation. If you do not submit links, this field will not be displayed on your listing detail page, however we highly recommend including these with your submission."
                                },
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260486010"
                                },
                                {
                                  "type": "text",
                                  "data": "### App Screenshot\nAdd screenshots of your solution’s functionality or user interface as it appears when integrated with BigCommerce so users know what to expect.\n\n### Alternate Logo\nYour alternate logo will be used if your app is featured on the homepage carousel of the Marketplace. This image should be 259 x 158px (or larger at this ratio) with a dark background and white or light branding in the foreground. The logo should only include branding, no taglines necessary."
                                }
                              ]
                            },
                            {
                              "title": "Technical",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260547856",
                                  "header": {
                                    "anchor": "app-technical"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "### Multiple Users\n\nBy default, your app will only be accessible to the store owner (i.e., the user who created the store). Optionally, you can allow your app to be accessible to other store users. Consider the following before enabling [multi-user support](/api-docs/getting-started/building-apps-bigcommerce/building-apps#multi-user-support):\n\n-   Once you enable multi-user support, a store admin will still need to grant access to other users from within the store control panel. For each user account, there are settings that grant access to specific apps.\n    \n-   Your app should be aware that when it receives the [Load Callback](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests), the user information passed in might not be the store owner’s. You’ll need to determine how to respond if you see a different user. For example, you may want to provision a new user account in order to personalize the experience.\n    \n-   You can optionally specify a [Remove User Callback URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests) to receive a callback when a store admin revokes a user’s access.\n    \n### App Type\n\nSelect the type of app. We recommend [Single Click Apps](/api-docs/getting-started/building-apps-bigcommerce/types-of-apps#single-click-apps) although some qualify to [Connector Apps.](/api-docs/getting-started/building-apps-bigcommerce/types-of-apps#connector)\n\n### Callback URLS\n\nYou must have an [Auth Callback URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#installation-update-sequence) and a [Load Callback URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#installation-update-sequence) to register your app.\n\n#### Public URIs Required before Submission\n\nBecause the Auth Callback URI and Load Callback URI requests originate from the browser and not from BigCommerce, you can use non–publicly-available URIs and a self-signed certificate for a quick start. However, you must switch to – and test your app with – a publicly available Auth Callback URI and Load Callback URI before submitting your app for consideration in the App Marketplace.\n\nIf you want to receive a callback when the store owner uninstalls your app, you can provide an [Uninstall Callback URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests)."
                                },
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260600336"
                                },
                                {
                                  "type": "text",
                                  "data": "### OAuth Scopes\nIf you know the [OAuth scopes](/api-docs/getting-started/about-api/authentication#oauth-scopes) that your app requires, you should select these. If you do not yet know the scopes that you need, you can just request minimal permissions (such as Information: Read-Only) to get started. However, once you determine the scopes you need, you must:\n- Modify the scopes of your app in My Apps and save the changes.\n- Obtain the new OAuth token during the [App Installation or Update flow](https://developer.bigcommerce.com/api/#app-installation-and-update-sequence).\n- Retest your app to make sure it still functions properly with the new token."
                                },
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260650757"
                                },
                                {
                                  "type": "text",
                                  "data": "Add in any instructions needed to test the app thoroughly. "
                                }
                              ]
                            },
                            {
                              "title": "Review",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536260677950",
                                  "header": {
                                    "anchor": "app-review"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "Review the information added before submitting the app. Look over this page carefully, once the app is submitted, if it is rejected there will be another fee for submission."
                                }
                              ]
                            },
                            {
                              "title": "Preview",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536261272003",
                                  "header": {
                                    "anchor": "app-preview"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "This is an approximation of what the app’s page will look like in the BigCommerce Marketplace."
                                }
                              ]
                            },
                            {
                              "title": "Payment & Submission",
                              "blocks": [
                                {
                                  "type": "image",
                                  "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536261347648",
                                  "header": {
                                    "anchor": "app-payment"
                                  }
                                },
                                {
                                  "type": "text",
                                  "data": "At this point you make sure the information has been filled out completely and the app has been thoroughly tested before submitting for review. Updates to the App will not require the submission fee again. "
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Catalog",
            "route": {
              "path": "/catalog"
            },
            "data": {
              "children": [
                {
                  "title": "Products",
                  "route": {
                    "path": "/products"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Overview",
                        "route": {
                          "path": "/products-overview"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Products Overview </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n    <li><a href=\"#products-overview_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#products-overview_simple-product\">Create a Simple Product</a></li>\n\t\t<li><a href=\"#products-overview_create-complex-product\">Create a Complex Product</a></li>\n\t\t<li><a href=\"#products-overview_digital-products\">Digital Products</a></li>\n    <li><a href=\"#products-overview_product-oauth-scopes\">OAuth Scopes</a></li>\n\t\t<li><a href=\"#products-overview_webhooks\">Webhooks Available</a></li>\n    <li><a href=\"#products-overview_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "The Catalog refers to a store’s collection of physical and digital products. The Catalog includes all the information about a product such as MPN, warranty, price, and images. "
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products](/api-docs/api-reference/v3-api/catalog-api/products/createproduct)\n\nProducts are the primary catalog entity, and the primary function of the e-commerce platform is to sell products on the storefront and other selling channels.\n\nProducts can either be [Simple](#create-simple-product) or [Complex](#create-complex-product). \n\nProducts can also be Physical or Digital. \n\n* Physical products are typically products that exist in a physical form, have a weight, and are being sold by retailers with the intent of shipping them to customers. \n\n* Digital products, on the other hand, may not have a physical representation in the real world; this includes downloadable products such as computer software, ebooks, music, images, and other digital media. Alternatively, a digital product may be used to sell services such as spa treatments, consulting, and so forth - which also do not require shipping.",
                              "header": {
                                "anchor": "products-overview_introduction"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Product Creation",
                                "body": "Only one Product can be created at a time."
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Create a Simple Product\n\nSimple products do not have any options, modifiers, or variants, and therefore cannot be configured or modified before they are added to cart. A simple product is its own variant. ",
                              "header": {
                                "anchor": "products-overview_simple-product"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\"\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create your own Simple Product. Replace the test data with your own.",
                                "anchor": "code-create-simple-product"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "When options are created, it defaults to radio button as the display_type.",
                                "title": "Creating Options"
                              },
                              "header": {}
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create a Complex Product\n\nComplex products have at least one option and may have modifiers or variants.",
                              "header": {
                                "anchor": "products-overview_create-complex-product"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\",\n  \"variants\": [\n    {\n      \"sku\": \"SKU-BLU\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Blue\"\n        }\n      ]\n    },\n    {\n      \"sku\": \"SKU-GRAY\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Gray\"\n        }\n      ]\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create your own test product. Replace the test data with your own.",
                                "anchor": "code-create-complex-product"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Using this endpoint multiple variants can be added to the product when being created."
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Digital Products\n\nDigital products are not physical items that are shipped out. Such as manuals, ebooks or music. Attached to a digital product is a Downloadable product file.\n\nDownloadable product files are intended for products of the “digital” type, typically for selling some kind of media file or software. They don’t have dimensions since an item is never shipped out.\n\nFiles must be added to digital products using the [Control Panel or using WebDav.](https://support.bigcommerce.com/articles/Public/Creating-Downloadable-Products/#adding-downloadable-product) Additional settings such as description of the file and maximum downloads can be set in the Control Panel.",
                              "header": {
                                "anchor": "products-overview_digital-products"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"name\": \"ebook: A Guide to Coffee\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"type\": \"digital\",\n  \"images\": [\n    {\n      \"is_thumbnail\": true,\n      \"image_url\": \"https://your-custom-image/image_name.png\"\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create your own Digital Product. Replace the test data with your own.",
                                "anchor": "code-create-digital-product"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## OAuth Scopes\n* [Products](/api-docs/getting-started/about-api/authentication#oauth-scopes)",
                              "header": {
                                "anchor": "products-overview_product-oauth-scopes"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Webhooks Available\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhooks-sku-event)\n* See [About Webhooks](/api-docs/getting-started/webhooks/about-webhooks) for more on working with events.",
                              "header": {
                                "anchor": "products-overview_webhooks"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "products-overview_object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ProductBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Images",
                        "route": {
                          "path": "/products-images"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Product Images</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n    <li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#create-multiple-images\">Create Multiple Images</a></li>\n\t\t<li><a href=\"#product-thumbnails\">Product Thumbnails</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/images](/api-docs/api-reference/v3-api/catalog-api/product-images/createproductimage)\n\nProduct images are used to show shoppers what they’re buying and merchandise products. When creating an image, `image_url` or an `image_file` can be passed in. \n\nIf using `image_file` Content-Type needs to be set to \nContent-Type: multipart/form-data. Any other updates using the /POST or /PUT will be rejected with the form-data.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/images",
                                "headers": {
                                  "Accepts": "application/json",
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}",
                                  "Content-Type": "application/json"
                                },
                                "method": "put",
                                "body": "{\n \"is_thumbnail\": true,\n  \"sort_order\": 1,\n  \"description\": \"Yellow Large Bath Towel\",\n  \"image_url\": \"https://your-custom-image/image_name.png\"\n}"
                              },
                              "header": {
                                "title": "Try it Now",
                                "subtitle": "Use this to add a Image to your Product. Replace the test data with your own.",
                                "anchor": "code-add-product-image"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create Multiple Images\n\nA product can support multiple images. When adding images, more than one can be added by expanding the images array.",
                              "header": {
                                "anchor": "create-multiple-images"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/images",
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "body": "{\n\"images\":[\n\t\t\t{\n\t\t\t\t\"is_thumbnail\": true,\n\t\t\t\t\"image_url\": \"https://your-custom-image/image_name.png\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"is_thumbnail\": false,\n\t\t\t\t\"image_url\": \"https://your-custom-image/image_name.png\"\n\t\t\t}\n\t\t]\n}"
                              },
                              "header": {
                                "title": "Try it Now",
                                "subtitle": "Use this to add a Multiple Images to your Product. Replace the test data with your own.",
                                "anchor": "code-add-multiple-images"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Product Thumbnails\n\nOnly one image can be the product thumbnail. The product thumbnail is the image that shows on the product listing page, in search results and any other location that features the product. If only one image is on the product it becomes both the thumbnail and the main product image. Images can also be added to [variants](/api-docs/catalog/products/product-variants). ",
                              "header": {
                                "anchor": "product-thumbnails"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": {\n        \"id\": 382,\n        \"product_id\": 158,\n        \"is_thumbnail\": true,\n        \"sort_order\": 0,\n        \"description\": \"\",\n        \"image_file\": \"a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg\",\n        \"url_zoom\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2\",\n        \"url_standard\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2\",\n        \"url_thumbnail\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2\",\n        \"url_tiny\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2\",\n        \"date_modified\": \"2018-08-15T14:48:31+00:00\"\n    },\n    \"meta\": {}\n}",
                              "header": {
                                "title": "Thumbnails",
                                "subtitle": "/GET https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/images/{{images_id}}",
                                "anchor": "code-get-product-images"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ProductImageBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Videos",
                        "route": {
                          "path": "/product-videos"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Product Videos </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/videos](/api-docs/api-reference/v3-api/catalog-api/product-videos/createproductvideo)\n\nProduct Videos, in addition to images, can help shoppers understand what they’re buying and help sell the product. A product can have more than one video.\n\n* Product videos must be hosted on YouTube. The video_id corresponds to the “v” parameter in a video url. \n\nExample: https://www.youtube.com/watch?v=***R12345677***\n",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accept": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{ACCESS TOKEN}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/videos",
                                "body": "{\n  \"title\": \"BigCommerce Mug Video\",\n  \"description\": \"Video Describing the Mug\",\n  \"sort_order\": 1,\n  \"type\": \"youtube\",\n  \"video_id\": \"123345AA\"\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add a Video to your Product. Replace the test data with your own.",
                                "anchor": "code-add-product-video"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ProductVideoBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Custom Fields",
                        "route": {
                          "path": "/product-custom-fields"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Custom Fields </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/custom-fields](/api-docs/api-reference/v3-api/catalog-api/product-custom-fields/createcustomfield)\n\nCustom fields are a feature intended for product specifications, in a key: value arrangement. As an example, there might be fields indicating technical specifications about an LED TV  such as screen size, maximum resolution, HDR support, etc. Alternatively, if selling wine, I might use Custom Fields for specifications such as vintage, region, grape, etc. Custom fields can not be used to add rules such as changing the weight or price of a product. ",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "There is a limit of 250 characters for custom field values."
                              }
                            },
                            {
                              "type": "text",
                              "data": "Custom Fields are intended to be used in a couple of contexts:\n\n* Displaying specifications on the product detail page and on the product listing pages such as category and brand pages.\n* Powering faceted search (searching/filtering by custom field values)"
                            },
                            {
                              "type": "http",
                              "data": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/custom-fields",
                                "method": "put",
                                "body": "{\n  \"name\": \"Release Year\",\n  \"value\": \"2018\"\n}",
                                "headers": {
                                  "Accept": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{ACCESS TOKEN}"
                                }
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add a Custom Field to your Product. Replace the test data with your own.",
                                "anchor": "code-add-custom-field"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/CustomFieldBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Bulk Pricing Rules",
                        "route": {
                          "path": "/product-bulk-pricing"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Bulk Pricing Rules </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [catalog/products/{product_id}/bulk-pricing-rules](/api-docs/api-reference/v3-api/catalog-api/product-bulk-pricing-rules/createbulkpricingrule)\n\nBulk Pricing Rules are intended for merchants who want to offer wholesale discounts for buying in bulk. They apply once products are added to cart, but they are displayed as a callout on the storefront to let shoppers know how they can save.\n\nBulk Pricing rules in the catalog are on the product, meaning that they’ll trigger even if several different variants of the product are in the cart, as long as the total quantity of those variants meets one of the quantity breaks. [Price List bulk pricing](http://) works differently.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/bulk-pricing-rules",
                                "method": "put",
                                "body": "{\n  \"bulk_pricing_rules\": [\n    {\n      \"quantity_min\": 10,\n      \"quantity_max\": 15,\n      \"type\": \"price\",\n      \"amount\": 3\n    },\n    {\n      \"quantity_min\": 16,\n      \"quantity_max\": 25,\n      \"type\": \"price\",\n      \"amount\": 5\n    }\n  ]\n}",
                                "headers": {
                                  "Accept": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{ACCESS TOKEN}"
                                }
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add Bulk Pricing Rules to your Product. Replace the test data with your own.",
                                "anchor": "code-add-bulk-pricing-rules"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/BulkPricingRuleBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Variant Options",
                        "route": {
                          "path": "/product-variant-options"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Variant Options </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n    <li><a href=\"#option-v2-v3\">Options Created on V2 and V3</a></li>\n    <li><a href=\"#create-variant-options\">Create Variant Options</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/options](/api-docs/api-reference/v3-api/catalog-api/product-variant-options/createoption)\n\nVariant options are any choices that the shopper needs to make that will result in the selection of a variant. Color and Size are typical examples of Variant Options.  A t-shirt can have different combinations of sizes and colors.  \n\nExample:\n* Color is a Variant Option while Red, Orange, and Green are Variant Option Values\n* Size is a Variant Option while Small, Medium, and Large are Variant Option Values\n\nThe combination of Small & Red is what is selected on the storefront and correlates to a product variation also called a SKU. \n \n**Variant options:**\n\n* Require the shopper to select a value\n* Only support “multiple choice” option types\n* Rectangle\n* Radio button\n* Color swatch\n* Product pick list\n* Product pick list w/ images\n* Will automatically generate variants when created in the CP\n* Are auto-generated from variants when a product is created with variants via V3 API Product /POST",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Options created on V2 and V3\n\n* Variant options created on V3 cannot be cannot be accessed from the Control Panel. They can only be accessed via the API.\n* If a product has options that were created using the V2 API, additional options cannot be added using the V3 API.\n* SKU's in V@ map to variants in V3.\n* Base variants are not SKU's in V2.",
                              "header": {
                                "anchor": "option-v2-v3"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Creating a variant option does not automatically create SKUs or build out variants. SKUs can be built out later using the [variants end-point]()."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create Variant Options\nThe following request will create options, but the SKU’s are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request. Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.",
                              "header": {
                                "anchor": "create-variant-options"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n   \"product_id\": 134,\n   \"name\": \"Size Rectangle\",\n   \"display_name\": \"Size\",\n   \"type\": \"rectangles\",\n         \"option_values\": [\n             {\n                 \"label\": \"S\",\n                 \"sort_order\": 0,\n                 \"is_default\": false\n             },\n             {\n                 \"label\": \"M\",\n                 \"sort_order\": 1,\n                 \"is_default\": true\n             },\n             {\n                 \"label\": \"L\",\n                 \"sort_order\": 2,\n                 \"is_default\": false\n             }\n         ]\n }",
                              "header": {
                                "title": "Create Size Variant Option",
                                "subtitle": "/POST https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                                "anchor": "create-size-variant"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Variants can only be created one at a time using this endpoint. Use the /catalog/products to add more than one variant when creating a product."
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                                "body": "{\n  \"product_id\": 134,\n  \"name\": \"Colors\",\n  \"display_name\": \"Color\",\n  \"type\": \"swatch\",\n  \"sort_order\": 1,\n  \"option_values\": [\n    {\n      \"label\": \"Blue\",\n      \"sort_order\": 1,\n      \"value_data\": {\n        \"colors\": [\n          \"#123c91\"\n        ]\n      },\n      \"is_default\": false\n    },\n    {\n      \"label\": \"Green\",\n      \"sort_order\": 2,\n      \"value_data\": {\n        \"colors\": [\n          \"#0f961e\"\n        ]\n      },\n      \"is_default\": false\n    },\n    {\n      \"label\": \"Red\",\n      \"sort_order\": 3,\n      \"value_data\": {\n        \"colors\": [\n          \"#e60c0c\"\n        ]\n      },\n      \"is_default\": false\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add Varaint Options to your Product. Replace the test data with your own.",
                                "anchor": "code-create-color-variant"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/OptionBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Variants",
                        "route": {
                          "path": "/product-variants"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Variants </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n    <li><a href-\"#create-a-variant\">Create a Variant</a></li>\n    <li><a href-\"#create-variant-product-endpoint\">Create a Variant Using the Product Endpoint</a></li>\n    <li><a href=\"variant-webhooks\">Available Webhooks </a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/variants](/api-docs/api-reference/v3-api/catalog-api/product-variants/createvariant)\n\nVariants represent an item as it sits on the shelf in the warehouse or a particular saleable product. A product might be a t-shirt, while the variant would be “a small, red t-shirt”. Variants are selected by shoppers on the storefront via Product Options. In the case where a product is simple, meaning it does not have any options, the product is its own variant - called a base variant. Everything you can buy should be a variant.\n\n* Options build out variants. \n* Variants are usually what inventory is tracked against \n* Can have their own price, weight, dimensions, image, etc - or they can inherit these values from the product if they have not been specified\n* Must have a SKU code (unless they’re a base variant)\n* In the case of non-base variants, variants will relate to a particular combination of variant option values - such as “small” and “red”",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "type": "warning",
                                "body": "When a variant option is created, they can not be accessed from the Control Panel. They can only be changed or updated via the API. "
                              }
                            },
                            {
                              "type": "image",
                              "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1535652849070",
                              "header": {
                                "subtitle": "Variant Creation Workflow"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Create a Variant\nVariants can be created in two ways:\n* From existing variant options using the variant options endpoint. [v3/catalog/products/{product_id}/options ](http://)\n* By adding the variants with variant options and skus when creating the product. See [Create a Complex Product](http://).\n\nThis will go over using existing variant options to create the variants.\n\nUse the `https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/options` endpoint to get the option information.",
                              "header": {
                                "anchor": "create-a-variant"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": [\n        {\n            \"id\": 193,\n            \"product_id\": 134,\n            \"name\": \"Size1533313432-134\",\n            \"display_name\": \"Size\",\n            \"type\": \"rectangles\",\n            \"sort_order\": 0,\n            \"option_values\": [\n                {\n                    \"id\": 163,\n                    \"label\": \"S\",\n                    \"sort_order\": 0,\n                    \"value_data\": null,\n                    \"is_default\": false\n                },\n                {\n                    \"id\": 164,\n                    \"label\": \"M\",\n                    \"sort_order\": 1,\n                    \"value_data\": null,\n                    \"is_default\": true\n                },\n                {\n                    \"id\": 165,\n                    \"label\": \"L\",\n                    \"sort_order\": 2,\n                    \"value_data\": null,\n                    \"is_default\": false\n                }\n            ],\n            \"config\": []\n        },\n        {\n            \"id\": 194,\n            \"product_id\": 134,\n            \"name\": \"Color1533313946-134\",\n            \"display_name\": \"Color\",\n            \"type\": \"swatch\",\n            \"sort_order\": 1,\n            \"option_values\": [\n                {\n                    \"id\": 166,\n                    \"label\": \"Blue\",\n                    \"sort_order\": 1,\n                    \"value_data\": {\n                        \"colors\": [\n                            \"#123C91\"\n                        ]\n                    },\n                    \"is_default\": false\n                },\n                {\n                    \"id\": 167,\n                    \"label\": \"Green\",\n                    \"sort_order\": 2,\n                    \"value_data\": {\n                        \"colors\": [\n                            \"#0F961E\"\n                        ]\n                    },\n                    \"is_default\": false\n                },\n                {\n                    \"id\": 168,\n                    \"label\": \"Red\",\n                    \"sort_order\": 3,\n                    \"value_data\": {\n                        \"colors\": [\n                            \"#E60C0C\"\n                        ]\n                    },\n                    \"is_default\": false\n                }\n            ],\n            \"config\": []\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"total\": 2,\n            \"count\": 2,\n            \"per_page\": 50,\n            \"current_page\": 1,\n            \"total_pages\": 1,\n            \"links\": {\n                \"current\": \"?page=1&limit=50\"\n            }\n        }\n    }\n}",
                              "header": {
                                "title": "Example Response",
                                "subtitle": "/GET https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                                "anchor": "product-option-response"
                              },
                              "config": {
                                "mode": "json",
                                "highlightRange": [
                                  {
                                    "from": "4",
                                    "to": "12"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "method": "get",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                                "headers": {
                                  "X-Auth-Client": "{CLIENT ID}",
                                  "X-Auth-Token": "{ACCESS TOKEN}",
                                  "Content-Type": "application/json",
                                  "Accept": "application/json"
                                }
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Get Variant Options",
                                "anchor": "code-get-variant-options"
                              }
                            },
                            {
                              "type": "text",
                              "data": "In the above response, there are two variant options of size and color with three values each. \n\nTo combine the variant option values into variants and build out SKU’s use the following endpoint:\n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/variants`"
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Variants need to be created one at a time using this endpoint. Only one variant option at a time can be created; individual variant options will contain an array of multiple values. To use a variant array and create them at the same time use the [/catalog/product]() endpoint during product creation."
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/variants",
                                "body": "{\n  \"cost_price\": 3,\n  \"price\": 12.99,\n  \"retail_price\": 15.99,\n  \"weight\": 1,\n  \"width\": 4,\n  \"height\": 14.6,\n  \"depth\": 22,\n  \"is_free_shipping\": true,\n  \"purchasing_disabled\": true,\n  \"purchasing_disabled_message\": \"This item not available at this time.\",\n  \"product_id\": 134,\n  \"sku\": \"SMALL-BLUE\",\n  \"option_values\": [\n    {\n      \"id\": 163,\n      \"option_id\": 193\n    },\n    {\n      \"id\": 166,\n      \"option_id\": 194\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add Variants to your Product . Replace the test data with your own.",
                                "anchor": "code-create-variants"
                              }
                            },
                            {
                              "type": "text",
                              "data": "The `option_values` array is a combination of Small and Blue. Together they create the SKU SMALL-BLUE. The id in the option_values array is the id from the variant option response option_values > id. The option_id is the id of the option. \n\n```\n {\n            \"id\": 193, //option_id\n            \"product_id\": 134,\n            \"name\": \"Size1533313432-134\",\n            \"display_name\": \"Size\",\n            \"type\": \"rectangles\",\n            \"sort_order\": 0,\n            \"option_values\": [\n                {\n                    \"id\": 163, //id\n                    \"label\": \"S\",\n                    \"sort_order\": 0,\n                    \"value_data\": null,\n                    \"is_default\": false\n                }\n\t\t\t\t\t\t\t\t...\n```"
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Create a Variant Using the Products Endpoint\n\nThe following example creates a base product, variant options, and variants in a single call to the /products endpoint. You can use this method to create a product and its variants in a single call without creating variant options first, but not all option types are supported by this method.",
                              "header": {
                                "anchor": "create-variant-product-endpoint"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "Swatch, Radio Buttons, Rectangle, dropdown, Product List and Product List with Images. ",
                                "title": "Supported Types"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\",\n  \"variants\": [\n    {\n      \"sku\": \"SKU-BLU\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Blue\"\n        }\n      ]\n    },\n    {\n      \"sku\": \"SKU-GRAY\",\n      \"option_values\": [\n        {\n          \"option_display_name\": \"Mug Color\",\n          \"label\": \"Gray\"\n        }\n      ]\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create your own Product using the products endpoint . Replace the test data with your own.",
                                "anchor": "create-variants-using-products-endpoint"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Webhooks Available\n\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-products-event)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhooks-sku-event)\n* See [About Webhooks](/api-docs/getting-started/webhooks/about-webhooks) for more on working with events.",
                              "header": {
                                "anchor": "variant-webhooks"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/VariantBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Modifier Options",
                        "route": {
                          "path": "/modifier-options"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Modifier Options </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n        <li><a href=\"#add-modifer\">Add Modifier to Existing Product</a></li>\n        <li><a href=\"#422-error\">422 Error</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/modifiers](/api-docs/api-reference/v3-api/catalog/getmodifiers)\n\nModifier options are any choices that the shopper can make that will change the way the merchant fulfills the product. Examples include:\n* A checkbox to add shipping insurance\n* Text to be engraved on the product\n* A color that an unfinished product is to be painted before it’s shipped\n \nCritically, the modifier will not change the SKU/variant being fulfilled, and you cannot track inventory against combinations of modifier values. Modifiers typically would not change which product is “picked off the shelf” in the warehouse, but they change what happens to that product before it’s sent to the shopper, or how it’s sent.\n \nModifier options:\n* May be required or non-required\n* Support all option types\n* Cannot be used as part of a variant\n\n\nAn adjuster can be added to a modifier option to change things such as adding to the price, changing the weight or shipping rules.  Adjusters cannot be applied to all modifiers."
                            },
                            {
                              "type": "callout",
                              "data": {
                                "title": "Modifiers that use Adjusters",
                                "body": "Swatch, radio buttons, rectangle list, drop-down, product list, product list with images"
                              }
                            },
                            {
                              "type": "text",
                              "data": "## Add a modifier to an existing product with price adjuster\n\nThe following example shows how to add a modifier - checkbox with a price adjuster - increase price by five dollars. Checkboxes have to made in two steps.  The reason is that it creates more than one modifier. A checkbox is a yes or no which is listed as two different `option_values`. ",
                              "header": {
                                "anchor": "add-modifer"
                              }
                            },
                            {
                              "type": "callout",
                              "data": {
                                "body": "swatch, radio buttons, drop-down, rectangle list, product list, product list with images, and checkbox.",
                                "title": "Modifiers that have to be created in two steps"
                              }
                            },
                            {
                              "type": "text",
                              "data": "First, a POST to create the modifier. "
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/modifiers",
                                "body": "{\n  \"type\": \"checkbox\",\n  \"required\": false,\n  \"config\": {\n    \"default_value\": \"Yes\",\n    \"checked_by_default\": false,\n    \"checkbox_label\": \"Check for Donation\"\n  },\n  \"display_name\": \"Add a $5 Donation\"\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add a Modifier to your Product. Replace the test data with your own.",
                                "anchor": "code-create-modifier"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Since this is a checkbox which has two states, checked/unchecked or yes/no two option values are created. The adjuster values are null. "
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": [\n        {\n            \"id\": 160,\n            \"product_id\": 131,\n            \"name\": \"Add-a-$5-Donation1535039590-191\",\n            \"display_name\": \"Add a $5 Donation\",\n            \"type\": \"checkbox\",\n            \"required\": false,\n            \"config\": {\n                \"checkbox_label\": \"Check for Donation\",\n                \"checked_by_default\": false\n            },\n            \"option_values\": [\n                {\n                    \"id\": 149,\n                    \"option_id\": 160,\n                    \"label\": \"Yes\",\n                    \"sort_order\": 0,\n                    \"value_data\": {\n                        \"checked_value\": true\n                    },\n                    \"is_default\": false,\n                    \"adjusters\": {\n                        \"price\": {\n                            \"adjuster\": null,\n                            \"adjuster_value\": null\n                        },\n                        \"weight\": null,\n                        \"image_url\": \"\",\n                        \"purchasing_disabled\": {\n                            \"status\": false,\n                            \"message\": \"\"\n                        }\n                    }\n                },\n                {\n                    \"id\": 150,\n                    \"option_id\": 160,\n                    \"label\": \"No\",\n                    \"sort_order\": 1,\n                    \"value_data\": {\n                        \"checked_value\": false\n                    },\n                    \"is_default\": true,\n                    \"adjusters\": {\n                        \"price\": null,\n                        \"weight\": null,\n                        \"image_url\": \"\",\n                        \"purchasing_disabled\": {\n                            \"status\": false,\n                            \"message\": \"\"\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"meta\": {\n        \"pagination\": {\n            \"total\": 1,\n            \"count\": 1,\n            \"per_page\": 50,\n            \"current_page\": 1,\n            \"total_pages\": 1,\n            \"links\": {\n                \"current\": \"?page=1&limit=50\"\n            }\n        }\n    }\n}\n",
                              "header": {
                                "title": "Response",
                                "anchor": "code-response-create-modifier",
                                "subtitle": "Create Modifier Option"
                              },
                              "config": {
                                "mode": "json"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Then a PUT to update the modifier value created. This increases the price by $5 when the yes modifier is selected."
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/modifiers/{modifier_id}/values",
                                "body": "{\n  \"is_default\": false,\n  \"adjusters\": {\n    \"price\": {\n      \"adjuster\": \"relative\",\n      \"adjuster_value\": 5\n    }\n  }\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add Modifer Values to your Product. Replace the test data with your own.",
                                "anchor": "code-create-modifer-values"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## 422 Error\n\n```\n{\n    \"status\": 422,\n    \"title\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\",\n    \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\",\n    \"errors\": {\n        \"product_id\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\"\n    }\n}\n```\n\nTo fix this error:\n* Modify the products using the V2 API\n* Remove the option set using the V2 API or the Control Panel, then remake the variants and modifiers using V3",
                              "header": {
                                "anchor": "422-error"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ModifierBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Complex Rules",
                        "route": {
                          "path": "/product-complex-rules"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Complex Rules </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n    <li><a href-\"#add-complex-rule\">Adding a Complex Rule to a Modifier</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/complex-rules](/api-docs/api-reference/v3-api/catalog-api/product-complex-rules/createcomplexrule)\n\nComplex rules allow merchants to set up conditions and actions based on shopper option selections on the storefront. You can use them to vary the following based on option selections made by the shopper:\n* Price\n* Weight\n* Image\n* Purchasability\n\nAdjustments made by complex rules are displayed to shoppers in real-time on the storefront.\n\nFor the majority of merchant use cases, **best practice** will be to either assign values (such as a price) directly to a variant or use adjusters on the modifier option itself. However complex rules exist for rare cases where a rule condition is too complex to express in those forms easily. \n\nUse complex rules when an adjustment should be triggered by:\n* The selection of values across multiple modifier options\n* The combination of a particular variant/SKU and a modifier option value.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Adding a Complex Rule to a Modifier\n\nComplex rules must be based on a combination of two or more modifiers, such as two checkboxes. The following example will add $10 to the product price when both boxes are checked. \n",
                              "header": {
                                "anchor": "add-complex-rule"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/complex-rules",
                                "body": "{\n  \"product_id\": 1200,\n  \"enabled\": true,\n  \"price_adjuster\": {\n    \"adjuster_value\": 10\n  },\n  \"conditions\": [\n    {\n      \"modifier_id\": 506,\n      \"modifier_value_id\": 852\n    },\n    {\n      \"modifier_id\": 507,\n      \"modifier_value_id\": 854\n    }\n  ]\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add a Complex Rules to a Modifier. Replace the test data with your own.",
                                "anchor": "code-add-complex-rule-modifier"
                              }
                            },
                            {
                              "type": "text",
                              "data": "Complex rules must consist of multiple conditions that trigger the rule adjustment. If multiple conditions are not specified, the request will return a 422 Unprocessable Entity.\n\n```\n{\n    \"status\": 422,\n    \"title\": \"The rule must contain multiple modifier conditions with unique modifier ids or a variant condition and modifier condition\",\n    \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\"\n}\n```\n"
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ComplexRuleBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Metafields",
                        "route": {
                          "path": "/product-metafields"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Product Metafields </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/metafields](/api-docs/api-reference/v3-api/catalog/getproductmetafieldsbyproductid)\n\nMetafields allow a developer to setup key and namespace pairs. The data does not appear in the storefront or the control panel. This is useful for when information needs to be passed back and forth between an app and the store. \n\nMetafields can be added to variants, products, categories, and brands.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "put",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/metafields",
                                "body": "{\n  \"permission_set\": \"read\",\n  \"namespace\": \"Location\",\n  \"key\": \"bin_number\",\n  \"value\": \"#4456\",\n  \"description\": \"location of the product\",\n  \"resource_type\": \"product\",\n  \"resource_id\": 131\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to add a Metafield to your Product. Replace the test data with your own.",
                                "anchor": "code-add-metafield"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/MetafieldBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Reviews",
                        "route": {
                          "path": "/product-reviews"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Reviews </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/products/{product_id}/reviews](/api-docs/api-reference/v3-api/catalog-api/product-reviews/createproductreview)\n\nA product review is used to give shoppers the option to rate the products they have purchased. The reviews are located on the same page as the product. \n\nReviews are not able to be created in the control panel, but they can be created via API. Creating them via API is useful if you are migrating to BigCommerce and do not want to lose existing reviews. Product Reviews are native to the platform but can be turned off in favor of a custom setup.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"title\": \"Great Coffee Mug\",\n  \"text\": \"This coffee mug kept my liquids hot for several hours.\",\n  \"status\": \"pending\",\n  \"rating\": 5,\n  \"email\": \"testing@bigcommerce.com\",\n  \"name\": \"BigCommerce\",\n  \"date_reviewed\": \"2018-07-20T17:45:13+00:00\"\n}\n"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create a Product Review. Replace the test data with your own.",
                                "anchor": "code-create-product-review"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/ProductReviewBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Brands",
                        "route": {
                          "path": "/brands"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Brands </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\">Introduction</a></li>\n\t\t<li><a href=\"#object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/brands](/api-docs/api-reference/v3-api/catalog-api/brands/createbrand)\n\nBrands are another form of catalog taxonomy, similar to Categories. However, there are a few differences.\n\n* Exist as a single “list” on the store, with no tree structure\n* Can only have a single assignment to a product; a product may have at most one brand, but a brand can have many products.\n \nThey’re primarily used to tag products so that consumers can find Brands they’re interested in (such as Nike shoes). Brands have their own page on the storefront which shows all the products in that Brand. They’re also used as part of faceted search navigation.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/brands",
                                "body": "{\n  \"name\": \"BigCommerce\",\n  \"page_title\": \"BigCommerce\",\n  \"meta_keywords\": [\n    \"ecommerce\",\n    \"best in class\",\n    \"grow your business\"\n  ],\n  \"image_url\": \"https://your-custom-image.png\"\n}"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Use this to create your own Brand. Replace the test data with your own.",
                                "anchor": "code-create-brand"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/BrandBase"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Categories",
                  "route": {
                    "path": "/categories"
                  },
                  "data": {
                    "blocks": [],
                    "children": [
                      {
                        "title": "Categories Overview",
                        "route": {
                          "path": "/categories-overview"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Category </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\"> Introduction</a></li>\n    <li><a href=\"#category-oauth-scopes\">OAuth Scopes</a></li>\n  <li><a href=\"#category-webhooks\">Webhooks Available</a></li>\n\t\t<li><a href=\"#object-properties\"> Object Properties</a></li>\n\t</ul>\n</div>\n"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/categories](/api-docs/api-reference/v3-api/catalog-api/category/createcategory)\n\nCategories are a hierarchy of products available on the store, presented in a tree structure. Currently, a store’s category structure determines the primary menu structure of most storefront themes, which are directly tied to it.\n\nAll products must be associated with at least one Category, although a Category does not need to have any products. Unlike some e-commerce platforms, products on BigCommerce can be associated with more than one Category. \n\nA product associated with categories does not currently have any priority or weighted order (there’s no “primary category”), which can make it difficult to integrate with some external systems which might wish to use a product’s categories to map to a category structure in that external system.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "post",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products",
                                "body": "{\n  \"parent_id\": 18,\n  \"name\": \"Shoes\",\n  \"description\": \"Shoes Available for purchase\",\n  \"sort_order\": 1,\n  \"page_title\": \"Shoes\",\n  \"is_visible\": true\n}\n"
                              },
                              "header": {
                                "title": "Try It Now",
                                "subtitle": "Create a Category. Replace the test data with your own."
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## OAuth Scopes\n* [Products](/api-docs/getting-started/about-api/authentication#oauth-scopes)",
                              "header": {
                                "anchor": "category-oauth-scopes"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Available Webhooks\n\n* [Category](/api-docs/getting-started/webhooks/webhook-events#webhooks-category-event)\n* See [About Webhooks](/api-docs/getting-started/webhooks/about-webhooks) for more on working with events.",
                              "header": {
                                "anchor": "category-webhooks"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/CategoryBase"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "title": "Category Tree",
                        "route": {
                          "path": "/category-tree"
                        },
                        "data": {
                          "blocks": [
                            {
                              "type": "html",
                              "data": "<h1> Category Tree </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#introduction\"> Catalog Products</a></li>\n\t\t<li><a href=\"#object-properties\"> Object Properties</a></li>\n\t</ul>\n</div>\n"
                            },
                            {
                              "type": "text",
                              "data": "## [/catalog/categories/tree](/api-docs/catalog/categories/category-tree)\n\nThe Category Tree returns a simple view of the parent > child relationship of all categories in the store. This endpoint can be used to fetch the categories if building out a custom navigation for a store.",
                              "header": {
                                "anchor": "introduction"
                              }
                            },
                            {
                              "type": "code",
                              "data": "{\n    \"data\": [\n        {\n            \"id\": 33,\n            \"parent_id\": 0,\n            \"name\": \"Clothing\",\n            \"is_visible\": true,\n            \"url\": \"/clothing/\",\n            \"children\": []\n        },\n        {\n            \"id\": 23,\n            \"parent_id\": 0,\n            \"name\": \"Shop All\",\n            \"is_visible\": true,\n            \"url\": \"/shop-all/\",\n            \"children\": []\n        },\n        {\n            \"id\": 25,\n            \"parent_id\": 0,\n            \"name\": \"Towels\",\n            \"is_visible\": true,\n            \"url\": \"/towels/\",\n            \"children\": [\n                {\n                    \"id\": 26,\n                    \"parent_id\": 25,\n                    \"name\": \"Bath Towels\",\n                    \"is_visible\": true,\n                    \"url\": \"/towels/bath-towels/\",\n                    \"children\": [\n                        {\n                            \"id\": 30,\n                            \"parent_id\": 26,\n                            \"name\": \"Bath Towels\",\n                            \"is_visible\": true,\n                            \"url\": \"/towels/bath-towels/bath-towels/\",\n                            \"children\": []\n                        },\n                        {\n                            \"id\": 29,\n                            \"parent_id\": 26,\n                            \"name\": \"Hand Towels\",\n                            \"is_visible\": true,\n                            \"url\": \"/towels/bath-towels/hand-towels/\",\n                            \"children\": [\n                                {\n                                    \"id\": 31,\n                                    \"parent_id\": 29,\n                                    \"name\": \"Washcloths\",\n                                    \"is_visible\": true,\n                                    \"url\": \"/towels/bath-towels/hand-towels/wash-cloths/\",\n                                    \"children\": []\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"id\": 28,\n                    \"parent_id\": 25,\n                    \"name\": \"Beach Towels\",\n                    \"is_visible\": true,\n                    \"url\": \"/towels/beach-towels/\",\n                    \"children\": []\n                },\n                {\n                    \"id\": 27,\n                    \"parent_id\": 25,\n                    \"name\": \"Kitchen Towels\",\n                    \"is_visible\": true,\n                    \"url\": \"/towels/kitchen-towels/\",\n                    \"children\": []\n                }\n            ]\n        },\n        {\n            \"id\": 18,\n            \"parent_id\": 0,\n            \"name\": \"Bath\",\n            \"is_visible\": true,\n            \"url\": \"/bath/\",\n            \"children\": [\n                {\n                    \"id\": 34,\n                    \"parent_id\": 18,\n                    \"name\": \"Shoes\",\n                    \"is_visible\": true,\n                    \"url\": null,\n                    \"children\": []\n                }\n            ]\n        },\n        {\n            \"id\": 32,\n            \"parent_id\": 0,\n            \"name\": \"Hoodies\",\n            \"is_visible\": true,\n            \"url\": \"/hoodies/\",\n            \"children\": []\n        },\n        {\n            \"id\": 19,\n            \"parent_id\": 0,\n            \"name\": \"Garden\",\n            \"is_visible\": true,\n            \"url\": \"/garden/\",\n            \"children\": []\n        },\n        {\n            \"id\": 21,\n            \"parent_id\": 0,\n            \"name\": \"Kitchen\",\n            \"is_visible\": true,\n            \"url\": \"/kitchen/\",\n            \"children\": []\n        },\n        {\n            \"id\": 20,\n            \"parent_id\": 0,\n            \"name\": \"Publications\",\n            \"is_visible\": true,\n            \"url\": \"/publications/\",\n            \"children\": []\n        },\n        {\n            \"id\": 22,\n            \"parent_id\": 0,\n            \"name\": \"Utility\",\n            \"is_visible\": true,\n            \"url\": \"/utility/\",\n            \"children\": []\n        }\n    ],\n    \"meta\": {}\n}\n",
                              "header": {
                                "title": "Category Tree Response Example",
                                "anchor": "code-example-get-category-tree"
                              }
                            },
                            {
                              "type": "http",
                              "data": {
                                "headers": {
                                  "Accepts": "application/json",
                                  "Content-Type": "application/json",
                                  "X-Auth-Client": "{{CLIENT ID}}",
                                  "X-Auth-Token": "{{ACCESS TOKEN}}"
                                },
                                "method": "get",
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/summary",
                                "body": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\"\n}"
                              },
                              "header": {
                                "title": "Try It Now ",
                                "subtitle": "Get your store's Category Tree",
                                "anchor": "code-get-cateory-tree"
                              }
                            },
                            {
                              "type": "text",
                              "data": "---"
                            },
                            {
                              "type": "text",
                              "data": "## Object Properties",
                              "header": {
                                "anchor": "object-properties"
                              }
                            },
                            {
                              "type": "jsonSchema",
                              "data": {
                                "$ref": "./V3 Catalog.oas2.yml#/definitions/CategoryTreeCollectionResponse"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Scripts",
            "route": {
              "path": "/scripts"
            },
            "data": {
              "blocks": [
                {
                  "type": "text",
                  "data": "# Scripts"
                }
              ],
              "children": [
                {
                  "title": "Overview",
                  "route": {
                    "path": "/scripts-overview"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Script API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#script-manager-partner-guidelines\">Script Manager API Partner Guidelines</a></li>\n        <li><a href=\"#script-prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#upgrades-installation\">Upgrades and Installation</a></li>\n        <li><a href=\"#fixing-missing-scripts\">Fixing Missing Scripts</a></li>\n        <li><a href=\"#scripts-notes\">Notes</a></li>\n    \t\t<li><a href=\"scripts-oauth-scopes\"> OAuth Scopes</a></li>\n        <li><a href=\"#script-object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "The BigCommerce Scripts API can be used to add a script to a store's page. Some use cases:\n* Insert tracking codes\n* Storefront single click applications\n* Live chat, support plugins\n* Theme extension or connector apps"
                      },
                      {
                        "type": "text",
                        "data": "## Script Manager API Partner Guidelines\n\nWith the Script Manager API, your Apps now have the ability to insert scripts into a user’s storefront without requiring the user to manually paste a snippet of code into their control panel. You can freely update these scripts while your App is installed, and, if desired, automatically remove scripts if your App is uninstalled.\n\nFor Apps being installed on our latest theme engine (Stencil), this process is relatively straightforward. However, if your App is already live, you may have already asked merchants to paste a code snippet in one of these two sections in the control panel:\n\n- Footer Scripts\n- Web Analytics\n\nAlso, since our older (Blueprint-based) themes do not support the Script Manager API, you’ll still need some way of providing users of older themes the documentation they need, without burdening users of newer themes with additional, unnecessary steps.\n\nTo help you transition to the Script Manager API, we’ve provided some recommended strategies to deal with these different situations. \n\n#### Stencil vs Blueprint\n\nAs mentioned above, BigCommerce supports two theme engines: Stencil and Blueprint. Stencil is our latest technology, and all new stores only have access to Stencil themes. However, older stores may still be using our legacy theme engine, Blueprint, which does not have the ability to render scripts inserted through the Script Manager API.\n\nBecause of this, you’ll need to check whether a user is running Stencil to determine if their store supports the Script Manager API. To do this, use the [Get Store Information API](https://developer.bigcommerce.com/api/v2/#store-information-reference) endpoint and check the `stencil_enabled` flag. (requires [store_v2_information_read_only scope](https://developer.bigcommerce.com/api/#oauth-scopes)).",
                        "header": {
                          "anchor": "script-manager-partner-guidelines"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Prerequisites\n\nTo better understand the content of this document, you should be familiar with the app installation procedure, which is outlined here:\n[App Installation](https://developer.bigcommerce.com/api/#app-installation-and-update-sequence)",
                        "header": {
                          "anchor": "script-prerequisites"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Upgrades and Installation\n\n### Installing An App on Stencil\n\nFor Apps being installed on Stencil stores, we recommend inserting your scripts immediately after receiving the POST response during the Auth Callback flow. Add your scripts using the Create Script endpoint of the Script Manager API.\n\nWe highly recommend leaving the auto_uninstall flag set to true, so that your App will properly clean itself up when uninstalled. More information about this flag can be found <a href=\"script-object-properties\">here</a>.\n\n#### Upgrading Existing Apps on Stencil\n\nIf your App has already been released, you may have existing users with pasted-in code somewhere in their control panel. There are a few possible ways to deal with this situation.\n\n1.) __Do nothing__\n\nIf you don’t need to upgrade existing merchants to the Script Manager API, it’s perfectly fine to leave them as-is. You’ll need to maintain documentation for the manual uninstallation process so that merchants with older installations know what to clean up, and you won’t be able to automatically update or add scripts for these users. \n\n2.) __Prompt merchants to upgrade__\n\nIf you want your merchants to gradually update to the new Script Manager over time, you can prompt them to do so on your App’s landing page. You’ll need to keep track of which of your merchants are not using the Script Manager yet to know whether you need to display this prompt. Also, make sure to check that they are running Stencil (via the Get Store Information endpoint) before prompting them to upgrade.\n\nOnce a user decides to upgrade, you can walk them through removing the old pasted-in code in their control panel, and then, once the merchant clicks a button, install your scripts through the Script Manager API.\n\n3.) __Silently upgrade to the Script Manager API__\n\nFinally, if it’s possible for your old, pasted-in scripts to live alongside the new Script Manager API scripts, you may be able to upgrade to using the Script Manager API without any user intervention being required. Whether or not this is possible will vary depending on the implementation of your App.\n\nWhile your merchants will be loading more data on their storefront pages than necessary, this method will allow you to transition to using the Script Manager API for all of your installations immediately. Keep in mind you’ll still need to document the manual uninstallation process for existing installations.\n\n### Installing Apps on Blueprint Stores \n\nAs mentioned, the Blueprint theme engine does not support the Script Manager API. Any scripts inserted through this API will not be rendered on any storefront pages. To prevent unpredictable behavior should a user change their theme, we highly recommend checking the Get Store Information endpoint for Stencil support prior to installing any scripts through the Script Manager API. Additionally, you’ll still want to show the old manual installation steps when a store does not support Stencil. \n\n### Existing Blueprint Installations \n\nExisting blueprint installations won’t be affected, but remember that if you are prompting existing Stencil users to upgrade to the Script Manager, you’ll want to suppress this message for Blueprint users. ",
                        "header": {
                          "anchor": "upgrades-installation"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "### Fixing Missing Scripts\n\nIt’s possible that your App installation may find itself unexpectedly missing one or more scripts. Below are some possible causes of this issue.\n\n1.) __The Merchant Deleted Your Script__ \n\nMerchants are given a warning when attempting to delete a script belonging to an App, but we do allow them to do so.\n\nIf you want to handle this situation gracefully, we recommend you check the [Get Scripts](/api/v3/scripts.html#getallscripts) endpoint on your App Detail Page (returned by the [Load Callback URI](/api/#load-uninstall-and-user-removal-requests)) to determine whether the expected scripts are present. If they are not, you can prompt the user to click a button to automatically repair their installation.\n\nWe ask that you request the user’s permission rather than doing this automatically, as they may have had a good reason for deleting the missing script. \n\n2.) __The Merchant's Theme is Not Set Up Correctly__ \n\nIn order to render scripts, the theme templates must have the handlebars expressions {{head.scripts}} and {{footer.scripts}} in the pages where scripts should be rendered. If either of these is absent, scripts on that page with location set to head or footer (respectively) will not be rendered.\n\nOf particular note, {{head.scripts}} was only recently added to the checkout and order confirmation pages in our Cornerstone theme, and widespread adoption of this standard outside of Cornerstone is still an ongoing process.\n\nTo ensure your App is compatible with as many themes as possible, we recommend footer over head for checkout, order_confirmation and all_pages visibilities. \n\n3.) __Scripts Are Not Rendering in the Checkout and Order Confirmation__ \n\nIn order to render scripts, the store must have BigCommerce’s Optimized one-page checkout enabled. This is the default checkout type for all new Stencil stores. Existing stores have to manually change the checkout type as detailed in this article. \n\nStencil themes from the marketplace support the [Optimized One-Page Checkout](https://support.bigcommerce.com/articles/Public/Optimized-Single-Page-Checkout#signup). However, there could be instances where the merchant maintains their own private theme and the theme has not been updated to support the Optimized one-page checkout. In this case, the merchant is required to add the theme support, following the steps [here](https://stencil.bigcommerce.com/docs/optimized-checkout-prereqs).  ",
                        "header": {
                          "anchor": "fixing-missing-scripts"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Notes\n\n- If you are injecting scripts into the Checkout, you will need to update the scope to Checkout Content. Accounts can only be created by the [store owner](https://support.bigcommerce.com/articles/Public/Store-API-Accounts/).\n- Merchants will be able to see the scripts installed on the store in the Control Panel. Within the native tag manager, merchant actions will be limited to viewing a script and deleting a script.\n- Scripts can be located in the header `{{head.scripts}}` or footer `{{footer.scripts}}`.\n- Scripts Manager is only for Stencil themes. Blueprint store users will still need to copy and paste in code.\n- The current visibility options are `storefront`, `checkout`, `all_pages` and `order_confirmation`.\n\n     `storefront`: All pages that are not `checkout` or `order_confirmation`.\n     \n     `all_pages`: Includes `storefront`, `checkout` and `order_confirmation`. This also includes the cart page. It **does not** include giftcertificates.php, \n                    sitemap.php, account.php, and login.php.\n     \n- Scripts injected via the Scripts API will not render when you are developing a theme locally via Stencil CLI.",
                        "header": {
                          "anchor": "scripts-notes"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## OAuth Scopes\n* [Checkout Content](/api-docs/getting-started/about-api/authentication#oauth-scopes)\t\n* [Content](/api-docs/getting-started/about-api/authentication#oauth-scopes)",
                        "header": {
                          "anchor": "scripts-oauth-scopes"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Object Properties",
                        "header": {
                          "anchor": "script-object-properties"
                        }
                      },
                      {
                        "type": "jsonSchema",
                        "data": {
                          "$ref": "./V3 Content.oas2.yml#/definitions/Script"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Price Lists",
            "route": {
              "path": "/price-lists"
            },
            "data": {
              "blocks": [
                {
                  "type": "text",
                  "data": "# Price Lists"
                }
              ],
              "children": [
                {
                  "title": "Overview",
                  "route": {
                    "path": "/price-list-overview"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Price List API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#what-is-a-pricelist\">What is a Price List?</a></li>\n        <li><a href=\"#pricelist-definitions\">Definitions</a></li>\n        <li><a href=\"#pricelist-notes\">Notes</a></li>\n        <li><a href=\"#pricelist-oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#pricelist-available-webhooks\">Webhooks Available</a></li>\n        <li><a href=\"#pricelist-object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## What is a Price List?\n\nA Price List allows you to populate different versions of catalog pricing and assign them to different [Customer Groups](https://developer.bigcommerce.com/api/v2/#customer-groups). The prices are specified exclusively at the variant level. \n\nIf an active Price List does not contain prices for a variant then the Catalog pricing will be used. The association of a Price List to a Customer Group can be done either via the Control Panel or using the [V2 Customer Groups API.](/api/v2/#customer-groups)\n\nPrice Lists will provide overridden price values to the Stencil storefront. Final price display can be further customized within the Stencil template. See the [Price Object](https://stencil.bigcommerce.com/docs/price-object-properties) in Stencil for further documentation.",
                        "header": {
                          "anchor": "what-is-a-pricelist"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---",
                        "header": {}
                      },
                      {
                        "type": "text",
                        "data": "## Definitions\n\n- `Price List` : A collection of price records. `Price Records` make up a price list.\n \n- `Price Record`: A price override for a particular variant - minimally, this is a variant ID, price, and currency.\n        \n```\n\t{\n\t\t\"variant_id\": 3121,\n\t\t\"price\": 10.0,\n\t\t\"sale_price\": 8.0,\n\t\t\"retail_price\": 12.0,\n\t\t\"map_price\": 6.0,\n\t\t\"currency\": \"EUR\"\n\t}\n```\n\n        \n- `PriceRecordBatch`: A way to update several `Price Records` in a `Price List` at once. Using this bulk upsert endpoint, you can upsert up to 1000 Price Records in a single API call.\n\n- `Currency`:  A `Price List` can contain records for multiple currencies. At this time, *only price records that match the store's default currency will be used to determine storefront and in-cart prices.* Although BigCommerce supports a storefront currency selection, this is not currently integrated with Price Lists and will merely convert prices from the store's default currency for display convenience.",
                        "header": {
                          "anchor": "pricelist-definitions"
                        }
                      },
                      {
                        "type": "code",
                        "data": "[{\n  \"variant_id\": 3121,\n  \"price\": 10.0,\n  \"sale_price\": 8.0,\n  \"retail_price\": 12.0,\n  \"map_price\": 6.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3255,\n  \"price\": 11.0,\n  \"sale_price\": 9.0,\n  \"retail_price\": 13.0,\n  \"map_price\": 7.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3256,\n  \"price\": 12.0,\n  \"sale_price\": 10.0,\n  \"retail_price\": 14.0,\n  \"map_price\": 8.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3257,\n  \"price\": 13.0,\n  \"sale_price\": 11.0,\n  \"retail_price\": 15.0,\n  \"map_price\": 9.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3258,\n  \"price\": 14.0,\n  \"sale_price\": 12.0,\n  \"retail_price\": 16.0,\n  \"map_price\": 10.0,\n  \"currency\": \"USD\"\n}] ",
                        "header": {
                          "title": "Example Price List"
                        },
                        "config": {
                          "mode": "json"
                        }
                      },
                      {
                        "type": "code",
                        "data": "[\n\n    {\n        \"id\": 1,\n        \"name\": \"Price List Test\",\n        \"is_default\": false,\n        \"category_access\": {\n            \"type\": \"all\"\n        },\n        \"discount_rules\": [\n            {\n                \"type\": \"price_list\",\n                \"price_list_id\": 1\n            }\n        ]\n    }\n]",
                        "header": {
                          "title": "Example Price List assigned to a customer group"
                        }
                      },
                      {
                        "type": "text",
                        "data": "Under `discount_rules` the `type` is set to `price_list` and the `price_list_id` is 1. Which is the id of the price list the group has been assigned to."
                      },
                      {
                        "type": "text",
                        "data": "## Notes\n\n- Bulk Pricing Tiers may additionally be associated with a Price Record to indicate different pricing as the quantity in cart increases.\n  \n- If a variant has a `Price Record` any existing product-level bulk pricing will not apply in the cart.  For variants without `Price Records`, any existing product bulk pricing will apply.",
                        "header": {
                          "anchor": "pricelist-notes"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## OAuth Scopes\n* [Products](/api-docs/getting-started/about-api/authentication#oauth-scopes)",
                        "header": {
                          "anchor": "pricelist-oauth-scopes"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Webhooks Available\n\nThere are no direct webhooks available for Price Lists. Since it is part of a product, webhooks related to products will fire for corresponding changes such as pricing. \n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-products-event)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhooks-sku-event)",
                        "header": {
                          "anchor": "pricelist-available-webhooks"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Object Properties",
                        "header": {
                          "anchor": "pricelist-object-properties"
                        }
                      },
                      {
                        "type": "jsonSchema",
                        "data": {
                          "$ref": "./V3 Price Lists.oas2.yml#/definitions/PriceListBase"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Customers",
            "route": {
              "path": "/customers"
            },
            "data": {
              "blocks": [],
              "children": [
                {
                  "title": "Customer Login API",
                  "route": {
                    "path": "/customer-login-api"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1> Customer Login API </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#jwt\"> JWT</a></li>\n\t\t<li><a href=\"#oauth-scope\">OAuth Scope</a></li>\n    <li><a href=\"#sample-code\">Sample Code</a></li>\n    <li><a href=\"#access-url\">Acces URL</a></li>\n    <li><a href=\"#logging-in-a-customer\">Loggin In a Customer</a></li>\n    <li><a href=\"#troubleshooting-customer-login-api\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "The Customer Login API enables single sign-on (SSO). It allows your apps to programmatically log in a storefront customer by using the login entry point URL: `/login/token/{token}`. Here, {token} must be a JSON Web Token (JWT) containing the parameters for the customer login request, signed by your application’s Oauth client secret.\n\nExample use cases for the Customer Login API include:\n\n* Integration with a SSO provider or IdP\n* Continuous login between a BC storefront and another system, such as a WordPress blog\n* Any login method other than BC's typical email and password login - for example, if you wanted to enable customers to log in via a phone number and SMS password",
                        "header": {}
                      },
                      {
                        "type": "text",
                        "data": "## JWT\n\nJWT is a standard for verifying a login signature between two parties. For a full overview of the JWT standard, please see [JWT.IO](https://jwt.io/), where you can find links to client libraries (in many languages) that facilitate the generation and verification of JWT tokens. BigCommerce also supplies helper methods for generating login tokens in our [API Client Libraries](/api-docs/getting-started/about-api/new-subpage).\n\n### JWT Standard\n\nA valid JWT token is a string composed of three parts, separated by periods (“.”), which correspond to the encoded header, the encoded payload, and the signature.",
                        "header": {
                          "anchor": "jwt"
                        }
                      },
                      {
                        "type": "image",
                        "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1535390918772",
                        "header": {
                          "anchor": "example-jwt-token",
                          "title": "Example JWT Token"
                        },
                        "config": {
                          "centered": true,
                          "maxWidth": "800",
                          "maxHeight": "800"
                        }
                      },
                      {
                        "type": "image",
                        "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1535391044482",
                        "header": {
                          "title": "Key",
                          "anchor": "token-key"
                        },
                        "config": {
                          "centered": true,
                          "maxWidth": "400",
                          "maxHeight": "400"
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Header\n\nThe header specifies the type of token (JWT) and the hashing algorithm.\n\n```\n{\n\t\"typ\": \"JWT\",\n\t\"alg\": \"HS256\" \n}\n```\n\nThe type and algorithm are always JWT and HS256. Those are the only values BigCommerce supports.",
                        "header": {
                          "anchor": "header"
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Payload\nThe payload contains a series of claims that identify the application requesting the login, the store, and the customer to be logged in. Optionally, you can specify a redirect URL to direct the customer to a page other than the My Account page after login. \n\nOnce a request has is made with a given `jti`, it cannot be made again. This parameter is used to prevent replay attacks by malicious actors intercepting the request or obtaining it after the fact.\n\nThe `request_ip` field can be used as an additional security precaution, to prevent a malicious actor from intercepting the request and making it from another browser or system before you do. If you supply this value, BigCommerce checks the incoming request to ensure that it is being made from the stated IP address otherwise the request fails. We strongly encourage setting this IP address value, but doing so is optional, to support those cases where this information is not available.",
                        "header": {
                          "anchor": "payload"
                        }
                      },
                      {
                        "type": "code",
                        "data": "{\n\"iss\": \"Your app’s Oauth client ID\",\n\"iat\": \"timestamp for when the token was issued\",\n\"jti\": \"randomly generated string\",\n\"operation\": \"customer_login\",\n\"store_hash\": \"abc123\",\n\"customer_id\": 1234,\n\"redirect_to\": \"/account.php\",\n\"request_ip\": \"111.222.333.444\"\n}\n",
                        "header": {
                          "anchor": "example-payload",
                          "title": "Example Payload"
                        },
                        "config": {
                          "mode": "json"
                        }
                      },
                      {
                        "type": "text",
                        "data": "| Field Name | Type | Description |\n| --- | --- | --- |\n| iss | string | Indicates the token's issuer. This is your application's client ID, which is obtained during application registration in Developer Portal. |\n| iat | integer| Time when the token was generated. This is a numeric value indicating the number of seconds since the [Unix epoch](http://en.wikipedia.org/wiki/Unix_time).|\n| jti | string | Request ID string that must be unique across all requests made by your app. A UUID or other random string would be an appropriate value. Most libraries contain a method for generating a uuid. For testing a [UUID generator](https://www.uuidgenerator.net/) can be used, but it recommended to use built in libraries.|\n| operation | string | Must contain the string \"customer_login\". |\n| store_hash | string | Store hash identifying the store you are logging into. |\n| customer_id | integer | ID of the customer you are logging in, as obtained through the Customer API. |\n| redirect_to | string | Optional field containing a relative path for the shopper's destination after login. Will default to `/account.php`. |\n| request_ip | string | Optional field containing the expected IP address for the request. If provided, BigCommerce will check that it matches the browser trying to log in. If there is not a match, it will be rejected |",
                        "header": {
                          "anchor": "payload-fields"
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Signature\n\nThe signature is created by signing the header and payload with the hashing algorithm specified in the header (HS256) and your application’s Client Secret. ",
                        "header": {
                          "anchor": "signature"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## OAuth Scope\nYour OAuth API credentials must include the [customers_login](http://) scope.",
                        "header": {
                          "anchor": "oauth-scope"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Access URL\nAfter generating the JWT token, your app should immediately redirect the shopper’s browser to the following access point URL to log the customer into their account: `/login/token/{token}`\n\nExample:\n`https://storedomain.com/login/token/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 .eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ`",
                        "header": {
                          "anchor": "access-url"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Logging in a Customer\nThe following tutorial will walk through creating a login token. We recommend scripting this process since the iat is invalid after 30 seconds. For the purpose of illustration, this tutorial will walk through creating a token manually using the debugger tool at JWT.io, although doing so can be tricky due to time constraints.  \n\n**Prerequisites**:\nClient ID and Client Secret generated from the store with the scope set to [Customers Login]().",
                        "header": {
                          "anchor": "logging-in-a-customer"
                        }
                      },
                      {
                        "type": "text",
                        "data": "### Create a JWT Token\n\n1. Run a /GET request against the [Customers](http://) resource (V2). Choose a customer and make note of the customer_id. ",
                        "header": {
                          "anchor": "create-jwt-token"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "success",
                          "body": "If you are unsure how to make a /GET request see our tutorial on [making your first request]().",
                          "title": "Making a /GET request"
                        },
                        "header": {
                          "anchor": "making-a-get-request"
                        }
                      },
                      {
                        "type": "text",
                        "data": "2. Create the payload by filling in the PAYLOAD:DATA on jwt.io"
                      },
                      {
                        "type": "code",
                        "data": "{\n    \"iss\": \"1234r5t6y7u8i9o0p\",\n    \"iat\": 1535393113,\n    \"jti\": \"20b7c03e-00da-4d29-91bf-2aa06a57575b\",\n    \"operation\": \"customer_login\",\n    \"store_hash\": \"{store_hash}\",\n    \"customer_id\": 2,\n    \"redirect_to\": \"/account.php\"\n}",
                        "header": {
                          "title": "Create the Payload",
                          "anchor": "create-the-paylpad"
                        }
                      },
                      {
                        "type": "image",
                        "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1535469059335",
                        "header": {
                          "anchor": "jwt-image",
                          "subtitle": "JTW.io fields"
                        },
                        "config": {
                          "centered": true,
                          "maxWidth": "800",
                          "maxHeight": "800"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "error",
                          "title": "IAT Claim",
                          "body": "The iat claim is only good for 30 seconds. "
                        },
                        "header": {
                          "anchor": "iat-claim"
                        }
                      },
                      {
                        "type": "text",
                        "data": "3.  Add your Client Secret in the Verify Signature Section. Replace the text `your-256-bit-secret` with the Client Secret.\n4. Copy the token from the encoded box and paste at the end of the login/token url.  \n\n*https://store-url/login/token/generated-jwt-token*\n\n**Example**: \nhttps://storedomain.com/login/token/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 .eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9 .TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n\n5. Paste the URL into the address bar.\n\nIf the request was successful then you will be logged in as the customer and directed to /account.php. If it was unsuccessful there will be a login attempt message and you will be directed to /login.php\n"
                      },
                      {
                        "type": "text",
                        "data": "## Sample Code\n\nCode to generate a valid JWT token for a storefront login request is provided in our API Client Libraries. The list items below link to the repositories maintained by BigCommerce:\n\n* [PHP Sample](https://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421)\n* [Python Sample](https://github.com/bigcommerce/bigcommerce-api-python/blob/master/bigcommerce/customer_login_token.py)\n* [Ruby Sample](https://github.com/bigcommerce/bigcommerce-api-ruby/blob/master/examples/customers/customer_login.rb)\n\nClient libraries in many other languages are at JWT.io.",
                        "header": {
                          "anchor": "sample-code"
                        }
                      },
                      {
                        "type": "tabs",
                        "data": {
                          "children": [
                            {
                              "title": "PHP Sample",
                              "blocks": [
                                {
                                  "type": "code",
                                  "data": "    public static function getCustomerLoginToken($id, $redirectUrl = '', $requestIp = '')\n    {\n        if (empty(self::$client_secret)) {\n            throw new Exception('Cannot sign customer login tokens without a client secret');\n        }\n\n        $payload = array(\n            'iss' => self::$client_id,\n            'iat' => time(),\n            'jti' => bin2hex(random_bytes(32)),\n            'operation' => 'customer_login',\n            'store_hash' => self::$store_hash,\n            'customer_id' => $id\n        );\n\n        if (!empty($redirectUrl)) {\n            $payload['redirect_to'] = $redirectUrl;\n        }\n\n        if (!empty($requestIp)) {\n            $payload['request_ip'] = $requestIp;\n        }\n\n        return JWT::encode($payload, self::$client_secret, 'HS256');\n    }",
                                  "header": {
                                    "subtitle": "https://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421",
                                    "title": "Client.php",
                                    "anchor": "php-sample"
                                  },
                                  "config": {
                                    "mode": "php"
                                  }
                                }
                              ]
                            },
                            {
                              "title": "Python Sample",
                              "blocks": [
                                {
                                  "type": "code",
                                  "data": "import os\nimport time\nimport uuid\nimport jwt\n\n\nclass CustomerLoginTokens(object):\n    @classmethod\n    def create(cls, client, id, redirect_url=None, request_ip=None):\n\n        # Get the client_secret needed to sign tokens from the environment\n        # Intended to play nice with the Python Hello World sample app\n        # https://github.com/bigcommerce/hello-world-app-python-flask\n        client_secret = os.getenv('APP_CLIENT_SECRET')\n\n        if not client_secret:\n            raise AttributeError('No OAuth client secret specified in the environment, '\n                                 'please specify an APP_CLIENT_SECRET')\n\n        try:\n            client_id = client.connection.client_id\n            store_hash = client.connection.store_hash\n        except AttributeError:\n            raise AttributeError('Store hash or client ID not found in the connection - '\n                                 'make sure an OAuth API connection is configured. Basic auth is not supported.')\n\n        payload = dict(iss=client_id,\n                       iat=int(time.time()),\n                       jti=uuid.uuid4().hex,\n                       operation='customer_login',\n                       store_hash=store_hash,\n                       customer_id=id\n                       )\n\n        if redirect_url:\n            payload['redirect_url'] = redirect_url\n\n        if request_ip:\n            payload['request_ip'] = request_ip\n\n        token = jwt.encode(payload, client_secret, algorithm='HS256')\n\n        return token.decode('utf-8')\n\n    @classmethod\n    def create_url(cls, client, id, redirect_url=None, request_ip=None):\n        secure_url = client.Store.all()['secure_url']\n        login_token = cls.create(client, id, redirect_url, request_ip)\n        return '%s/login/token/%s' % (secure_url, login_token)\n\n",
                                  "header": {
                                    "title": "customer_login_token.py",
                                    "subtitle": "https://github.com/bigcommerce/bigcommerce-api-python/blob/master/bigcommerce/customer_login_token.py",
                                    "anchor": "python-sample"
                                  },
                                  "config": {
                                    "mode": "python"
                                  }
                                }
                              ]
                            },
                            {
                              "title": "Ruby Sample",
                              "blocks": [
                                {
                                  "type": "code",
                                  "data": "require 'bigcommerce'\n\nBigcommerce.configure do |config|\n  config.store_hash = ENV['BC_STORE_HASH']\n  config.client_id = ENV['BC_CLIENT_ID']\n  config.client_secret = ENV['BC_CLIENT_SECRET']\n  config.access_token = ENV['BC_ACCESS_TOKEN']\nend\n\n# Get a customer\ncustomer = Bigcommerce::Customer.all(page: 1).first\n\n# Generate token login url\nputs customer.login_token",
                                  "header": {
                                    "subtitle": "https://github.com/bigcommerce/bigcommerce-api-ruby/blob/master/examples/customers/customer_login.rb",
                                    "title": "customer_login.rb",
                                    "anchor": "ruby-sample"
                                  },
                                  "config": {
                                    "mode": "ruby"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "header": {
                          "title": "JWT Token Sample Code",
                          "anchor": "token-samples"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Troubleshooting\n\n* If the server generating the iat is out of sync, the login token will fail if the timestamp indicates a time in the future or an expired token.\n\n* The login URL can be visited only once. Once a GET request is run against the link, the token is invalidated. \n\n* Tokens can be validated or generated for testing purposes using the debugger at https://jwt.io/.\n\n* Tokens will be valid for a very short timeframe after they are first generated, so tokens should not be generated in advance. Instead, the application should generate the token and then immediately redirect the user’s browser to `/login/token/{token}`. If you're seeing issues related to your system time differing from BC's server time, you can use the <a href=\"/api/v2/#get-a-timestamp\">/v2/time</a> endpoint as a source of truth.",
                        "header": {
                          "anchor": "troubleshooting-customer-login-api\""
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Current Customer API",
                  "route": {
                    "path": "/current-customer-api"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1> Current Customer API </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#Identifying-logged-in-customers\">Identifying Logged-In Customers Securely</a></li>\n    <li><a href=\"#logged-in-customers-javascript\">Example JavaScript</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## Identifying Logged-In Customers Securely\n\nIf your application interacts dynamically with the BigCommerce storefront, and conveys information that is specific to a particular logged-in customer, you must confirm that customer’s identity within the insecure environment of the user’s browser.\n\nTo address this need, BigCommerce provides a Current Customer endpoint, which your app can access via JavaScript on the storefront. This endpoint returns a JWT with identifying details about the customer. The information is signed with your [OAuth client secret](http://).",
                        "header": {
                          "anchor": "Identifying-logged-in-customers"
                        }
                      },
                      {
                        "type": "text",
                        "data": "## Example JavaScript\n\nBelow is example JavaScript that will access this JWT. To test the JWT functionality, you can install this JavaScript on your sandbox BigCommerce store. Your application’s Client ID must be included in the request (to identify the requesting application):",
                        "header": {
                          "anchor": "logged-in-customers-javascript"
                        }
                      },
                      {
                        "type": "code",
                        "data": "<script type=\"text/javascript\">\nfunction customerJWT() {  \n    var appClientId = \"**BC_CLIENT_ID**\"; // TODO: Fill this in with your app's client ID\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState == 4 ) {\n           if (xmlhttp.status == 200) {\n               alert('Customer JWT:\\n' + xmlhttp.responseText);\n           }\n           else if (xmlhttp.status == 404) {\n              alert('Not logged in!');\n           }\n           else {\n               alert('Something went wrong');\n           }\n        }\n    };\n    xmlhttp.open(\"GET\", \"/customer/current.jwt?app_client_id=\"+appClientId, true);\n    xmlhttp.send();\n}\ncustomerJWT();\n</script>\n",
                        "header": {
                          "title": "Identify Logged In Customers",
                          "anchor": "identify-customers-script"
                        },
                        "config": {
                          "mode": "html"
                        }
                      },
                      {
                        "type": "text",
                        "data": "If you are logged into the storefront with a customer account, the above JavaScript should alert to the browser with a JWT token. If no customer is logged in, BigCommerce will return a 404 response, and you will see an error message. The JWT returned from this endpoint (example below) can be decoded on JWT.IO"
                      },
                      {
                        "type": "code",
                        "data": "{\n  \"customer\": {\n    \"id\": 4927,\n    \"email\": \"john.doe@gmail.com\",\n    \"group_id\": \"6\"\n  },\n  \"iss\": \"bc/apps\",\n  \"sub\": \"abc123\",\n  \"iat\": 1480831863,\n  \"exp\": 1480832763,\n  \"version\": 1,\n  \"aud\": \"6sv16tfx3j5gsopm42ss5dd67g2srvq\",\n  \"application_id\": \"6sv16tasdgr2b5hs5dd67g2srvq\",\n  \"store_hash\": \"abc123\",\n  \"operation\": \"current_customer\"\n}",
                        "header": {
                          "title": "Logged in Customers Response",
                          "anchor": "logged-in-customer-response"
                        },
                        "config": {
                          "mode": "json"
                        }
                      },
                      {
                        "type": "text",
                        "data": "By design, your application should send this token to the application’s server, validate it against your client secret, and then use it as a trusted indication of the logged-in customer’s identity, before displaying confidential information to them. \n\nAn end-to-end example, which displays a customer’s recently purchased products, is available in our [Ruby](https://github.com/bigcommerce/hello-world-app-ruby-sinatra/) and [PHP](https://github.com/bigcommerce/hello-world-app-php-silex/) sample apps."
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Cart and Checkout",
            "route": {
              "path": "/cart-and-checkout"
            },
            "data": {
              "children": [
                {
                  "title": "Overview",
                  "route": {
                    "path": "/cart-and-checkout-overview"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Cart and Checkout</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#storefront-cart-and-checkout\">Storefront Cart and Checkout</a></li>\n        <li><a href=\"#server-to-server-cart-and-checkout\">Server to Server Cart and Checkout</a></li>\n        <li><a href=\"#oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#available-webhooks\">Webhooks Available</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## Storefront Cart and Checkout\n\nThe Storefront API's are for managing the contents of managing a shopper's cart using JavaScript in the context of a storefront session. \n\n### When to Use the Storefront API's\n\n* Analytics and Tracking\n* Displaying data (see Fetch below)\n* Needing to run a quick API call\n* Quick Order Form\n\n### Using the Fetch API\nThe [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) is an alternative to [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest). It uses less code and works well with CORS. You can use the Fetch API to interact with the Storefront API's and return a shoppers cart, checkout or order. If you are using Internet Explorer, the Fetch API will not work. It is recommended to use [Polyfill](https://github.com/github/fetch) for Internet Explorer 10+ and XMLHttpRequest for earlier versions.\n\nHere we use `credentials: 'include'` to send them even when doing a cross origin request.\nYou can also use the [Scripts API](http://) to add them to a store in the footer section."
                      },
                      {
                        "type": "code",
                        "data": "<script>\nconsole.log('Log Cart');\nfetch('/api/storefront/cart', {\n  credentials: 'include'\n}).then(function(response) {\n  return response.json();\n}).then(function(myJson) {\n  console.log(myJson);\n});\n</script>",
                        "header": {
                          "title": "Log Cart Details to the Console"
                        },
                        "config": {
                          "mode": "html"
                        }
                      },
                      {
                        "type": "code",
                        "data": "<script>\nconsole.log('Log Checkout');\nfetch('/api/storefront/cart?includes=consignments.availableShippingOptions', {\n        credentials: 'include'\n      })\n      .then(function(response) {\n        return response.json();\n      }).then(function(cartJson) {\n        console.log(cartJson);\n        return cartJson[0].id;\n      }).catch(function(error) {\n        console.log(error);\n      }).then(function(cartId) {\n        fetch('/api/storefront/checkouts/' + cartId, {\n          credentials: 'include'\n        }).then(function(response) {\n          return response.json();\n        }).then(function(checkoutJson) {\n          console.log(checkoutJson);\n        }).catch(function(error) {\n          console.log(error);\n        })\n      });\n\n</script>",
                        "header": {
                          "title": "Log Checkout Details to the Console"
                        },
                        "config": {
                          "mode": "html"
                        }
                      },
                      {
                        "type": "code",
                        "data": "<script>\nconsole.log(\"Log Order\");\nfetch('/api/storefront/order/{{checkout.order.id}}', {credentials: 'include'})\n.then(function(response) {\nreturn response.json();\n})\n.then(function(myJson) {\nconsole.log(myJson);\n});\n</script>",
                        "header": {
                          "title": "Log Order Details to the Console"
                        },
                        "config": {
                          "mode": "html"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "body": "If the script is not rendering on the Stencil theme, footer scripts may need to be enabled. More on [footer and header scripts](https://stencil.bigcommerce.com/docs/checkoutconfirmation-injection-options-clone) in Stencil. "
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Server to Server Cart and Checkout\n\nThe Server to Server API's are for managing the contents of shopping cart and checkout via OAuth. Using the Cart, Checkout and Payment API this allows for a fully headless ecommerce solution.\n\n### CaaS\n\nCommerce-as-a-Service is possible with the Server to Server API's. It allows for the underlying cart, checkout, order and payment API's be called in a seperate app. This mean using any framework you can make API calls to lead a shopper through a custom experience without having to use the BigCommerce front-end checkout.\n\n## When to Use\n* Modying cart contents such as price matching\n* Taking a shopper through cart and checkout using an app\n* Quote Builder - Building a cart then restoring it on the storefront\n* Building custom apps\n* Pre-filling customer information"
                      },
                      {
                        "type": "text",
                        "data": "## Available Webhooks\n* Orders\n* SKU\n* Cart"
                      },
                      {
                        "type": "text",
                        "data": "## OAuth Scopes\n* Carts\n* Checkouts\n* Products\n* Checkout Content\n* Order Transactions"
                      }
                    ]
                  }
                },
                {
                  "title": "Fetch API with Storefront",
                  "route": {
                    "path": "/using-sf-cart-checkout"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "text",
                        "data": "This will detail using the Fetch JavaScript API to manage storefront carts and checkout. "
                      },
                      {
                        "type": "text",
                        "data": "## Prerequistes\n* BigCommerce Store\n* Browser - not fetch does not work with some versions of Internet Explorer. "
                      }
                    ]
                  },
                  "config": {
                    "sidebar": {
                      "token": "GUIDE"
                    }
                  }
                },
                {
                  "title": "Checkout SDK",
                  "route": {
                    "path": "/checkout-sdk"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1> Checkout SDK </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#what-can-i-do\"> What Can I Do with the SDK?</a></li>\n\t\t<li><a href=\"#where-to-get\">Where Can I Get the SDK?\n</a></li>\n    <li><a href=\"#support-customization\">Support and Customization\n</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "The Checkout JS SDK is a wrapper for the BigCommerce Storefront Checkout API.\n\nIt allows for a developer to create a custom checkout experience to move a customer through the checkout process.\nThe SDK handles all the ‘heavy-lifting’ such as customer login, getting shipping quotes and submitting payment for an order.\nWith the Checkout JS SDK, you can build a [custom checkout presentation](https://github.com/bigcommerce/checkout-sdk-js-example) layer in popular frontend frameworks such as React."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## What Can I Do with the SDK?\n\n-   It can initialize payment and shipping providers that require client-side setup through a common interface. Below are some examples of these providers:\n    \n    -   PayPal Express\n    -   Braintree\n    -   Stripe \n    -   Square\n    -   Amazon\n    -   Klarna\n  \n-   It provides a JavaScript interface for interacting with the web API.\n    -   Fetch and submit resources:\n        -   Cart\n        -   Order\n        -   Customer\n    -   Fetch available options:\n        -   Shipping addresses\n        -   Shipping countries\n        -   Shipping states\n        -   Billing addresses\n        -   Billing countries\n        -   Billing states\n        -   Shipping methods\n        -   Payment methods\n \nThe Checkout JS SDK allows you to present the checkout process to the shopper in any way you like, and, through frontend technologies and external web services, augment the checkout with extra information. \n\nHowever, the Checkout JS SDK does not allow you to change the underpinnings of the checkout - you must still conform to the model of the Checkout API underpinning the SDK to complete a Checkout and create an Order in BigCommerce. \nThe SDK does not allow you to implement custom payment, shipping, or tax calculation providers into the checkout - instead, the configured providers for these services on a given store are expressed via our Checkout API.",
                        "header": {
                          "anchor": "what-can-i-do"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Where Can I Get the SDK?\nThe Checkout JS SDK and associated documentation is available from the [BigCommerce SDK Repo.]( https://github.com/bigcommerce/checkout-sdk-js)",
                        "header": {
                          "anchor": "where-to-get"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Support and Customization\n- Enterprise clients can reach out to their account manager to review services and resources available.\n- For more on our design policy please visit [Design Support](https://forum.bigcommerce.com/s/article/BigCommerce-Design-Policy#support).",
                        "header": {
                          "anchor": "support-customization"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Add to Cart URL's",
                  "route": {
                    "path": "/add-to-cart-url"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Add to Cart URL's</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#select-specific-sku\">Select Specific SKU (Product/Variant) on Product Detail Page</a></li>\n        <li><a href=\"#add-specific-sku-cart\">Add Specific SKU to Cart</a></li>\n        <li><a href=\"#add-sku-checkout-go-to-cart\">Add Specific SKU to Cart and Go Directly to Checkout</a></li>\n    \t<li><a href=\"#add-specific-sku-checkout-source\">Add Specific SKU, Go to Checkout, and Include Source</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "Your apps can use a product's or variant's <a href=\"https://support.bigcommerce.com/articles/Public/Product-SKUs\" target=\"_blank\">SKU</a> to create custom product URLs in order to perform specific actions, like:\n\n* Pre-select a specific SKU’s product-option values when loading a product detail page.\n* Add a specific SKU to the cart.\n* Add a specific SKU to the cart and go directly to checkout.\n* Add a specific SKU to the cart, go directly to checkout, and include a source parameter for analytics and conversion tracking."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "callout",
                        "data": {
                          "title": "Limitation: One Item per URL",
                          "body": "Each of the custom links described here can add only a single item (quantity 1) to the cart at a time."
                        }
                      },
                      {
                        "type": "text",
                        "data": "## Select Specific SKU (Product/Variant) on Product Detail Page\n\nTo link to a specific product variant, append `?sku=INSERT-SKU-HERE` to the product URL, as shown below. This will link to the product page, with the variant's options already selected.\n\n### Structure:\n`site.com/sample-test-product-w-options/?sku=INSERT-SKU-HERE`\n\n\n### Example:\n`myawesomestore.com/shirt/?sku=SHIRT-SM-RED`",
                        "header": {
                          "anchor": "select-specific-sku"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Add Specific SKU to Cart\n\nTo automatically add a product or variant to a shopper's cart and take them directly to the cart page, append   \n`/cart.php?action=add&sku=INSERT-SKU-HERE` to the store's domain.\n\n### Structure:\n`/site.com/cart.php?action=add&sku=INSERT-SKU-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=add&sku=SHIRT-SM-RED`",
                        "header": {
                          "anchor": "add-specific-sku-cart"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Add Specific SKU to Cart and Go Directly to Checkout\nTo automatically add a product or variant to a shopper's cart and forward them directly to checkout, append   \n`/cart.php?action=buy&sku=INSERT-SKU-HERE` to the store's domain.\n\n### Structure:\n`/site.com/cart.php?action=buy&sku=INSERT-SKU-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED`",
                        "header": {
                          "anchor": "add-sku-checkout-go-to-cart"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Add Specific SKU, Go to Checkout, and Include Source\n\nTo automatically add a product or variant to a shopper's cart, forward them to checkout, and also include a source parameter for analytics/conversion tracking, append `cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE` to the store's domain. (The&#160;source parameter can be any string.)\n\n### Structure:\n`site.com/cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED&source=JULY-EMAIL-NEWSLETTER`",
                        "header": {
                          "anchor": "add-specific-sku-checkout-source"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Orders",
            "route": {
              "path": "/orders"
            },
            "data": {
              "children": [
                {
                  "title": "Overview",
                  "route": {
                    "path": "/orders-overview"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Orders</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#orders-sf-orders-api\">Storefront Orders API</a></li>\n        <li><a href=\"#orders-server-server-checkout\">Server to Server Checkout Orders</a></li>\n        <li><a href=\"#orders-v2-orders\">V2 Orders API</a></li>\n        <li><a href=\"#orders-oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#orders=available-webhooks\">Webhooks Available</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "What is an Order?\n"
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "##  Storefront Orders API \nCan be used to return order information right away to the customer, for example, the confirmation screen or scrape the data for analytics later. You can interact with it either using an app or a browser API. \n\nUse the Fetch API to log orders to the console. See [Storefront Orders API](http://) for more.",
                        "header": {
                          "anchor": "orders-sf-orders-api"
                        }
                      },
                      {
                        "type": "code",
                        "data": "<script>\nconsole.log(\"Log Orders\")\nfetch('/api/storefront/order/{{checkout.order.id}}', {credentials: 'include'})\n.then(function(response) {\nreturn response.json();\n})\n.then(function(myJson) {\nconsole.log(myJson);\n});\n</script>",
                        "header": {
                          "title": "Log Orders to Console"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Server to Server Checkout Orders\n\nThis API will allow you to take a checkout made using a call to the server and then convert that to an order. From there the order can be managed by either working in the Control Panel or using the V2 Orders API. [See Server to Server Checkout](http://) for more.",
                        "header": {
                          "anchor": "orders-server-server-checkout"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "\n## V2 Orders API\nThis API can be used to create an order from scratch. It allows you to manage an orders billing address, products, coupons, and taxes. See [V2 Orders API](http://) for more.",
                        "header": {
                          "anchor": "orders-v2-orders"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Order Scenarios\n\nThese just provide a quick overview of the steps. For more details see each endpoint.\n\n1. [Create](/api-docs/api-reference/v2-api/v2-orders/orders/postorders) an Order\n\t2. Existing store products and new store products can be added.\n\t3. Billing Address is required.\n\t4. Shipping Address. This is an optional step and this can also be added using [Update Order](/api-docs/api-reference/v2-api/v2-orders/orders/putordersid).\n\n2. Edit Order Products\n\t3. Currently there is not a way to edit order products using the api. Product can be added using [Update Order](/api-docs/api-reference/v2-api/v2-orders/orders/putordersid).\n4. Edit Order Shipping Addresses\n\t5. There is not a way to edit order shipping addresses using the api."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## OAuth Scopes\n- Orders\n- Carts\n- Checkouts",
                        "header": {
                          "anchor": "orders-oauth-scopes"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Webhooks Available\n- Orders\n- Cart",
                        "header": {
                          "anchor": "orders-webhooks-available"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "Shipping",
            "route": {
              "path": "/shipping"
            },
            "data": {
              "children": [
                {
                  "title": "Overview",
                  "route": {
                    "path": "/shipping-overview"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Shipping</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#what-is-a-shipment\">What is a Shipment?</a></li>\n        <li><a href=\"#storefront-server-checkout\">Storefront Checkout and Server to Server Checkout</a></li>\n        <li><a href=\"#order-shipping-addresses\">Order Shipping Addresses</a></li>\n        <li><a href=\"#shipping-zone-methods\">Shipping Zone and Shipping Methods</a></li>\n        <li><a href=\"#real-time-carriers\">Real-Time Carriers</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "## What is a Shipment?\nA shipment is a grouping of physical items sent out to one or more customers. A shipment can only be created for an order.\n\nV2 Shipping API allows for setting up Shipping Zones, Shipping Methods, and Shipping Carrier Connections.\n\nOrder Shipments allows for a shipment to created for an order. The shipping provider, tracking number and shipping address id create a shipment.\n\nFor more see:\n* [Create a Shipment](/api-docs/api-reference/v2-api/v2-orders/order-shipments/postordersorderidshipments)",
                        "header": {
                          "anchor": "what-is-a-shipment"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Storefront Checkout and Server to Server Checkout\n\nA shipment cannot be created from these endpoints. A Consignment can be created during the Checkout portion. A Consignment supports multiple shipping addresses, with each address having its own line items. A Checkout will always have one Consignment assigned to it, which is the first shipping address.\n\nFor more see:\n* [Storefront Checkout](/api-docs/api-reference/cart-and-checkout-api-reference/storefront-checkout/checkout/checkoutsconsignmentsbycheckoutidpost)\n* [Server to Server Checkout](/api-docs/api-reference/cart-and-checkout-api-reference/server-server-checkout/checkout/checkoutsconsignmentsbycheckoutidpost)",
                        "header": {
                          "anchor": "storefront-server-checkout"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Order Shipping Addresses\n\nThis endpoint is for view shipping addresses on an order. This will be the address the items are shipped to.  An order can have more than one shipping address.\n\nFor more see:\n* [Order Shipping Addresses](/api-docs/api-reference/v2-api/v2-orders/order-shipping-addresses/getordersorderidshippingaddressesid)",
                        "header": {
                          "anchor": "order-shipping-addresses"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Shipping Zone and Shipping Methods\n\nA shipping zone is where the item is being shipped to. A shipping method is how way an item arrives such as USPS or FedEx. They can be set up using the API.\n\nFor more see:\n* [Shipping Zones](/api-docs/api-reference/v2-api/v2-shipping/shipping-zones/postshippingzones)\n* [Shipping Methods](/api-docs/api-reference/v2-api/v2-shipping/shipping-method/postshippingzoneszoneidmethods)",
                        "header": {
                          "anchor": "shipping-zone-methods"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Real-Time Carriers\n\nBigCommerce offers native integrations with many real-time carriers. These can be set up and configured via API. \n\nFor more see:\n* [Set Up Real-Time Carrier](/api-docs/api-reference/v2-api/v2-shipping/shipping-carrier/postshippingcarrierconnection)\n* [Configure Real-Time Carrier](/api-docs/api-reference/v2-api/v2-shipping/shipping-method/postshippingzoneszoneidmethods)",
                        "header": {
                          "anchor": "real-time-carriers"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Shipper HQ",
                  "route": {
                    "path": "/shipper-hq"
                  },
                  "data": {
                    "blocks": [
                      {
                        "type": "html",
                        "data": "<h1>Shipper HQ Metafields</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#shipper-hq-object-properties\">ShipperHQ Object Properties</a></li>\n        <li><a href=\"#control-panel-behavior\">Control Panel Behavior</a></li>\n        <li><a href=\"#add-shipperhq-metafield\">Add ShipperHQ Metafield</a></li>\n\t</ul>\n</div>"
                      },
                      {
                        "type": "text",
                        "data": "When ShipperHQ is enabled on a store, there are additional fields that become available on the product level.\nShipping Origins, Origin Locations, and Dimensional Rules are accessible. These can be set in the Control Panel by the merchant as well as using the\n[Product Metafields Endpoint](/api-docs/api-reference/v3-api/catalog-api/product-metafields/createproductmetafield) or the [Variant Metafields Endpoint](/api-docs/api-reference/v3-api/catalog-api/product-variants-metafields/createvariantmetafield)."
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## ShipperHQ Object Properties\n\n| Property | Type | Values |\n|---|---|---|\n| permission_set | string | This must be set to `write`. Setting to any other field will cause unintended behavior. **required** |\n| key | enum | Members: `shipping-groups`, `shipping-origins`, `shipping-dimensional-rules` **required** |\n| value | JSON encoded string | This will be the name of the attribute type in ShipperHQ. This needs to be input exactly how it is listed within ShipperHQ. To pass in more than one Shipping Origin, Origin Location or Dimensional Rule use an array with a comma-separated list. White spaces and special characters need to be escaped. Must be a JSON encoded string `\"[\\\"Origin Name from SHQ-1\\\",\\\" Origin Name from SHQ-2\\\"]\"` **required** |\n| namespace | string | This will always be `shipping.shipperhq` **required** |\n| resource_type | string | Either `product` or `variant` |\n| resource_id | string | Id of the product or variant **read-only** |\n| description | string | ShipperHQ shipping origins associated with this product/sku. **read-only** |\n| date_created | string | Date and time of the metafield's creation. **read-only** |\n| date_modified | string | Date and time when the metafield was last updated. **read-only** |\n| id | number | Id of the Metafield. **read-only** |",
                        "header": {
                          "anchor": "shipper-hq-object-properties"
                        }
                      },
                      {
                        "type": "callout",
                        "data": {
                          "type": "warning",
                          "body": "The metafields must be entered exactly otherwise they will not work. Since the metafield can also be used to store information against a product, if the <code>namespace</code> for example is set to shipping and not <code>shipping.shipperhq</code>, it will not update the shipping information."
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Control Panel Behavior\n\nWhen Shipping Origins are set using the API, the fields cannot be deleted using the Control Panel. A /DELETE request must be sent to the metafields resource.\n\n`/DELETE https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields`\n",
                        "header": {
                          "anchor": "control-panel-behavior"
                        }
                      },
                      {
                        "type": "text",
                        "data": "---"
                      },
                      {
                        "type": "text",
                        "data": "## Add ShipperHQ Metafield\n\n`/POST https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields`",
                        "header": {
                          "anchor": "add-shipperhq-metafield"
                        }
                      },
                      {
                        "type": "code",
                        "data": "{\n\t\"permission_set\": \"write\",\n\t\"key\": \"shipping-origins\",\n\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\"namespace\": \"shipping.shipperhq\"\n}",
                        "header": {
                          "title": "SHQ Add Metafield Request"
                        }
                      },
                      {
                        "type": "code",
                        "data": "{\n\t\"data\": [{\n\t\t\t\"id\": 51,\n\t\t\t\"key\": \"shipping-origins\",\n\t\t\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping origins associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-19T17:56:08+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 52,\n\t\t\t\"key\": \"shipping-groups\",\n\t\t\t\"value\": \"[\\\"SHIPPING GROUP NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping group rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 53,\n\t\t\t\"key\": \"shipping-dimensional-rules\",\n\t\t\t\"value\": \"[\\\"DIMENSIONAL RULES NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ dimensional rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"pagination\": {\n\t\t\t\"total\": 3,\n\t\t\t\"count\": 3,\n\t\t\t\"per_page\": 50,\n\t\t\t\"current_page\": 1,\n\t\t\t\"total_pages\": 1,\n\t\t\t\"links\": {\n\t\t\t\t\"current\": \"?page=1&limit=50\"\n\t\t\t}\n\t\t}\n\t}\n}",
                        "header": {
                          "title": "SHQ Add Metafield Response"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "title": "API Reference",
            "route": {
              "path": "/api-reference"
            },
            "data": {
              "children": [
                {
                  "title": "Catalog",
                  "route": {
                    "path": "/catalog-api"
                  },
                  "data": {
                    "$ref": "./V3 Catalog.oas2.yml"
                  }
                },
                {
                  "title": "Store",
                  "route": {
                    "path": "/store-api"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Store Infomation",
                        "route": {
                          "path": "/v2-store"
                        },
                        "data": {
                          "$ref": "./V2 Store.oas2.yml"
                        }
                      },
                      {
                        "title": " Currency",
                        "route": {
                          "path": "/v2-currency"
                        },
                        "data": {
                          "$ref": "./V2 Currency.oas2.yml"
                        }
                      },
                      {
                        "title": "Geography",
                        "route": {
                          "path": "/v2-geography"
                        },
                        "data": {
                          "$ref": "./V2 Geography.oas2.yml"
                        }
                      },
                      {
                        "title": "Tax Class",
                        "route": {
                          "path": "/v2-tax-classes"
                        },
                        "data": {
                          "$ref": "./V2 Tax.oas2.yml"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Cart & Checkout",
                  "route": {
                    "path": "/cart-checkout-api"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Storefront Cart",
                        "route": {
                          "path": "/storefront-cart"
                        },
                        "data": {
                          "$ref": "./Storefront Cart API.oas2.yml"
                        }
                      },
                      {
                        "title": "Storefront Checkout",
                        "route": {
                          "path": "/storefront-checkout"
                        },
                        "data": {
                          "$ref": "./Storefront Checkout API.oas2.yml"
                        }
                      },
                      {
                        "title": "Server to Server Cart",
                        "route": {
                          "path": "/server-server-cart"
                        },
                        "data": {
                          "$ref": "./Server to Server Cart.oas2.yml"
                        }
                      },
                      {
                        "title": "Server to Server Checkout",
                        "route": {
                          "path": "/server-server-checkout"
                        },
                        "data": {
                          "$ref": "./Server to Server Checkout.oas2.yml"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Orders",
                  "route": {
                    "path": "/orders"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Orders",
                        "route": {
                          "path": "/v2-orders"
                        },
                        "data": {
                          "$ref": "./V2 Orders.oas2.yml"
                        }
                      },
                      {
                        "title": "Order Transactions",
                        "route": {
                          "path": "/orders-transactions-api"
                        },
                        "data": {
                          "$ref": "./V3 Orders.oas2.yml"
                        }
                      },
                      {
                        "title": "Storefront Orders",
                        "route": {
                          "path": "/storefront-orders"
                        },
                        "data": {
                          "$ref": "./Storefront Orders.oas2.yml"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Customers & Subscribers",
                  "route": {
                    "path": "/customer-subscribers"
                  },
                  "data": {
                    "children": [
                      {
                        "title": "Customers",
                        "route": {
                          "path": "/v2-customers"
                        },
                        "data": {
                          "$ref": "./V2 Customers.oas2.yml"
                        }
                      },
                      {
                        "title": "Subscribers",
                        "route": {
                          "path": "/customers-api"
                        },
                        "data": {
                          "$ref": "./V3 Subscribers.oas2.yml"
                        }
                      }
                    ]
                  }
                },
                {
                  "title": "Price Lists",
                  "route": {
                    "path": "/pricelists-api"
                  },
                  "data": {
                    "$ref": "./V3 Price Lists.oas2.yml"
                  }
                },
                {
                  "title": "Scripts",
                  "route": {
                    "path": "/content-api"
                  },
                  "data": {
                    "$ref": "./V3 Content.oas2.yml"
                  }
                },
                {
                  "title": "Marketing",
                  "route": {
                    "path": "/v2-marketing"
                  },
                  "data": {
                    "$ref": "./V2 Marketing.oas2.yml"
                  }
                },
                {
                  "title": "Payment Methods",
                  "route": {
                    "path": "/v2-payment-methods"
                  },
                  "data": {
                    "$ref": "./V2 Payment Methods.oas2.yml"
                  }
                },
                {
                  "title": "Shipping",
                  "route": {
                    "path": "/v2-shipping"
                  },
                  "data": {
                    "$ref": "./V2 Shipping.oas2.yml"
                  }
                },
                {
                  "title": "Store Content",
                  "route": {
                    "path": "/v2-store-content"
                  },
                  "data": {
                    "$ref": "./V2 Store Content.oas2.yml"
                  }
                },
                {
                  "title": "Themes",
                  "route": {
                    "path": "/themes-api"
                  },
                  "data": {
                    "$ref": "./V3 Themes.oas2.yml"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "/changelog": {
      "title": "Changelog",
      "data": {
        "$ref": "./Changelog.html"
      }
    },
    "/tools-resources": {
      "title": "Tools & Resources",
      "data": {
        "$ref": "./Tools & Resources.html"
      }
    }
  },
  "theme": {
    "background": "#3550b6",
    "primary": "#4b71fc",
    "secondary": "#2553fb"
  },
  "logo": "https://cdn6.bigcommerce.com/s-qtmbtj/product_images/uploaded_images/bigcommerce-logomark-darkbg.png",
  "meta": {
    "title": "BigCommerce Dev Center - Theme Development & API Documentation",
    "favicon": "https://www.bigcommerce.com/assets/images/favicons/favicon-96x96.png",
    "description": "Build apps and themes for thousands of successful merchants on our growing ecommerce platform."
  }
}