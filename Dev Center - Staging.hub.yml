title: Dev Center
header:
  nav:
    left:
      - title: API Docs
        path: /api-docs
      - title: API Reference
        path: /api-reference
      - title: Theme Docs
        path: /stencil-docs
      - title: Resources
        path: /tools-resources
      - title: Changelog
        path: /changelog
    right:
      - title: My Apps
        path: 'https://devtools.bigcommerce.com'
      - title: Create Account
        path: 'https://login.bigcommerce.com/signup'
pages:
  /:
    title: Developer Documentation
    data:
      $ref: ./Home.html
  /api-docs:
    title: API Docs
    data:
      blocks:
        - type: html
          data: |-
            <div class="docs-landing bg-bclightblue">
              <div class="cBrLandingTiles">
                <div class="ui-widget">
                  <div>
                    <div style="padding: 62px 0px 0px;">
                      <div>
                        <h1 class="h1 panel-title__text-dark">API Documentation</h1>
                      </div>
                    </div>
                  </div>
                </div>
              </div><!-- landing tiles -->
              <div class="cBrLandingTiles" style="margin-bottom: 5%;">
                <div data-region-name="landingTiles">
                  <div class="ui-widget">
                    <div class="lift-content">
                      <div>
                        <div>
                          <div class="row row--pad">
                            <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Getting-Started.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/api-docs/catalog/products/products-overview">Getting Started</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                            <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Webhooks.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/api-docs/api-reference">Webhooks</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                            <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Orders-API.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/api-docs/getting-started/webhooks/about-webhooks">Orders API</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                            <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Storefront-API.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/stencil-docs">Storefront APIs</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                            <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Catelog-API.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/stencil-docs">Catalog & Products</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                            <div class="column-md-12 column-lg-6 column--pad">
                              <div class="panel-media doc-landing">
                                <div class="panel-media__wrap-icon">
                                  <div class="panel-media__icon">
                                    <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Marketplace.svg">
                                  </div>
                                </div>
                                <div class="panel-media__wrap-content">
                                  <h4 class="h4 panel-media__title"><a href="/stencil-docs">View the App Marketplace</a></h4>
                                  <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
      children:
        - title: Getting Started
          route:
            path: /getting-started
          data:
            children:
              - title: Basics
                route:
                  path: /basics
                data:
                  children:
                    - title: About Our API
                      route:
                        path: /about-our-api
                      data:
                        blocks:
                          - type: html
                            data: "<h1>About Our API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#about-api__available-api\">Available APIs</a></li>\n        <li><a href=\"#about-api_get-help\">Support</a></li>\n        <li><a href=\"#about-api_definitions\">Definitions</a></li>\n    \t\t<li><a href=\"https://www.bigcommerce.com/terms/api-terms/\">Terms of Service</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              Want to get started making API Requests right
                              away? Check out the
                              [QuickStart](/api-docs/getting-started/about-api/making-requests).



                              The BigCommerce set of API's allow you to create
                              apps, automate store processes or build headless
                              ecommerce solutions. Need inspiration on what to
                              build? Visit our [apps
                              marketplace](https://www.bigcommerce.com/apps/). 
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Available API's



                              |API | Description |

                              |--|--|

                              | [Catalog](/api-reference/catelog/catalog-api) |
                              The Catalog API manages products, brands and
                              categories for a store. |

                              | [Store
                              Infomation](/api-reference/store/store-information-api)
                              | Get system time stamp and store metadata|

                              | [Currency](/api-reference/store/currency-api) |
                              Manage currency displayed on the storefront |

                              | [Geography](/api-reference/store/geography-api)
                              | Get a list of states and countries  |

                              | [Tax
                              Class](/api-reference/store/tax-classes-api) | Get
                              available tax classes on a store |

                              | [Storefront
                              Cart](/api-reference/cart-checkout/storefront-cart-api)
                              | Create a cart or scrape cart data from the front
                              end |

                              | [Storefront
                              Checkout](/api-reference/cart-checkout/storefront-checkout-api)
                              | Create a checkout or scrape checkout data from
                              the front end |

                              | [Server to Server
                              Cart](/api-reference/cart-checkout/server-server-cart-api)
                              | Create a cart and bypass the BigCommerce front
                              end |

                              | [Server to Server
                              Checkout](/api-reference/cart-checkout/server-server-checkout-api)
                              | Create a checkout and bypass the BigCommerce
                              front end|

                              | [Orders](/api-reference/orders/orders-api) |
                              Create and manage orders |

                              | [Order
                              Transactions](/api-reference/orders/orders-transactions-api)
                              | View order payment information |

                              | [Storefront
                              Orders](/api-reference/orders/storefront-orders-api)
                              | View storefront order information |

                              |
                              [Customers](/api-reference/customer-subscribers/customers-api)
                              | Manage store customers  |

                              |
                              [Subscribers](/api-reference/customer-subscribers/subscribers-api)
                              | Manage newsletter subscribers |

                              | [Price
                              Lists](/api-reference/price-lists/pricelists-api)
                              | Create variations of catalog pricing. |

                              |
                              [Scripts](/api-reference/content/content-scripts-api)
                              | Add a script to a stores page |

                              |
                              [Marketing](/api-reference/marketing/marketing-api)
                              | Allow for promotions to be created. Includes
                              Coupons, Banners and Gift Certificates. |

                              | [Payment
                              Methods](/api-reference/payments/payment-methods-api)
                              | Get a list of available payment methods. |

                              | [Shipping](/api-reference/shipping/shipping-api)
                              | Create and manage shipping methods and zones. |

                              | [Store
                              Content](/api-reference/content/store-content-api)
                              | Mange the store's blog, web pages and redirects.
                              |

                              | [Themes](/api-reference/themes/themes-api) |
                              Manage store's themes. |
                            header:
                              anchor: about-api__available-api
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Support


                              ### [Developer
                              Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers)

                              This is a great place to get help from other
                              developers who work on the BigCommerce platform.
                              If you have BigCommerce specific questions this is
                              the best place to ask. It's also great for
                              beginners to get assistance. 


                              ###
                              [StackOverflow](https://stackoverflow.com/questions/tagged/bigcommerce)

                              Are you a more experienced developer or have a
                              programming language specific language? This is a
                              good place to ask questions and get help. The
                              developer community is the best place to get
                              answers about the BigCommerce platform
                              specifically.  
                            header:
                              anchor: about-api_get-help
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Definitions


                              There are a few BigCommerce specific definitions
                              to know when reading the documentation. 


                              * **PDP**: [Product Detail
                              Page.](https://www.quora.com/What-is-PLP-and-PDP)
                              It displays the specifics of a product.

                              * **PLP**: [Product Listing
                              Page.](https://www.quora.com/What-is-PLP-and-PDP)
                              It displays a list of products.

                              * **x-nullable**: Field can accept a null value.

                              * **x-url**: A check to make sure the string
                              format is a url.

                              * **x-required**: For API requests. Required on
                              /POST only.

                              * **Merchant**: Anyone selling products on
                              BigCommerce.

                              * **Shopper**: Anyone browsing or purchasing on a
                              store.
                            header:
                              anchor: about-api_definitions
                    - title: Quick Start
                      route:
                        path: /making-requests
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Quick Start</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#making-requests_prerequisites\">Overview<a/></li>\n        <li><a href=\"#making-requests_get-products\">Getting a List of Products</a></li>\n        <li><a href=\"#making-requests_create-a-product\">Creating a Product</a></li>\n        <li><a href=\"#making-requests_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Overview


                              This Quick Start guide will take you through the
                              minimum required steps to begin making API
                              requests. By the end of this guide, you’ll be able
                              to retrieve a store’s product catalog, create a
                              new product, and troubleshoot common errors.


                              Before we begin, here are a few key concepts:

                              * API requests are always made against a single
                              store’s data, and API tokens are issued on a
                              per-store basis. The first step to using the
                              BigCommerce API is creating a BigCommerce store.

                              * API Credentials can be generated from a store’s
                              control panel. If you’re testing requests or
                              writing a script for a single store, start here to
                              quickly get your token and begin making API
                              calls. 

                              * If you’re building an app that will install in a
                              store’s control panel, you’ll need to generate an
                              API token programmatically during the [app
                              installation
                              process](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_installation-update-sequence).
                              However in the beginning, it’s still a good idea
                              to generate API credentials from the control panel
                              to start testing requests with minimal effort.



                              ### Prerequisites

                              * [API
                              Credentials](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials)

                              *
                              [Scope](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)
                              set to `Products Modify`

                              * BigCommerce Store (`store_hash`)


                              *Note: You can use any API client (like Postman)
                              for this walkthrough, but these steps are written
                              with the built-in HTTP request maker in mind.*
                            header:
                              anchor: making-requests_prerequisites
                          - type: text
                            data: "## Getting a List of Products\n\nIn this walkthrough, we'll get a list of products from the store, use a limit filter to only show the first 10 products, and sort products by name. \n\nIn the request maker below, we've prefilled the URL to /GET products: `https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products`\n\nTo add [filters](/api-docs/getting-started/about-api/filtering), append `?page=10&sort=name` to the end of the request URL.\n\n\nIn the request maker tabs, replace these placeholders with the appropriate values:  \n- {X-Auth-Token} Header - Access Token from API Credentials\n- {X-Auth-Client} Header - Client Id from API Credentials\n- store_hash variable - the hash in your api path \n\t- https://api.bigcommerce.com/stores/{store_hash}/v3/\n\n \nHit the send button and review your response."
                            header:
                              anchor: making-requests_get-products
                          - type: http
                            data:
                              method: get
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              headers:
                                Accept: application/json
                                Content-Type: application/json
                                X-Auth-Token: '{X-Auth-Token}'
                                X-Auth-Client: '{X-Auth-Client}'
                              query:
                                limit: '10'
                                sort: name
                            header:
                              title: Get a List of Products
                          - type: code
                            data: |-
                              {
                                "data": [
                                  {
                                    "id": 174,
                                    "name": "1L Le Parfait Jar",
                                    "type": "physical",
                                    "sku": "",
                                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                                    "weight": 1,
                                    "width": 0,
                                    "depth": 0,
                                    "height": 0,
                                    "price": 7.95,
                                    "cost_price": 0,
                                    "retail_price": 10,
                                    "sale_price": 0,
                                    "map_price": 0,
                                    "tax_class_id": 0,
                                    "product_tax_code": "",
                                    "calculated_price": 7.95,
                                    "categories": [
                                      23,
                                      21
                                    ],
                                    "brand_id": 36,
                                    "option_set_id": null,
                                    "option_set_display": "right",
                                    "inventory_level": 0,
                                    "inventory_warning_level": 0,
                                    "inventory_tracking": "none",
                                    "reviews_rating_sum": 0,
                                    "reviews_count": 0,
                                    "total_sold": 7,
                                    "fixed_cost_shipping_price": 0,
                                    "is_free_shipping": false,
                                    "is_visible": true,
                                    "is_featured": false,
                                    "related_products": [
                                      -1
                                    ],
                                    "warranty": "",
                                    "bin_picking_number": "",
                                    "layout_file": "product.html",
                                    "upc": "",
                                    "mpn": "",
                                    "gtin": "",
                                    "search_keywords": "jar, glass",
                                    "availability": "available",
                                    "availability_description": "",
                                    "gift_wrapping_options_type": "any",
                                    "gift_wrapping_options_list": [],
                                    "sort_order": 0,
                                    "condition": "New",
                                    "is_condition_shown": false,
                                    "order_quantity_minimum": 0,
                                    "order_quantity_maximum": 0,
                                    "page_title": "",
                                    "meta_keywords": [],
                                    "meta_description": "",
                                    "date_created": "2018-08-15T14:48:46+00:00",
                                    "date_modified": "2018-09-12T17:32:23+00:00",
                                    "view_count": 14,
                                    "preorder_release_date": null,
                                    "preorder_message": "",
                                    "is_preorder_only": false,
                                    "is_price_hidden": false,
                                    "price_hidden_label": "",
                                    "custom_url": {
                                      "url": "/all/1l-le-parfait-jar/",
                                      "is_customized": true
                                    },
                                    "base_variant_id": 345,
                                    "open_graph_type": "product",
                                    "open_graph_title": "",
                                    "open_graph_description": "",
                                    "open_graph_use_meta_description": true,
                                    "open_graph_use_product_name": true,
                                    "open_graph_use_image": true
                                  },
                                  {
                                    "id": 167,
                                    "name": "Able Brewing System",
                                    "type": "physical",
                                    "sku": "",
                                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                                    "weight": 1,
                                    "width": 0,
                                    "depth": 0,
                                    "height": 0,
                                    "price": 225,
                                    "cost_price": 0,
                                    "retail_price": 0,
                                    "sale_price": 0,
                                    "map_price": 0,
                                    "tax_class_id": 0,
                                    "product_tax_code": "",
                                    "calculated_price": 225,
                                    "categories": [
                                      23,
                                      21
                                    ],
                                    "brand_id": 43,
                                    "option_set_id": 52,
                                    "option_set_display": "right",
                                    "inventory_level": 0,
                                    "inventory_warning_level": 0,
                                    "inventory_tracking": "none",
                                    "reviews_rating_sum": 0,
                                    "reviews_count": 0,
                                    "total_sold": 2,
                                    "fixed_cost_shipping_price": 0,
                                    "is_free_shipping": false,
                                    "is_visible": true,
                                    "is_featured": false,
                                    "related_products": [
                                      -1
                                    ],
                                    "warranty": "",
                                    "bin_picking_number": "",
                                    "layout_file": "product.html",
                                    "upc": "",
                                    "mpn": "",
                                    "gtin": "",
                                    "search_keywords": "",
                                    "availability": "available",
                                    "availability_description": "",
                                    "gift_wrapping_options_type": "any",
                                    "gift_wrapping_options_list": [],
                                    "sort_order": 0,
                                    "condition": "New",
                                    "is_condition_shown": false,
                                    "order_quantity_minimum": 0,
                                    "order_quantity_maximum": 0,
                                    "page_title": "",
                                    "meta_keywords": [],
                                    "meta_description": "",
                                    "date_created": "2018-08-15T14:48:36+00:00",
                                    "date_modified": "2018-08-20T15:11:17+00:00",
                                    "view_count": 21,
                                    "preorder_release_date": null,
                                    "preorder_message": "",
                                    "is_preorder_only": false,
                                    "is_price_hidden": false,
                                    "price_hidden_label": "",
                                    "custom_url": {
                                      "url": "/all/able-brewing-system/",
                                      "is_customized": true
                                    },
                                    "base_variant_id": 338,
                                    "open_graph_type": "product",
                                    "open_graph_title": "",
                                    "open_graph_description": "",
                                    "open_graph_use_meta_description": true,
                                    "open_graph_use_product_name": true,
                                    "open_graph_use_image": true
                                  },
                                  {
                                    "id": 181,
                                    "name": "All Purpose Cleaner",
                                    "type": "physical",
                                    "sku": "",
                                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                                    "weight": 1,
                                    "width": 0,
                                    "depth": 0,
                                    "height": 0,
                                    "price": 15,
                                    "cost_price": 0,
                                    "retail_price": 0,
                                    "sale_price": 0,
                                    "map_price": 0,
                                    "tax_class_id": 0,
                                    "product_tax_code": "",
                                    "calculated_price": 15,
                                    "categories": [
                                      21,
                                      22
                                    ],
                                    "brand_id": 37,
                                    "option_set_id": null,
                                    "option_set_display": "right",
                                    "inventory_level": 0,
                                    "inventory_warning_level": 0,
                                    "inventory_tracking": "none",
                                    "reviews_rating_sum": 0,
                                    "reviews_count": 0,
                                    "total_sold": 0,
                                    "fixed_cost_shipping_price": 0,
                                    "is_free_shipping": false,
                                    "is_visible": true,
                                    "is_featured": false,
                                    "related_products": [
                                      -1
                                    ],
                                    "warranty": "",
                                    "bin_picking_number": "",
                                    "layout_file": "product.html",
                                    "upc": "",
                                    "mpn": "",
                                    "gtin": "",
                                    "search_keywords": "",
                                    "availability": "available",
                                    "availability_description": "",
                                    "gift_wrapping_options_type": "any",
                                    "gift_wrapping_options_list": [],
                                    "sort_order": 0,
                                    "condition": "New",
                                    "is_condition_shown": false,
                                    "order_quantity_minimum": 0,
                                    "order_quantity_maximum": 0,
                                    "page_title": "",
                                    "meta_keywords": [],
                                    "meta_description": "",
                                    "date_created": "2018-08-15T14:48:51+00:00",
                                    "date_modified": "2018-08-15T15:01:15+00:00",
                                    "view_count": 0,
                                    "preorder_release_date": null,
                                    "preorder_message": "",
                                    "is_preorder_only": false,
                                    "is_price_hidden": false,
                                    "price_hidden_label": "",
                                    "custom_url": {
                                      "url": "/all/all-purpose-cleaner/",
                                      "is_customized": true
                                    },
                                    "base_variant_id": 352,
                                    "open_graph_type": "product",
                                    "open_graph_title": "",
                                    "open_graph_description": "",
                                    "open_graph_use_meta_description": true,
                                    "open_graph_use_product_name": true,
                                    "open_graph_use_image": true
                                  }

                                ],
                                "meta": {
                                  "pagination": {
                                    "total": 39,
                                    "count": 10,
                                    "per_page": 10,
                                    "current_page": 1,
                                    "total_pages": 4,
                                    "links": {
                                      "next": "?limit=10&sort=name&page=2",
                                      "current": "?limit=10&sort=name&page=1"
                                    },
                                    "too_many": false
                                  }
                                }
                              }
                            header:
                              title: GET Products Response
                              subtitle: 200 OK
                          - type: text
                            data: >-
                              The products are returned in a data array that
                              contains each product object. Located at the
                              bottom of the response is the meta object that
                              shows the total number of products being returned,
                              but also the products `per_page` which is 10, set
                              using the limit query in the request.


                              ### Next Steps

                              * Try including other filter paramters such as
                              name or include and exclude. See [Get All
                              Products](/api-reference/catalog/catalog-api/products/getproducts)
                              for a full list of available filters. 
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Create a Product\n\nIn this walkthrough, we'll create an example product: BigCommerce Hoodie. The minimum parameters to create a product are: name, price, category, type and weight. \n\n* **Name**: The name of your product as a string.\n* **Price**: How much the items costs in number format. \n* **Category**: The `{category_id}` for the category this product belongs to. An item can be assigned to more than one category. You can /GET the category id by using:\n\n`https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/categories`\n\n* **Type**: Is the item physical or digital?\n\t- Physical items are anything that is shipped to the customer, such as a t-shirt.\n\t- Digital items are products that the customer downloads, such as a PDF of an ebook. \n* **Weight**: How much the product weighs as a number. The measurement unit is determined by the [store settings](https://forum.bigcommerce.com/s/article/Store-Settings#physical). \n\nReview the information pre-populated in the Body tab below. Make sure to run a GET request for the categories first and update request with the appropriate category ID."
                            header:
                              anchor: making-requests_create-a-product
                          - type: http
                            data:
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              headers:
                                Accept: application/sjon
                                X-Auth-Token: '{X-Auth-Token}'
                                X-Auth-Client: '{X-Auth-Client}'
                                Content-Type: application/json
                              body: |
                                {
                                  "name": "BigCommerce Hoodie",
                                  "type": "physical",
                                  "description": "A super soft hoodie to wear",
                                  "weight": 5,
                                  "width": 12,
                                  "price": 25.99,
                                  "categories": [
                                    // set your category here. Accepts a comma seperated list
                                  ],
                                  "condition": "New"
                                }
                            header:
                              title: Create a Product
                          - type: code
                            data: |-
                              {
                                  "data": {
                                      "id": 196,
                                      "name": "BigCommerce Hoodie",
                                      "type": "physical",
                                      "sku": "",
                                      "description": "A super soft hoodie to wear",
                                      "weight": 5,
                                      "width": 12,
                                      "depth": 0,
                                      "height": 0,
                                      "price": 25.99,
                                      "cost_price": 0,
                                      "retail_price": 0,
                                      "sale_price": 0,
                                      "map_price": 0,
                                      "tax_class_id": 0,
                                      "product_tax_code": "",
                                      "calculated_price": 25.99,
                                      "categories": [
                                          20,
                                          21
                                      ],
                                      "brand_id": 0,
                                      "option_set_id": null,
                                      "option_set_display": "right",
                                      "inventory_level": 0,
                                      "inventory_warning_level": 0,
                                      "inventory_tracking": "none",
                                      "reviews_rating_sum": 0,
                                      "reviews_count": 0,
                                      "total_sold": 0,
                                      "fixed_cost_shipping_price": 0,
                                      "is_free_shipping": false,
                                      "is_visible": true,
                                      "is_featured": false,
                                      "related_products": [
                                          -1
                                      ],
                                      "warranty": "",
                                      "bin_picking_number": "",
                                      "layout_file": "",
                                      "upc": "",
                                      "mpn": "",
                                      "gtin": "",
                                      "search_keywords": "",
                                      "availability": "available",
                                      "availability_description": "",
                                      "gift_wrapping_options_type": "any",
                                      "gift_wrapping_options_list": [],
                                      "sort_order": 0,
                                      "condition": "New",
                                      "is_condition_shown": false,
                                      "order_quantity_minimum": 0,
                                      "order_quantity_maximum": 0,
                                      "page_title": "",
                                      "meta_keywords": [],
                                      "meta_description": "",
                                      "date_created": "2018-09-21T17:12:59+00:00",
                                      "date_modified": "2018-09-21T17:12:59+00:00",
                                      "view_count": 0,
                                      "preorder_release_date": null,
                                      "preorder_message": "",
                                      "is_preorder_only": false,
                                      "is_price_hidden": false,
                                      "price_hidden_label": "",
                                      "custom_url": {
                                          "url": "/bigcommerce-hoodie/",
                                          "is_customized": false
                                      },
                                      "base_variant_id": 402,
                                      "open_graph_type": "product",
                                      "open_graph_title": "",
                                      "open_graph_description": "",
                                      "open_graph_use_meta_description": true,
                                      "open_graph_use_product_name": true,
                                      "open_graph_use_image": true,
                                      "variants": [
                                          {
                                              "id": 402,
                                              "product_id": 196,
                                              "sku": "",
                                              "sku_id": null,
                                              "price": 25.99,
                                              "calculated_price": 25.99,
                                              "sale_price": 0,
                                              "retail_price": 0,
                                              "map_price": 0,
                                              "weight": 5,
                                              "width": 12,
                                              "height": 0,
                                              "depth": 0,
                                              "is_free_shipping": false,
                                              "fixed_cost_shipping_price": 0,
                                              "calculated_weight": 5,
                                              "purchasing_disabled": false,
                                              "purchasing_disabled_message": "",
                                              "image_url": "",
                                              "cost_price": 0,
                                              "upc": "",
                                              "mpn": "",
                                              "gtin": "",
                                              "inventory_level": 0,
                                              "inventory_warning_level": 0,
                                              "bin_picking_number": "",
                                              "option_values": []
                                          }
                                      ],
                                      "images": [],
                                      "primary_image": null,
                                      "videos": [],
                                      "custom_fields": [],
                                      "bulk_pricing_rules": [],
                                      "reviews": []
                                  },
                                  "meta": {}
                              }
                            header:
                              title: Response POST Products
                              subtitle: 200 OK
                            config:
                              mode: json
                          - type: text
                            data: >-
                              ### Next Steps

                              * To see a full list of fields that can be sent in
                              a request see [Create a
                              Product](/api-reference/catelog/catalog-api/products/createproduct)

                              * Try to make a different product with new
                              attributes.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Troubleshooting


                              Did you get a status of 403 Forbidden?

                              * Check the Client ID and Client Token.

                              * Make sure your request headers are correct.

                              * Be sure you replaced `{store_hash}` with your
                              store hash. 

                              * Make sure the request url is correct.


                              Did you get a 200 but nothing was returned?

                              * Make sure your store has products.


                              Did you get a status of 404?

                              * Check the request url for errors.
                            header:
                              anchor: making-requests_troubleshooting
                    - title: Authentication
                      route:
                        path: /authentication
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Authentication</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#authentication_what-are-oauth-credentials\">What are OAuth Credentials?</a></li>\n\t\t<li><a href=\"#authentication_getting-api-credentials\"> Getting API Credentials </a></li>\n\t\t<li><a href=\"#authentication_revoking-api-credentials\"> Revoking API Credtials</a></li>\n\t\t<li><a href=\"#authentication_client-id-secret\"> Getting Client ID and Client Secret</a></li>\n\t\t<li><a href=\"#authentication_when-to-use\"> Use Cases by Token Type</a></li>\n    <li><a href=\"#authentication_migration-legacy-oauth\">Migrating from Legacy to OAuth</a></li>\n\t\t<li><a href=\"#authentication_oauth-scopes\"> OAuth Scopes</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## What are OAuth Credentials?


                              BigCommerce uses [OAuth
                              authentication](https://dev.to/anabella/dancing-with-oauth-emp)
                              for all API and app usage. Currently, there are
                              two workflows to generate tokens, with different
                              use cases. 


                              ### API Credentials

                              Credentials for making API requests are created in
                              the control panel and can only be created by the
                              store owner. Tokens created manually through the
                              control panel are referred to in this
                              documentation as API Credentials to distinguish
                              them from tokens created programmatically. API
                              Credentials are used for testing purposes and
                              authenticating scripts, and they are tied solely
                              to the store used to generate them.


                              ### Client ID and Client Secret

                              Credentials for creating apps for sale in the
                              marketplace or private apps are created in [Dev
                              Tools](https://devtools.bigcommerce.com), the
                              developer workspace for managing apps. They are
                              referred to as Client ID and Client Secret in this
                              documentation.  The Client ID and Client Secret
                              are used by an app to generate an authorization
                              token per store. This allows your app to generate
                              an Oauth token programmatically, eliminating the
                              need to have a merchant manually generate API
                              Credentials to connect an app to their store and
                              allowing your app to generate tokens for multiple
                              stores with a single Client ID and Secret. 
                            header:
                              anchor: authentication_what-are-oauth-credentials
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Getting API Credentials

                              You can create and manage API Credentials in the
                              BigCommerce control panel by creating an API
                              account, as described below. Only the store owner
                              can create API accounts; accounts are limited to
                              50 per store.


                              To create your API account and its corresponding
                              token, use the following steps:

                              1. Log into the store, using the store owner’s
                              username/password.

                              2. Select **Advanced Settings**.

                              3. Select **API Accounts**. This will display the
                              Store API Accounts page.

                              4. Select **Create API Account**. This will
                              display the Create API Account page shown above.

                              5. In the Name field, summarize the purpose for
                              which you will use these credentials. This name is
                              for internal use only, so assign any name that you
                              will recognize.

                              6. In the OAuth Scopes section, select at least
                              the minimum scopes your app will require.

                              7. Select **Save** at the page’s lower right-hand
                              corner.


                              A successful save will display a pop-up containing
                              the API credentials that your app will need to run
                              authenticated requests – your Client ID and Access
                              Token. A .txt file containing the same credentials
                              will (on most browsers) automatically download to
                              your computer. This file also contains the base
                              API Path for your store, preconfigured for the v3
                              API.


                              The base api path will look something like this:


                              `https://api.bigcommerce.com/stores/123456/`

                              In the base path, the store hash is the 123456.
                              This will be used to make api requests.


                              From a security perspective, these credentials are
                              sensitive – please treat them with the same
                              caution that you would treat a private key or root
                              password


                              To get started making requests, see [API
                              Requests](/api-docs/getting-started/about-api/making-requests).
                            header:
                              anchor: authentication_getting-api-credentials
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1536087816482
                            header:
                              title: Create an API Account
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                There is no way to re-display this pop-up after
                                you select Done to dismiss it. 

                                Make sure you store your credentials before
                                dismissing the popup, either by copying/pasting
                                the contents of each field or by keeping the
                                downloaded .txt file. Otherwise, you will need
                                to repeat all the above steps to generate new
                                credentials. 
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Revoking API Credentials


                              To revoke an OAuth token, use the following steps
                              to delete the associated API account:

                              1. Log into the store, using the store owner’s
                              username/password.

                              2. Select **Advanced Settings**.

                              3. Select **API Accounts**. This will display the
                              Store API Accounts page, shown below.

                              4. In the Actions column at right, select the
                              trash-can button next to the account you want to
                              delete.
                            header:
                              anchor: authentication_revoking-api-credentials
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1537388177603
                            header:
                              title: Revoking API Credentials
                          - type: callout
                            data:
                              type: error
                              title: Delete Carefully
                              body: >-
                                There is no undo, so be sure before you delete
                                an account. You can also use the checkboxes on
                                the left side to delete multiple accounts at
                                once – but be especially careful when using this
                                option.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Getting Client ID and Client Secret


                              * The Client ID value uniquely identifies your
                              app. You will need to pass it in the header of all
                              your requests to the API.

                              * The Client Secret value is a secret that your
                              app and BigCommerce share. You only need to pass
                              the Client Secret value once, during the app
                              installation sequence. Thereafter, BigCommerce
                              uses it to sign payloads in load, uninstall, and
                              remove user requests, and your app uses it to
                              verify the signature to ensure that the request is
                              coming from BigCommerce.


                              To get a Client ID and Client Secret you will need
                              to log in to Dev Tools. Dev Tools can be accessed
                              by clicking **My Apps** in the top-right corner of
                              the Developer Portal.


                              1. Click **Create an app**  

                              2. Give your app a name. This will only be visible
                              to you

                              3. A pop up box will display showing Your Profile,
                              App Summary and Category. 
                            header:
                              anchor: authentication_client-id-secret
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1537389767940
                            header:
                              title: Create an App
                          - type: text
                            data: >-
                              4. Click on **Step 3 - Technical**. Fill out the
                              App Features sections with App Type, Callback URLs
                              and Scope.
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1537389883100
                            header:
                              title: Step 3 - Technical
                          - type: text
                            data: >-
                              5. In the lower right-hand corner of the popup
                              box, click **Update & Close**.

                              6. A new pop up will show asking if you want to
                              change the OAuth Scopes. Click **Confirm Update**.

                              7. You will be routed back to the Dev Tools home
                              page and your app will be listed. Click **View
                              Client ID**. 
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1537390078741
                            header:
                              title: View Client Id
                          - type: text
                            data: >-
                              9. Copy your Client ID and Client Secret. The
                              Client ID and Client Secret can be accessed at any
                              time by clicking **View Client ID**. 
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1537390135692
                            header:
                              title: Client Id and Client Secret
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                If you delete the app, there is no way to
                                recover the Client Id and Client Secret.
                          - type: text
                            data: >-
                              ### Next Steps


                              During the app installation process, your app will
                              use the Client Id and Client Secret to obtain an
                              Oauth token authorized against the store
                              installing the app. For a detailed look at this
                              process, see [Building an
                              App](/api-docs/getting-started/building-apps-bigcommerce/building-apps).
                          - type: text
                            data: '---'
                          - type: text
                            data: |-
                              ## Use Cases by Token Type

                              |  | Client ID / Client Secret | API Credentials |
                              |---|:---:|:---:|
                              | From Dev Tools| X | |
                              |From Store Control Panel| | X |
                              | Single Click Apps (Marketplace)| X | |
                              | Private Apps | X |
                              | Hidden Apps | X | |
                              | Connector Apps | | X |
                              |Scripts| | X |
                              |Testing | | X |
                              | V2 | X | X |
                              | V3 | X | X |
                              |Webhooks | X | X |
                            header:
                              anchor: authentication_when-to-use
                          - type: text
                            data: '---'
                            header: {}
                          - type: text
                            data: '## Migrating from Legacy to OAuth'
                            header:
                              anchor: authentication_migration-legacy-oauth
                          - type: callout
                            data:
                              type: error
                              body: >-
                                As of July 31, 2018, new BigCommerce stores are
                                no longer able to create Legacy API Accounts
                                (accounts using HTTP Basic Auth) within their
                                control panels. Existing Legacy API Accounts
                                will continue to work until further notice, but
                                we strongly recommend migrating to OAuth as soon
                                as possible.
                          - type: text
                            data: "### Migrating to OAuth comes with several benefits:\n\n* All OAuth requests are sent to a common hostname: `https://api.bigcommerce.com`. Using a single hostname prevents any interruption of service when the domain or SSL on a particular store changes or expires.\n\n* All of BigCommerce’s newest V3 APIs are exclusively available via OAuth.\n\n* OAuth API accounts have access to subscribe to BigCommerce’s Webhooks for real-time event notifications\n\n* The ability to use new APIs that require a shared secret, such as the Storefront Login API or the Storefront Current Customer identification endpoint.\n\n* Gzip compression on API responses to reduce bandwidth usage\n\n* Better security as all OAuth tokens are scoped to particular endpoints\n\n### How to Migrate\n\nFirst, consider whether your application should reside within the public App Marketplace, where any BigCommerce merchant can quickly discover and install it. To learn more about how to set up this kind of app, see [Becoming a Partner](/api-docs/partner/becoming-a-partner).\n\nIf you would like to update your API connection from Basic Authentication to OAuth, you will need to make the following changes:\n\n- Get a Client ID and an Access Token, by creating an API Account within the control panel. You’ll want to make sure the account has the correct Scopes for the API endpoints you need to access. We recommend that you provide the minimum scopes that your application requires to function, as a good security practice.\n- If you use one of the Client Libraries, follow the relevant guide (within the library’s documentation) for establishing an OAuth connection.\n- If you have created your connection, you’ll want to update your connection parameters:\n\t- Where you previously used the BigCommerce store’s secure hostname, you will instead use the `https://api.bigcommerce.com` gateway URL.\nAs an example, requests to `https://store-abc123.mybigcommerce.com/api/v2/orders/123` or `https://my-custom-store-domain.com/api/v2/orders/123 `would instead go to `https://api.bigcommerce.com/stores/{store_hash}/v2/orders/123`.\n- With Basic Auth, you use an Authentication HTTP Header to authenticate your connection. With OAuth, you’ll want to use two headers:\n\t- X-Client-Id for your Client ID, and the \n\t- X-Auth-Token header for your Access Token. You can read more [here](/api-docs/getting-started/about-api/authentication#authentication_client-id-secret).\n\nRate limiting of API requests works differently for OAuth API connections. To become familiar with the OAuth system, please see the [Rate Limits](/api-docs/getting-started/about-api/best-practices#best-practices_rate-limits)."
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## OAuth Scopes


                              Scope limits ability to read or write to data. Set
                              the scope to the minimum level needed to
                              accomplish the task at hand.


                              All OAuth scopes except `default` have `read_only`
                              scopes that allow only `GET` and `HEAD` requests.


                              - Webhooks are accessible from the default scope
                              that is available when an API Credentials are
                              created.


                              | Scope GUI Name | Resources  | Description |

                              |---|---|---|

                              | Content | store_v2_content | View and modify
                              store content |

                              |||
                              [/v2/pages](/api-reference/content/store-content-api)
                              |

                              |||
                              [/v2/blog](/api-reference/content/store-content-api)
                              |

                              |||
                              [/v2/redirects](/api-reference/content/store-content-api)
                              |

                              ||| /v3/widgets |

                              ||store_v2_content_read_only| View Site Content |

                              |||
                              [/v2/pages](/api-reference/content/store-content-api)
                              |

                              |||
                              [/v2/blog](/api-reference/content/store-content-api)
                              |

                              |||
                              [/v2/redirects](/api-reference/content/store-content-api) 
                              |

                              ||| /v3/widgets |

                              | Checkout Content | store_content_checkout | View
                              and modify content on checkout pages |

                              |||
                              [/v3/scripts](/api-reference/content/store-content-api)
                              |

                              | Customers | store_v2_customers | View and modify
                              customer information |

                              |||
                              [/v2/customers](/api-reference/customer-subscribers/customers-api)
                              |

                              |||
                              [/v2/customer_groups](/api-reference/customer-subscribers/customers-api)
                              |

                              |||
                              [/v3/customers/subscribers](/api-reference/customer-subscribers/subscribers-api)
                              |

                              ||store_v2_customers_read_only|View customer
                              information |

                              |||
                              [/v2/customers](/api-reference/customer-subscribers/customers-api)
                              |

                              |||
                              [/v2/customer_groups](/api-docs/api-reference/v2-api/v2-customers)
                              |

                              |||
                              [/v3/customers/subscribers](/api-reference/customer-subscribers/subscribers-api)
                              |

                              | Customers Login | store_v2_customers_login | Log
                              in customers to your storefront |

                              ||| [Access to the Customer Login
                              API](/api-docs/customers/customer-login-api)

                              | Information & Settings| store_v2_information |
                              View and modify general store information and
                              settings |

                              |||
                              [/v2/shipping/methods](/api-reference/shipping/shipping-api)
                              |

                              |||
                              [/v2/shipping/zones](/api-reference/shipping/shipping-api)
                              |

                              |||
                              [/v2/shipping/carrier](/api-reference/shipping/shipping-api)
                              |

                              || store_v2_information_read_only | View general
                              store information and settings |

                              |||
                              [/v2/shipping/methods](/api-reference/shipping/shipping-api)
                              |

                              |||
                              [/v2/shipping/zones](/api-reference/shipping/shipping-api)
                              |

                              |||
                              [/v2/shipping/carrier](/api-docs/api-reference/v2-api/v2-shipping)
                              |

                              |||
                              [/v2/payments/methods](/api-reference/shipping/shipping-api)
                              |

                              |||
                              [/v2/tax_classes](/api-reference/store/tax-classes-api)
                              |

                              |||
                              [/v2/store](/api-reference/store/store-information-api)
                              |

                              | Marketing | store_v2_marketing | View and modify
                              marketing information |

                              |||
                              [/v2/coupons](/api-reference/marketing/marketing-api)
                              |

                              |||
                              [/v2/gift_certificates](/api-reference/marketing/marketing-api)
                              |

                              |||
                              [/v2/banners](/api-reference/marketing/marketing-api)
                              |

                              || store_v2_marketing_read_only | View marketing
                              information |

                              |||
                              [/v2/coupons](/api-reference/marketing/marketing-api)
                              |

                              |||
                              [/v2/gift_certificates](/api-reference/marketing/marketing-api)
                              |

                              |||
                              [/v2/banners](/api-reference/marketing/marketing-api)
                              |

                              | Orders | store_v2_orders | View and modify
                              orders |

                              ||| [/v2/orders](/api-reference/orders/orders-api)
                              |

                              |||
                              [/v2/order_statuses](/api-reference/orders/orders-api)
                              |

                              || store_v2_orders_read_only | View orders |

                              ||| [/v2/orders](/api-reference/orders/orders-api)
                              |

                              |||
                              [/v2/order_statuses](/api-reference/orders/orders-api)
                              |

                              | Order Transactions |
                              store_v2_transactions_read_only | View order
                              transactions |

                              |||
                              [/v3/orders/{id}/transactions](/api-reference/orders/orders-transactions-api)
                              |

                              | Products | store_v2_products | View and modify
                              products, brands, categories and other product
                              information. |

                              |||
                              [/v3/catalog](/api-reference/catalog/catalog-api)
                              |

                              |||
                              [/v3/pricelists](/api-reference/price-lists/pricelists-api)
                              |

                              || store_v2_products_read_only | View products |

                              |||
                              [/v3/catalog](/api-reference/catalog/catalog-api)
                              |

                              |||
                              [/v3/pricelists](/api-reference/price-lists/pricelists-api)
                              |

                              | Themes | store_themes_manage | View and modify
                              themes |

                              ||| [/v3/themes](/api-reference/themes/themes-api)
                              |

                              || store_themes_read_only | View themes |

                              ||| [/v3/themes](/api-reference/themes/themes-api)
                              |

                              | Carts | store_cart | View and Modify carts |

                              |||
                              [/v3/carts](/api-reference/cart-checkout/storefront-cart-api)
                              |

                              || store_cart_read_only | View Carts |

                              |||
                              [/v3/carts](/api-reference/cart-checkout/storefront-cart-api)
                              |
                            header:
                              anchor: authentication_oauth-scopes
                    - title: API Environment
                      route:
                        path: /api-environment
                      data:
                        blocks:
                          - type: html
                            data: "<h1>API Enviroment</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#api-enviroment\">API Environment</a></li>\n        <li><a href=\"#api-environment_request-headers\">Request Headers</a></li>\n        <li><a href=\"#api-environment_response-headers\">Response Headers</a></li>\n        <li><a href=\"#api-environment_media-types\">Media Types</a></li>\n        <li><a href=\"#api-environment_content-types\">Content Types</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## API Environment 


                              BigCommerce API requests can be made in the
                              context of the storefront or server-to-server.  


                              * Storefront APIs use the store url:
                              `https://your-store.mybigcommerce.com/api/{endpoint}`

                              * Server-to-Server requests use the base url: 
                              `https://api.bigcommerce.com/stores/{store_hash}/v3/`

                              * V2 API Requests use the base url:
                              `https://api.bigcommerce.com/stores/{store_hash}/v2/`
                            header:
                              anchor: api-enviroment
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Request Headers


                              Server-to-Server request headers require Accept,
                              X-Auth-Client, X-Auth-Token and Content-Type at a
                              minimum.



                              | Header | Allowed Values | Description | Example
                              |

                              | --- | --- | --- | --- |

                              | `Accept` | `application/json` (for .json
                              requests) `application/xml` (for .xml requests) |
                              The MIME type for the format you want to receive a
                              response in.|`application/xml` |

                              | `Content-Type` | `application/json` (for JSON
                              requests) `application/xml` (for XML requests) |
                              The MIME type of the request body. Used to
                              validate and parse the request to the API. |
                              `application/json` |

                              | `User-Agent` | String | While it is not
                              required, we ask that you specify a user agent
                              which identifies your integration/client with your
                              requests. |

                              | `X-Auth-Client` | String | Client ID of the
                              requesting app |

                              | `X-Auth-Token` | String | Access token
                              authorizing the app to access resources on behalf
                              of a user |
                            header:
                              anchor: api-environment_request-headers
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Response Headers 


                              | Header | Possible Values | Description | Example
                              |

                              | ------ | --------------- | ----------- | -------
                              |

                              | Date | An <a
                              href="http://tools.ietf.org/html/rfc2822#section-3.3"
                              target="_blank">RFC 2822</a> date. | The date the
                              response was sent. | `Tue, 15 Nov 2011 12:45:26
                              GMT` |

                              | last-modified | An <a
                              href="http://tools.ietf.org/html/rfc2822#section-3.3"
                              target="_blank">RFC 2822</a> date. | The date the
                              resource was last modified. Please refer to the
                              individual resource pages for support for this
                              header. | `Tue, 15 Nov 2011 12:45:26 GMT` |

                              | Content-Type | `application/json` | The MIME
                              type of the response, dependent on the extension
                              of the endpoint that was requested. |
                              `application/json` |

                              | Content-Location | A URI | Sent if the request
                              was redirected. | `/api/v2/orders/5.json` |

                              | Location | A URI | The URI of a newly created
                              resource. Sent with a `201 Created` response. |
                              `/api/v2/products/7` |

                              | X-Retry-After | integer | Rate limited response,
                              indicating the number of seconds before the quota
                              refreshes. See [Rate
                              Limits](/api-docs/getting-started/about-api/best-practices#best-practices_rate-limits)
                              for more information. | `15` |

                              | X-BC-ApiLimit-Remaining | integer | The number
                              of API requests remaining for the current period
                              (rolling one hour). See [Rate
                              Limits](/api-docs/getting-started/about-api/best-practices#best-practices_rate-limits)
                              for more information. | `987` |

                              | X-BC-Store-Version | A version number | The
                              version of BigCommerce the store is running on.
                              This header is available on versions 7.3.6+. | `
                              7.3.6` |

                              | Content-Encoding | `gzip` | Allows API clients
                              to request content to be compressed before being
                              sent back in the response to an API request. |
                              `gzip` |

                              | Transfer-Encoding | `chunked` | Specifies the
                              form of encoding used to transfer the resource. |
                              `chunked`

                              | X-Rate-Limit-Requests-Left | number | Details
                              how many remaining requests your client can make
                              in the current window before being rate-limited.
                              In this case, you would expect to be able to make
                              6 more requests in the next 3000 milliseconds; on
                              the 7th request within 3000 milliseconds, you
                              would be rate-limited and would receive an HTTP
                              429 response. | `16101491` |

                              | X-Rate-Limit-Requests-Quota | number | Shows how
                              many API requests are allowed in the current
                              window for your client. | `16101495` |

                              | X-Rate-Limit-Time-Reset-Ms  | number | Shows how
                              many milliseconds are remaining in the window. In
                              this case, 3000 milliseconds – so, 3000
                              milliseconds after this request, the API quota
                              will be refreshed. |`30000 `|

                              | X-Rate-Limit-Time-Window-Ms | number | Shows the
                              size of your current rate-limiting window. |
                              `9762` |
                            header:
                              anchor: api-environment_response-headers
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Media Types


                              A media type is the format of the request or
                              response body. The BigCommerce API accepts
                              requests and responds in JSON. You should encode
                              requests using the UTF-8 character set. (Other
                              character sets might have unpredictable results).
                            header:
                              anchor: api-environment_media-types
                          - type: text
                            data: >
                              ## Content Types


                              ### Request Content Type

                              When performing a request that contains a body
                              (eg. POST or PUT), the type of content you are
                              sending needs to be specified in the Content-Type
                              header. 


                              ### Response Content Type

                              There are two ways you can specify the type of
                              content you would like to receive. The first
                              method is to specify an Accept header. The second
                              is to supply an extension to the resource you are
                              requesting. 


                              The priority in which these methods are processed
                              are:

                              * Accept header high-priority types (eg. `Accept:
                              application/json`) extensions on the resource
                              (e.g. `customers.json`).

                              * Accept header low priority types (priorities
                              less than 1, e.g. `Accept:
                              application/json;q=0.9`)
                            header:
                              anchor: api-environment_content-types
                          - type: text
                            data: >-
                              ## Request and Response Structure


                              ### Request Structure

                              The body of a JSON request is an object containing
                              a set of key-value pairs. A simple representation
                              of a product object is:


                              ```

                              {
                                   "id": 5,
                                   "name": "iPod",
                                   "description": "A portable MP3 music player."
                               } 
                              ```


                              ### Response Structure

                              Responses are structured similarly to requests. If
                              a request returns a single object, then the
                              response will contain a single object, containing
                              the fields for that resource.
                            header:
                              anchor: api-environment_request-and-response-structure
                          - type: code
                            data: |-
                              {
                                  "data": {
                                      "id": 39,
                                      "parent_id": 19,
                                      "name": "Bath",
                                      "description": "",
                                      "views": 0,
                                      "sort_order": 0,
                                      "page_title": "",
                                      "meta_keywords": [
                                          ""
                                      ],
                                      "meta_description": "",
                                      "layout_file": "category.html",
                                      "image_url": "",
                                      "is_visible": true,
                                      "search_keywords": "",
                                      "default_product_sort": "use_store_settings",
                                      "custom_url": {
                                          "url": "/garden/bath/",
                                          "is_customized": false
                                      }
                                  },
                                  "meta": {}
                              }
                            header:
                              title: Single Category
                              anchor: api-environment_response-single-category
                            config:
                              mode: json
                          - type: text
                            data: >-
                              If the request returns more than one result, then
                              the response will consist of an array of objects
                              for each result:
                          - type: code
                            data: |-
                              {
                                "data": [
                                  {
                                    "id": 19,
                                    "parent_id": 0,
                                    "name": "Garden",
                                    "description": "<p>A collection of products for the garden.</p>",
                                    "views": 0,
                                    "sort_order": 2,
                                    "page_title": "page title",
                                    "meta_keywords": [
                                      "meta keyword"
                                    ],
                                    "meta_description": "meta description",
                                    "layout_file": "category.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "search keywords",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/garden/",
                                      "is_customized": false
                                    }
                                  },
                                  {
                                    "id": 20,
                                    "parent_id": 0,
                                    "name": "Publications",
                                    "description": "",
                                    "views": 0,
                                    "sort_order": 4,
                                    "page_title": "",
                                    "meta_keywords": [
                                      ""
                                    ],
                                    "meta_description": "",
                                    "layout_file": "category_with_facets.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/publications/",
                                      "is_customized": false
                                    }
                                  },
                                  {
                                    "id": 21,
                                    "parent_id": 0,
                                    "name": "Kitchen",
                                    "description": "",
                                    "views": 0,
                                    "sort_order": 3,
                                    "page_title": "",
                                    "meta_keywords": [
                                      ""
                                    ],
                                    "meta_description": "",
                                    "layout_file": "category_with_facets.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/kitchen/",
                                      "is_customized": false
                                    }
                                  },
                                  {
                                    "id": 22,
                                    "parent_id": 0,
                                    "name": "Utility",
                                    "description": "",
                                    "views": 0,
                                    "sort_order": 5,
                                    "page_title": "",
                                    "meta_keywords": [
                                      ""
                                    ],
                                    "meta_description": "",
                                    "layout_file": "category_with_facets.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/utility/",
                                      "is_customized": false
                                    }
                                  },
                                  {
                                    "id": 23,
                                    "parent_id": 0,
                                    "name": "Shop All",
                                    "description": "<h1>Browse our full collection</h1>",
                                    "views": 0,
                                    "sort_order": 0,
                                    "page_title": "",
                                    "meta_keywords": [
                                      ""
                                    ],
                                    "meta_description": "",
                                    "layout_file": "category_with_facets.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/shop-all/",
                                      "is_customized": false
                                    }
                                  },
                                  {
                                    "id": 39,
                                    "parent_id": 19,
                                    "name": "Bath",
                                    "description": "",
                                    "views": 0,
                                    "sort_order": 0,
                                    "page_title": "",
                                    "meta_keywords": [
                                      ""
                                    ],
                                    "meta_description": "",
                                    "layout_file": "category.html",
                                    "image_url": "",
                                    "is_visible": true,
                                    "search_keywords": "",
                                    "default_product_sort": "use_store_settings",
                                    "custom_url": {
                                      "url": "/garden/bath/",
                                      "is_customized": false
                                    }
                                  }
                                ],
                                "meta": {
                                  "pagination": {
                                    "total": 6,
                                    "count": 6,
                                    "per_page": 50,
                                    "current_page": 1,
                                    "total_pages": 1,
                                    "links": {
                                      "current": "?page=1&limit=50"
                                    }
                                  }
                                }
                              }
                            header:
                              title: Multiple Categories
                              anchor: api-environment_response-multiple-category
                    - title: Filtering
                      route:
                        path: /filtering
                      data:
                        blocks:
                          - type: html
                            data: <h1>Filtering</h1>
                          - type: text
                            data: >-
                              To filter collections down to a particular set of
                              items, you can add filters to your request as URL
                              query parameters.


                              250 products is the maximum number of products
                              that be returned. To view more than that, a script
                              is needed to loop through each page.


                              These are the most common filter options available
                              for the V3 API: 


                              | Operator | Expression  | Example | 

                              |--|--|--|

                              | Equals/equivalency | attribute=value  |
                              `/v3/catalog/products?price=10`
                              `/v3/catalog/products?name=My Product` |

                              | Greater than or equal to (for numbers or dates)
                              | attribute:min=value  |
                              `/v3/catalog/products?price:min=10` |

                              | Less than or equal to (for numbers or dates) |
                              attribute:max=value |
                              `/v3/catalog/products?price:max=10` |

                              | Greater than (for numbers or dates)|
                              attribute:greater=value |
                              `/v3/catalog/products?price:greater=10` |

                              | Less than (for numbers or dates) |
                              attribute:less=value |
                              `/v3/catalog/products?price:less=10` |

                              | SQL LIKE operator (for strings) |
                              attribute:like=pattern |
                              `/v3/catalog/categories?name:like=Shirts` |

                              | SQL IN operator (for arrays) |
                              attribute:in=csv,list,of,values |
                              `/v3/catalog/products?categories:in=123,456` |

                              | SQL NOT IN operator (for arrays) |
                              attribute:not_in=csv,list,of,values |
                              `/v3/catalog/products?categories:not_in=123,456` |


                              Available filters vary by endpoint. Refer to the
                              GET method for an endpoint to see a list of
                              available filters.



                              ### Includes


                              Some endpoints allow an `?include` parameter to
                              include subresources and other information in the
                              primary GET response for a parent object.


                              This allows you to save API calls by getting more
                              information in a response. However, it may slow
                              down your response.


                              As an example, you can include a product's
                              variants and images with the product response:
                              `/v3/catalog/products?include=variants,images`


                              Availability of the `?include` parameter varies by
                              endpoint. Refer to the GET method for an endpoint
                              to see a list of fields that can be included.


                              ### Including and Excluding fields


                              Some endpoints support both `?include_fields` and
                              `?exclude_fields`. 


                              `include_fields` will return ONLY the specified
                              fields in the response. `exclude_fields` will omit
                              the specified fields from the response.


                              You can specify any field that is available on the
                              object. Excluding fields you don't care about
                              (especially large fields like descriptions) can
                              speed up your API request response time.



                              #### Example


                              `https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products?include_fields=name,price`


                              Here, product name and price have been included:


                              ```

                              {
                                  "data": [
                                      {
                                          "id": 77,
                                          "name": "Red printed scarf",
                                          "price": 12
                                      }    
                                  ]
                              }    

                              ```


                              ### Pagination and Limit


                              `?page` is the number of pages that are returned
                              via api. 

                              `?limit` is the number of results per page that
                              are returned.


                              ###

                              `page=2&limit=10`

                              This will return page 2 of the results with 10
                              items per page.
                    - title: Best Practices
                      route:
                        path: /best-practices
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Best Practices</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#best-practices_integration-up-to-date\">Ensure That Your Integration is Up-to-Date</a></li>\n        <li><a href=\"#best-practices_use-webhooks\">Use Webhooks Effectively Within Your Application</a></li>\n        <li><a href=\"#best-practices_thread-api-requests\">Thread Your Requests to the BigCommerce API</a></li>\n        <li><a href=\"#best-practices_marketplace-apps\">Marketplace Apps</a></li>\n        <li><a href=\"#best-practices_rate-limits\">API Rate Limits</a></li>\n        <li><a href=\"#best-practices_platform-limits\">Platform Limits</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Ensure that your integration is up-to-date


                              BigCommerce frequently enhances its core product
                              and is actively developing v3 API endpoints. By
                              using the newest API version, you will ensure that
                              your app has access to the latest resources. You
                              will also be better positioned to provide a user
                              experience consistent with what merchants will see
                              in their BigCommerce store’s control panel. To
                              stay up to date, bookmark our
                              [changelog](/changelog). 
                            header:
                              anchor: best-practices_integration-up-to-date
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Use webhooks effectively within your
                              application


                              To keep data in your application up-to-date,
                              [webhooks](/api-docs/getting-started/webhooks/about-webhooks)
                              provide a great alternative to doing periodic
                              checks. In order to register a webhook event that
                              your application can listen for, you will need to
                              use OAuth (not legacy “Basic Authentication”).


                              BigCommerce will send a partial payload when a
                              subscribed event is triggered, with minimal
                              identifying details (such as the order ID when an
                              order is created). Your application could use the
                              order ID returned in the payload to make a
                              subsequent API request for the full order details.
                            header:
                              anchor: best-practices_use-webhooks
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Thread your requests to the BigCommerce API


                              In order to quickly update information in the API,
                              you can use threaded requests. Threaded requests
                              allow you to send multiple requests at one time.
                              They can come from a different open connection or
                              multiple requests to the same resource. 


                              The [BigCommerce Ruby
                              API](https://github.com/bigcommerce/bigcommerce-api-ruby)
                              client is thread-safe: It satisfies the need for
                              multiple threads to access the same shared data
                              and the need for a shared piece of data to be
                              accessed by only one thread at any given time.
                              These attributes can reduce the total time that
                              your app will require to complete a series of
                              requests.
                            header:
                              anchor: best-practices_thread-api-requests
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Marketplace Apps


                              Merchants often have more than one person working
                              on their store. BigCommerce allows additional
                              users to access your app when the store owner has
                              granted them appropriate permissions. The
                              requirements for supporting multi-user access are:

                              * Tokens must be stored against the store_hash and
                              not against user info.

                              * Within the Dev Tools workspace, you must enable
                              your app’s Technical > Multiple Users option.


                              In the payload returned when a user launches an
                              app, users are distinguished by `owner_email`
                              versus `user_email`. If these two emails match,
                              the user is the store owner.


                              If you wish to enable user removal, you can do by
                              filling in your app’s Technical > Remove User
                              Callback URL field in Dev Tools. (Enabling user
                              removal is optional).

                              For more advanced implementations, you can enable
                              the store owner to grant specific permissions to
                              different non-admin users. For example,
                              person1@email.com could be restricted to editing
                              product inventory but not seeing orders. If you
                              decide to include this feature in your app, it’s a
                              great feature to advertise.
                            header:
                              anchor: best-practices_marketplace-apps
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## API Rate Limits

                              Apps that authenticate with OAuth are
                              rate-limited, based on a quota that is refreshed
                              every few seconds. The maximum quota for a store
                              will vary depending on the store’s plan.


                              * Enterprise plans and Enterprise Sandboxes
                              (Enterprise-Test): Unlimited (7mil / 30sec)

                              * Pro plans: 80k per hour (450 / 30sec)

                              * All other sandboxes (Dev/Partner/Employee): 20k
                              per hour (150 / 30sec)

                              * Plus & Standard plans: 20k per hour (150 /
                              30sec)


                              Each request to the API consumes one available
                              request from the quota. When an app hits the quota
                              limit, subsequent requests are rejected until the
                              quota is refreshed.


                              The store’s overall quota is distributed across
                              all apps that are accessing the store at a given
                              time. This provides fairness for multiple apps
                              that are accessing the API simultaneously,
                              preventing a single greedy app from consuming the
                              store’s entire quota by itself. The quota might
                              adjust as additional clients connect or disconnect
                              while you’re running requests. 
                            header:
                              anchor: best-practices_rate-limits
                          - type: text
                            data: >
                              ### Playing Nicely with the Platform


                              Every API response’s HTTP headers give you full
                              visibility into your position in the rate-limiting
                              algorithm:

                              ```

                              {

                              Content-Encoding →gzip

                              Content-Type →application/json

                              Date →Thu, 29 Mar 2018 15:59:24 GMT

                              Last-Modified →Tue, 13 Mar 2018 18:00:26 +0000

                              Transfer-Encoding →chunked

                              Vary →Accept-Encoding

                              X-Bc-Store-Version →7.6.0

                              X-Rate-Limit-Requests-Left →16101494

                              X-Rate-Limit-Requests-Quota →16101495

                              X-Rate-Limit-Time-Reset-Ms →30000

                              X-Rate-Limit-Time-Window-Ms →30000

                              }

                              ```


                              | Name | Description |

                              | -- | -- |

                              | X-Rate-Limit-Time-Window-Ms| Shows the size of
                              your current rate limiting window. In this case,
                              it’s 5000 milliseconds.|

                              | X-Rate-Limit-Time-Reset-Ms | Shows how many
                              milliseconds are remaining in the window. In this
                              case, 3000 milliseconds. 3000 milliseconds after
                              this request, the API quota will be refreshed. |

                              | X-Rate-Limit-Requests-Quota | Shows how many API
                              requests are allowed in the current window for
                              your client. In this case, the number is 25
                              requests. |

                              | X-Rate-Limit-Requests-Left | Details how many
                              remaining requests your client can make in the
                              current window before being rate limited. In this
                              case, you would expect to be able to make 6 more
                              requests in the next 3000 milliseconds; on the 7th
                              request within 3000 milliseconds, you would be
                              rate limited and would receive an HTTP 429
                              response.|


                              If your request to the API triggers a [429 Too
                              Many
                              Requests](/api-docs/getting-started/about-api/api-status-codes#api-status-codes_4-client-error)
                              response, then you know you’ve been limited.


                              The rate limited response will contain the
                              `X-Rate-Limit-Time-Reset-Ms` header, specifying a
                              time (in milliseconds) that your client must wait
                              before its quota has refreshed. Retry the request
                              after this time has elapsed, and your API service
                              will resume as normal.
                          - type: text
                            data: "### Example of 429 Status Code\n\nWhen you see a response with an HTTP 429 status code, your client shouldn’t make any further requests until your quota has refreshed:\n\n```\nHTTP/1.1 429 Too Many Requests\n    \tDate: Mon, 03 Feb 2017 20:36:00 GMT\n    \tContent-Type: application/json\n    \tX-Rate-Limit-Time-Reset-Ms: 15000\n```\n\n\nParse the `X-Rate-Limit-Time-Reset-Ms` header to determine how long you have to wait. In this case, it would be 15000 milliseconds.\nYour client can sleep on the specified interval:\n\n```\n   $milliseconds = $response->getHeader(\"X-Rate-Limit-Time-Reset-Ms\");\n    usleep($milliseconds * 1000);\n```\n\n\nAfter waiting for the given number of milliseconds, you can go back to making API requests."
                          - type: text
                            data: >-
                              ### Making Requests in Parallel

                              You might wish to increase the amount of work your
                              application can do in a given unit of time, by
                              sending multiple HTTP requests to the BigCommerce
                              API in parallel. This is perfectly acceptable.

                              However, your application should monitor the rate
                              limiting headers to avoid an HTTP 429 response.
                              Methods for doing this might include:

                              * Slowing your rate of API requests when
                              X-Rate-Limit-Requests-Left is nearing zero.

                              * Determining an acceptable average rate of
                              requests, by dividing X-Rate-Limit-Requests-Quota
                              by X-Rate-Limit-Time-Window-Seconds, and then
                              self-throttling to that rate.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Platform Limits


                              BigCommerce does have limits on the number of
                              products, categories, brands, etc. that can be
                              created in a store. See [Platform
                              Limits](https://forum.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits)
                              for more details.
                            header:
                              anchor: best-practices_platform-limits
                    - title: API Status Codes
                      route:
                        path: /api-status-codes
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Hello World!</h<h1>API Status Codes</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#api-status-codes_2-success\">2xx Success</a></li>\n        <li><a href=\"#api-status-codes_3-redirection\">3xx Redirection</a></li>\n        <li><a href=\"#api-status-codes_4-client-error\">4xx Client Error</a></li>\n        <li><a href=\"#api-status-codes_5-server-error\">5xx Server Error</a></li>\n        <li><a href=\"#api-status-codes_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              The API responds to requests with different HTTP
                              status codes depending on the result from the
                              request. Error responses might also include an
                              error message in the body to assist in resolving
                              the problem.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## 2xx Success 


                              2xx codes are returned for requests that were
                              understood and processed successfully.


                              | Code | Definition | Purpose |

                              | --- | --- | --- |

                              | **200** | **OK** | For successful `GET` and
                              `PUT` requests. |

                              | **201** | **Created** | For a successful `POST`
                              request. |

                              | **202** | **Accepted** | For a request that
                              resulted in a scheduled task being created to
                              perform the actual request. |

                              | **204** | **No Content** | For a successful
                              request that produced no response (such as
                              `DELETE` requests). |
                            header:
                              anchor: api-status-codes_2-success
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ### 3xx Redirection 


                              3xx codes are returned for requests that require
                              further action.


                              | Code | Definition | Purpose |

                              | --- | --- | --- |

                              | **301** | **Moved Permanently** | When the API
                              routes have changed (unlikely), or if the incoming
                              request is not secure (`http`), the request will
                              be redirected to the secure (`https`) version. |

                              | **304** | **Not Modified** | This response will
                              be sent if the request included an
                              `If-Modified-Since` header, but the resource has
                              *not* been modified since the specified date.
                              Please refer to individual resources'
                              documentation regarding support for the
                              `If-Modified-Since` header. |
                            header:
                              anchor: api-status-codes_3-redirection
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ### 4xx Client Error 


                              4xx codes are returned for requests that could not
                              be processed due to problems with the request or
                              the data.


                              | Code | Definition | Purpose |

                              | --- | --- | --- |

                              | **400** | **Bad Request** | Issued when a
                              malformed request was sent. Examples are: |

                              |||*   Invalid syntax

                              |||*   Missing required data

                              |||*   Webhook requests missing `Content-Type` in
                              the HTTP header.

                              |

                              | **401** | **Unauthorized** | This response is
                              sent when your client failed to provide
                              credentials or its credentials were invalid. |

                              | **403** | **Forbidden** | Returned when
                              permissions do not allow the operation. To
                              correct:

                              |||*   Check your app in `My Apps` to review the
                              OAuth scopes you requested, and check whether they
                              support the request that you made.

                              |||*   Changes to the store owner's account
                              (including a change to the email address) can also
                              cause this error. Roll back those changes to
                              correct it.

                              |||*   This error can also occur when your request
                              exceeds a limit imposed on the resource in
                              question. For example, a store cannot exceed
                              16,000 categories. For more information, see the
                              corresponding resource's documentation.

                              |

                              | **404** | **Not Found** | When a particular
                              resource doesn’t exist or couldn’t be found. |

                              | **405** | **Method Not Allowed** | The resource
                              was found, but doesn’t support the request method.
                              Issued when either a specific method isn’t yet
                              implemented on a resource, or the resource doesn’t
                              support the method at all. For example, a `PUT` on
                              `/orders` is invalid, but a `PUT` on
                              `/orders/{_id_}` is valid. |

                              | **406** | **Not Acceptable** | When the client
                              specifies a response content type in the `Accept`
                              header that is not supported. |

                              | **409** | **Conflict** | A change requested by
                              the client is being rejected, due to a condition
                              imposed by the server. The exact reasons for this
                              response will vary from one resource to the next.
                              An example might be attempting to delete a
                              category whose deletion would cause products to be
                              orphaned. Additional information about the
                              conflict, and about how to resolve it, might be
                              available in the response's `details` section. |

                              | **413** | **Request Entity Too Large** | When
                              the client requests too many objects. For example,
                              the `limit` parameter exceeded the maximum. |

                              | **415** | **Unsupported Media Type** | Returned
                              due to issues with the `Content-Type` header.
                              Examples of such issues are:

                              |||*   The header specifies an unsupported content
                              type.

                              |||*   The header is missing (except with the
                              webhooks resource, which returns a 400 in this
                              case).|

                              | **422** | **Missing or Invalid Data** | The
                              request cannot be processed either because it
                              omitted required fields or because it contained
                              invalid data. See the response for more details. |

                              | **429** | **Too Many Requests** | When an OAuth
                              client exceeds the [rate
                              limit](/api-docs/getting-started/about-api/best-practices#rate-limits)
                              for API requests to a store. |
                            header:
                              anchor: api-status-codes_4-client-error
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ### 5xx Server Error 


                              5xx codes are returned for requests that could not
                              be processed due to an internal error with the API
                              or server.


                              | Code | Definition | Purpose |

                              | --- | --- | --- |

                              | **500** | **Internal Server Error** | When an
                              error has occurred within the API. |

                              | **501** | **Not Implemented** | When a request
                              method is sent that is not supported by the API
                              (e.g., `TRACE`, `PATCH`). |

                              | **503** | **Service Unavailable** | When the
                              store is marked as “Down for Maintenance,” or the
                              store is being upgraded to a new version. |

                              | **507** | **Insufficient Storage** | When the
                              store has reached a limitation for the resource,
                              according to their BigCommerce plan (e.g.,
                              500-product limit). |
                            header:
                              anchor: api-status-codes_5-server-error
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Troubleshooting\n\n### Why am I getting 4xx/5xx errors from the API?\n* A 401 error indicates that your API call is being received but isn’t properly authenticating with our API. Either credentials are absent from the request, or we are receiving invalid credentials. Steps to resolve this:\n\t* Double-check your Access Token and Client ID.\n\t* If your credentials are valid, try sending a cURL request with the same credentials. This will test whether the problem is something within your application, rather than a credentials issue.\n* For 403 errors , there are 4 common causes:\n\t* Your app lacks the appropriate scopes to make the request that it sent. Resolution: Check the OAuth scopes that you requested, either in control panel > API Accounts or in Developer Portal’s My Apps section.\n\t* The store-owner account has changed on a store that installed your app. Resolution: This might require a reinstall by the new store owner, or a rollback of the store-owner changes.\n\t* Your API request exceeded an enforced platform limit. Among other limits, each store is limited to a maximum of 30,000 brands and 16,000 categories. For more information about these limits, see either the API resource you are using or our support documentation on platform limits.\n\t* Check your URL paths. An incorrect path can sometimes trigger a 403 error.\n* 500 errors almost always indicate an internal server error on BigCommerce’s side. Steps to resolve these:\n\t* Re-attempt the request three to five times, with increasing delays of at least a minute between attempts.\n\t* Check our status page.\n\t* 500 errors can also be caused by particularly expensive API calls. To avoid these errors on stores with very complex data, try reducing how many objects you are requesting. In the v2 API, you can request fewer objects by using ?limit={count}. In either the v2 or v3 API, you can request fewer objects by excluding certain fields or only requesting certain fields.\n\t\n### Why am I getting an HTTP 204 or 301/302 response to an API request?\n* Double-check the URL to which you are making an API request. If the response code is 301/302, try the WWW or non-WWW version of the URL."
                            header:
                              anchor: api-status-codes_troubleshooting
              - title: Building Apps With BigCommerce
                route:
                  path: /building-apps-bigcommerce
                data:
                  children:
                    - title: Types of Apps
                      route:
                        path: /types-of-apps
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Types of Apps</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#types-of-apps_single-click-apps\"> Single Click Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_private-apps\"> Private Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_hidden-marketplace-apps\"> Hidden Marketplace Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_scripts\"> Scripts</a></li>\n\t\t<li><a href=\"#types-of-apps_connector\"> Connector and OAuth Apps</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Single Click Apps


                              Single-click apps are listed in our App
                              Marketplace, making them available for
                              installation on all BigCommerce stores. The
                              “single-click” app flow does not mean users
                              install the app in a single click, but rather, the
                              app does not require the customer to install OAuth
                              credentials themselves or configure any settings
                              for a third party service. 


                              To put an app on the Marketplace, you must first
                              be a BigCommerce partner and have your app
                              approved through the App Submission Process. After
                              becoming a partner and having the app approved you
                              have the option of charging merchants to use the
                              app. 


                              Single-click apps use the Client ID and Client
                              Secret obtained from the Dev Tools workspace to
                              request an OAuth token during the [single-click
                              app authentication
                              flow.](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_oauth-summary)
                            header:
                              anchor: types-of-apps_single-click-apps
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Private Apps


                              In some cases, you might want to create an API
                              Account in your store’s control panel as the
                              fastest way to establish an API connection to an
                              individual store and to start running requests. 


                              Use Cases:

                              - You are not creating an application for
                              distribution in the BigCommerce App Marketplace.

                              - You are testing your app before submission, and
                              it doesn’t need to be distributed to other stores.


                              Private Apps can request an Oauth token
                              programmatically using the Client ID and Client
                              Secret from [Dev
                              Tools](https://devtools.bigcommerce.com), or you
                              can authenticate using an OAuth token from the
                              store’s [control
                              panel](https://forum.bigcommerce.com/s/article/Store-API-Accounts#creating). 
                            header:
                              anchor: types-of-apps_private-apps
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Hidden Marketplace Apps


                              Approved partners have the option of uploading
                              “hidden” apps to the App Marketplace. A hidden app
                              is a published app that does not show up in the
                              public BigCommerce marketplace. To create a hidden
                              app you need to be a BigCommerce Partner. 


                              Use Cases:

                              - A partner is beta-testing an integration before
                              a full Marketplace launch.

                              - A BigCommerce user with several stores wants to
                              install a custom app on all of them. Submitting a
                              hidden app offers a streamlined alternative to
                              creating a separate draft or test apps for each
                              store.

                              To have an app hidden, please contact <a
                              href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>.
                            header:
                              anchor: types-of-apps_hidden-marketplace-apps
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Scripts


                              You can write a script to test an endpoint, check
                              small portions of app code you are writing, or to
                              create an application that will not be distributed
                              in the BigCommerce Marketplace. Scripts do not
                              have a user interface. 


                              To get started with writing scripts all you need
                              are API Credentials from the store’s Control
                              Panel. Learn more about [making your first
                              request](/api-docs/getting-started/about-api/making-requests)
                              with the BigCommerce API. 
                            header:
                              anchor: types-of-apps_scripts
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Connector and Other OAuth Apps


                              Some apps qualify to be listed in the BigCommerce
                              App Marketplace as “Connector” apps. These apps
                              use manual OAuth token creation instead of the
                              single-click app flow.


                              While we always recommend and prefer the
                              single-click app flow’s programmatic OAuth
                              exchange, certain use cases might not be
                              compatible.


                              Use Cases:

                              - Customized integrations that vary per store.

                              - Integrations that do not provide any content for
                              an iframe.

                              - Apps that do not provide Web services for OAuth
                              exchange. (For example: offline sync apps.)

                              - Apps that do not provide Web or cloud-hosted
                              components for a dashboard.
                            header:
                              anchor: types-of-apps_connector
                          - type: callout
                            data:
                              body: >-
                                Connector apps require the store owner to create
                                API Credentials in the Control Panel and then
                                pass those values into the app manually. The
                                single-click installation process is preferred
                                since it does not require this step.
                          - type: text
                            data: >-
                              To create a connector app that uses manual OAuth
                              token creation, make the following selections on
                              the Technical tab when registering your app in Dev
                              Tools: 


                              1. Set the App Type option to Connector.

                              2. Enter your app’s Signup URL. This is the URL
                              where a user would begin to configure the
                              connection between your service and the
                              BigCommerce store.

                              4. Under OAuth scopes, select the scopes that your
                              app requires for BigCommerce review only. Later,
                              you will need to instruct store users to create a
                              token with the production scopes your app needs.


                              BigCommerce must review and approve your connector
                              app proposal before we will accept the app’s
                              submission to the Marketplace. 


                              If you’re interested in submitting your
                              integration as a connector app, please contact out
                              to <a
                              href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>.
                              to discuss your plan.
                    - title: Building an App
                      route:
                        path: /building-apps
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Building an App</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#building-apps_oauth-summary\">OAuth Summary</a></li>\n\t\t<li><a href=\"#building-apps_request-headers\">Request Headers</a></li>\n\t\t<li><a href=\"#building-apps_session-timeouts\">Managing Users Session Timeouts</a></li>\n\t\t<li><a href=\"#building-apps_installation-update-sequence\">App Installation and Update Sequence</a></li>\n\t\t<li><a href=\"#building-apps_recieving-get-request\">Receiving the GET Request</a></li>\n\t\t<li><a href=\"#building-apps_responding-get-request\">Responding to the GET Request</a></li>\n        <li><a href=\"#building-apps_making-post-request\">Making the POST Request</a></li>\n        <li><a href=\"#building-apps_recieving-post-request\">Receiving the POST Response</a></li>\n        <li><a href=\"#building-apps_load-uninstall-removal-requests\">Load, Uninstall, and User Removal Requests</a></li>\n        <li><a href=\"#building-apps_processing-signed-payload\">Processing the Signed Payload</a></li>\n        <li><a href=\"#building-apps_multi-user-support\">Multi-User Support</a></li>\n    <li><a href=\"#building-apps_external-app-installation\">External App Installation</a></li>\n    <li><a href=\"#building-apps_user-interface-constraints\">User Interface Constraints<a/></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## OAuth Summary


                              API token creation is a permission reserved for
                              the [store
                              owner](https://forum.bigcommerce.com/s/article/Store-API-Accounts#creating)
                              user account. An app can request authentication
                              “on behalf” of a store owner, allowing the app to
                              make API requests against store data.


                              To test an app before release, apply for a
                              [sandbox](https://www.bigcommerce.com/partners/)
                              store.
                               
                              - When a merchant clicks your app's Install button
                              in the control panel, a [/GET
                              request](#building-apps_recieving-get-request) is
                              sent to your app's [Auth callback
                              URL](#building-apps_recieving-get-request). 

                              - The /GET request sent from BigCommerce contains
                              a `code` or temporary access token, `client_id`,
                              `client_secret`, `scopes` and [other
                              information](#building-apps_recieving-get-request).
                              Your Auth Callback URL needs to be served over
                              https. You should also have access to your app's
                              server logs which will allow you to see the
                              information in the request.

                              - Your app needs to
                              [respond](#building-apps_responding-get-request)
                              to the /GET  with HTML that will be rendered in an
                              iframe in the store's control panel.

                              - Your app then needs to make a /POST request back
                              to BigCommerce that contains the code, client_id
                              and client secret. This should be done
                              programmatically. 

                              - BigCommerce will respond with a permanent Oauth
                              token authorized against the store that has
                              installed your app.

                              - After installation, the store_hash and
                              access_token should be stored somewhere secure so
                              the app does not lose its authorization. 



                              ### FAQ's

                              **How can I make API calls?**   

                              We have built several [Hello
                              World](/tools-resources) apps to get you started
                              quickly. You can use these apps as a starting
                              point or an example for building a Single-click
                              app. 


                              If you'd like to make test API requests without
                              the overhead of installing a draft app, you can
                              generate [API
                              Credentials](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials)
                              by creating an API Account in your store's control
                              panel.


                              **How can I sell my app?**  

                              The first step to listing an app in the
                              BigCommerce App Marketplace is to apply to the
                              BigCommerce [partner
                              program](https://www.bigcommerce.com/partners/). 


                              For more details on including your app in the
                              Marketplace, see [App Store Approval
                              Requirements](/api-docs/partner/app-store-approval-requirements).


                              **Need a deeper dive on app installation?**  

                              Keep reading below.
                            header:
                              anchor: building-apps_oauth-summary
                          - type: text
                            data: >-
                              ## Request Headers


                              API requests are authenticated by the following
                              HTTP headers:


                              ```

                              X-Auth-Client: The Client ID of the requesting
                              app. 

                              X-Auth-Token: Access token authorizing an app to
                              access store data on behalf of a user

                              ```


                              In addition, while not all resources require the
                              Accept and Content-Type headers, many do. To
                              ensure that your calls succeed, always include
                              these headers. For more details on request headers
                              and their accepted values, see [Request
                              Headers](/api-docs/getting-started/about-api/api-environment#api-environment_request-headers).
                            header:
                              anchor: building-apps_request-headers
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Managing Users Session Timeouts


                              We recommend that you add BigCommerce’s JavaScript
                              SDK to your Single-Click Apps, to protect your
                              apps’ users from getting logged out of the
                              BigCommerce control panel after a period of
                              idleness. To include our SDK, add this script tag
                              to your Single-Click App:

                              `<script
                              src="//cdn.bigcommerce.com/jssdk/bc-sdk.js">`



                              Optionally, you can pass a logout callback
                              function within the initialization call:


                              ```

                              Bigcommerce.init({
                                    onLogout: callback
                              });

                              ```



                              This callback function will run when the user
                              explicitly logs out of the BigCommerce control
                              panel, or is automatically logged out. The
                              callback will allow your app to respond to this
                              logout appropriately.
                            header:
                              anchor: building-apps_session-timeouts
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## App Installation and Update Sequence


                              The purpose of the App Installation sequence is to
                              obtain an Oauth token for the store installing the
                              app, using the Client ID and Secret from Dev
                              Tools. 


                              A user kicks off the installation or update
                              sequence from within a store's control panel by
                              clicking the “Install” button from your app
                              details page, or by clicking an installed app to
                              update its scopes. BigCommerce redirects the user
                              to the Auth Callback URI provided during app
                              registration. The Auth Callback URI must be
                              publicly available, fully qualified, and served
                              over TLS.
                            header:
                              anchor: building-apps_installation-update-sequence
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1536263813949
                            header:
                              title: App Installation Sequence
                          - type: text
                            data: >-
                              ### Handling Requests Securely


                              The request comes from the client browser, rather
                              than directly from BigCommerce. This allows you to
                              use a non-publicly-available Auth Callback URI
                              while testing your app.


                              For security, Auth and Load callbacks should be
                              handled server-side. If you are building a
                              client-side application (such as an AngularJS
                              Single Page App), you should handle Auth and Load
                              callbacks outside that application. Use a separate
                              service that accepts the Auth and Load callback
                              requests, generates tokens, validates requests,
                              and then redirects the user to your client-side
                              app’s entry point.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Receiving the GET Request


                              The GET request to your Auth Callback URI contains
                              a temporary code that you can exchange for a
                              permanent OAuth token. It also includes a unique
                              value that identifies the store installing or
                              updating your app, as well as authorized scopes.


                              The following table details the full list of
                              parameters and values included in the GET request
                              from BigCommerce to your Auth Callback URI.
                              BigCommerce passes these within the URI itself as
                              query parameters.


                              | Parameter | Description |

                              | --- | --- |

                              | code | Temporary code to exchange for a
                              permanent OAuth token. See [Making the POST
                              request](#building-apps_making-post-request) below
                              for more information about this exchange. |

                              | scope | List of scopes authorized by the user.
                              As a best practice, your app should validate this
                              list to ensure that it matches the app&#39;s
                              needs, and fail if it does not. However, at this
                              time, the user does not have any opportunity to
                              pick and choose between scopes. The dialog
                              presented to the user requires the user to approve
                              all scopes or none. |

                              | context | The store hash: a unique value that
                              identifies the store on which a logged-in user has
                              clicked to install or your app. BigCommerce passes
                              this along with a context path, as follows:
                              `stores/{store_hash}`. Save the store hash value,
                              because you will need to pass it in all your
                              requests to the API. |


                              ### Example – Initial Installation


                              This example initiates the token exchange, with a
                              requested scope of store_v2_orders:


                              ```

                              GET
                              /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders&context=stores/g5cd38
                              HTTP/1.1  

                              Host: app.example.com

                              ```



                              ### Example – Updating Scopes

                              The following example requests a scope of
                              store_v2_products, in addition to the initially
                              requested scope of store_v2_orders:


                              ```

                              GET
                              /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders+store_v2_products&context=stores/g5cd38
                              HTTP/1.1  

                              Host: app.example.com

                              ```
                            header:
                              anchor: building-apps_recieving-get-request
                          - type: callout
                            data:
                              body: >-
                                Note that when your app receives a new token,
                                any previously issued token is invalidated.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Responding to the GET Request


                              Upon receiving the GET request at your Auth
                              Callback URI, your app should return some HTML to
                              the merchant browser. BigCommerce renders this in
                              an iframe inside of the control panel. It could be
                              a form that collects further information from the
                              user, or you could redirect the user to your app’s
                              main page. If you do not pass back some HTML, the
                              user will be left looking at a blank screen. Such
                              an app would not be accepted into the App
                              Marketplace.
                            header:
                              anchor: building-apps_responding-get-request
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Making the POST Request


                              The POST request’s primary purpose is to exchange
                              the temporary access code for a permanent OAuth
                              token. However, your app must pass a number of
                              additional values to accomplish the exchange. Pass
                              the parameters and their values inside the request
                              body, using query parameters and URL-encoding. To
                              achieve this, you must include one of the
                              following HTTP headers:


                              `Content-Type: application/x-www-form-urlencoded`
                              or `Content-Type: application/json`


                              Make the POST request to the following address:
                              `https://login.bigcommerce.com/oauth2/token`


                              ### Initial Installation


                              During initial installation, upon receiving the
                              POST, BigCommerce marks the status of your app as
                              “Installed”, removes the progress-indicator
                              overlay, and places your app icon in the control
                              panel’s left-hand navigation. With the
                              progress-indicator overlay removed, the user can
                              interact with the HTML that you returned in your
                              GET response.
                            header:
                              anchor: building-apps_making-post-request
                          - type: callout
                            data:
                              body: >-
                                During app updates, upon receiving the POST,
                                BigCommerce removes the update prompt from the
                                control panel.
                          - type: text
                            data: >-
                              ### Parameters


                              Include values for each of the following
                              parameters.


                              | Parameter | Description |

                              | --- | --- |

                              | client_id | The Client ID for your app, obtained
                              during
                              [registration](/api-docs/getting-started/about-api/authentication#authentication_client-id-secret).
                              |

                              | client_secret | The Client Secret for your app,
                              obtained during
                              [registration](/api-docs/getting-started/about-api/authentication#authentication_client-id-secret).
                              |

                              | code | Temporary access code received in the
                              [GET
                              request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request)
                              discussed above. |

                              | scope | List of OAuth scopes received in the
                              [GET
                              request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request)
                              discussed above. |

                              | grant_type | Always use the following:
                              authorization_code. |

                              | redirect_uri | Must be identical to your
                              registered Auth Callback URI. |

                              | context | The store hash received in the [GET
                              request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request),
                              in the format: `stores/{_store_hash_}` |


                              ### Examples – Initial Installation
                          - type: code
                            data: >-
                              POST /oauth2/token HTTP/1.1

                              Host: login.bigcommerce.com

                              Content-Type: application/x-www-form-urlencoded

                              Content-Length: 186

                              client_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&code=qr6h3thvbvag2ffq&scope=store_v2_orders&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}
                            header:
                              title: HTTP
                            config:
                              mode: http
                          - type: code
                            data: >-
                              use Bigcommerce\Api\Connection;

                              $tokenUrl =
                              "https://login.bigcommerce.com/oauth2/token";

                              $connection = new Connection();

                              $connection->useUrlencoded();

                              $response = $connection->post($tokenUrl, array(
                                  "client_id" => "CLIENT_ID",
                                  "client_secret" => "CLIENT_SECRET",
                                  "redirect_uri" => "https://app.example.com/oauth",
                                  "grant_type" => "authorization_code",
                                  "code" => $request->get("code"),
                                  "scope" => $request->get("scope"),
                                  "context" => $request->get("context"),
                              ));

                              $token = $response->access_token;
                            header:
                              title: PHP
                            config:
                              mode: php
                          - type: text
                            data: >-
                              ### Examples – Updating Scopes


                              The following examples request a scope of
                              store_v2_products, in addition to the initially
                              requested scope of store_v2_orders:
                          - type: code
                            data: >-
                              POST /oauth2/token HTTP/1.1

                              Host: login.bigcommerce.com

                              Content-Type: application/x-www-form-urlencoded

                              Content-Length: 186

                              client_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&scope=store_v2_orders+store_v2_products&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}
                            header:
                              title: HTTP
                            config:
                              mode: http
                          - type: code
                            data: >-
                              use Bigcommerce\Api\Connection;

                              $tokenUrl =
                              "https://login.bigcommerce.com/oauth2/token";

                              $connection = new Connection();

                              $connection->useUrlencoded();

                              $response = $connection->post($tokenUrl, array(
                                  "client_id" => "CLIENT_ID",
                                  "client_secret" => "CLIENT_SECRET",
                                  "redirect_uri" => "https://app.example.com/oauth",
                                  "grant_type" => "authorization_code",
                                  "code" => $request->get("code"),
                                  "scope" => $request->get("scope"),
                                  "context" => $request->get("context"),
                              ));


                              $token = $response->access_token;
                            header:
                              title: PHP
                            config:
                              mode: php
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Receiving the POST Response


                              The POST response will include a JSON object
                              containing the permanent OAuth token, user
                              information, and other values. Upon receiving the
                              permanent OAuth token, store it securely. You
                              should also store the user and store hash values,
                              to identify the user and store at load and
                              uninstall. The following sections detail the
                              contents of the JSON body.


                              ### JSON Values

                              | Name | Data Type | Value Description |

                              | --- | --- | --- |

                              | access_token | string | The permanent OAuth
                              token that your app can use to make requests to
                              the Stores API on behalf of the user. Store this
                              value securely. |

                              | scope | string | List of authorization scopes. |

                              | id | integer | Unique identifier for the user.
                              Store this value to identify the user at load and
                              uninstall. |

                              | email | string | The user’s email address. Store
                              this value to identify the user at load and
                              uninstall. |

                              | context | string | The store hash, as well as a
                              base path: `stores/{_store_hash_}` |
                            header:
                              anchor: building-apps_recieving-post-request
                          - type: code
                            data: |-
                              {
                                "access_token": "ACCESS_TOKEN",
                                "scope": "store_v2_orders",
                                "user": {
                                  "id": 24654,
                                  "email": "merchant@mybigcommerce.com"
                                },
                                "context": "stores/STORE_HASH"
                              }
                            header:
                              title: Initial Installation
                              subtitle: JSON
                            config:
                              mode: json
                          - type: text
                            data: >-
                              Update requests will refresh the payload’s
                              access_token and scope values. Here again, the
                              following example requests a scope of
                              store_v2_products, in addition to the initially
                              requested scope of store_v2_orders:
                          - type: code
                            data: |-
                              {
                                "access_token": "ACCESS_TOKEN",
                                "scope": "store_v2_orders store_v2_products",
                                "user": {
                                  "id": 24654,
                                  "email": "merchant@mybigcommerce.com"
                                },
                                "context": "stores/STORE_HASH"
                              }
                            header:
                              subtitle: JSON
                              title: Updating Scopes
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Load, Uninstall, and User Removal Requests\nIn addition to the Auth Callback URI, the following URI’s are required for BigCommerce Apps:\n\n| Name | Required? | Event Discussion |\n| --- | --- | --- |\n| Load Callback URI | Yes | Called when the store owner or user clicks to load your app. |\n| Uninstall Callback URI | No | Called when the store owner clicks to uninstall your app. |\n| Remove User Callback URI | No | Called when the store admin revokes a user's access to your app. |\n\nEach event listed here triggers a GET request from BigCommerce containing a signed payload that allows your app to:\n- Verify that the request came from BigCommerce.\n- Identify the store.\n- Identify the store owner or user.\n\n### Load Request and Response\n\nOnce your app has been installed, the store owner or user can click its icon in the control panel to launch it. This causes BigCommerce to send a GET request to the Load Callback URI that you provided during app registration. In a production environment, the Load Callback URI must be publicly available, fully qualified, and served over TLS/SSL.\n\n```\nThe GET request contains a signed payload, as shown below.\nGET /load?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\nHost: app.example.com\n```\n\nUpon receiving a GET request to the Load Callback URI, your app needs to [process the signed payload](#building-apps_processing-signed-payload). After processing the payload, your app returns its user interface as HTML. BigCommerce renders this inside of an iframe. Please see [User Interface Constraints](#building-apps_user-interface-constraints) for important information about your app’s user interface.\n\n### Uninstall Request (Optional)\n\nStore owners have the option to uninstall any app at any time. When a store owner uninstalls an app, the app’s OAuth token is revoked and the app cannot make requests to the Stores API on the store’s behalf anymore.\n\nYou do not need to provide an Uninstall Callback URI. The lack of an Uninstall Callback URI does not prevent uninstallation. Instead, the Uninstall Callback URI allows you to track store owners who uninstall your app and to run cleanup operations, such as removing the store’s user accounts from your system.\n\nShould you choose to avail of this option and provide an Uninstall Callback URI, please note that it must be publicly available, fully qualified, and served over TLS/SSL. If provided, BigCommerce will send a GET request to your Uninstall Callback URI when a store owner clicks to uninstall your app.\n\nExample of a GET Request sent to the Uninstall Callback URI\n```\nGET /uninstall?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\n\tHost: app.example.com\n```\nUpon receiving the GET request, your app will need to process the signed payload."
                            header:
                              anchor: building-apps_load-uninstall-removal-requests
                          - type: callout
                            data:
                              body: >-
                                Any HTML that you return in your response will
                                not be rendered.
                          - type: text
                            data: >-
                              ### Remove User Request (Optional)


                              If you have not enabled
                              [multi-user](#building-apps_multi-user-support)
                              support, you will not provide a Remove User
                              Callback URI and can ignore this section. If you
                              enable multi-user support, you can optionally
                              specify a Remove User Callback URI. It must be
                              fully qualified, publicly available, and served
                              over TLS/SSL. BigCommerce will send a GETrequest
                              to your Remove User Callback URI when a store
                              admin revokes a user’s access to your app. 


                              Example of a Get Request sent to the Remove User
                              URI


                              ```

                              GET
                              /remove-user?signed_payload=hw9fhkx2ureq.t73sk8y80jx9
                              HTTP/1.1

                              Host: app.example.com

                              ```


                              Upon receiving the GET request, your app will need
                              to process the signed payload.
                          - type: callout
                            data:
                              body: >-
                                Any HTML that you return in your response will
                                not be rendered.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Processing the Signed Payload


                              Processing the signed payload involves splitting
                              and decoding it, verifying the HMAC signature, and
                              processing the JSON object.


                              ### Splitting and Decoding the Signed Payload


                              The signed payload is a string containing a base64
                              url-encoded JSON string and a base64 url-encoded
                              HMAC signature. The parts are delimited by the `.`
                              character:


                              ```

                              encoded_json_string.encoded_hmac_signature

                              ```



                              To decode the signed payload, complete the
                              following steps:

                              1. Split signed_payload into its two parts at the
                              `.` delimiter.

                              2. Decode encoded_json_string using base64url.

                              3. Convert the decoded JSON string into an object.
                              See Processing the JSON object for more about this
                              object.

                              4. Decode encoded_hmac_signature using base64url.

                              5. Use your client secret to verify the signature.
                              See the next section for more details.


                              ### Verifying the HMAC Signature


                              To verify the payload, you need to sign the
                              payload using your client secret, and confirm that
                              it matches the signature that was sent in the
                              request.
                            header:
                              anchor: building-apps_processing-signed-payload
                          - type: callout
                            data:
                              body: >-
                                To limit the vulnerability of your app to timing
                                attacks, we recommend using a constant
                                time-string comparison function, rather than the
                                equality operator, to check that the signatures
                                match.
                          - type: code
                            data: |-
                              function verifySignedRequest($signedRequest)
                              {
                                  list($encodedData, $encodedSignature) = explode('.', $signedRequest, 2);

                                  // decode the data
                                  $signature = base64_decode($encodedSignature);
                                      $jsonStr = base64_decode($encodedData);
                                  $data = json_decode($jsonStr, true);

                                  // confirm the signature
                                  $expectedSignature = hash_hmac('sha256', $jsonStr, $clientSecret(), $raw = false);
                                  if (!hash_equals($expectedSignature, $signature)) {
                                      error_log('Bad signed request from BigCommerce!');
                                      return null;
                                  }
                                  return $data;
                              }
                            header:
                              title: verifySignedRequest
                            config:
                              mode: php
                          - type: callout
                            data:
                              body: >-
                                !hash_equals is available in PHP 5.6 and later.
                                If you are running an older version of PHP, pull
                                in a compatibility library such as the
                                following:
                                https://packagist.org/packages/realityking/hash_equals.
                                BigCommerce’s sample app
                                hello-world-app-php-silex app does this
                                automatically.
                          - type: code
                            data: |
                              require "base64"
                              require "openssl"

                              def verify(signed_payload, client_secret)
                                message_parts = signed_payload.split(".")

                                encoded_json_payload = message_parts[0]
                                encoded_hmac_signature = message_parts[1]

                                payload_object = Base64.strict_decode(encoded_json_payload)
                                provided_signature = Base64.strict_decode(encoded_hmac_signature)

                                expected_signature = OpenSSL::HMAC::hexdigest("sha256", client_secret, payload_object)

                                return false unless secure_compare(expected_signature, provided_signature)

                                JSON.parse(payload_object)
                              end

                              def secure_compare(a, b)
                                return false if a.blank? || b.blank? || a.bytesize != b.bytesize
                                l = a.unpack "C#{a.bytesize}"

                                res = 0
                                b.each_byte { |byte| res |= byte ^ l.shift }
                                res == 0
                              end
                            header:
                              title: verify()
                            config:
                              mode: ruby
                          - type: text
                            data: >-
                              ### Processing the JSON Object


                              The JSON object embedded in the signed_payload
                              contains information about the BigCommerce store
                              and the store owner or user.


                              ### Identifying the Store

                              You should use the store information endpoint to
                              identify the store to which the request pertains.


                              ### Interpreting the User Information


                              Interpreting the user information varies as
                              follows:


                              | Request type | Multiple users enabled | Multiple
                              users not enabled |

                              | --- | --- | --- |

                              | Load | Compare the user information to see if it
                              matches that of the store owner, received at the
                              time of [app
                              installation](#building-apps_installation-update-sequence)
                              or that of an existing user. If the user
                              information does not match either of these, then
                              it represents a new user that you should add to
                              your database or other storage. | The information
                              should match that of the store owner, received at
                              the time of [app
                              installation](#building-apps_installation-update-sequence).
                              |

                              | Uninstall | The user information should match
                              that of the store owner. Only the store owner can
                              uninstall your app. | Should match the store
                              owner. |

                              | Remove user | The user information should match
                              one of the users that you have stored. After
                              locating the stored user, delete it from your
                              database or other storage. | N/A |


                              ### JSON Values


                              | Name | Data Type | Value Description |

                              | --- | --- | --- |

                              | user.id | integer | Unique identifier for the
                              user who initiated the callback. |

                              | user.email | string | Email address of the user
                              who initiated the callback. |

                              | owner.id | integer | Unique identifier for the
                              user listed as the store owner. |

                              | owner.email | string | Email address of the user
                              listed as the store owner. |

                              | context | string | The context value is part of
                              the API path for this store and includes the
                              store_hash. |

                              | store_hash | string |Unique identifier for the
                              store. |

                              | timestamp | float | The time (in Unix time) when
                              the callback was generated.|
                          - type: code
                            data: |-
                              {
                                  "user":
                                       {
                                      "id":9128,
                                      "email":"user@mybigcommerce.com"
                                   },
                                   "owner":
                                        {
                                       "id":9128,
                                       "email":"user@mybigcommerce.com"
                                   },
                                   "context":"stores/z4zn3wo",
                                   "store_hash":"z4zn3wo",
                                   "timestamp":1469823892.9123988
                              }
                            header:
                              title: User Information
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Multi-User Support


                              When you register your app with BigCommerce,
                              enabling multi-user support will allow store
                              admins to manually authorize users – other than
                              the store owner – to load the app. 


                              As soon as you enable multi-user support, the
                              control panel of any store that has your app
                              installed will be affected. If you already have an
                              app published in the App Marketplace, be aware
                              that this setting takes effect immediately.
                              Therefore, we recommend testing your multi-user
                              support using a separate app that is in draft
                              status.


                              Let your customers know that you’ve enabled this
                              feature. Otherwise, they won’t know that they can
                              start granting access to users.


                              If multi-user support is added after your app has
                              launched, the update will cause the app scopes to
                              change and users will be alerted of the new
                              permission request.


                              ### The Control Panel Experience

                              Store admins will be able to adjust user
                              permissions to grant/deny other store users’
                              access to your app. The next time the user logs
                              in, they will see any apps for which they have
                              been granted access. The user can then click on
                              the app icon in the left navigation to load it.

                              Use your draft app and your sandbox store to
                              review this behavior.


                              ### The Load Request

                              Apps that support multiple users can expect the
                              email and ID of the user that initiated the
                              callback in addition to the owner’s email and ID
                              in the JSON object sent in the load request. If a
                              load request is sent with information for a user
                              you haven’t seen yet, you should provision the
                              user account and associate it with the store in
                              your database.


                              Because you know the store owner’s email and ID
                              from the App Installation sequence, your app can
                              distinguish store owners from other users. This
                              allows you to provide different user experiences
                              based on the information in the load request. Here
                              is a summary of the two types of users:


                              - Store owner: Can install, uninstall, and load
                              apps.

                              - Users: Cannot install or uninstall apps.
                              Permitted only to load the apps that a store admin
                              has authorized.


                              For further details, please see [Load Request and
                              Response](#building-apps_load-uninstall-removal-requests).


                              ### The Remove User Request

                              In addition to their ability to add users, store
                              admins can also remove users. This action
                              generates a GET request to the Remove User
                              Callback URI that you provided in My Apps. Your
                              app should delete from its records the user
                              identified in the request.


                              For further information, please see [Remove User
                              Request](#building-apps_load-uninstall-removal-requests).
                            header:
                              anchor: building-apps_multi-user-support
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## External App Installation


                              Apps can be installed from outside the BigCommerce
                              control panel. For example, you could create an
                              install link on your company’s site that directs
                              the merchant to download your app. This section
                              provides a step-by-step guide.


                              ### Create an Install Button


                              First, embed an install button like the one below,
                              at any Web location from which you’d like to
                              enable app installation:
                            header:
                              anchor: building-apps_external-app-installation
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6490/1539297285625
                          - type: text
                            data: >+
                              Redirect anyone who presses your button to:
                              `https://login.bigcommerce.com/app/<your-app's-client-id>/install`

                          - type: text
                            data: >-
                              ### Configure Your Button

                              Upon click, your button should open a modal
                              similar to the image below. We recommend a modal
                              sized 900px wide by 450px high:
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6490/1539297431440
                          - type: text
                            data: >-
                              Your button will link merchants to BigCommerce’s
                              install endpoint for your application. Once the
                              merchant clicks the link, they will be prompted to
                              log in, then authorize your application, just like
                              in the [normal installation
                              flow](#building-apps_installation-update-sequence).
                          - type: text
                            data: >-
                              ### Render Success/Failure Pages


                              Modify your application code to serve either a
                              success or failure page, depending on whether the
                              external installation was successful or
                              unsuccessful.


                              If you skip this step, your application will load
                              in the iframe created by your button. To ensure a
                              good experience for your merchants, we strongly
                              recommend that you return a confirmation page,
                              instead of allowing your application to be loaded
                              in that modal.


                              ### Handling Errors


                              If your application’s installation was initiated
                              and completed through an external link,
                              BigCommerce will send your auth callback endpoint
                              an extra parameter called external_install.

                              If you receive this parameter and there are no
                              errors, call:


                              `https://login.bigcommerce.com/app/<your_app_client_id>/install/succeeded`


                              If there were errors, call:

                              `https://login.bigcommerce.com/app/<your_app_client_id>/install/failed`


                              Below is a sample code snippet of an auth callback
                              that does this:
                            header: {}
                          - type: code
                            data: |2-
                                 if params['external_install']
                                      return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/succeeded'
                                  end

                                  redirect '/'

                              rescue => e
                                  if params['external_install']
                                      return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/failed'
                                  end
                            header:
                              title: Auth Callback
                          - type: text
                            data: >-
                              Depending on which endpoint you call, we will
                              render one of the following success/failed pages
                              to the modal.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## User Interface Constraints


                              Single-click apps benefit from a high level of
                              integration with the BigCommerce platform. Users
                              interacting with your app will enjoy a seamless
                              experience. BigCommerce achieves this by rendering
                              your app&#39;s user interface inside of an iframe
                              within the control panel. To ensure acceptance
                              into the App Marketplace, your app should be able
                              to perform all of its functions inside of the
                              iframe.


                              While very usable and friendly, the iframe
                              approach does require special attention from app
                              developers. The remainder of this page discusses
                              several functional areas to consider when
                              designing and developing your app.


                              ### About Mixed Content


                              The BigCommerce control panel is served over
                              TLS/SSL. Your app must be hosted on a web server
                              that accepts and sends TLS/SSL requests. In
                              addition, all of the resources referenced in the
                              HTML that you present to the end users must be
                              served over TLS/SSL. You may find
                              protocol-agnostic addressing helpful.


                              If the user interface retrieves images, scripts,
                              or other assets over a connection not encrypted
                              with TLS/SSL, the user will experience errors and
                              possibly an inability to interact with your app.
                              Before submitting your app, use an <a
                              href="https://www.jitbit.com/sslcheck/"
                              target="_blank">online crawler</a> to check for
                              insecure content.


                              ### About Same-Origin Policies


                              <a
                              href="http://en.wikipedia.org/wiki/Same-origin_policy"
                              target="_blank">Same-origin policies</a> restrict
                              apps running within iframes from performing
                              certain activities, such as interacting with other
                              services and making OAuth connections. While apps
                              that operate within the BigCommerce iframe get
                              strong preference during App Marketplace
                              considerations, we sometimes make exceptions for
                              apps that need to interact with, and authenticate
                              to, other services. If your app requires this, we
                              advise you to open a new tab for actions that
                              cannot occur within the iframe.


                              ### About P3P and Cookies


                              Internet Explorer is one of the browsers that
                              BigCommerce [supports](#supported-browsers), and
                              our merchants do use it to access the control
                              panel. If your app needs to set a cookie, you will
                              need to craft a <a
                              href="http://en.wikipedia.org/wiki/P3P"
                              target="_blank">P3P policy</a>. Otherwise, your
                              app will experience issues on Internet Explorer.
                              Please see the following pages for more
                              information:


                              *   <a
                              href="http://www.techrepublic.com/blog/software-engineer/craft-a-p3p-policy-to-make-ie-behave/"
                              target="_blank">Craft a P3P policy to make IE
                              behave</a>

                              *   <a
                              href="http://blogs.msdn.com/b/ieinternals/archive/2013/09/17/simple-introduction-to-p3p-cookie-blocking-frame.aspx"
                              target="_blank">MSDN Intro to P3P Cookie
                              Blocking</a>
                            header:
                              anchor: building-apps_user-interface-constraints
              - title: Webhooks
                route:
                  path: /webhooks
                data:
                  children:
                    - title: Overview
                      route:
                        path: /about-webhooks
                      data:
                        blocks:
                          - type: html
                            data: "<h1>About Webhooks</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#about-webhooks_authentication\">Authentication</a></li>\n        <li><a href=\"#about-webhooks_lightweight-callback-payload\">Lightweight Callback Payload</a></li>\n        <li><a href=\"#about-webhooks_request-and-response\">Request and Response</a></li>\n    \t\t<li><a href=\"#about-webhooks_receiving-the-callback\">Recieving the Callback</a></li>\n    \t\t<li><a href=\"#about-webhooks_respond-to-webhook-callbacks\">Responding to the Callback</a></li>\n        <li><a href=\"#about-webhooks_callback-retry-mechanism\">Callback Retry Mechanism</a></li>\n        <li><a href=\"#about-webhooks_webhook-security\">Webhook Security</a></li>\n    \t\t<li><a href=\"#about-webhooks_webhook-troubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#about-webhooks_tools-for-debugging-and-testing-webhooks\">Tools for Debugging</a></li>\n        <li><a href=\"/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              Webhooks allow app developers to be notified, in
                              near real-time, when specific events occur on a
                              BigCommerce store. For example, your app may need
                              to perform an action when a new order is created,
                              a product’s inventory decreases, or an item is
                              added to a shopper’s cart. When a subscribed event
                              occurs on a store, BigCommerce will POST a payload
                              to your app’s callback URI so your app can take
                              some action based on that event.
                          - type: callout
                            data:
                              type: warning
                              title: >-
                                Multiple Events Are Triggered during Bulk Data
                                Imports
                              body: >-
                                Bulk data imports will trigger the relevant
                                events for every record affected. For example,
                                if you have a hook on `store/product/created`,
                                when the merchant imports 2,000 products, we
                                will send 2,000 individual callback events.
                            header: {}
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Authentication


                              Webhooks are authenticated using Oauth and support
                              the JSON media type. Basic auth and XML are not
                              supported.


                              Before you  can begin to send and receive
                              requests, you must have the following:


                              * **A store:** You can get a sandbox store by
                              joining the Partner Program.

                              * **OAuth Client ID:** Obtained by creating an API
                              Account.

                              * **OAuth token:** Obtained by creating an API
                              Account.

                              * **Valid TLS/SSL configuration:** Verify your app
                              server’s setup at the following site:
                              [https://sslcheck.globalsign.com](https://sslcheck.globalsign.com)
                            header:
                              anchor: about-webhooks_authentication
                          - type: callout
                            data:
                              type: error
                              title: Connection Breakers
                              body: >-
                                Any one of the following conditions on your app
                                server will cause a connection failure:

                                * Hostname/DNS mismatch.

                                * Self-signed certificate.

                                * Intermediate certificates not loaded.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Lightweight Callback Payload


                              When a subscribed event occurs, we send a light
                              payload with only minimum details regarding the
                              event that’s been triggered. This gives you
                              maximum flexibility as to how you want to handle
                              the notification in your application. For
                              instance, if you subscribe to the
                              `store/order/statusUpdated` event, we’ll send you
                              the order ID when the status is updated. You might
                              want to handle the notification by fetching the
                              full order details via a request to the Orders
                              resource.


                              An example payload follows:


                              ```

                              {
                               "store_id":11111,
                               "producer":"stores/abcde",
                               "scope":"store/order/statusUpdated",
                               "data":{
                                       "type":"order",
                                       "id":173331
                                      },
                               "hash":"3f9ea420af83450d7ef9f78b08c8af25b2213637"
                               }
                              ```
                            header:
                              anchor: about-webhooks_lightweight-callback-payload
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Request and Response


                              *Never worked with webhooks before? Check out the
                              tutorial on creating webhooks.*


                              All webhooks requests must include the following
                              in their HTTP headers:


                              ```
                                   Accept: application/json
                                   Content-Type: application/json
                                   X-Auth-Client: <the OAuth client id>
                                   X-Auth-Token: <the OAuth token>
                              ```
                            header:
                              anchor: about-webhooks_request-and-response
                          - type: code
                            data: |-
                              curl -X POST \
                                https://api.bigcommerce.com/stores/store_hash/v2/hooks \
                                -H 'Accept: application/json' \
                                -H 'X-Auth-Client: your-client-id \
                                -H 'X-Auth-Token: your-auth-token \
                                -d '{
                                "scope": "store/cart/lineItem/*",
                                "destination": "https://myapp.herokuapp.com/",
                                "is_active": true
                            header:
                              title: '/POST Webhook '
                              subtitle: >-
                                Request:
                                https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks
                              anchor: post-webhooks
                            config:
                              mode: shell
                          - type: code
                            data: |2-
                                  {
                                      "id": 14270456,
                                      "client_id": "your-client-id",
                                      "store_hash": "your_store_hash",
                                      "scope": "store/cart/lineItem/*",
                                      "destination": "https://779aca97.ngrok.io/webhooks",
                                      "headers": null,
                                      "is_active": true,
                                      "created_at": 1531326542,
                                      "updated_at": 1531337178
                                  }
                            header:
                              title: Response 201 Created
                              subtitle: /POST Webhook
                              anchor: response-post-webhooks
                            config:
                              mode: json
                          - type: text
                            data: "| Name |Description | Type\n|--|--|--|\n| id | A read-only value that uniquely identifies a webhook object. Do not attempt to set this value in a PUT or POST. | integer|\n| client_id | The OAuth client ID that uniquely identifies your application. BigCommerce returns this name-value pair in the JSON body of its responses. | string |\n| store_hash | \tThe hash value that uniquely identifies the store. Your application does not need to set this value via the JSON object; instead, you pass it in the path of your API requests. | string |\n|scope| Value is the event you would like to listen for. See List of Webhook Events for the full list of possibilities. Wild Cards are supported for scope. **(Required)** | string |\n| destination | value is the callback’s fully qualified URI. This should be an endpoint configured on your app server to receive webhook payloads. **(Required)** | string |\n| headers |The headers object contains one or more name-value pairs, both string values. If you choose to include a headers object, BigCommerce will include the name-value pair(s) in the HTTP header of its POST requests to your callback URI at runtime. While this feature could be used for any purpose, one is to use it to set a secret authorization key and check it at runtime. This provides an additional level of assurance that the POST request came from BigCommerce instead of some other party, such as a malicious actor. (Optional) | string |\n|is_active | Value specifies whether a webhook is active or inactive. By default, new webhooks will be set to be inactive and will have a blank value. If you want to create a webhook that should be active initially, you can pass the following name-value pair: \"is_active\": true. (Optional) | boolean |\n| created_at | The time at which the webhook was created.| date-time Unix Epoch|\n| updated_at | The time at which the webhook was last updated. | date-time Unix Epock|"
                          - type: text
                            data: >-
                              An HTTP 201 response indicates that the webhook
                              was set successfully.
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                Following the creation of a webhook, it can take
                                up to one minute for BigCommerce to start
                                sending POST requests to your callback URI.
                              title: One-Minute Timeout
                          - type: code
                            data: |
                              //Response 200 OK

                              [
                                  {
                                      "id": 14270466,
                                      "client_id": "your-client-id",
                                      "store_hash": "your_store_hash",
                                      "scope": "store/product/created",
                                      "destination": "https://779aca97.ngrok.io/webhooks",
                                      "headers": null,
                                      "is_active": true,
                                      "created_at": 1531326542,
                                      "updated_at": 1531337178
                                  },
                                  {
                                      "id": 14270713,
                                      "client_id": "your-client-id",
                                      "store_hash": "your_store_hash",
                                      "scope": "store/product/updated",
                                      "destination": "https://779aca97.ngrok.io/webhooks",
                                      "headers": null,
                                      "is_active": false,
                                      "created_at": 1531338589,
                                      "updated_at": 1531338589
                                  }
                              ]
                            header:
                              title: /GET All Webhooks
                              subtitle: >-
                                Request:
                                https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks
                              anchor: get-all-webhooks
                            config:
                              mode: json
                          - type: code
                            data: |+
                              {
                                  "id": 14270466,
                                  "client_id": "your-client-id",
                                  "store_hash": "your_store_hash",
                                  "scope": "store/product/created",
                                  "destination": "https://779aca97.ngrok.io/webhooks",
                                  "headers": null,
                                  "is_active": false,
                                  "created_at": 1531326542,
                                  "updated_at": 1531337178
                              }

                            header:
                              subtitle: >-
                                To get a single webhook use the `id`.  Request:
                                https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id
                              title: /GET a Single Webhook
                              anchor: get-a-single-webhook
                            config:
                              mode: json
                          - type: code
                            data: |
                              {
                               "scope": "store/product/updated",
                               "destination": "https://779aca97.ngrok.io/webhooks",
                               "is_active": false
                              }


                              //Response 200 OK

                              {
                                  "id": 14270466,
                                  "client_id": "ejoftto9hv8xlip01cckcg53v7g3lrl",
                                  "store_hash": "jrah6gmn",
                                  "scope": "store/product/created",
                                  "destination": "https://779aca97.ngrok.io/webhooks",
                                  "headers": null,
                                  "is_active": false,
                                  "created_at": 1531326542,
                                  "updated_at": 1531337178
                              }
                            header:
                              title: /PUT Webhook
                              subtitle: >-
                                Update a webhook using the id. Once the webhook
                                is created all the fields below can be changed
                                via an update request. Request:
                                https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id
                              anchor: update-a-webhook
                            config:
                              mode: json
                          - type: code
                            data: |
                              //Response 200 OK
                              {
                                  "id": 14270466,
                                  "client_id": "ejoftto9hv8xlip01cckcg53v7g3lrl",
                                  "store_hash": "jrah6gmn",
                                  "scope": "store/product/created",
                                  "destination": "https://779aca97.ngrok.io/webhooks",
                                  "headers": null,
                                  "is_active": false,
                                  "created_at": 1531326542,
                                  "updated_at": 1531337178
                              }
                            header:
                              title: /DELETE a Wehbook
                              subtitle: >-
                                Request:
                                https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id
                            config:
                              mode: json
                          - type: text
                            data: >-
                              There is not a way to delete all webhooks on a
                              store. Run a GET request for the webhook id, then
                              send a request to the delete URI to remove each
                              one. It returns a 200 OK for the response with the
                              deleted hook. When requesting a list of hook, the
                              hook id is not available.


                              If webhooks are no longer being used, either
                              delete them or set `is_active:false`.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Receiving the Callback


                              You’ll need to build an application and configure
                              your server to receive the callback we send when
                              events are triggered. 


                              Need to set up a quick destination URL for
                              testing? See Tools for Debugging and Testing
                              Webhooks.
                            header:
                              anchor: about-webhooks_receiving-the-callback
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Respond to Webhook Callbacks


                              You’ll need to build an application and configure
                              your server to receive the callback we send when
                              events are triggered.


                              To acknowledge that you received the webhook
                              without issue, your server should return a 200
                              HTTP status code. Any other information you return
                              in the request headers or request body will be
                              ignored. Any response code outside the 200 range,
                              including 3_xx_ codes, will indicate to us that
                              you did not receive the webhook. When a webhook is
                              not received (for whatever reason), we will retry
                              the callback as described below.


                              Need to set up a quick destination URL for
                              testing? See [Tools for testing
                              webhooks.](#about-webhooks_tools-for-debugging-and-testing-webhooks)
                            header:
                              anchor: about-webhooks_respond-to-webhook-callbacks
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Callback Retry Mechanism


                              The webhooks service will do its best to deliver
                              events to your callback URI. If your server
                              indicates that the webhook payload has not been
                              received, the dispatch service will take the
                              following actions:

                              If an app server responds to a webhook payload
                              with anything other than a 2_xx_ response, or
                              times out, the app will be blocked for 60 seconds.

                              Webhooks created during that 60-second block will
                              be queued up to send on the next scheduled retry
                              attempt after the block expires, so that webhooks
                              are not lost.


                              The webhook dispatcher will then attempt several
                              retries (at increasing intervals) until the
                              maximum retry limit is reached.


                              ### Retry Intervals


                              * 60 seconds after the most recent failure  

                              * 180 seconds after the most recent failure  

                              * 180 seconds after the most recent failure  

                              * 300 seconds after the most recent failure  

                              * 600 seconds after the most recent failure  

                              * 900 seconds after the most recent failure  

                              * 1800 seconds after the most recent failure  

                              * 3600 seconds after the most recent failure  

                              * 7200 seconds after the most recent failure  

                              * 21600 seconds after the most recent failure  

                              * 50400 seconds after the most recent failure  

                              * 86400 seconds (24 hours) after the most recent
                              failure


                              After the final retry attempt (cumulatively, 48
                              hours after the first delivery attempt), the
                              webhook will automatically be deactivated, and we
                              will send an email to the developer’s email
                              address registered on the subscribing app. You can
                              reactivate the webhook by setting the `is_active`
                              flag back to true via a `/PUT` request to the
                              hooks resource.
                            header:
                              anchor: about-webhooks_callback-retry-mechanism
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Webhook Security

                              To ensure that webhook payloads are secure against
                              activity by a malicious actor, we take a
                              three-pronged approach:


                              * Webhook payloads contain minimal information
                              about the store and event, for example the ID
                              identifying the order or cart. To access
                              potentially sensitive information on a store, a
                              malicious actor would need to be fully
                              authenticated against that store’s API in order to
                              request full details.

                              * Webhook payloads are sent over a TLS-encrypted
                              connection.

                              * For added security, you can include custom
                              headers in your webhook creation request, and
                              these headers will be sent in the payload when an
                              event you subscribe to occurs. If your app
                              endpoint is secured by basic authentication, you
                              could set your own basic auth headers to
                              authenticate the payload at runtime.
                            header:
                              anchor: about-webhooks_webhook-security
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Troubleshooting


                              ### Why am I not receiving event payloads to my
                              callback URI?

                              If your app does not return an HTTP 2_xx_ to
                              BigCommerce after receiving the webhook event
                              payload, BigCommerce considers it a failure.
                              BigCommerce will keep trying for a little over 48
                              hours. At the end of that time, BigCommerce sends
                              an email to the email address set during app
                              registration and disables the webhook by setting
                              the is_active flag to false.


                              You can proactively check to make sure that
                              everything is OK by periodically making a GET
                              request and checking the is_active flag.


                              If you receive an email or discover that the
                              is_active flag has been flipped to false, try the
                              following:


                              Check to see if your app is responding to the
                              event payload with something other than HTTP 200.

                              Check to make sure that your server has a valid
                              TLS/SSL setup. One way to do this is by visiting
                              the following website:
                              https://sslcheck.globalsign.com. Any of the
                              following will cause the TLS/SSL handshake to
                              fail:

                              Self-signed certificate.

                              Host name of the certificate does not match the
                              server’s DNS.

                              Your server’s key or trust store has not been
                              loaded up with the intermediate certificates
                              necessary to establish the chain of trust.

                              Once you have resolved the issue preventing the
                              connection, send a PUT request to flip the
                              is_active flag back to true. This will cause
                              BigCommerce to start sending the event payloads to
                              your callback URI again.


                              ### Why am I not receiving a 201 response after
                              creating a webhook?

                              After sending a POST request to create a webhook,
                              you should get an HTTP 201 back. If you do not,
                              check your TLS/SSL setup and be sure that your
                              request contains the following headers:


                              ```
                                   Accept: application/json
                                   Content-Type: application/json
                                   X-Auth-Client: <the OAuth client id>
                                   X-Auth-Token: <the OAuth token>
                              ```
                            header:
                              anchor: about-webhooks_troubleshooting
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Tools for Debugging and Testing Webhooks


                              **[ngrok](https://ngrok.com/)**  

                              As you are building your integration, you might
                              want to test webhooks on your local dev machines.


                              We suggest using ngrok, which you can use to
                              easily set up tunnels between a server running on
                              localhost and a public URL. This will enable you
                              to send our webhooks to your localhost
                              environments via a public URL. No production push
                              is required.


                              Need help on ngrok and webhooks see our
                              [tutorial](/api-docs/getting-started/webhooks/setting-up-webhooks).


                              **[Webhook Tester](https://webhook.site/#/)**  

                              This allows for webhooks to be quickly tested or
                              checked. 
                            header:
                              anchor: >-
                                about-webhooks_tools-for-debugging-and-testing-webhooks
                    - title: Webhooks Tutorial
                      route:
                        path: /setting-up-webhooks
                      data:
                        blocks:
                          - type: html
                            data: "<h1>Registering and Testing Webhooks</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#setting-up-webhooks_intro\">Intro</a></li>\n    \t\t<li><a href=\"#setting-up-webhooks_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#setting-up-webhooks_create-project-folder\">Create Project Folder</a></li>\n        <li><a href=\"#setting-up-webhooks_install-ngrok\">Install ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_create-express-app\">Create Express App</a></li>\n        <li><a href=\"#setting-up-webhooks_start-the-app-ngrok\">Start the App and ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_fire-webhooks\">Trigger the Webhook Event</a></li>\n        <li><a href=\"#setting-up-webhooks_troubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Intro


                              When testing your application locally, ngrok is a
                              helpful tool for viewing the webhook responses
                              that BigCommerce sends to your app. Ngrok creates
                              a publicly accessible tunnel URL to an application
                              running on your machine's localhost. Ngrok also
                              provides a web interface you can use to view HTTP
                              request details.


                              In this tutorial, we'll install ngrok, register a
                              webhook on your store, and then observe the
                              response when the webhook event is triggered.
                            header:
                              anchor: setting-up-webhooks_intro
                          - type: text
                            data: >-
                              ## Prerequisites


                              - NPM is installed (installed automatically with
                              Node)

                              - Familiar with Command Line

                              - Familiar with Postman

                              - [API Access Token & Client
                              ID](/api-docs/getting-started/about-api/authentication#authentication_getting-api-credentials)
                              with [scope] set to Information & Settings
                              Read-Only and Products Read-Only.

                              - [Webhooks
                              Overview](/api-docs/getting-started/webhooks/about-webhooks)
                            header:
                              anchor: setting-up-webhooks_prerequisites
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Create Project Folder


                              1. Open the terminal and create a folder that will
                              hold ngrok and the Node app, then move into that
                              directory.


                              ```
                                  mkdir webhooks-test
                                  cd webhooks-test
                              ```
                            header:
                              anchor: setting-up-webhooks_create-project-folder
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Install ngrok


                              ### Mac/Linux


                              1. Visit https://ngrok.com/ and click download.

                              2. Choose the version for your operating system.

                              3. Unzip ngrok and place the application in the
                              project folder that you created.


                              This can be accomplished in one command:

                              unzip "file_to_unzip" -d  destination


                              `unzip
                              /Users/your-computer/Downloads/ngrok-stable-darwin-amd64.zip
                              -d /Users/your-computer/Documents/webhooks-test`


                              ### Windows


                              1. Visit https://ngrok.com/ and click download.

                              2. Choose the version for your operating system.

                              3. Unzip ngrok and place the application in the
                              project folder that you created.

                              4. Make sure ngrok is referenced in your [PATH
                              environment
                              variable](https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them).
                            header:
                              anchor: setting-up-webhooks_install-ngrok
                          - type: callout
                            data:
                              type: success
                              body: >
                                At this point you should have a project folder
                                with ngrok unzipped inside of it. 
                              title: Checkpoint
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Create Express App\n\n1. In the terminal run `npm init`. You will be prompted with several questions about the app setup. Feel free to hit return to accept the default values.  The final screen will look something like this: \n\n```\n{\n  \"name\": \"webhooks-test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"webhooks-test\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```\n\n2. Take note of the value in \"main\", `index.js`. \n3. Create a file in your project folder called index.js. `touch index.js` or `copy nul > index.js` for Windows.\n4. Install [Express](https://expressjs.com/en/starter/installing.html) using the terminal in the same project folder. `npm install express --save`\t\t\t "
                            header:
                              anchor: setting-up-webhooks_create-express-app
                          - type: callout
                            data:
                              type: success
                              body: >-
                                At this point your project folder should
                                contain:

                                index.js

                                node_modules

                                package.json

                                ngrok

                                package-lock.json
                              title: Checkpoint
                          - type: text
                            data: >-
                              4. Open index.js in a text editor and add this
                              code snippet: 



                              ```
                                  const express = require('express')
                                  const app = express()
                                      app.post('/webhooks', function (req, res) {
                                      res.send('OK')
                                  })
                                  app.listen(3000, function () {
                                      console.log('Listening for webhooks on port 3000')
                                  })
                              ```



                              The app is starting a server and listening on port
                              3000, then returning a response of ok once it
                              receives a POST to the /webhooks url.


                              ```

                              app.post('/webhooks', function (req, res) {
                               res.send('OK')
                              })

                              ```



                              From Express
                              [Website](https://expressjs.com/en/starter/basic-routing.html):

                              `app.METHOD(PATH, HANDLER)`

                              - app is an instance of express.

                              - METHOD is an [HTTP request
                              method](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods),
                              in lowercase.

                              - PATH is a path on the server.

                              - HANDLER is the function executed when the route
                              is matched.

                              - Res.send is the body parameter that sends the
                              HTTP response.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Start the App and ngrok


                              1. Open two terminal tabs. In both tabs, navigate
                              to your project folder. 

                              2. In one tab run the app. `node index.js`

                              3. In the other start ngrok. `./ngrok http 3000`
                            header:
                              anchor: setting-up-webhooks_start-the-app-ngrok
                          - type: tabs
                            data:
                              children:
                                - title: node index.js
                                  blocks:
                                    - type: text
                                      data: >-
                                        ```

                                        BIGCOMMERCE:webhooks your.computer$ node
                                        index.js

                                        Listening for webhooks on port 3000

                                        ```
                                - title: ngrok http 3000
                                  blocks:
                                    - type: image
                                      data: >-
                                        //s3.amazonaws.com/user-content.stoplight.io/6012/1531500085650
                                      config:
                                        centered: true
                                      header:
                                        title: nrgok terminal
                          - type: text
                            data: >-
                              ngrok returns two values we will need to register
                              a webhook and observe the response: 

                              - **Web Interface:** Where you can monitor the
                              hook from a browser. `https://127.0.0.1:4040`

                              - **Forwarding:** The webhook destination. Make
                              note of the https version. For example,
                              `https://6a35e97b.ngrok.io`.


                              4. Open a web browser and copy in your Web
                              Interface URL: `http://127.0.0.1:4040`.  This is
                              where webhook payloads will appear when they fire.
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1531500191661
                            header:
                              title: ngrok Web Interface
                            config:
                              centered: true
                              maxWidth: '800'
                              maxHeight: '800'
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              Subscribe to the `store/product/updated` event: 


                              1. Create a POST request using the try it now box
                              below or your API enviroment of choice to the
                              request
                              URL:`https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks`. 

                              Replace store_hash with the value from your
                              store's API path.

                              2. Create a request body where "scope" is the
                              webhook event we are subscribing to and
                              "destination" is your ngrok forwarding url with
                              /webhooks appended (the route specified in our
                              Express app):


                              ```

                              {
                               "scope": "store/product/updated",
                               "destination": "https://6a35e97b.ngrok.io/webhooks",
                               "is_active": true
                              }

                              ```
                               

                              3. Update the request headers to contain:

                              ```
                                  Accept: application/json
                                  Content-Type: application/json
                                  X-Auth-Client: {{the OAuth client id}}
                                  X-Auth-Token: {{the OAuth token}}
                              ```

                              4. Check all the values and then hit POST. If
                              successful, the response will be 201 Created.
                          - type: http
                            data:
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v2/hooks
                              headers:
                                Accept: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{the OAuth client id}'
                                X-Auth-Token: '{the OAuth token}'
                              body: |
                                {
                                "scope": "store/product/updated",
                                 "destination": "https://{your-url}.ngrok.io/webhooks",
                                 "is_active": true
                                }
                            header:
                              title: Create a Webhook
                              anchor: create-a-webhook
                          - type: code
                            data: |-
                              {
                                  "id": 14263419,
                                  "client_id": "your-client-id",
                                  "store_hash": "your-store-hasha",
                                  "scope": "store/product/updated",
                                  "destination": "https://6a35e97b.ngrok.io/webhooks",
                                  "headers": null,
                                  "is_active": true,
                                  "created_at": 1531256030,
                                  "updated_at": 1531256030
                              }
                            header:
                              title: 201 Created Response
                              anchor: 201-response
                            config:
                              mode: json
                          - type: text
                            data: >-
                              ## Trigger the Webhook Event

                              Webhooks can be triggered by actions performed by
                              a shopper on the storefront or user within the
                              control panel, or actions performed via API. To
                              illustrate this point, we'll demonstrate both
                              methods.


                              ### Update via the Control Panel


                              1. From your store’s control panel, navigate to
                              Products > View. Choose a product and edit product
                              details like name or description. 

                              2. Click **Save**.
                            header:
                              anchor: setting-up-webhooks_fire-webhooks
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1531500906129
                            config:
                              centered: true
                              maxWidth: '800'
                              maxHeight: '800'
                            header:
                              title: BigCommerce Control Panel
                              subtitle: Products > View
                          - type: text
                            data: >-
                              3. Visit the ngrok web interface address  and
                              check for a 200 response. 
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1531500945565
                            config:
                              centered: true
                              maxWidth: '800'
                              maxHeight: '800'
                            header:
                              title: ngrok Web Interface
                          - type: text
                            data: >-
                              The Summary shows that the webhook has fired and
                              our Express app has returned a 200 response along
                              with the text OK. The response is generated by
                              res.send(‘OK’) in our app code, but this text can
                              be changed to say something different or even post
                              the response to another app. For more info, see
                              [Express
                              Routing](https://expressjs.com/en/guide/routing.html).


                              The record of the HTTP request will also show in
                              the terminal tab running ngrok.
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1531500989467
                            header:
                              title: ngrok Terminal Response
                            config:
                              centered: true
                              maxWidth: '800'
                              maxHeight: '800'
                          - type: text
                            data: "### Update Via the API\nCreate a PUT request to the product to be updated, replacing 124 with the product’s ID: \n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/124`\n\nIn this example, the price of product_id 124 is being changed to 12.99:\n\n```\n{\n\t\"price\": 12.99\n}\n```\n\nAfter hitting send, check the ngrok web interface. You may see a single event or several based on how many times the product has been updated in the previous step."
                          - type: http
                            data:
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}
                              headers:
                                X-Auth-Client: '{Your-X-Auth-Client}'
                                X-Auth-Token: '{Your-X-Auth-Token}'
                                Accept: application/json
                                Content-Type: application/json
                              method: put
                              body: |-
                                {
                                  "price": 12.99
                                }
                            header:
                              title: Update a Product
                              anchor: update-a-product-webhooks
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1531501115256
                            header:
                              title: ngrok Web Interface
                            config:
                              centered: true
                              maxWidth: '800'
                              maxHeight: '800'
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              That’s it! In this walkthrough you created a
                              webhook, set up a server to accept the response,
                              and used ngrok to observe the webhook payload.


                              Want to keep going? Try changing the text in
                              `res.send()` to a custom response, print the
                              response to a webpage, or register a different
                              webhook event. 
                          - type: callout
                            data:
                              body: >-
                                Unless you have a paid ngrok account, the
                                destination URL will only be valid for a few
                                hours. After that, the webhook will stop
                                working. Send a DELETE request to the specific
                                webhook ID to disable the hook. 
                              type: warning
                              title: URL Timeout
                          - type: http
                            data:
                              method: delete
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v2/hooks/{hook_id}
                              headers:
                                X-Auth-Client: '{your-client-id}'
                                X-Auth-Token: '{your-auth-token}'
                                Content-Type: application/json
                                Accept: application/json
                            header:
                              title: Delete the webhook
                              subtitle: >-
                                Get the hook_id by either getting it from the
                                original /POST response or by sending a /GET
                                request to the hooks resource
                              anchor: delete-webhook
                          - type: text
                            data: >-
                              ## Troubleshooting

                              1. Getting a 404 error using the root (/) url?


                              Add this snippet to your code to respond to
                              incoming get requests with 'hello'.


                              ```

                              app.get('/',(req, res)=>{
                                  res.send('Hello!');
                              }); 

                              ```


                              2. Getting error ngrok not found?

                              There are two ways to fix this. Your local setup
                              will determine which command will work.

                              Use the command `mv ngrok /usr/local/bin `to move
                              ngrok to your local bin folder. This way it
                              becomes available globally. 

                              Use the command `./ngrok http 3000` to run ngrok
                              as a sudo user. 


                              3. Windows Users

                              If you are having trouble getting ngrok started
                              try setting the PATH. 
                                  - [What are PATH and other environment variables, and how can I set or use them?](https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them)
                            header:
                              anchor: setting-up-webhooks_troubleshooting
                    - title: Webhook Events
                      route:
                        path: /webhook-events
                      data:
                        blocks:
                          - type: html
                            data: "<h1>List of Webhook Events</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#webhook-events_orders\">Orders</a></li>\n        <li><a href=\"#webhook-events_products\">Products</a></li>\n        <li><a href=\"#webhook-events_category\">Category</a></li>\n        <li><a href=\"#webhook-events_sku\">SKU</a></li>\n        <li><a href=\"#webhook-events_customer\">Customer</a></li>\n        <li><a href=\"#webhook-events_store\">Store</a></li>\n        <li><a href=\"#webhook-events_cart\">Cart</a></li>\n        <li><a href=\"#webhook-events_shipment\">Shipment</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Orders


                              | Name | Description |

                              | ---| --- |

                              | store/order/* | Subscribe to all store/order
                              events  |

                              | store/order/created | A new order is created. It
                              can be manual or created on the storefront | 

                              | store/order/updated| Order is updated |

                              | store/order/archived | Order is archived |

                              | store/order/deleted | Order is deleted |

                              | store/order/statusUpdated | Order status is
                              changed |

                              | store/order/message/created | Order message is
                              created by customer or in control panel |
                            header:
                              anchor: webhook-events_orders
                          - type: code
                            data: |-
                              {
                                "scope": "store/order/statusUpdated",
                                "store_id": "123456",
                                "data": {
                                  "type": "order",
                                  "id": 169,
                                  "status": {
                                    "previous_status_id": 5,
                                    "new_status_id": 9
                                  }
                                },
                                "hash": "6923dda2313a5709b13f9b217a3acd6f8308a0c2",
                                "created_at": 1535486277,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: ' store/order/statusUpdated'
                              anchor: order-status-updated
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Products


                              | Name | Description |

                              | --- | --- |

                              | store/product/*| Subscribe to all store/product
                              events |

                              |store/product/deleted| Product is deleted|

                              | store/product/created | A new product is created
                              |

                              | store/product/updated |Occurs when product
                              details are edited. For a full list of product
                              fields that trigger an updated event, see
                              **Product Updated Events** below |

                              | store/product/inventory/updated| Product
                              inventory is updated. |

                              | store/product/inventory/order/updated| When an
                              order is placed and product inventory is changed.
                              If subscribed, the webhook will fire for products
                              where inventory is being tracked by sku or by base
                              product. |


                              ### Notes on
                              `store/product/inventory/order/updated`

                              The response for
                              `store/product/inventory/order/updated` includes
                              an inventory object containing:


                              **value**: the number of items that the inventory
                              changed by. This can be negative if the inventory
                              is decreased `-3` or positive if an item is
                              returned to the inventory from an order, `+2`


                              **method** : Will always return relative.


                              **id**: The product id


                              **product_id**: The product id


                              ### Product Updated Events


                              Changes to any of the following fields will
                              trigger a `store/product/updated` event:


                              - _Brand_

                              - _Product Type_

                              - _Category_

                              - _Inventory_

                              - _Number Sold_

                              - _Availibility_

                              - _Thumbnail Changed_

                              - _Visibility_

                              - _Featured_

                              - _Name_

                              - _Description_

                              - _Sort Order_

                              - _Price_

                              - _Dimensions_

                              - _Condition_

                              - _Tax Price_
                            header:
                              anchor: webhook-events_products
                          - type: code
                            data: |-
                              {
                                "scope": "store/product/inventory/order/updated",
                                "store_id": "123456",
                                "data": {
                                  "type": "product",
                                  "id": 185,
                                  "inventory": {
                                    "product_id": 185,
                                    "method": "relative",
                                    "value": -1
                                  }
                                },
                                "hash": "dc475e1059f2a67a55818bea29bf6b23ebbda707",
                                "created_at": 1535480603,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/product/inventory/order/updated
                              anchor: product-inventory-order-updated
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Category


                              | Name | Description |

                              |---|---|

                              | store/category/*| Subscribe to all
                              store/category events |

                              | store/category/created | Category is created |

                              | store/category/updated | Category is updated |

                              | store/category/deleted | Category is deleted |
                            header:
                              anchor: webhook-events_category
                          - type: code
                            data: |-
                              {
                                "scope": "store/category/updated",
                                "store_id": "123456",
                                "data": {
                                  "type": "category",
                                  "id": "19"
                                },
                                "hash": "9bb5584b3c28e3bb07164405626bd913c14d2209",
                                "created_at": 1535487935,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/category/updated
                              anchor: category-updated
                            config:
                              mode: json
                          - type: text
                            data: >-
                              ## SKU


                              | Name | Description |

                              | --- | --- |

                              | store/sku/* |Subscribe to all store/sku events |

                              | store/sku/created | A new sku is created |

                              | store/sku/updated | Sku is updated |

                              | store/sku/deleted| Sku is deleted |

                              | store/sku/inventory/updated| |

                              | store/sku/inventory/order/updated| This webhook
                              will fire if inventory is being tracked by sku on
                              a product. It will also fire the
                              store/product/inventory/order/updated webhook. |


                              ### Notes on `store/sku/inventory/order/updated`


                              Included in the response is a data object:


                              **value**: the number of items that the inventory
                              changed by. This can be negative if the inventory
                              is decreased `-3` or positive if an item is
                              returned to the inventory from an order, `+2`


                              **method** : Will always return relative.


                              **type**: Will always be sku


                              **variant_id**: Id of the variant
                            header:
                              anchor: webhook-events_sku
                          - type: code
                            data: |-
                              {
                                "scope": "store/sku/inventory/order/updated",
                                "store_id": "123456",
                                "data": {
                                  "type": "sku",
                                  "id": 330,
                                  "inventory": {
                                    "product_id": 184,
                                    "method": "relative",
                                    "value": +2,
                                    "variant_id": 364
                                  }
                                },
                                "hash": "dc475e1059f2a67a55818bea29bf6b23ebbda707",
                                "created_at": 1535480603,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/sku/inventory/order/updated
                              anchor: sku-inventory-order-updated
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Customer

                              | Name | Description |

                              |---|---|

                              | store/customer/* | Subscribe to all
                              store/customer events |

                              | store/customer/created | A new customer is
                              created|

                              | store/customer/updated | Customer is updated.
                              Does not currently track changes to the customer
                              address. |

                              |store/customer/deleted | Customer is deleted |
                            header:
                              anchor: webhook-events_customer
                          - type: code
                            data: |-
                              {
                                "scope": "store/customer/deleted",
                                "store_id": "123456",
                                "data": {
                                  "type": "customer",
                                  "id": 10
                                },
                                "hash": "4bf08f1ad81eeb460eb12f99f7fd2226b6ea0911",
                                "created_at": 1535488840,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/customer/deleted
                              anchor: customer-deleted
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Store

                              |Name|Description|

                              |---|---|

                              | store/app/uninstalled | Occurs when a client
                              store is cancelled and uninstalled from the
                              platform |

                              |store/information/updated | Occurs when changes
                              are made to store settings. For a full list of
                              fields that can trigger this event, see **Store
                              Information Updated Events** below |


                              ### Store Information Updated Events


                              Changes to the following store settings will
                              trigger a `store/information/updated` event:


                              * *Store Name*

                              * *Store Address*

                              * *Store Address*

                              * *Store Phone Number*

                              * *Admin Email*

                              * *Order Email*

                              * *Display Date Format*

                              * *Export Date Format*

                              * *Store DTS Correction*

                              * *Store Time Zone*

                              * *Language*

                              * *Default Currency*

                              * *Currency Token*

                              * *Decimal Token*

                              * *Thousands Place*

                              * *Currency Location*

                              * *Weight Measurement*

                              * *Length Measurement*

                              * *Length Measurement*

                              * *Dimensions Decimal Places*

                              * *Dimensions Decimal Token*

                              * *Plan Name*

                              * *Plan Level*

                              * *Store Logo*

                              * *Mobile Template Logo*

                              * *Tax Entered With Prices*

                              * *Stencil Template Enabled* 
                            header:
                              anchor: webhook-events_store
                          - type: code
                            data: |-
                              {
                                "scope": "store/information/updated",
                                "store_id": "123446",
                                "data": {
                                  "type": "store"
                                },
                                "hash": "c553845e0a5e28dc8b0ea494458692a25586a294",
                                "created_at": 1535489273,
                                "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/information/updated
                              anchor: store-information-updated
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Cart


                              | Name | Description |

                              | --- | --- |

                              | store/cart/lineItem/* | This webhook will fire
                              when a change occurs to line items in the cart.
                              This can be items added to a cart, removed or
                              updated.(Ex. change to quantity, product options
                              or price). |

                              | store/cart/lineItem/created | When a new item is
                              added to the cart  |

                              | store/cart/lineItem/updated | When an item’s
                              quantity has changed or the product options
                              change. |

                              | store/cart/lineItem/deleted | When an item is
                              deleted from the cart|

                              | store/cart/created | This webhook will fire
                              whenever a new cart is created either via a
                              storefront shopper adding their first item to the
                              cart or when a new cart being created via an API
                              consumer. If it is from the storefront, then it
                              fires when the first product is added to a new
                              session.(The cart did not exist before) For the
                              API it means a  `POST`  to /carts, (V3 and
                              Storefront API). The  `store/cart/updated`  will
                              also fire.|

                              | store/cart/updated | This webhook is fired
                              whenever a cart is modified through the changes in
                              its line items. Eg. when a new item is added to a
                              cart, an existing item’s quantity is updated, when
                              the email changes during guest checkout or an
                              existing item is deleted, the cart is modified
                              triggering this webhook. The payload will include
                              the ID of the cart being updated. <br> This
                              webhook is also fired along with cart created
                              because the first product being added to an empty
                              cart triggers an update. <br> - Logging into
                              customer account after creating a cart (email is
                              inherited from customer account email) <br>-
                              Entering email address via guest checkout <br>
                              -Changing the email in guest checkout |

                              | store/cart/deleted| This webhook will fire
                              whenever a cart is deleted. This is can be either
                              when all items have been removed from a cart and
                              it was auto-deleted or it was explicitly removed
                              via a DELETE request by an API consumer. This ends
                              the lifecycle of the cart. The 
                              `store/cart/updated`  webhook will also fire when
                              the last item is removed.|

                              | store/cart/couponApplied | This webhook will
                              fire whenever a new coupon code is applied to a
                              cart. It will include the ID of the coupon code |

                              | store/cart/abandoned | This webhook will fire
                              whenever a cart is considered abandoned. In the
                              BigCommerce store settings if enabled this is
                              usually set to one hour. [See Abandoned
                              Cart](https://support.bigcommerce.com/articles/Public/Using-the-Abandoned-Cart-Saver/).
                              |

                              | store/cart/converted | This hook fires when a
                              cart is converted into an order, which is
                              typically after the payment step of checkout on
                              the storefront. At this point, the Cart is no
                              longer accessible and has been deleted. This hook
                              returns both the Cart ID and Order ID for
                              correlation purposes. |
                            header:
                              anchor: webhook-events_cart
                          - type: code
                            data: |-
                              {
                                  "scope": "store/cart/lineItem/created",
                                  "store_id": "12074048",
                                  "data": {
                                      "type": "cart_line_item",
                                      "id": "c676e997-10fc-4049-bf18-1077a062e16d",
                                      "cartId": "351a367f-4198-4108-996a-753ffc1bce21"
                                  },
                                  "hash": "23d6ae55d612514cbc3f79619535a184bbf10fc0",
                                  "created_at": 1518405112,
                                  "producer": "stores/ojgwnqqd0g"
                              }
                            header:
                              title: store/cart/lineItem/created
                              anchor: cart-lineitem-created
                            config:
                              mode: json
                          - type: code
                            data: "{\n    \"scope\": \"store/cart/created\",\n    \"store_id\": \"12074048\",\n    \"data\": {\n        \"type\": \"cart\",\n        \"id\": \"6121f45e-e3d9-4fcf-828e-b507594a1f96\"\n    },\n    \"hash\": \"54eef7f35f37d770aefcb61c5d3f1df6ed0d5a31\",\n    \"created_at\": 1518403916,\n  \t\"producer\": \"stores/ojgwnqqd0g\"\n}\n  "
                            header:
                              title: store/cart/created
                              anchor: cart-created
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Shipment


                              | Name | Description |

                              | --- | --- |

                              | store/shipment/* | Subscribe to all
                              store/shipment events |

                              | store/shipment/created | Shipment is created |

                              | store/shipment/updated | Shipment is updated |

                              | store/shipment/deleted | Shipment is deleted |
                            header:
                              anchor: webhook-events_shipment
                          - type: code
                            data: |-
                              {
                                  "scope": "store/shipment/created",
                                  "store_id": "123456",
                                  "data": {
                                      "type": "shipment",
                                      "id": 12,
                                      "orderId": "319"
                                  },
                                  "hash": "a6bc11ea25e8f389a16ee919f0c0db6d4099d7de",
                                  "created_at": 1534951410,
                                  "producer": "stores/abcdefg"
                              }
                            header:
                              title: store/shipment/created
                              anchor: shipment-created
        - title: Partner Information
          route:
            path: /partner
          data:
            children:
              - title: Becoming A Partner
                route:
                  path: /becoming-a-partner
                data:
                  blocks:
                    - type: html
                      data: "<h1>Becoming a Partner</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#becoming-a-partner_apply-technology-partner-program\">Apply to the Technology Partner Program </a></li>\n\t\t<li><a href=\"#becoming-a-partner_getting-sandbox-store\">Getting a Sandbox Store</a></li>\n\t\t<li><a href=\"#becoming-a-partner_app-store-approval-requirements\">App Store Approval Requirements</a></li>\n\t\t<li><a href=\"#becoming-a-partner_partner-program-troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        The following sections outline the steps required to
                        become a vendor of Single-Click Apps on the BigCommerce
                        platform. Doing so requires a partnership application,
                        but acceptance will authorize you to provide
                        best-of-breed solutions to the fast-growing online
                        businesses we host.


                        ## Apply to the Technology Partner Program


                        Before you can submit an app to the BigCommerce App
                        Marketplace (which merchants also know as our “app
                        store”), you must become an official Partner.
                        BigCommerce offers app developers free sandbox stores
                        through its Technology Partner Program. To be approved
                        as a partner, you will need:


                        * A website

                        * Intent to offer your app publicly

                        * Ability to support users of your app

                        * Evidence of expertise in app development


                        Once approved, you will receive one or more emails
                        listing your partner credentials and next steps. Your
                        Partner ID will be required to submit your app for App
                        Marketplace consideration. If you do not receive these
                        credentials by email, please contact <a
                        href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>.
                      header:
                        anchor: becoming-a-partner_apply-technology-partner-program
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Getting a Sandbox Store


                        To build a Marketplace app, you will need to have a
                        sandbox store, a developer account at
                        devtools.bigcommerce.com, and be accepted as a
                        BigCommerce partner. We encourage you to create your
                        sandbox store and your Dev Tools account using the same
                        login credentials. A sandbox store cannot process
                        transactions and is for developing and testing apps
                        without the 15-day time time limit of a trial store. 
                      header:
                        anchor: becoming-a-partner_getting-sandbox-store
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          A sandbox store is not required for app development,
                          but if you develop on a trial store instead, after 15
                          days the store will be erased along with the data and
                          a new store will need to be created. Applying to be a
                          partner and getting a sandbox store is best practice. 
                    - type: text
                      data: >-
                        ### Create a Sandbox Store


                        1. Navigate to the [BigCommerce Pricing
                        page](https://www.bigcommerce.com/pricing/).

                        2. Select **START YOUR FREE TRIAL**.

                        3. Where prompted for an email address, enter the same
                        email that you used when applying to become a Technology
                        Partner. 

                        4. Select **CONTINUE TO STORE DETAILS**.

                        5. In the trial store setup form, enter a store name,
                        password, and other details. Then select **CREATE YOUR
                        STORE**.

                        6. Log in to the [Partner
                        Portal](https://partners.bigcommerce.com) and navigate
                        to Support > Create a Case > Issue Type = Portal and
                        Membership. In the case description, enter your new
                        sandbox store’s friendly URL (for example:
                        http://your-store-name.mybigcommerce.com) and request
                        conversion to a Sandbox. We will flag this as a sandbox
                        store to ensure your continued access to the store, as
                        opposed to the normal 15-day trial. This can take around
                        two days.

                        7. When you log into your new store, use the same email
                        that you used for step 3 above.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ##  Troubleshooting


                        ### Are all fields required?


                        While not all fields are required to publish edits for
                        your listing, they are all highly recommended. Without
                        filling in all fields, your listing will be missing
                        information that merchants have seen on other listings
                        and expect to see throughout the Marketplace.


                        ###  I’ve logged in to Dev Tools, but I don’t see my
                        published listing. Where is it?


                        You may be logged in with the wrong account. Each
                        listing can only be owned by one user, so it is likely
                        assigned to another email address. If you’re unable to
                        track down the correct owner account for your solution,
                        please reach out to <a
                        href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>.


                        ### I saved my changes, but my listing detail page on
                        BigCommerce.com/Apps has not updated yet. What’s the
                        problem?


                        The changes will be effective immediately in your
                        control panel app card, but the updates can take up to
                        24 hours to appear on the public BigCommerce
                        Marketplace. Feel free to use this as a grace period to
                        make additional edits as needed.
                      header:
                        anchor: becoming-a-partner_partner-program-troubleshooting
                    - type: callout
                      data:
                        type: success
                        body: >-
                          Questions? Please contact <a
                          href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>
              - title: App Store Approval Requirements
                route:
                  path: /app-store-approval-requirements
                data:
                  blocks:
                    - type: html
                      data: <h1>App Store Approval Requirements</h1>
                    - type: text
                      data: >-
                        Dev Tools is the BigCommerce workspace for developing
                        single-click apps. Within Dev Tools, you'll create the
                        Client Id and Client Secret to authenticate your apps,
                        submit new apps to the App Marketplace, and manage
                        existing Marketplace listings.


                        Dev Tools can be found by clicking [My
                        Apps](https://devtools.bigcommerce.com/) in the upper
                        right corner of the page. 
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## App Store Approval Requirements


                        The requirements to submit an app are listed below, as
                        well as where the information needs to be updated.


                        ### Prerequisites


                        Make sure you’ve applied and been approved for our
                        [Technology Partner
                        Program](https://partners.bigcommerce.com/English/register_email.aspx)
                        before you’re ready to submit your app - you’ll need a
                        valid Partner ID to do so. You’ll also need to accept
                        the Terms & Conditions in the [Partner
                        Portal](https://partners.bigcommerce.com/English/)
                        before we can publish your app.


                        ### General Requirements


                        -   Support resources should be available throughout the
                        app experience, including in your onboarding flow and
                        the app’s dashboard.
                            
                        -   Make sure to reference BigCommerce using the proper
                        formatting. You can visit our [Media
                        Kit](https://www.bigcommerce.com/press/media-kit/) for
                        any BigCommerce branding assets needed.
                            
                        -   The app and app listing should make no references to
                        competitor platforms.


                        -   Use the brand name you’ve given your app for your
                        app title throughout your app content. This listing name
                        should be a concise title for easy identification and
                        should not include additional taglines or descriptors.
                        The name will always appear alongside your summary, so
                        there’s no need to muddy your app’s branding with
                        duplicate content when that tagline is already displayed
                        with it!  
                              
                            - If your solution is a connector to a specific third-party service, or you’re offering only a specific feature, make sure to include both the name of the third party service or feature and your company name (Ex: “Marketplace by BigCommerce”, “Search by BigCommerce”), with your company name following the feature.
                            
                        -   Your app, including any storefront components,
                        should be compatible with all [browsers](#stencil-link)
                        that the BigCommerce platform supports.


                        ### Functionality


                        -   Your app must work as intended, be free of defects,
                        and not conflict with or break any default BigCommerce
                        functionality, including the BigCommerce storefront and
                        checkout.
                            
                        -   Utilize any V3 API resources that are currently
                        available for the data you need from a BigCommerce
                        store.
                            
                        -   The dashboard and callback URLs for your app should
                        operate strictly over HTTPS using a valid SSL
                        certificate.
                            
                        -   Apps should offer [multi-user
                        support](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_multi-user-support)
                        so that permissions for the app can be distributed by
                        the store owner to additional users, from the
                        BigCommerce control panel.
                            
                        -   Any apps that process transactions or handle credit
                        card data will need to pass a PCI Compliance review with
                        our Security team, and also be compatible with our
                        Optimized One-Page Checkout.
                            
                        -   Avoid copy/paste for storefront code - use the [V3
                        Scripts API](/api-reference/content/content-scripts-api)
                        to programmatically inject code snippets into a store’s
                        Script Manager and storefront theme.
                            
                        -   If your app requires payment, you’ll need to collect
                        payment from the user within your app. More info on
                        [monetizing your app
                        here](/api-docs/partner/app-store-approval-requirements).  


                        ### Installation


                        -   Apps should be Single-Click and use our OAuth token
                        exchange flow to authenticate the user
                            
                        -   Single-Click does not mean everything  completed in
                        one click, but that authentication is handled in that
                        click - other tasks can be handled post-auth with the
                        user
                            
                        -   When the app is installed, a styled HTML page must
                        be returned in the iframe of the BigCommerce control
                        panel - this content cannot be blank and must follow our
                        [user-interface
                        constraints](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_user-interface-constraints).
                            
                        -   During the OAuth handshake, be sure to store the
                        user’s token against their store hash - rather than
                        their email address - to avoid any problems with
                        ownership changes or multi-user support.
                    - type: callout
                      data:
                        body: >-
                          If your app cannot meet these requirements, please
                          reach out to <a
                          href="mailto:appstore@bigcommerce.com">appstore@bigcommerce.com</a>
                          in order to discuss the potential for a Connector app
                          listing. In the majority of cases, a Single-Click app
                          will be the more appropriate solution and put your
                          integration on par with other Marketplace partners,
                          but exceptions may be made under certain circumstances
                    - type: text
                      data: >-
                        ### Recommendations


                        -   Have a form to fill out for new users? We recommend
                        auto-filling user input fields with data from the [Store
                        Information API
                        resource](/api-reference/store/store-information-api),
                        which already contains much of the info you might need
                        from a new user.
                            
                        -   No account approval process needed for your app?
                        Consider automatically generating accounts for stores
                        that install your app and don’t match an existing store
                        in your database.
                            
                        -   Require login on launch? Use the information in the
                        BigCommerce payload to your callback URL to authenticate
                        the user without asking for a username and password each
                        time.
                            
                        -   Want to share user testimonials? Add a link to your
                        full case study in the Case Studies field, with a title
                        and short description.
                    - type: text
                      data: '---'
                    - type: tabs
                      data:
                        children:
                          - title: App Summary
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536259683439
                                header:
                                  anchor: app-summary
                              - type: text
                                data: >-
                                  ### Contact Name

                                  Use the email address that was created when
                                  applying for your Partner Id. 


                                  ### Partner Name

                                  List the name of your company​, as you want it
                                  to be attributed on the detail page.


                                  ### Partner Website

                                  Provide the URL for your homepage so users can
                                  learn more about your company.


                                  ### Support email

                                  Email where users can get help with the app.
                                  This should be a formal group email at your
                                  company domain (Ex: support@app-partner.com)
                                  rather than a personal email. If not provided,
                                  this option will not be displayed.


                                  ### Support website

                                  A Support email and website for users to reach
                                  out as needed.

                                  These will be publicly visible on the
                                  Marketplace, so make sure to stay away from
                                  personal emails or non-support URLs. Your
                                  public detail page will include a button for
                                  users to “Get Support,” which will take them
                                  to this URL in a new tab. If not provided, the
                                  button will not be displayed on your detail
                                  page.


                                  ### Partner ID

                                  When you’re ready to submit your listing for
                                  review, you will need to enter your [Partner
                                  ID](https://partners.bigcommerce.com/English/register_email.aspx)
                                  for your Technology Partner account. This
                                  field is not required to create, save, or edit
                                  a Draft prior to submission. 
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536259722234
                              - type: text
                                data: >-
                                  ### App Name

                                  Use the brand name you’ve given your app for
                                  your app title throughout your app content.
                                  This listing name should be a concise title
                                  for easy identification and should not include
                                  additional taglines or descriptors. The name
                                  will always appear alongside your summary, so
                                  there’s no need to muddy your app’s branding
                                  with duplicate content when that tagline is
                                  already displayed with it.


                                  #### Pricing & Categorization

                                  Select one of our pre-formatted pricing
                                  options to call out your app’s starting price.
                                  If you offer a forever-free plan, choose the
                                  “Free” option. If your app does not fit one of
                                  our formatted options, specify your details in
                                  a few words in the “Other” selection.

                                  - If you need to specify more detail on your
                                  pricing options, save it for your app
                                  description.  

                                  Choose the most appropriate category for your
                                  app.
                              - type: callout
                                data:
                                  body: >-
                                    If your solution is a connector to a
                                    specific third-party service, or you’re
                                    offering only a particular feature, make
                                    sure to include both the name of the third
                                    party service or feature and your company
                                    name​ (Ex: “Marketplace by BigCommerce,”
                                    “Search by BigCommerce”). The company name
                                    needs to follow the feature.
                              - type: text
                                data: >-
                                  ### App Logo

                                  Your primary app logo should be 350 x 130px
                                  (or larger at this ratio) with a white
                                  background and dark branding in the
                                  foreground. The logo should only include
                                  branding, no taglines necessary.


                                  ### App Icon

                                  The app icon will be included on the main app
                                  detail page and the sidebar in the BigCommerce
                                  control panel once the app is installed. This
                                  should be a square 200x200px image.


                                  ### Price

                                  Select one of our pre-formatted pricing
                                  options to call out your app’s starting price.
                                  If you offer a forever-free plan, choose the
                                  “Free” option. If your app does not fit one of
                                  our options, specify your details in a few
                                  words in the “Other” selection.
                              - type: callout
                                data:
                                  body: >-
                                    If you need to specify more detail on your
                                    pricing options, save it for your app
                                    description.
                              - type: text
                                data: >-
                                  ### App Summary

                                  A short tagline description of your app that
                                  will be used on your app card in category and
                                  search results within the Marketplace. 128
                                  characters max.


                                  ### App Icon

                                  Your app icon will be included on the main app
                                  detail page and the sidebar in the BigCommerce
                                  control panel once the app is installed. This
                                  should be a square 200 x 200px image.


                                  ### Category

                                  Choose the most appropriate category for your
                                  app. Take a look at the live
                                  [Marketplace](https://www.bigcommerce.com/apps/)
                                  for an idea of where solutions are currently
                                  assigned to help decide the right category.
                                  The category selection will also be a search
                                  attribute for your listing. BigCommerce will
                                  review your category assignment and may
                                  re-categorize your listing prior to launch.
                                  One category maximum.
                          - title: Details
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260365610
                                header:
                                  anchor: app-details
                              - type: text
                                data: >-
                                  ### App Details

                                  A more in-depth value proposition for your
                                  listing, including how your solution works,
                                  why your solution stands out in its category,
                                  and why a merchant should choose you over
                                  other competitors. Avoid using fluff or
                                  buzzwords, as this field will not be indexed
                                  for search. 200 words max recommended.


                                  ### Videos

                                  Include videos that highlight the purpose and
                                  value of your solution. Select the video
                                  hosting platform (YouTube or Vimeo) and enter
                                  the video ID.


                                  #### Video Best Practices


                                  **YouTube**


                                  Turn off ads for any videos you've already
                                  uploaded. 


                                  1. Sign in to YouTube.


                                  2. In the top right, click your account icon >
                                  Creator Studio.


                                  3. On the left, select Video Manager.


                                  4. Select the video(s) where you want to turn
                                  ads off.


                                  5. Click Actions > More actions >
                                  Monetization.


                                  6. Select Off.


                                  7. Click Submit.


                                  **Vimeo**


                                  Per Vimeo’s guidelines, businesses may not use
                                  Basic or Plus accounts to host videos. If you
                                  want to upload commercial videos, you must use
                                  Vimeo PRO or Business. Commercial content
                                  includes:


                                  Videos promoting or representing a for-profit
                                  business or brand 

                                  Videos containing any form of advertising 

                                  Videos hosted on behalf of a business (i.e.,
                                  uploaded to Vimeo and embedded on your
                                  company’s website) 

                                  Product demos and tutorials


                                  *Note:* Ads appear to viewers based on their
                                  level of Vimeo membership - not yours. Basic
                                  and non-logged in viewers may see ad banners
                                  below the video player.


                                  ### Case Studies

                                  These can either be “Thought Leadership” case
                                  studies and/or traditional case studies that
                                  demonstrate how BigCommerce merchants have
                                  benefited from using your solution with their
                                  business. Use the + ​icon to add a case study,
                                  and the x ​icon to remove. Four case studies
                                  maximum.
                              - type: callout
                                data:
                                  type: warning
                                  body: >-
                                    Case studies that include competitor
                                    platforms are not allowed and will be
                                    removed. Partners will be required to
                                    repurpose general case studies, remove
                                    competitor platform mentions, and republish
                                    the asset accordingly.
                              - type: text
                                data: >-
                                  ### Features

                                  Use these fields to enumerate the major
                                  features your platform or solution has to
                                  offer. Include a brief title for each feature,
                                  and a description of the feature to accompany
                                  it. The feature title will be search indexed
                                  in the Marketplace, so be specific with your
                                  feature names and include major functions
                                  potential users will search for. Use the +
                                  icon to add a feature, and the x icon to
                                  remove. Utilize the rich text editing of these
                                  fields to bold, underline, or italicize copy
                                  as needed. 


                                  Up to five features can be added.
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260434551
                              - type: text
                                data: >-
                                  ### Legal Terms & Privacy 

                                  Links to your privacy policy and terms of
                                  service. This requirement is in place due to
                                  legal liability and is non-optional. 


                                  ### International Optimization

                                  Please add the countries for which your
                                  solution is optimized and those which your
                                  solution does not currently support. 
                              - type: callout
                                data:
                                  type: info
                                  body: >-
                                    This feature will not currently be utilized
                                    in the Marketplace, but will be a part of
                                    planned internationalization updates.
                              - type: text
                                data: >-
                                  ### Help Guides

                                  Links to your User and Installation Guides as
                                  a reference for existing users and prospects.


                                  We now ask that you include links to your
                                  solution’s user installation guide (PDF,
                                  support articles, etc.) and standard user
                                  guide for prospective users to review before
                                  installation. If you do not submit links, this
                                  field will not be displayed on your listing
                                  detail page, however we highly recommend
                                  including these with your submission.
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260486010
                              - type: text
                                data: >-
                                  ### App Screenshot

                                  Add screenshots of your solution’s
                                  functionality or user interface as it appears
                                  when integrated with BigCommerce so users know
                                  what to expect.


                                  ### Alternate Logo

                                  Your alternate logo will be used if your app
                                  is featured on the homepage carousel of the
                                  Marketplace. This image should be 259 x 158px
                                  (or larger at this ratio) with a dark
                                  background and white or light branding in the
                                  foreground. The logo should only include
                                  branding, no taglines necessary.
                          - title: Technical
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260547856
                                header:
                                  anchor: app-technical
                              - type: text
                                data: >-
                                  ### Multiple Users


                                  By default, your app will only be accessible
                                  to the store owner (i.e., the user who created
                                  the store). Optionally, you can allow your app
                                  to be accessible to other store users.
                                  Consider the following before enabling
                                  [multi-user
                                  support](/api-docs/getting-started/building-apps-bigcommerce/building-apps#multi-user-support):


                                  -   Once you enable multi-user support, a
                                  store admin will still need to grant access to
                                  other users from within the store control
                                  panel. For each user account, there are
                                  settings that grant access to specific apps.
                                      
                                  -   Your app should be aware that when it
                                  receives the [Load
                                  Callback](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests),
                                  the user information passed in might not be
                                  the store owner’s. You’ll need to determine
                                  how to respond if you see a different user.
                                  For example, you may want to provision a new
                                  user account in order to personalize the
                                  experience.
                                      
                                  -   You can optionally specify a [Remove User
                                  Callback
                                  URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests)
                                  to receive a callback when a store admin
                                  revokes a user’s access.
                                      
                                  ### App Type


                                  Select the type of app. We recommend [Single
                                  Click
                                  Apps](/api-docs/getting-started/building-apps-bigcommerce/types-of-apps#single-click-apps)
                                  although some qualify to [Connector
                                  Apps.](/api-docs/getting-started/building-apps-bigcommerce/types-of-apps#connector)


                                  ### Callback URLS


                                  You must have an [Auth Callback
                                  URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#installation-update-sequence)
                                  and a [Load Callback
                                  URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#installation-update-sequence)
                                  to register your app.


                                  #### Public URIs Required before Submission


                                  Because the Auth Callback URI and Load
                                  Callback URI requests originate from the
                                  browser and not from BigCommerce, you can use
                                  non–publicly-available URIs and a self-signed
                                  certificate for a quick start. However, you
                                  must switch to – and test your app with – a
                                  publicly available Auth Callback URI and Load
                                  Callback URI before submitting your app for
                                  consideration in the App Marketplace.


                                  If you want to receive a callback when the
                                  store owner uninstalls your app, you can
                                  provide an [Uninstall Callback
                                  URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#load-uninstall-removal-requests).
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260600336
                              - type: text
                                data: >-
                                  ### OAuth Scopes

                                  If you know the [OAuth
                                  scopes](/api-docs/getting-started/about-api/authentication#oauth-scopes)
                                  that your app requires, you should select
                                  these. If you do not yet know the scopes that
                                  you need, you can just request minimal
                                  permissions (such as Information: Read-Only)
                                  to get started. However, once you determine
                                  the scopes you need, you must:

                                  - Modify the scopes of your app in My Apps and
                                  save the changes.

                                  - Obtain the new OAuth token during the [App
                                  Installation or Update
                                  flow](https://developer.bigcommerce.com/api/#app-installation-and-update-sequence).

                                  - Retest your app to make sure it still
                                  functions properly with the new token.
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260650757
                              - type: text
                                data: >-
                                  Add in any instructions needed to test the app
                                  thoroughly. 
                          - title: Review
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536260677950
                                header:
                                  anchor: app-review
                              - type: text
                                data: >-
                                  Review the information added before submitting
                                  the app. Look over this page carefully, once
                                  the app is submitted, if it is rejected there
                                  will be another fee for submission.
                          - title: Preview
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536261272003
                                header:
                                  anchor: app-preview
                              - type: text
                                data: >-
                                  This is an approximation of what the app’s
                                  page will look like in the BigCommerce
                                  Marketplace.
                          - title: Payment & Submission
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6012/1536261347648
                                header:
                                  anchor: app-payment
                              - type: text
                                data: >-
                                  At this point you make sure the information
                                  has been filled out completely and the app has
                                  been thoroughly tested before submitting for
                                  review. Updates to the App will not require
                                  the submission fee again. 
        - title: Catalog
          route:
            path: /catalog
          data:
            children:
              - title: Products
                route:
                  path: /products
                data:
                  children:
                    - title: Overview
                      route:
                        path: /products-overview
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Products Overview </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n    <li><a href=\"#products-overview_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#products-overview_simple-product\">Create a Simple Product</a></li>\n\t\t<li><a href=\"#products-overview_create-complex-product\">Create a Complex Product</a></li>\n\t\t<li><a href=\"#products-overview_digital-products\">Digital Products</a></li>\n    <li><a href=\"#products-overview_product-oauth-scopes\">OAuth Scopes</a></li>\n\t\t<li><a href=\"#products-overview_webhooks\">Webhooks Available</a></li>\n    <li><a href=\"#products-overview_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              The Catalog refers to a store’s collection of
                              physical and digital products. The Catalog
                              includes all the information about a product such
                              as MPN, warranty, price, and images. 


                              Products are the primary catalog entity, and the
                              primary function of the e-commerce platform is to
                              sell products on the storefront and other selling
                              channels.


                              Products can either be
                              [Simple](#create-simple-product) or
                              [Complex](#create-complex-product). 


                              Products can also be Physical or Digital. 


                              * Physical products are typically products that
                              exist in a physical form, have a weight, and are
                              being sold by retailers with the intent of
                              shipping them to customers. 


                              * Digital products, on the other hand, may not
                              have a physical representation in the real world;
                              this includes downloadable products such as
                              computer software, ebooks, music, images, and
                              other digital media. Alternatively, a digital
                              product may be used to sell services such as spa
                              treatments, consulting, and so forth - which also
                              do not require shipping.
                            header:
                              anchor: products-overview_introduction
                          - type: callout
                            data:
                              title: Product Creation
                              body: Only one Product can be created at a time.
                          - type: text
                            data: >-
                              ## Create a Simple Product


                              Simple products do not have any options,
                              modifiers, or variants, and therefore cannot be
                              configured or modified before they are added to
                              cart. A simple product is its own variant. 
                            header:
                              anchor: products-overview_simple-product
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |-
                                {
                                  "name": "BigCommerce Coffee Mug",
                                  "price": "10.00",
                                  "categories": [
                                    23,
                                    21
                                  ],
                                  "weight": 4,
                                  "type": "physical"
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create your own Simple Product.
                                Replace the test data with your own.
                              anchor: code-create-simple-product
                          - type: callout
                            data:
                              body: >-
                                When options are created via the /products
                                endpoint, the display_type defaults to radio
                                button.
                              title: Creating Options
                            header: {}
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Create a Complex Product


                              Complex products have at least one option and may
                              have modifiers or variants.
                            header:
                              anchor: products-overview_create-complex-product
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |-
                                {
                                  "name": "BigCommerce Coffee Mug",
                                  "price": "10.00",
                                  "categories": [
                                    23,
                                    21
                                  ],
                                  "weight": 4,
                                  "type": "physical",
                                  "variants": [
                                    {
                                      "sku": "SKU-BLU",
                                      "option_values": [
                                        {
                                          "option_display_name": "Mug Color",
                                          "label": "Blue"
                                        }
                                      ]
                                    },
                                    {
                                      "sku": "SKU-GRAY",
                                      "option_values": [
                                        {
                                          "option_display_name": "Mug Color",
                                          "label": "Gray"
                                        }
                                      ]
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create your own test product.
                                Replace the test data with your own.
                              anchor: code-create-complex-product
                          - type: text
                            data: >-
                              The /products endpoint supports the creation of
                              multiple variants along with the base product in a
                              single call.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Digital Products


                              Digital products are purchaseable items that don't
                              have a physical representation and are not shipped
                              to the customer; for example, manuals, ebooks, or
                              music. A downloadable product file can be
                              associated with a digital product.


                              Downloadable product files are intended for
                              products of the “digital” type, typically for
                              selling some kind of media file or software.
                              Product dimensions are not required because the
                              item is not shipped.


                              Files must be added to digital products using the
                              [Control Panel or
                              WebDav](https://support.bigcommerce.com/articles/Public/Creating-Downloadable-Products/#adding-downloadable-product)
                              (attaching via the API is not supported).
                              Additional settings such as a description of the
                              file and maximum downloads can be set in the
                              Control Panel.
                            header:
                              anchor: products-overview_digital-products
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |-
                                {
                                  "name": "ebook: A Guide to Coffee",
                                  "price": "10.00",
                                  "categories": [
                                    23,
                                    21
                                  ],
                                  "type": "digital",
                                  "images": [
                                    {
                                      "is_thumbnail": true,
                                      "image_url": "https://your-custom-image/image_name.png"
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create your own Digital Product.
                                Replace the test data with your own.
                              anchor: code-create-digital-product
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## OAuth Scopes

                              *
                              [Products](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)
                            header:
                              anchor: products-overview_product-oauth-scopes
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Webhooks Available

                              *
                              [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)

                              *
                              [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)
                            header:
                              anchor: products-overview_webhooks
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Create
                              Product](/api-docs/api-reference/v3-api/catalog-api/products/createproduct)
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: products-overview_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/ProductBase'
                    - title: Images
                      route:
                        path: /product-images
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Product Images</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n    <li><a href=\"#product-images_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#product-images_thumbnails\">Product Thumbnails</a></li>\n\t\t<li><a href=\"#product-images_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Product images are used to show shoppers what
                              they’re buying and merchandise products. When
                              creating an image, `image_url` or an `image_file`
                              can be passed in. 


                              If using `image_file` Content-Type needs to be set
                              to 

                              Content-Type: multipart/form-data. Any other
                              updates using the /POST or /PUT will be rejected
                              with the form-data.
                            header:
                              anchor: product-images_introduction
                          - type: http
                            data:
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/images
                              headers:
                                Accepts: application/json
                                X-Auth-Client: '{CLIENT ID}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                                Content-Type: application/json
                              method: put
                              body: |-
                                {
                                 "is_thumbnail": true,
                                  "sort_order": 1,
                                  "description": "Yellow Large Bath Towel",
                                  "image_url": "https://your-custom-image/image_name.png"
                                }
                            header:
                              title: Try it Now
                              subtitle: >-
                                Use this to add a Image to your Product. Replace
                                the test data with your own.
                              anchor: code-add-product-image
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Product Thumbnails


                              Only one image can be the product thumbnail. The
                              product thumbnail is the image that shows on the
                              product listing page, in search results and any
                              other location that features the product. If only
                              one image is on the product it becomes both the
                              thumbnail and the main product image. Images can
                              also be added to
                              [variants](/api-docs/catalog/products/product-variants). 
                            header:
                              anchor: product-images_thumbnails
                          - type: code
                            data: |-
                              {
                                  "data": {
                                      "id": 382,
                                      "product_id": 158,
                                      "is_thumbnail": true,
                                      "sort_order": 0,
                                      "description": "",
                                      "image_file": "a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg",
                                      "url_zoom": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2",
                                      "url_standard": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2",
                                      "url_thumbnail": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2",
                                      "url_tiny": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2",
                                      "date_modified": "2018-08-15T14:48:31+00:00"
                                  },
                                  "meta": {}
                              }
                            header:
                              title: Thumbnails
                              subtitle: >-
                                /GET
                                https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/images/{{images_id}}
                              anchor: code-get-product-images
                            config:
                              mode: json
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              Related Endpoints

                              * [Create Product
                              Image](/api-docs/api-reference/v3-api/catalog-api/product-images/createproductimage)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: product-images_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/ProductImageBase
                    - title: Videos
                      route:
                        path: /product-videos
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Product Videos </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#product-video_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#product-video_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >
                              ## Introduction


                              Product Videos, in addition to images, can help
                              shoppers understand what they’re buying and help
                              sell the product. A product can have more than one
                              video.


                              * Product videos must be hosted on YouTube. The
                              video_id corresponds to the “v” parameter in a
                              video url. 


                              Example:
                              https://www.youtube.com/watch?v=***R12345677***
                            header:
                              anchor: product-video_introduction
                          - type: http
                            data:
                              headers:
                                Accept: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{CLIENT ID}'
                                X-Auth-Token: '{ACCESS TOKEN}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/videos
                              body: |-
                                {
                                  "title": "BigCommerce Mug Video",
                                  "description": "Video Describing the Mug",
                                  "sort_order": 1,
                                  "type": "youtube",
                                  "video_id": "123345AA"
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add a Video to your Product. Replace
                                the test data with your own.
                              anchor: code-add-product-video
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              Related Endpoints

                              * [Get Product
                              Videos](/api-reference/catalog/catalog-api/product-videos/getproductvideos)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: product-video_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/ProductVideoBase
                    - title: Custom Fields
                      route:
                        path: /product-custom-fields
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Custom Fields </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#custom-fields_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#custom-fields_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Custom fields are a feature intended for product
                              specifications, in a key: value arrangement. As an
                              example, there might be fields indicating
                              technical specifications about an LED TV  such as
                              screen size, maximum resolution, HDR support, etc.
                              Alternatively, if selling wine, I might use Custom
                              Fields for specifications such as vintage, region,
                              grape, etc. Custom fields can not be used to add
                              rules such as changing the weight or price of a
                              product. 
                            header:
                              anchor: custom-fields_introduction
                          - type: callout
                            data:
                              body: >-
                                There is a limit of 250 characters for custom
                                field values.
                          - type: text
                            data: >-
                              Custom Fields are intended to be used in a couple
                              of contexts:


                              * Displaying specifications on the product detail
                              page and on the product listing pages such as
                              category and brand pages.

                              * Powering faceted search (searching/filtering by
                              custom field values)
                          - type: http
                            data:
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/custom-fields
                              method: put
                              body: |-
                                {
                                  "name": "Release Year",
                                  "value": "2018"
                                }
                              headers:
                                Accept: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{CLIENT ID}'
                                X-Auth-Token: '{ACCESS TOKEN}'
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add a Custom Field to your Product.
                                Replace the test data with your own.
                              anchor: code-add-custom-field
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              Related Endpoints

                              * [Get Custom
                              Fields](/api-reference/catalog/catalog-api/product-custom-fields/getcustomfields)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: custom-fields_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/CustomFieldBase
                    - title: Bulk Pricing Rules
                      route:
                        path: /product-bulk-pricing
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Bulk Pricing Rules </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#bulk-pricing_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#bulk-pricing_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Bulk Pricing Rules are intended for merchants who
                              want to offer wholesale discounts for buying in
                              bulk. They apply once products are added to cart,
                              but they are displayed as a callout on the
                              storefront to let shoppers know how they can save.


                              Bulk Pricing rules in the catalog are on the
                              product, meaning that they’ll trigger even if
                              several different variants of the product are in
                              the cart, as long as the total quantity of those
                              variants meets one of the quantity breaks. [Price
                              List bulk
                              pricing](/api-reference/price-lists/pricelists-api/price-lists/setpricelistrecordcollection)
                              works differently.
                            header:
                              anchor: bulk-pricing_introduction
                          - type: http
                            data:
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/bulk-pricing-rules
                              method: put
                              body: |-
                                {
                                  "bulk_pricing_rules": [
                                    {
                                      "quantity_min": 10,
                                      "quantity_max": 15,
                                      "type": "price",
                                      "amount": 3
                                    },
                                    {
                                      "quantity_min": 16,
                                      "quantity_max": 25,
                                      "type": "price",
                                      "amount": 5
                                    }
                                  ]
                                }
                              headers:
                                Accept: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{CLIENT ID}'
                                X-Auth-Token: '{ACCESS TOKEN}'
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add Bulk Pricing Rules to your
                                Product. Replace the test data with your own.
                              anchor: code-add-bulk-pricing-rules
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              Related Endpoints

                              * [Get Bulk Pricing
                              Rules](/api-reference/catalog/catalog-api/product-bulk-pricing-rules/getbulkpricingrules)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: bulk-pricing_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/BulkPricingRuleBase
                    - title: Variant Options
                      route:
                        path: /product-variant-options
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Variant Options </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#variant-options_introduction\">Introduction</a></li>\n    <li><a href=\"#variant-options_option-v2-v3\">Options Created on V2 and V3</a></li>\n    <li><a href=\"#variant-options_create-variant-options\">Create Variant Options</a></li>\n\t\t<li><a href=\"#variant-options_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Variant options are any choices that the shopper
                              needs to make that will result in the selection of
                              a variant. Color and Size are typical examples of
                              Variant Options.  A t-shirt can have different
                              combinations of sizes and colors.  


                              Example:

                              * Color is a Variant Option; Red, Orange, and
                              Green are Variant Option Values

                              * Size is a Variant Option; Small, Medium, and
                              Large are Variant Option Values


                              The combination of Small & Red is what is selected
                              on the storefront and correlates to a product
                              variation, also called a SKU. 
                               
                              **Variant options:**


                              * Require the shopper to select a value

                              * Only support “multiple choice” option types

                              * Rectangle

                              * Radio button

                              * Color swatch

                              * Product pick list

                              * Product pick list with images

                              * Will automatically generate variants when
                              created in the CP

                              * Are auto-generated from variants when a product
                              is created with variants via V3 API Product /POST
                            header:
                              anchor: variant-options_introduction
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Options created on V2 and V3


                              * Variant options created on V3 cannot be cannot
                              be accessed from the Control Panel. They can only
                              be accessed via the API.

                              * If a product has options that were created using
                              the V2 API, additional options cannot be added
                              using the V3 API.

                              * SKUs in V2 map to variants in V3.

                              * Base variants are not SKUs in V2.
                            header:
                              anchor: variant-options_option-v2-v3
                          - type: callout
                            data:
                              body: >-
                                Creating a variant option does not automatically
                                create SKUs or build out variants. SKUs can be
                                built out later using the [variants
                                end-point]().
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Create Variant Options

                              The following request will create options that
                              will show on the storefront as choices that can be
                              selected by the customer. In a separate request,
                              you could build out SKUs based on these variant

                              option values or a combination of variant option

                              values. A request like this could also be used to

                              add new choices to a variant that has already been
                              created.
                            header:
                              anchor: variant-options_create-variant-options
                          - type: code
                            data: |-
                              {
                                 "product_id": 134,
                                 "name": "Size Rectangle",
                                 "display_name": "Size",
                                 "type": "rectangles",
                                       "option_values": [
                                           {
                                               "label": "S",
                                               "sort_order": 0,
                                               "is_default": false
                                           },
                                           {
                                               "label": "M",
                                               "sort_order": 1,
                                               "is_default": true
                                           },
                                           {
                                               "label": "L",
                                               "sort_order": 2,
                                               "is_default": false
                                           }
                                       ]
                               }
                            header:
                              title: Create Size Variant Option
                              subtitle: >-
                                /POST
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options
                              anchor: create-size-variant
                            config:
                              mode: json
                          - type: callout
                            data:
                              body: >-
                                Variants can only be created one at a time using
                                this endpoint. Use the /catalog/products to add
                                more than one variant when creating a product.
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options
                              body: |-
                                {
                                  "product_id": 134,
                                  "name": "Colors",
                                  "display_name": "Color",
                                  "type": "swatch",
                                  "sort_order": 1,
                                  "option_values": [
                                    {
                                      "label": "Blue",
                                      "sort_order": 1,
                                      "value_data": {
                                        "colors": [
                                          "#123c91"
                                        ]
                                      },
                                      "is_default": false
                                    },
                                    {
                                      "label": "Green",
                                      "sort_order": 2,
                                      "value_data": {
                                        "colors": [
                                          "#0f961e"
                                        ]
                                      },
                                      "is_default": false
                                    },
                                    {
                                      "label": "Red",
                                      "sort_order": 3,
                                      "value_data": {
                                        "colors": [
                                          "#e60c0c"
                                        ]
                                      },
                                      "is_default": false
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add Varaint Options to your Product.
                                Replace the test data with your own.
                              anchor: code-create-color-variant
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: variant-options_object-properties
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get Variant
                              Options](/api-reference/catalog/catalog-api/product-variant-options/getoptions)
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/OptionBase'
                    - title: Variants
                      route:
                        path: /product-variants
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Variants </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#variants_introduction\">Introduction</a></li>\n    <li><a href-\"#variants_create-a-variant\">Create a Variant</a></li>\n    <li><a href-\"#variants_create-variant-product-endpoint\">Create a Variant Using the Product Endpoint</a></li>\n    <li><a href=\"#variant_webhooks\">Available Webhooks </a></li>\n\t\t<li><a href=\"#variant_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Variants represent an item as it sits on the shelf
                              in the warehouse or a particular saleable product.
                              A product might be a t-shirt, while the variant
                              would be “a small, red t-shirt”. Variants are
                              selected by shoppers on the storefront via Product
                              Options. In the case where a product is simple,
                              meaning it does not have any options, the product
                              is its own variant - called a base variant.
                              Everything you can buy should be a variant.


                              * Options build out variants. 

                              * Variants are usually what inventory is tracked
                              against 

                              * Can have their own price, weight, dimensions,
                              image, etc - or they can inherit these values from
                              the product if they have not been specified

                              * Must have a SKU code (unless they’re a base
                              variant)

                              * In the case of non-base variants, variants will
                              relate to a particular combination of variant
                              option values - such as “small” and “red”
                            header:
                              anchor: variants_introduction
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                When a variant option is created, they can not
                                be accessed from the Control Panel. They can
                                only be changed or updated via the API. 
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6012/1535652849070
                            header:
                              subtitle: Variant Creation Workflow
                          - type: text
                            data: >-
                              ## Create a Variant

                              Variants can be created in two ways:

                              * From existing variant options using the variant
                              options endpoint.
                              [v3/catalog/products/{product_id}/options](/api-reference/catalog/catalog-api/product-variants/createvariant)

                              * By adding the variants with variant options and
                              skus when creating the product. See [Create a
                              Complex
                              Product](/api-reference/catalog/catalog-api/products/createproduct).


                              This will go over using existing variant options
                              to create the variants.


                              Use the
                              `https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/options`
                              endpoint to get the option information.
                            header:
                              anchor: variants_create-a-variant
                          - type: code
                            data: |-
                              {
                                  "data": [
                                      {
                                          "id": 193,
                                          "product_id": 134,
                                          "name": "Size1533313432-134",
                                          "display_name": "Size",
                                          "type": "rectangles",
                                          "sort_order": 0,
                                          "option_values": [
                                              {
                                                  "id": 163,
                                                  "label": "S",
                                                  "sort_order": 0,
                                                  "value_data": null,
                                                  "is_default": false
                                              },
                                              {
                                                  "id": 164,
                                                  "label": "M",
                                                  "sort_order": 1,
                                                  "value_data": null,
                                                  "is_default": true
                                              },
                                              {
                                                  "id": 165,
                                                  "label": "L",
                                                  "sort_order": 2,
                                                  "value_data": null,
                                                  "is_default": false
                                              }
                                          ],
                                          "config": []
                                      },
                                      {
                                          "id": 194,
                                          "product_id": 134,
                                          "name": "Color1533313946-134",
                                          "display_name": "Color",
                                          "type": "swatch",
                                          "sort_order": 1,
                                          "option_values": [
                                              {
                                                  "id": 166,
                                                  "label": "Blue",
                                                  "sort_order": 1,
                                                  "value_data": {
                                                      "colors": [
                                                          "#123C91"
                                                      ]
                                                  },
                                                  "is_default": false
                                              },
                                              {
                                                  "id": 167,
                                                  "label": "Green",
                                                  "sort_order": 2,
                                                  "value_data": {
                                                      "colors": [
                                                          "#0F961E"
                                                      ]
                                                  },
                                                  "is_default": false
                                              },
                                              {
                                                  "id": 168,
                                                  "label": "Red",
                                                  "sort_order": 3,
                                                  "value_data": {
                                                      "colors": [
                                                          "#E60C0C"
                                                      ]
                                                  },
                                                  "is_default": false
                                              }
                                          ],
                                          "config": []
                                      }
                                  ],
                                  "meta": {
                                      "pagination": {
                                          "total": 2,
                                          "count": 2,
                                          "per_page": 50,
                                          "current_page": 1,
                                          "total_pages": 1,
                                          "links": {
                                              "current": "?page=1&limit=50"
                                          }
                                      }
                                  }
                              }
                            header:
                              title: Example Response
                              subtitle: >-
                                /GET
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options
                              anchor: product-option-response
                            config:
                              mode: json
                              highlightRange:
                                - from: '4'
                                  to: '12'
                          - type: http
                            data:
                              method: get
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options
                              headers:
                                X-Auth-Client: '{CLIENT ID}'
                                X-Auth-Token: '{ACCESS TOKEN}'
                                Content-Type: application/json
                                Accept: application/json
                            header:
                              title: Try It Now
                              subtitle: Get Variant Options
                              anchor: code-get-variant-options
                          - type: text
                            data: >-
                              In the above response, there are two variant
                              options of size and color with three values each. 


                              To combine the variant option values into variants
                              and build out SKUs use the following endpoint:


                              `https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/variants`
                          - type: callout
                            data:
                              body: >-
                                Variants need to be created one at a time using
                                this endpoint. Only one variant option at a time
                                can be created; individual variant options will
                                contain an array of multiple values. To use a
                                variant array and create variants in the same
                                call as the base product, use the
                                [/catalog/product](/api-reference/catalog/catalog-api/products/createproduct)
                                endpoint during product creation.
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/variants
                              body: |-
                                {
                                  "cost_price": 3,
                                  "price": 12.99,
                                  "retail_price": 15.99,
                                  "weight": 1,
                                  "width": 4,
                                  "height": 14.6,
                                  "depth": 22,
                                  "is_free_shipping": true,
                                  "purchasing_disabled": true,
                                  "purchasing_disabled_message": "This item not available at this time.",
                                  "product_id": 134,
                                  "sku": "SMALL-BLUE",
                                  "option_values": [
                                    {
                                      "id": 163,
                                      "option_id": 193
                                    },
                                    {
                                      "id": 166,
                                      "option_id": 194
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add Variants to your Product .
                                Replace the test data with your own.
                              anchor: code-create-variants
                          - type: text
                            data: "The `option_values` array combines the options Small and Blue to create the SKU SMALL-BLUE. The id in the option_values array is the id from the variant option response option_values > id. The option_id is the id of the option. \n\n```\n {\n            \"id\": 193, //option_id\n            \"product_id\": 134,\n            \"name\": \"Size1533313432-134\",\n            \"display_name\": \"Size\",\n            \"type\": \"rectangles\",\n            \"sort_order\": 0,\n            \"option_values\": [\n                {\n                    \"id\": 163, //id\n                    \"label\": \"S\",\n                    \"sort_order\": 0,\n                    \"value_data\": null,\n                    \"is_default\": false\n                }\n\t\t\t\t\t\t\t\t...\n```"
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Create a Variant Using the Products Endpoint


                              The following example creates a base product,
                              variant options, and variants in a single call to
                              the /products endpoint. You can use this method to
                              create a product and its variants in a single call
                              without creating variant options first, but the
                              option display type will default to radio button.
                            header:
                              anchor: variants_create-variant-product-endpoint
                          - type: callout
                            data:
                              body: >-
                                Swatch, Radio Buttons, Rectangle, dropdown,
                                Product List and Product List with Images. 
                              title: Supported Types
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |-
                                {
                                  "name": "BigCommerce Coffee Mug",
                                  "price": "10.00",
                                  "categories": [
                                    23,
                                    21
                                  ],
                                  "weight": 4,
                                  "type": "physical",
                                  "variants": [
                                    {
                                      "sku": "SKU-BLU",
                                      "option_values": [
                                        {
                                          "option_display_name": "Mug Color",
                                          "label": "Blue"
                                        }
                                      ]
                                    },
                                    {
                                      "sku": "SKU-GRAY",
                                      "option_values": [
                                        {
                                          "option_display_name": "Mug Color",
                                          "label": "Gray"
                                        }
                                      ]
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create your own Product using the
                                products endpoint . Replace the test data with
                                your own.
                              anchor: create-variants-using-products-endpoint
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Webhooks Available


                              *
                              [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)

                              *
                              [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)
                            header:
                              anchor: variant_webhooks
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Create
                              Variant](/api-reference/catalog/catalog-api/product-variants/createvariant)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: variant_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/VariantBase'
                    - title: Modifier Options
                      route:
                        path: /modifier-options
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Modifier Options </h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#modifier_introduction\">Introduction</a></li>\n        <li><a href=\"#modifier_add-modifer\">Add Modifier to Existing Product</a></li>\n        <li><a href=\"#modifier_422-error\">Troubleshooting: 422 Error</a></li>\n\t\t<li><a href=\"#modifier_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Modifier options are any choices that the shopper
                              can make that will change the way the merchant
                              fulfills the product. Examples include:

                              * A checkbox to add shipping insurance

                              * Text to be engraved on the product

                              * A color that an unfinished product is to be
                              painted before it’s shipped
                               
                              Critically, the modifier will not change the
                              SKU/variant being fulfilled, and you cannot track
                              inventory against combinations of modifier values.
                              Modifiers typically would not change which product
                              is “picked off the shelf” in the warehouse, but
                              they change what happens to that product before
                              it’s sent to the shopper, or how it’s sent.
                               
                              Modifier options:

                              * May be required or non-required

                              * Support all option types

                              * Cannot be used as part of a variant



                              An adjuster can be added to a modifier option to
                              change things such as increasing the price,
                              changing the weight, or shipping rules.  Adjusters
                              cannot be applied to all modifier types.
                            header:
                              anchor: modifier_introduction
                          - type: callout
                            data:
                              title: Modifiers that support Adjusters
                              body: >-
                                Swatch, radio buttons, rectangle list,
                                drop-down, product list, product list with
                                images
                          - type: text
                            data: >-
                              ## Add a modifier with price adjuster to an
                              existing product


                              The following example shows how to add a modifier,
                              a checkbox with a price adjuster, that will
                              increase the product's price by five dollars. 


                              Creating a checkbox with an adjuster requires two
                              separate calls: one to create the checkbox and a
                              second to add the adjuster. Adjusters are defined
                              within the `option_values` array, but
                              `option_values` are not allowed in the request to
                              create a checkbox modifier because creating a
                              checkbox automatically generates two mandatory
                              option values: a Yes and a No. Once the checkbox
                              has been created along with its option values, you
                              can update the modifier to add an adjuster. 
                            header:
                              anchor: modifier_add-modifer
                          - type: callout
                            data:
                              body: >-
                                swatch, radio buttons, drop-down, rectangle
                                list, product list, product list with images,
                                and checkbox.
                              title: >-
                                Modifiers that require a second step to add an
                                adjuster
                          - type: text
                            data: 'First, a POST to create the modifier. '
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/modifiers
                              body: |-
                                {
                                  "type": "checkbox",
                                  "required": false,
                                  "config": {
                                    "default_value": "Yes",
                                    "checked_by_default": false,
                                    "checkbox_label": "Check for Donation"
                                  },
                                  "display_name": "Add a $5 Donation"
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add a Modifier to your Product.
                                Replace the test data with your own.
                              anchor: code-create-modifier
                          - type: text
                            data: >-
                              Since this is a checkbox which has two states,
                              checked/unchecked or yes/no, two option values are
                              created. The default adjuster values are null. 
                          - type: code
                            data: |
                              {
                                  "data": [
                                      {
                                          "id": 160,
                                          "product_id": 131,
                                          "name": "Add-a-$5-Donation1535039590-191",
                                          "display_name": "Add a $5 Donation",
                                          "type": "checkbox",
                                          "required": false,
                                          "config": {
                                              "checkbox_label": "Check for Donation",
                                              "checked_by_default": false
                                          },
                                          "option_values": [
                                              {
                                                  "id": 149,
                                                  "option_id": 160,
                                                  "label": "Yes",
                                                  "sort_order": 0,
                                                  "value_data": {
                                                      "checked_value": true
                                                  },
                                                  "is_default": false,
                                                  "adjusters": {
                                                      "price": {
                                                          "adjuster": null,
                                                          "adjuster_value": null
                                                      },
                                                      "weight": null,
                                                      "image_url": "",
                                                      "purchasing_disabled": {
                                                          "status": false,
                                                          "message": ""
                                                      }
                                                  }
                                              },
                                              {
                                                  "id": 150,
                                                  "option_id": 160,
                                                  "label": "No",
                                                  "sort_order": 1,
                                                  "value_data": {
                                                      "checked_value": false
                                                  },
                                                  "is_default": true,
                                                  "adjusters": {
                                                      "price": null,
                                                      "weight": null,
                                                      "image_url": "",
                                                      "purchasing_disabled": {
                                                          "status": false,
                                                          "message": ""
                                                      }
                                                  }
                                              }
                                          ]
                                      }
                                  ],
                                  "meta": {
                                      "pagination": {
                                          "total": 1,
                                          "count": 1,
                                          "per_page": 50,
                                          "current_page": 1,
                                          "total_pages": 1,
                                          "links": {
                                              "current": "?page=1&limit=50"
                                          }
                                      }
                                  }
                              }
                            header:
                              title: Response
                              anchor: code-response-create-modifier
                              subtitle: Create Modifier Option
                            config:
                              mode: json
                          - type: text
                            data: >-
                              Next send a PUT request to update the modifier
                              value. This increases the price by $5 when the Yes
                              option value is selected.
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/modifiers/{modifier_id}/values
                              body: |-
                                {
                                  "is_default": false,
                                  "adjusters": {
                                    "price": {
                                      "adjuster": "relative",
                                      "adjuster_value": 5
                                    }
                                  }
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add Modifer Values to your Product.
                                Replace the test data with your own.
                              anchor: code-create-modifer-values
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Troubleshooting: 422 Error


                              ```

                              {
                                  "status": 422,
                                  "title": "The product is currently associated with an option set, please remove it before editing an option or modifier.",
                                  "type": "https://developer.bigcommerce.com/api#api-status-codes",
                                  "errors": {
                                      "product_id": "The product is currently associated with an option set, please remove it before editing an option or modifier."
                                  }
                              }

                              ```


                              To fix this error:

                              * Modify the products using the V2 API

                              * Remove the option set using the V2 API or the
                              Control Panel, then remake the variants and
                              modifiers using V3
                            header:
                              anchor: modifier_422-error
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get
                              Modifiers](/api-reference/catalog/catalog-api/product-modifiers/getmodifiers)
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: modifier_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/ModifierBase'
                    - title: Complex Rules
                      route:
                        path: /product-complex-rules
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Complex Rules </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#complex-rules_introduction\">Introduction</a></li>\n    <li><a href-\"#complex-rules_add-complex-rule\">Adding a Complex Rule to a Modifier</a></li>\n\t\t<li><a href=\"#complex-rules_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Complex rules allow merchants to set up conditions
                              and actions based on shopper option selections on
                              the storefront. You can use them to vary the
                              following based on option selections made by the
                              shopper:

                              * Price

                              * Weight

                              * Image

                              * Purchasability


                              Adjustments made by complex rules are displayed to
                              shoppers in real-time on the storefront.


                              For the majority of merchant use cases, **best
                              practice** will be to either assign values (such
                              as a price) directly to a variant or use adjusters
                              on the modifier option itself. However complex
                              rules exist for rare cases where a rule condition
                              is too complex to express in those forms easily. 


                              Use complex rules when an adjustment should be
                              triggered by:

                              * The selection of values across multiple modifier
                              options

                              * The combination of a particular variant/SKU and
                              a modifier option value.
                            header:
                              anchor: complex-rules_introduction
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Adding a Complex Rule to a Modifier


                              Complex rules must be based on a combination of
                              two or more modifiers, such as two checkboxes. The
                              following example will add $10 to the product
                              price when both boxes are checked. 
                            header:
                              anchor: complex-rules_add-complex-rule
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/complex-rules
                              body: |-
                                {
                                  "product_id": 1200,
                                  "enabled": true,
                                  "price_adjuster": {
                                    "adjuster_value": 10
                                  },
                                  "conditions": [
                                    {
                                      "modifier_id": 506,
                                      "modifier_value_id": 852
                                    },
                                    {
                                      "modifier_id": 507,
                                      "modifier_value_id": 854
                                    }
                                  ]
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add a Complex Rules to a Modifier.
                                Replace the test data with your own.
                              anchor: code-add-complex-rule-modifier
                          - type: text
                            data: >
                              Complex rules must consist of multiple conditions
                              that trigger the rule adjustment. If multiple
                              conditions are not specified, the request will
                              return a 422 Unprocessable Entity.


                              ```

                              {
                                  "status": 422,
                                  "title": "The rule must contain multiple modifier conditions with unique modifier ids or a variant condition and modifier condition",
                                  "type": "https://developer.bigcommerce.com/api#api-status-codes"
                              }

                              ```
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get Complex
                              Rules](/api-reference/catalog/catalog-api/product-complex-rules/getcomplexrules)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: complex-rules_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/ComplexRuleBase
                    - title: Metafields
                      route:
                        path: /product-metafields
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Product Metafields </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#metafields_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#metafields_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Metafields allow a developer to set up key and
                              namespace pairs to store data against a resource,
                              like a product. The data does not appear in the
                              storefront or the control panel. This is useful
                              for when information needs to be passed back and
                              forth between an app and the store. 


                              Metafields can be added to variants, products,
                              categories, and brands.
                            header:
                              anchor: metafields_introduction
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: put
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/metafields
                              body: |-
                                {
                                  "permission_set": "read",
                                  "namespace": "Location",
                                  "key": "bin_number",
                                  "value": "#4456",
                                  "description": "location of the product",
                                  "resource_type": "product",
                                  "resource_id": 131
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to add a Metafield to your Product.
                                Replace the test data with your own.
                              anchor: code-add-metafield
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get Metafields by Product
                              ID](/api-reference/catalog/catalog-api/product-metafields/getproductmetafieldsbyproductid)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: metafields_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/MetafieldBase'
                    - title: Reviews
                      route:
                        path: /product-reviews
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Reviews </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#product-review_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#product-review_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              A product review contains ratings and feedback
                              from shoppers who have purchased a product.
                              Reviews are displayed on product pages. 


                              Reviews cannot be created in the control panel,
                              but they can be created via API. Creating them via
                              API is useful if you are migrating to BigCommerce
                              from another platform and do not want to lose
                              existing reviews. 


                              Product Reviews are a native platform feature, but
                              they can be turned off in favor of a custom setup.
                            header:
                              anchor: product-review_introduction
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |
                                {
                                  "title": "Great Coffee Mug",
                                  "text": "This coffee mug kept my liquids hot for several hours.",
                                  "status": "pending",
                                  "rating": 5,
                                  "email": "testing@bigcommerce.com",
                                  "name": "BigCommerce",
                                  "date_reviewed": "2018-07-20T17:45:13+00:00"
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create a Product Review. Replace the
                                test data with your own.
                              anchor: code-create-product-review
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get Product
                              Reviews](/api-reference/catalog/catalog-api/product-reviews/getproductreviews)
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: product-review_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/ProductReviewBase
                    - title: Brands
                      route:
                        path: /brands
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Brands </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#brands_introduction\">Introduction</a></li>\n\t\t<li><a href=\"#brands_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Introduction


                              Brands are another form of catalog taxonomy,
                              similar to Categories. However, there are a few
                              differences:


                              * Exist as a single “list” on the store, with no
                              tree structure

                              * Can only have a single assignment to a product;
                              a product may have at most one brand, but a brand
                              can have many products.
                               
                              They’re primarily used to tag products so that
                              consumers can find Brands they’re interested in
                              (such as Nike shoes). Brands have their own page
                              on the storefront which shows all the products in
                              that Brand. They’re also used as part of faceted
                              search navigation.
                            header:
                              anchor: brands_introduction
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/brands
                              body: |-
                                {
                                  "name": "BigCommerce",
                                  "page_title": "BigCommerce",
                                  "meta_keywords": [
                                    "ecommerce",
                                    "best in class",
                                    "grow your business"
                                  ],
                                  "image_url": "https://your-custom-image.png"
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Use this to create your own Brand. Replace the
                                test data with your own.
                              anchor: code-create-brand
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Related Endpoints

                              * [Get
                              Brands](/api-reference/catalog/catalog-api/brands/getbrands)
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: brands_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/BrandBase'
              - title: Categories
                route:
                  path: /categories
                data:
                  blocks: []
                  children:
                    - title: Categories Overview
                      route:
                        path: /categories-overview
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Category </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#categories_introduction\"> Introduction</a></li>\n    <li><a href=\"#categories_oauth-scopes\">OAuth Scopes</a></li>\n  <li><a href=\"#categories_webhooks\">Webhooks Available</a></li>\n\t\t<li><a href=\"#categories_object-properties\"> Object Properties</a></li>\n\t</ul>\n</div>\n"
                          - type: text
                            data: >-
                              ##
                              [/catalog/categories](/api-reference/catalog/catalog-api/category/getcategories)


                              Categories are a hierarchy of products available
                              on the store, presented in a tree structure.
                              Currently, a store’s category structure determines
                              the primary menu structure of most storefront
                              themes, which are directly tied to it.


                              All products must be associated with at least one
                              Category, although a Category does not need to
                              have any products. Unlike some e-commerce
                              platforms, products on BigCommerce can be
                              associated with more than one Category. 


                              A product associated with categories does not
                              currently have any priority or weighted order
                              (there’s no “primary category”), which can make it
                              difficult to integrate with some external systems
                              which might wish to use a product’s categories to
                              map to a category structure in that external
                              system.
                            header:
                              anchor: categories_introduction
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: post
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products
                              body: |
                                {
                                  "parent_id": 18,
                                  "name": "Shoes",
                                  "description": "Shoes Available for purchase",
                                  "sort_order": 1,
                                  "page_title": "Shoes",
                                  "is_visible": true
                                }
                            header:
                              title: Try It Now
                              subtitle: >-
                                Create a Category. Replace the test data with
                                your own.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## OAuth Scopes

                              *
                              [Products](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)
                            header:
                              anchor: categories_oauth-scopes
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Available Webhooks


                              *
                              [Category](/api-docs/getting-started/webhooks/webhook-events#webhook-events_category)
                            header:
                              anchor: categories_webhooks
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: categories_object-properties
                          - type: jsonSchema
                            data:
                              $ref: './V3 Catalog.oas2.yml#/definitions/CategoryBase'
                    - title: Category Tree
                      route:
                        path: /category-tree
                      data:
                        blocks:
                          - type: html
                            data: "<h1> Category Tree </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#category-tree_introduction\"> Catalog Products</a></li>\n\t\t<li><a href=\"#category-tree_object-properties\"> Object Properties</a></li>\n\t</ul>\n</div>\n"
                          - type: text
                            data: >-
                              ##
                              [/catalog/categories/tree](/api-reference/catalog/catalog-api/category/getcategorytree)


                              The Category Tree returns a simple view of the
                              parent > child relationship of all categories in
                              the store. This endpoint can be used to fetch the
                              categories if building out a custom navigation for
                              a store.
                            header:
                              anchor: category-tree_introduction
                          - type: code
                            data: |
                              {
                                  "data": [
                                      {
                                          "id": 33,
                                          "parent_id": 0,
                                          "name": "Clothing",
                                          "is_visible": true,
                                          "url": "/clothing/",
                                          "children": []
                                      },
                                      {
                                          "id": 23,
                                          "parent_id": 0,
                                          "name": "Shop All",
                                          "is_visible": true,
                                          "url": "/shop-all/",
                                          "children": []
                                      },
                                      {
                                          "id": 25,
                                          "parent_id": 0,
                                          "name": "Towels",
                                          "is_visible": true,
                                          "url": "/towels/",
                                          "children": [
                                              {
                                                  "id": 26,
                                                  "parent_id": 25,
                                                  "name": "Bath Towels",
                                                  "is_visible": true,
                                                  "url": "/towels/bath-towels/",
                                                  "children": [
                                                      {
                                                          "id": 30,
                                                          "parent_id": 26,
                                                          "name": "Bath Towels",
                                                          "is_visible": true,
                                                          "url": "/towels/bath-towels/bath-towels/",
                                                          "children": []
                                                      },
                                                      {
                                                          "id": 29,
                                                          "parent_id": 26,
                                                          "name": "Hand Towels",
                                                          "is_visible": true,
                                                          "url": "/towels/bath-towels/hand-towels/",
                                                          "children": [
                                                              {
                                                                  "id": 31,
                                                                  "parent_id": 29,
                                                                  "name": "Washcloths",
                                                                  "is_visible": true,
                                                                  "url": "/towels/bath-towels/hand-towels/wash-cloths/",
                                                                  "children": []
                                                              }
                                                          ]
                                                      }
                                                  ]
                                              },
                                              {
                                                  "id": 28,
                                                  "parent_id": 25,
                                                  "name": "Beach Towels",
                                                  "is_visible": true,
                                                  "url": "/towels/beach-towels/",
                                                  "children": []
                                              },
                                              {
                                                  "id": 27,
                                                  "parent_id": 25,
                                                  "name": "Kitchen Towels",
                                                  "is_visible": true,
                                                  "url": "/towels/kitchen-towels/",
                                                  "children": []
                                              }
                                          ]
                                      },
                                      {
                                          "id": 18,
                                          "parent_id": 0,
                                          "name": "Bath",
                                          "is_visible": true,
                                          "url": "/bath/",
                                          "children": [
                                              {
                                                  "id": 34,
                                                  "parent_id": 18,
                                                  "name": "Shoes",
                                                  "is_visible": true,
                                                  "url": null,
                                                  "children": []
                                              }
                                          ]
                                      },
                                      {
                                          "id": 32,
                                          "parent_id": 0,
                                          "name": "Hoodies",
                                          "is_visible": true,
                                          "url": "/hoodies/",
                                          "children": []
                                      },
                                      {
                                          "id": 19,
                                          "parent_id": 0,
                                          "name": "Garden",
                                          "is_visible": true,
                                          "url": "/garden/",
                                          "children": []
                                      },
                                      {
                                          "id": 21,
                                          "parent_id": 0,
                                          "name": "Kitchen",
                                          "is_visible": true,
                                          "url": "/kitchen/",
                                          "children": []
                                      },
                                      {
                                          "id": 20,
                                          "parent_id": 0,
                                          "name": "Publications",
                                          "is_visible": true,
                                          "url": "/publications/",
                                          "children": []
                                      },
                                      {
                                          "id": 22,
                                          "parent_id": 0,
                                          "name": "Utility",
                                          "is_visible": true,
                                          "url": "/utility/",
                                          "children": []
                                      }
                                  ],
                                  "meta": {}
                              }
                            header:
                              title: Category Tree Response Example
                              anchor: code-example-get-category-tree
                          - type: http
                            data:
                              headers:
                                Accepts: application/json
                                Content-Type: application/json
                                X-Auth-Client: '{{CLIENT ID}}'
                                X-Auth-Token: '{{ACCESS TOKEN}}'
                              method: get
                              url: >-
                                https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/summary
                              body: |-
                                {
                                  "name": "BigCommerce Coffee Mug",
                                  "price": "10.00",
                                  "categories": [
                                    23,
                                    21
                                  ],
                                  "weight": 4,
                                  "type": "physical"
                                }
                            header:
                              title: 'Try It Now '
                              subtitle: Get your store's Category Tree
                              anchor: code-get-cateory-tree
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Object Properties'
                            header:
                              anchor: category-tree_object-properties
                          - type: jsonSchema
                            data:
                              $ref: >-
                                ./V3
                                Catalog.oas2.yml#/definitions/CategoryTreeCollectionResponse
        - title: Scripts
          route:
            path: /scripts
          data:
            blocks:
              - type: text
                data: '# Scripts'
            children:
              - title: Overview
                route:
                  path: /scripts-overview
                data:
                  blocks:
                    - type: html
                      data: "<h1>Script API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#scripts_script-manager-partner-guidelines\">Script Manager API Partner Guidelines</a></li>\n        <li><a href=\"#script_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#scripts_upgrades-installation\">Upgrades and Installation</a></li>\n        <li><a href=\"#scripts_fixing-missing-scripts\">Fixing Missing Scripts</a></li>\n        <li><a href=\"#scripts_notes\">Notes</a></li>\n    \t\t<li><a href=\"scripts_oauth-scopes\"> OAuth Scopes</a></li>\n        <li><a href=\"#script_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ##
                        [/content/scripts](/api-reference/content/content-scripts-api/scripts/getscripts)


                        The BigCommerce Scripts API can be used to inject a
                        script into a store's template files. Some use cases:

                        * Insert tracking codes

                        * Storefront single click applications

                        * Live chat, support plugins

                        * Theme extension or connector apps
                    - type: text
                      data: >-
                        ## Script Manager API Partner Guidelines


                        With the Script Manager API, your Apps now have the
                        ability to insert scripts into a user’s storefront
                        without requiring the user to manually paste a snippet
                        of code into their control panel. You can freely update
                        these scripts while your App is installed, and, if
                        desired, automatically remove scripts if your App is
                        uninstalled.


                        For Apps being installed on our latest theme engine
                        (Stencil), this process is relatively straightforward.
                        However, if your App is already live, you may have
                        already asked merchants to paste a code snippet in one
                        of these two sections in the control panel:


                        - Footer Scripts

                        - Web Analytics


                        Also, since our older (Blueprint-based) themes do not
                        support the Script Manager API, you’ll still need some
                        way of providing users of older themes the documentation
                        they need, without burdening users of newer themes with
                        additional, unnecessary steps.


                        To help you transition to the Script Manager API, we’ve
                        provided some recommended strategies to deal with these
                        different situations. 


                        #### Stencil vs Blueprint


                        As mentioned above, BigCommerce supports two theme
                        engines: Stencil and Blueprint. Stencil is our latest
                        technology, and all new stores only have access to
                        Stencil themes. However, older stores may still be using
                        our legacy theme engine, Blueprint, which does not have
                        the ability to render scripts inserted through the
                        Script Manager API.


                        Because of this, you’ll need to check whether a user is
                        running Stencil to determine if their store supports the
                        Script Manager API. To do this, use the [Get Store
                        Information
                        API](https://developer.bigcommerce.com/api/v2/#store-information-reference)
                        endpoint and check the `stencil_enabled` flag. (requires
                        [store_v2_information_read_only
                        scope](https://developer.bigcommerce.com/api/#oauth-scopes)).
                      header:
                        anchor: scripts_script-manager-partner-guidelines
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Prerequisites


                        To better understand the content of this document, you
                        should be familiar with the app installation procedure,
                        which is outlined here:

                        [App
                        Installation](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_installation-update-sequence)
                      header:
                        anchor: scripts_script-prerequisites
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Upgrades and Installation


                        ### Installing An App on Stencil


                        For Apps being installed on Stencil stores, we recommend
                        inserting your scripts immediately after receiving the
                        POST response during the Auth Callback flow. Add your
                        scripts using the Create Script endpoint of the Script
                        Manager API.


                        We highly recommend leaving the auto_uninstall flag set
                        to true, so that your App will properly clean itself up
                        when uninstalled. More information about this flag can
                        be found <a href="#script_object-properties">here</a>.


                        #### Upgrading Existing Apps on Stencil


                        If your App has already been released, you may have
                        existing users with pasted-in code somewhere in their
                        control panel. There are a few possible ways to deal
                        with this situation.


                        1.) __Do nothing__


                        If you don’t need to upgrade existing merchants to the
                        Script Manager API, it’s perfectly fine to leave them
                        as-is. You’ll need to maintain documentation for the
                        manual uninstallation process so that merchants with
                        older installations know what to clean up, and you won’t
                        be able to automatically update or add scripts for these
                        users. 


                        2.) __Prompt merchants to upgrade__


                        If you want your merchants to gradually update to the
                        new Script Manager over time, you can prompt them to do
                        so on your App’s landing page. You’ll need to keep track
                        of which of your merchants are not using the Script
                        Manager yet to know whether you need to display this
                        prompt. Also, make sure to check that they are running
                        Stencil (via the Get Store Information endpoint) before
                        prompting them to upgrade.


                        Once a user decides to upgrade, you can walk them
                        through removing the old pasted-in code in their control
                        panel, and then, once the merchant clicks a button,
                        install your scripts through the Script Manager API.


                        3.) __Silently upgrade to the Script Manager API__


                        Finally, if it’s possible for your old, pasted-in
                        scripts to live alongside the new Script Manager API
                        scripts, you may be able to upgrade to using the Script
                        Manager API without any user intervention being
                        required. Whether or not this is possible will vary
                        depending on the implementation of your App.


                        While your merchants will be loading more data on their
                        storefront pages than necessary, this method will allow
                        you to transition to using the Script Manager API for
                        all of your installations immediately. Keep in mind
                        you’ll still need to document the manual uninstallation
                        process for existing installations.


                        ### Installing Apps on Blueprint Stores 


                        As mentioned, the Blueprint theme engine does not
                        support the Script Manager API. Any scripts inserted
                        through this API will not be rendered on any storefront
                        pages. To prevent unpredictable behavior should a user
                        change their theme, we highly recommend checking the Get
                        Store Information endpoint for Stencil support prior to
                        installing any scripts through the Script Manager API.
                        Additionally, you’ll still want to show the old manual
                        installation steps when a store does not support
                        Stencil. 


                        ### Existing Blueprint Installations 


                        Existing blueprint installations won’t be affected, but
                        remember that if you are prompting existing Stencil
                        users to upgrade to the Script Manager, you’ll want to
                        suppress this message for Blueprint users. 
                      header:
                        anchor: scripts_upgrades-installation
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ### Fixing Missing Scripts


                        It’s possible that your App installation may find itself
                        unexpectedly missing one or more scripts. Below are some
                        possible causes of this issue.


                        1.) __The Merchant Deleted Your Script__ 


                        Merchants are given a warning when attempting to delete
                        a script belonging to an App, but we do allow them to do
                        so.


                        If you want to handle this situation gracefully, we
                        recommend you check the [Get
                        Scripts](/api-reference/content/content-scripts-api/scripts/getscripts)
                        endpoint on your App Detail Page (returned by the [Load
                        Callback
                        URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_processing-signed-payload)
                        to determine whether the expected scripts are present.
                        If they are not, you can prompt the user to click a
                        button to automatically repair their installation.


                        We ask that you request the user’s permission rather
                        than doing this automatically, as they may have had a
                        good reason for deleting the missing script. 


                        2.) __The Merchant's Theme is Not Set Up Correctly__ 


                        In order to render scripts, the theme templates must
                        have the handlebars expressions {{head.scripts}} and
                        {{footer.scripts}} in the pages where scripts should be
                        rendered. If either of these is absent, scripts on that
                        page with location set to head or footer (respectively)
                        will not be rendered.


                        Of particular note, {{head.scripts}} was only recently
                        added to the checkout and order confirmation pages in
                        our Cornerstone theme, and widespread adoption of this
                        standard outside of Cornerstone is still an ongoing
                        process.


                        To ensure your App is compatible with as many themes as
                        possible, we recommend footer over head for checkout,
                        order_confirmation and all_pages visibilities. 


                        3.) __Scripts Are Not Rendering in the Checkout and
                        Order Confirmation__ 


                        In order to render scripts, the store must have
                        BigCommerce’s Optimized one-page checkout enabled. This
                        is the default checkout type for all new Stencil stores.
                        Existing stores have to manually change the checkout
                        type as detailed in this article. 


                        Stencil themes from the marketplace support the
                        [Optimized One-Page
                        Checkout](https://support.bigcommerce.com/articles/Public/Optimized-Single-Page-Checkout#signup).
                        However, there could be instances where the merchant
                        maintains their own private theme and the theme has not
                        been updated to support the Optimized one-page checkout.
                        In this case, the merchant is required to add the theme
                        support, following the steps
                        [here](https://stencil.bigcommerce.com/docs/optimized-checkout-prereqs).  
                      header:
                        anchor: scripts_fixing-missing-scripts
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Notes


                        - If you are injecting scripts into the Checkout, you
                        will need to update the scope to Checkout Content.
                        Accounts can only be created by the [store
                        owner](https://support.bigcommerce.com/articles/Public/Store-API-Accounts/).

                        - Merchants will be able to see the scripts installed on
                        the store in the Control Panel. Within the native tag
                        manager, merchant actions will be limited to viewing a
                        script and deleting a script.

                        - Scripts can be located in the header
                        `{{head.scripts}}` or footer `{{footer.scripts}}`.

                        - Scripts Manager is only for Stencil themes. Blueprint
                        store users will still need to copy and paste in code.

                        - The current visibility options are `storefront`,
                        `checkout`, `all_pages` and `order_confirmation`.

                             `storefront`: All pages that are not `checkout` or `order_confirmation`.
                             
                             `all_pages`: Includes `storefront`, `checkout` and `order_confirmation`. This also includes the cart page. It **does not** include giftcertificates.php, 
                                            sitemap.php, account.php, and login.php.
                             
                        - Scripts injected via the Scripts API will not render
                        when you are developing a theme locally via Stencil CLI.
                      header:
                        anchor: scripts_scripts-notes
                    - type: text
                      data: '---'
                    - type: text
                      data: "## OAuth Scopes\n* Checkout Content\t\n* Content\n\nFor a more details and a full list of available scopes, see [Oauth Scopes](api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)."
                      header:
                        anchor: scripts_oauth-scopes
                    - type: text
                      data: '---'
                    - type: text
                      data: '## Object Properties'
                      header:
                        anchor: scripts_object-properties
                    - type: jsonSchema
                      data:
                        $ref: './V3 Content.oas2.yml#/definitions/Script'
        - title: Price Lists
          route:
            path: /price-lists
          data:
            blocks:
              - type: text
                data: '# Price Lists'
            children:
              - title: Overview
                route:
                  path: /price-list-overview
                data:
                  blocks:
                    - type: html
                      data: "<h1>Price List API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#pricelist_what-is-a-pricelist\">What is a Price List?</a></li>\n        <li><a href=\"#pricelist_definitions\">Definitions</a></li>\n        <li><a href=\"#pricelist_notes\">Notes</a></li>\n        <li><a href=\"#pricelist_oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#pricelist_available-webhooks\">Webhooks Available</a></li>\n        <li><a href=\"#pricelist_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## What is a Price List? 
                        [/pricelist](/api-reference/price-lists/pricelists-api/price-lists/getpricelistcollection)


                        A Price List allows you to populate different versions
                        of catalog pricing and assign them to different
                        [Customer
                        Groups](/api-reference/customer-subscribers/customers-api).
                        The prices are specified exclusively at the variant
                        level. 


                        If an active Price List does not contain prices for a
                        variant then the Catalog pricing will be used. The
                        association of a Price List to a Customer Group can be
                        done either via the Control Panel or using the [Customer
                        Groups
                        API.](/api-reference/customer-subscribers/customers-api)


                        Price Lists will provide overridden price values to the
                        Stencil storefront. Final price display can be further
                        customized within the Stencil template. See the [Price
                        Object](https://stencil.bigcommerce.com/docs/price-object-properties)
                        in Stencil for further documentation.
                      header:
                        anchor: pricelist_what-is-a-pricelist
                    - type: text
                      data: '---'
                      header: {}
                    - type: text
                      data: "## Definitions\n\n- `Price List` : A collection of price records. `Price Records` make up a price list.\n \n- `Price Record`: A price override for a particular variant - minimally, this is a variant ID, price, and currency.\n        \n```\n\t{\n\t\t\"variant_id\": 3121,\n\t\t\"price\": 10.0,\n\t\t\"sale_price\": 8.0,\n\t\t\"retail_price\": 12.0,\n\t\t\"map_price\": 6.0,\n\t\t\"currency\": \"EUR\"\n\t}\n```\n\n        \n- `PriceRecordBatch`: A way to update several `Price Records` in a `Price List` at once. Using this bulk upsert endpoint, you can upsert up to 1000 Price Records in a single API call.\n\n- `Currency`:  A `Price List` can contain records for multiple currencies. At this time, *only price records that match the store's default currency will be used to determine storefront and in-cart prices.* Although BigCommerce supports a storefront currency selection, this is not currently integrated with Price Lists and will merely convert prices from the store's default currency for display convenience."
                      header:
                        anchor: pricelist_definitions
                    - type: code
                      data: |-
                        [{
                          "variant_id": 3121,
                          "price": 10.0,
                          "sale_price": 8.0,
                          "retail_price": 12.0,
                          "map_price": 6.0,
                          "currency": "USD"
                        }, {
                          "variant_id": 3255,
                          "price": 11.0,
                          "sale_price": 9.0,
                          "retail_price": 13.0,
                          "map_price": 7.0,
                          "currency": "USD"
                        }, {
                          "variant_id": 3256,
                          "price": 12.0,
                          "sale_price": 10.0,
                          "retail_price": 14.0,
                          "map_price": 8.0,
                          "currency": "USD"
                        }, {
                          "variant_id": 3257,
                          "price": 13.0,
                          "sale_price": 11.0,
                          "retail_price": 15.0,
                          "map_price": 9.0,
                          "currency": "USD"
                        }, {
                          "variant_id": 3258,
                          "price": 14.0,
                          "sale_price": 12.0,
                          "retail_price": 16.0,
                          "map_price": 10.0,
                          "currency": "USD"
                        }] 
                      header:
                        title: Example Price List
                      config:
                        mode: json
                    - type: code
                      data: |-
                        [

                            {
                                "id": 1,
                                "name": "Price List Test",
                                "is_default": false,
                                "category_access": {
                                    "type": "all"
                                },
                                "discount_rules": [
                                    {
                                        "type": "price_list",
                                        "price_list_id": 1
                                    }
                                ]
                            }
                        ]
                      header:
                        title: Example Price List assigned to a customer group
                    - type: text
                      data: >-
                        Under `discount_rules` the `type` is set to `price_list`
                        and the `price_list_id` is 1. Which is the id of the
                        price list the group has been assigned to.
                    - type: text
                      data: >-
                        ## Notes


                        - Bulk Pricing Tiers may additionally be associated with
                        a Price Record to indicate different pricing as the
                        quantity in cart increases.
                          
                        - If a variant has a `Price Record` any existing
                        product-level bulk pricing will not apply in the cart. 
                        For variants without `Price Records`, any existing
                        product bulk pricing will apply.
                      header:
                        anchor: pricelist_notes
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## OAuth Scopes

                        *
                        [Products](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)
                      header:
                        anchor: pricelist_oauth-scopes
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Webhooks Available


                        There are no direct webhooks available for Price Lists.
                        Since Price Lists directly relate to products, webhooks
                        related to products will fire for corresponding changes
                        such as pricing. 


                        *
                        [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)

                        *
                        [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)
                      header:
                        anchor: pricelist_available-webhooks
                    - type: text
                      data: '---'
                    - type: text
                      data: '## Object Properties'
                      header:
                        anchor: pricelist_object-properties
                    - type: jsonSchema
                      data:
                        $ref: './V3 Price Lists.oas2.yml#/definitions/PriceListBase'
        - title: Customers
          route:
            path: /customers
          data:
            blocks: []
            children:
              - title: Customer Login API
                route:
                  path: /customer-login-api
                data:
                  blocks:
                    - type: html
                      data: "<h1> Customer Login API </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#customer-login_jwt\"> JWT</a></li>\n\t\t<li><a href=\"#customer-login_oauth-scope\">OAuth Scope</a></li>\n    <li><a href=\"#customer-login_sample-code\">Sample Code</a></li>\n    <li><a href=\"#customer-login_access-url\">Acces URL</a></li>\n    <li><a href=\"#customer-login_logging-in-a-customer\">Loggin In a Customer</a></li>\n    <li><a href=\"#customer-login_troubleshooting-customer-login-api\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        The Customer Login API enables single sign-on (SSO). It
                        allows your apps to programmatically log in a storefront
                        customer by using the login entry point URL:
                        `/login/token/{token}`. Here, {token} must be a JSON Web
                        Token (JWT) containing the parameters for the customer
                        login request, signed by your application’s Oauth client
                        secret.


                        Example use cases for the Customer Login API include:


                        * Integration with a SSO provider or IdP

                        * Continuous login between a BC storefront and another
                        system, such as a WordPress blog

                        * Any login method other than BC's typical email and
                        password login - for example, if you wanted to enable
                        customers to log in via a phone number and SMS password
                      header: {}
                    - type: text
                      data: >-
                        ## JWT


                        JWT is a standard for verifying a login signature
                        between two parties. For a full overview of the JWT
                        standard, please see [JWT.IO](https://jwt.io/), where
                        you can find links to client libraries (in many
                        languages) that facilitate the generation and
                        verification of JWT tokens. BigCommerce also supplies
                        helper methods for generating login tokens in our [API
                        Client Libraries](/tools-resources).


                        ### JWT Standard


                        A valid JWT token is a string composed of three parts,
                        separated by periods (“.”), which correspond to the
                        encoded header, the encoded payload, and the signature.
                      header:
                        anchor: customer-login_jwt
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6012/1535390918772
                      header:
                        anchor: example-jwt-token
                        title: Example JWT Token
                      config:
                        centered: true
                        maxWidth: '800'
                        maxHeight: '800'
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6012/1535391044482
                      header:
                        title: Key
                        anchor: token-key
                      config:
                        centered: true
                        maxWidth: '400'
                        maxHeight: '400'
                    - type: text
                      data: "### Header\n\nThe header specifies the type of token (JWT) and the hashing algorithm.\n\n```\n{\n\t\"typ\": \"JWT\",\n\t\"alg\": \"HS256\" \n}\n```\n\nThe type and algorithm are always JWT and HS256. Those are the only values BigCommerce supports."
                      header: {}
                    - type: text
                      data: >-
                        ### Payload

                        The payload contains a series of claims that identify
                        the application requesting the login, the store, and the
                        customer to be logged in. Optionally, you can specify a
                        redirect URL to direct the customer to a page other than
                        the My Account page after login. 


                        Once a request has is made with a given `jti`, it cannot
                        be made again. This parameter is used to prevent replay
                        attacks by malicious actors intercepting the request or
                        obtaining it after the fact.


                        The `request_ip` field can be used as an additional
                        security precaution, to prevent a malicious actor from
                        intercepting the request and making it from another
                        browser or system before you do. If you supply this
                        value, BigCommerce checks the incoming request to ensure
                        that it is being made from the stated IP address
                        otherwise the request fails. We strongly encourage
                        setting this IP address value, but doing so is optional,
                        to support those cases where this information is not
                        available.
                      header: {}
                    - type: code
                      data: |
                        {
                        "iss": "Your app’s Oauth client ID",
                        "iat": "timestamp for when the token was issued",
                        "jti": "randomly generated string",
                        "operation": "customer_login",
                        "store_hash": "abc123",
                        "customer_id": 1234,
                        "redirect_to": "/account.php",
                        "request_ip": "111.222.333.444"
                        }
                      header:
                        anchor: example-payload
                        title: Example Payload
                      config:
                        mode: json
                    - type: text
                      data: >-
                        | Field Name | Type | Description |

                        | --- | --- | --- |

                        | iss | string | Indicates the token's issuer. This is
                        your application's client ID, which is obtained during
                        application registration in Developer Portal. |

                        | iat | integer| Time when the token was generated. This
                        is a numeric value indicating the number of seconds
                        since the [Unix
                        epoch](http://en.wikipedia.org/wiki/Unix_time).|

                        | jti | string | Request ID string that must be unique
                        across all requests made by your app. A UUID or other
                        random string would be an appropriate value. Most
                        libraries contain a method for generating a uuid. For
                        testing a [UUID
                        generator](https://www.uuidgenerator.net/) can be used,
                        but it recommended to use built in libraries.|

                        | operation | string | Must contain the string
                        "customer_login". |

                        | store_hash | string | Store hash identifying the store
                        you are logging into. |

                        | customer_id | integer | ID of the customer you are
                        logging in, as obtained through the Customer API. |

                        | redirect_to | string | Optional field containing a
                        relative path for the shopper's destination after login.
                        Will default to `/account.php`. |

                        | request_ip | string | Optional field containing the
                        expected IP address for the request. If provided,
                        BigCommerce will check that it matches the browser
                        trying to log in. If there is not a match, it will be
                        rejected |
                      header: {}
                    - type: text
                      data: >-
                        ### Signature


                        The signature is created by signing the header and
                        payload with the hashing algorithm specified in the
                        header (HS256) and your application’s Client Secret. 
                      header: {}
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## OAuth Scope

                        Your OAuth API credentials must include the
                        [customers_login](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes)
                        scope.
                      header:
                        anchor: customer-login_oauth-scope
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Access URL

                        After generating the JWT token, your app should
                        immediately redirect the shopper’s browser to the
                        following access point URL to log the customer into
                        their account: `/login/token/{token}`


                        Example:

                        `https://storedomain.com/login/token/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                        .eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ`
                      header:
                        anchor: customer-login_access-url
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Logging in a Customer

                        The following tutorial will walk through creating a
                        login token. We recommend scripting this process since
                        the iat is invalid after 30 seconds. For the purpose of
                        illustration, this tutorial will walk through creating a
                        token manually using the debugger tool at JWT.io,
                        although doing so can be tricky due to time
                        constraints.  


                        **Prerequisites**:

                        Client ID and Client Secret generated from the store
                        with the scope set to [Customers
                        Login](/api-docs/getting-started/about-api/authentication#authentication_oauth-scopes).
                      header:
                        anchor: customer-login_logging-in-a-customer
                    - type: text
                      data: >-
                        ### Create a JWT Token


                        1. Run a /GET request against the
                        [Customers](/api-reference/customer-subscribers/customers-api/customers/getcustomers)
                        resource. Choose a customer and make note of the
                        customer_id. 
                      header: {}
                    - type: callout
                      data:
                        type: success
                        body: >-
                          If you are unsure how to make a /GET request see our
                          tutorial on [making your first request]().
                        title: Making a /GET request
                      header: {}
                    - type: text
                      data: >-
                        2. Create the payload by filling in the PAYLOAD:DATA on
                        jwt.io
                    - type: code
                      data: |-
                        {
                            "iss": "1234r5t6y7u8i9o0p",
                            "iat": 1535393113,
                            "jti": "20b7c03e-00da-4d29-91bf-2aa06a57575b",
                            "operation": "customer_login",
                            "store_hash": "{store_hash}",
                            "customer_id": 2,
                            "redirect_to": "/account.php"
                        }
                      header:
                        title: Create the Payload
                        anchor: create-the-paylpad
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6012/1535469059335
                      header:
                        subtitle: JTW.io fields
                      config:
                        centered: true
                        maxWidth: '800'
                        maxHeight: '800'
                    - type: callout
                      data:
                        type: error
                        title: IAT Claim
                        body: 'The iat claim is only good for 30 seconds. '
                      header:
                        anchor: iat-claim
                    - type: text
                      data: >
                        3.  Add your Client Secret in the Verify Signature
                        Section. Replace the text `your-256-bit-secret` with the
                        Client Secret.

                        4. Copy the token from the encoded box and paste at the
                        end of the login/token url.  


                        *https://store-url/login/token/generated-jwt-token*


                        **Example**: 

                        https://storedomain.com/login/token/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                        .eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9
                        .TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ


                        5. Paste the URL into the address bar.


                        If the request was successful then you will be logged in
                        as the customer and directed to /account.php. If it was
                        unsuccessful there will be a login attempt message and
                        you will be directed to /login.php
                    - type: text
                      data: >-
                        ## Sample Code


                        Code to generate a valid JWT token for a storefront
                        login request is provided in our API Client Libraries.
                        The list items below link to the repositories maintained
                        by BigCommerce:


                        * [PHP
                        Sample](https://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421)

                        * [Python
                        Sample](https://github.com/bigcommerce/bigcommerce-api-python/blob/master/bigcommerce/customer_login_token.py)

                        * [Ruby
                        Sample](https://github.com/bigcommerce/bigcommerce-api-ruby/blob/master/examples/customers/customer_login.rb)


                        Client libraries in many other languages are at JWT.io.
                      header:
                        anchor: customer-login_sample-code
                    - type: tabs
                      data:
                        children:
                          - title: PHP Sample
                            blocks:
                              - type: code
                                data: |2-
                                      public static function getCustomerLoginToken($id, $redirectUrl = '', $requestIp = '')
                                      {
                                          if (empty(self::$client_secret)) {
                                              throw new Exception('Cannot sign customer login tokens without a client secret');
                                          }

                                          $payload = array(
                                              'iss' => self::$client_id,
                                              'iat' => time(),
                                              'jti' => bin2hex(random_bytes(32)),
                                              'operation' => 'customer_login',
                                              'store_hash' => self::$store_hash,
                                              'customer_id' => $id
                                          );

                                          if (!empty($redirectUrl)) {
                                              $payload['redirect_to'] = $redirectUrl;
                                          }

                                          if (!empty($requestIp)) {
                                              $payload['request_ip'] = $requestIp;
                                          }

                                          return JWT::encode($payload, self::$client_secret, 'HS256');
                                      }
                                header:
                                  subtitle: >-
                                    https://github.com/bigcommerce/bigcommerce-api-php/blob/master/src/Bigcommerce/Api/Client.php#L421
                                  title: Client.php
                                  anchor: php-sample
                                config:
                                  mode: php
                          - title: Python Sample
                            blocks:
                              - type: code
                                data: |+
                                  import os
                                  import time
                                  import uuid
                                  import jwt


                                  class CustomerLoginTokens(object):
                                      @classmethod
                                      def create(cls, client, id, redirect_url=None, request_ip=None):

                                          # Get the client_secret needed to sign tokens from the environment
                                          # Intended to play nice with the Python Hello World sample app
                                          # https://github.com/bigcommerce/hello-world-app-python-flask
                                          client_secret = os.getenv('APP_CLIENT_SECRET')

                                          if not client_secret:
                                              raise AttributeError('No OAuth client secret specified in the environment, '
                                                                   'please specify an APP_CLIENT_SECRET')

                                          try:
                                              client_id = client.connection.client_id
                                              store_hash = client.connection.store_hash
                                          except AttributeError:
                                              raise AttributeError('Store hash or client ID not found in the connection - '
                                                                   'make sure an OAuth API connection is configured. Basic auth is not supported.')

                                          payload = dict(iss=client_id,
                                                         iat=int(time.time()),
                                                         jti=uuid.uuid4().hex,
                                                         operation='customer_login',
                                                         store_hash=store_hash,
                                                         customer_id=id
                                                         )

                                          if redirect_url:
                                              payload['redirect_url'] = redirect_url

                                          if request_ip:
                                              payload['request_ip'] = request_ip

                                          token = jwt.encode(payload, client_secret, algorithm='HS256')

                                          return token.decode('utf-8')

                                      @classmethod
                                      def create_url(cls, client, id, redirect_url=None, request_ip=None):
                                          secure_url = client.Store.all()['secure_url']
                                          login_token = cls.create(client, id, redirect_url, request_ip)
                                          return '%s/login/token/%s' % (secure_url, login_token)

                                header:
                                  title: customer_login_token.py
                                  subtitle: >-
                                    https://github.com/bigcommerce/bigcommerce-api-python/blob/master/bigcommerce/customer_login_token.py
                                  anchor: python-sample
                                config:
                                  mode: python
                          - title: Ruby Sample
                            blocks:
                              - type: code
                                data: >-
                                  require 'bigcommerce'


                                  Bigcommerce.configure do |config|
                                    config.store_hash = ENV['BC_STORE_HASH']
                                    config.client_id = ENV['BC_CLIENT_ID']
                                    config.client_secret = ENV['BC_CLIENT_SECRET']
                                    config.access_token = ENV['BC_ACCESS_TOKEN']
                                  end


                                  # Get a customer

                                  customer = Bigcommerce::Customer.all(page:
                                  1).first


                                  # Generate token login url

                                  puts customer.login_token
                                header:
                                  subtitle: >-
                                    https://github.com/bigcommerce/bigcommerce-api-ruby/blob/master/examples/customers/customer_login.rb
                                  title: customer_login.rb
                                  anchor: ruby-sample
                                config:
                                  mode: ruby
                      header:
                        title: JWT Token Sample Code
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Troubleshooting


                        * If the server generating the iat is out of sync, the
                        login token will fail if the timestamp indicates a time
                        in the future or an expired token.


                        * The login URL can be visited only once. Once a GET
                        request is run against the link, the token is
                        invalidated. 


                        * Tokens can be validated or generated for testing
                        purposes using the debugger at https://jwt.io/.


                        * Tokens will be valid for a very short timeframe after
                        they are first generated, so tokens should not be
                        generated in advance. Instead, the application should
                        generate the token and then immediately redirect the
                        user’s browser to `/login/token/{token}`. If you're
                        seeing issues related to your system time differing from
                        BC's server time, you can use the <a
                        href="/api/v2/#get-a-timestamp">/v2/time</a> endpoint as
                        a source of truth.
                      header:
                        anchor: troubleshooting-customer-login-api"
              - title: Current Customer API
                route:
                  path: /current-customer-api
                data:
                  blocks:
                    - type: html
                      data: "<h1> Current Customer API </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#current-customer_identifying-logged-in-customers\">Identifying Logged-In Customers Securely</a></li>\n    <li><a href=\"#current-customer_logged-in-customers-javascript\">Example JavaScript</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Identifying Logged-In Customers Securely


                        If your application interacts dynamically with the
                        BigCommerce storefront, and conveys information that is
                        specific to a particular logged-in customer, you must
                        confirm that customer’s identity within the insecure
                        environment of the user’s browser.


                        To address this need, BigCommerce provides a Current
                        Customer endpoint, which your app can access via
                        JavaScript on the storefront. This endpoint returns a
                        JWT with identifying details about the customer. The
                        information is signed with your [OAuth client
                        secret](/api-docs/getting-started/about-api/authentication#authentication_client-id-secret).
                      header:
                        anchor: current-customer_identifying-logged-in-customers
                    - type: text
                      data: >-
                        ## Example JavaScript


                        Below is example JavaScript that will access this JWT.
                        To test the JWT functionality, you can install this
                        JavaScript on your sandbox BigCommerce store. Your
                        application’s Client ID must be included in the request
                        (to identify the requesting application):
                      header:
                        anchor: current-customer_logged-in-customers-javascript
                    - type: code
                      data: |
                        <script type="text/javascript">
                        function customerJWT() {  
                            var appClientId = "**BC_CLIENT_ID**"; // TODO: Fill this in with your app's client ID
                            var xmlhttp = new XMLHttpRequest();
                            xmlhttp.onreadystatechange = function() {
                                if (xmlhttp.readyState == 4 ) {
                                   if (xmlhttp.status == 200) {
                                       alert('Customer JWT:\n' + xmlhttp.responseText);
                                   }
                                   else if (xmlhttp.status == 404) {
                                      alert('Not logged in!');
                                   }
                                   else {
                                       alert('Something went wrong');
                                   }
                                }
                            };
                            xmlhttp.open("GET", "/customer/current.jwt?app_client_id="+appClientId, true);
                            xmlhttp.send();
                        }
                        customerJWT();
                        </script>
                      header:
                        title: Identify Logged In Customers
                        anchor: identify-customers-script
                      config:
                        mode: html
                    - type: text
                      data: >-
                        If you are logged into the storefront with a customer
                        account, the above JavaScript should alert to the
                        browser with a JWT token. If no customer is logged in,
                        BigCommerce will return a 404 response, and you will see
                        an error message. The JWT returned from this endpoint
                        (example below) can be decoded on JWT.IO
                    - type: code
                      data: |-
                        {
                          "customer": {
                            "id": 4927,
                            "email": "john.doe@gmail.com",
                            "group_id": "6"
                          },
                          "iss": "bc/apps",
                          "sub": "abc123",
                          "iat": 1480831863,
                          "exp": 1480832763,
                          "version": 1,
                          "aud": "6sv16tfx3j5gsopm42ss5dd67g2srvq",
                          "application_id": "6sv16tasdgr2b5hs5dd67g2srvq",
                          "store_hash": "abc123",
                          "operation": "current_customer"
                        }
                      header:
                        title: Logged in Customers Response
                        anchor: logged-in-customer-response
                      config:
                        mode: json
                    - type: text
                      data: >-
                        By design, your application should send this token to
                        the application’s server, validate it against your
                        client secret, and then use it as a trusted indication
                        of the logged-in customer’s identity, before displaying
                        confidential information to them. 


                        An end-to-end example, which displays a customer’s
                        recently purchased products, is available in our
                        [Ruby](https://github.com/bigcommerce/hello-world-app-ruby-sinatra/)
                        and
                        [PHP](https://github.com/bigcommerce/hello-world-app-php-silex/)
                        sample apps.
        - title: Cart and Checkout
          route:
            path: /cart-and-checkout
          data:
            children:
              - title: Overview
                route:
                  path: /cart-and-checkout-overview
                data:
                  blocks:
                    - type: html
                      data: "<h1>Cart and Checkout</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#cart-checkout_storefront-cart-and-checkout\">Storefront Cart and Checkout</a></li>\n        <li><a href=\"#cart-checkout_server-to-server-cart-and-checkout\">Server to Server Cart and Checkout</a></li>\n        <li><a href=\"#cart-checkout_oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#cart-checkout_available-webhooks\">Webhooks Available</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Storefront
                        [Cart](/api-reference/cart-checkout/storefront-cart-api)
                        and
                        [Checkout](/api-reference/cart-checkout/storefront-checkout-api)


                        The Storefront APIs are for managing the contents of a
                        shopper's cart using JavaScript in the context of a
                        storefront session. 


                        ### When to Use the Storefront APIs


                        * Analytics and Tracking

                        * Retrieving cart data client-side

                        * Quick Order Form

                        * Upsell applications


                        ### Using the Fetch API

                        The [Fetch
                        API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
                        is an alternative to
                        [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)
                        for making http requests in JavaScript. You can use the
                        Fetch API to interact with the Storefront APIs and
                        return a shopper's cart, checkout or order. 


                        Fetch API is supported by most modern browsers, but it
                        is not supported in Internet Explorer. We recommend
                        using a [Polyfill](https://github.com/github/fetch) for
                        Internet Explorer 10+ and XMLHttpRequest for earlier
                        versions.


                        Here we use `credentials: 'include'` to make a fetch
                        request with credentials.

                        You can run fetch requests from the browser console to
                        test, or you can  use the [Scripts API](http://) to add
                        inject JavaScript into your theme's footer.
                      header:
                        anchor: cart-checkout_storefront-cart-and-checkout
                    - type: code
                      data: |-
                        <script>
                        console.log('Log Cart');
                        fetch('/api/storefront/cart', {
                          credentials: 'include'
                        }).then(function(response) {
                          return response.json();
                        }).then(function(myJson) {
                          console.log(myJson);
                        });
                        </script>
                      header:
                        title: Log Cart Details to the Console
                      config:
                        mode: html
                    - type: code
                      data: >-
                        <script>

                        console.log('Log Checkout');

                        fetch('/api/storefront/cart?includes=consignments.availableShippingOptions',
                        {
                                credentials: 'include'
                              })
                              .then(function(response) {
                                return response.json();
                              }).then(function(cartJson) {
                                console.log(cartJson);
                                return cartJson[0].id;
                              }).catch(function(error) {
                                console.log(error);
                              }).then(function(cartId) {
                                fetch('/api/storefront/checkouts/' + cartId, {
                                  credentials: 'include'
                                }).then(function(response) {
                                  return response.json();
                                }).then(function(checkoutJson) {
                                  console.log(checkoutJson);
                                }).catch(function(error) {
                                  console.log(error);
                                })
                              });

                        </script>
                      header:
                        title: Log Checkout Details to the Console
                      config:
                        mode: html
                    - type: code
                      data: >-
                        <script>

                        console.log("Log Order");

                        fetch('/api/storefront/order/{{checkout.order.id}}',
                        {credentials: 'include'})

                        .then(function(response) {

                        return response.json();

                        })

                        .then(function(myJson) {

                        console.log(myJson);

                        });

                        </script>
                      header:
                        title: Log Order Details to the Console
                      config:
                        mode: html
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Server-to-Server
                        [Cart](/api-reference/cart-checkout/server-server-cart-api)
                        and
                        [Checkout](/api-reference/cart-checkout/storefront-checkout-api)


                        The Server-to-Server APIs are for managing the contents
                        of a shopping cart and checkout remotely, from a server.
                        Using the Cart, Checkout and Payment API allows for a
                        fully headless ecommerce solution.


                        ### CaaS


                        [Commerce-as-a-Service](https://www.bigcommerce.com/commerce-as-a-service/)
                        is made possible with the Server-to-Server APIs. It lets
                        the underlying cart, checkout, order and payment APIs be
                        called from a separate app, allowing you to create a
                        completely custom checkout without ever touching the
                        BigCommerce storefront.



                        ## When to Use

                        * Modifying cart contents, such as price matching

                        * Taking a shopper through cart and checkout using an
                        app

                        * Quote Builder - Building a cart then restoring it on
                        the storefront

                        * Native mobile apps

                        * Pre-filling customer information
                    - type: text
                      data: >
                        ## Available Webhooks

                        *
                        [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)

                        *
                        [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)

                        *
                        [Cart](/api-docs/getting-started/webhooks/webhook-events#webhook-events_cart)
                    - type: text
                      data: >-
                        ## OAuth Scopes

                        * Carts

                        * Checkouts

                        * Products

                        * Checkout Content

                        * Order Transactions


                        For more details and a full list of available scopes,
                        see [Oauth
                        Scopes](api-docs/getting-started/about-api/authentication#authentication_oauth-scopes).
              - title: Checkout SDK
                route:
                  path: /checkout-sdk
                data:
                  blocks:
                    - type: html
                      data: "<h1> Checkout SDK </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#checkout-sdk_what-can-i-do\"> What Can I Do with the SDK?</a></li>\n\t\t<li><a href=\"#checkout-sdk_where-to-get\">Where Can I Get the SDK?\n</a></li>\n    <li><a href=\"#checkout-sdk_support-customization\">Support and Customization\n</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        The Checkout JS SDK is a wrapper for the BigCommerce
                        Storefront Checkout API.


                        It allows a developer to create a custom checkout
                        experience to move a customer through the checkout
                        process.

                        The SDK handles all the ‘heavy-lifting’ such as customer
                        login, getting shipping quotes and submitting payment
                        for an order.

                        With the Checkout JS SDK, you can build a [custom
                        checkout
                        presentation](https://github.com/bigcommerce/checkout-sdk-js-example)
                        layer in popular frontend frameworks such as React.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## What Can I Do with the SDK?


                        -   It can initialize payment and shipping providers
                        that require client-side setup through a common
                        interface. Below are some examples of these providers:
                            
                            -   PayPal Express
                            -   Braintree
                            -   Stripe 
                            -   Square
                            -   Amazon
                            -   Klarna
                          
                        -   It provides a JavaScript interface for interacting
                        with the web API.
                            -   Fetch and submit resources:
                                -   Cart
                                -   Order
                                -   Customer
                            -   Fetch available options:
                                -   Shipping addresses
                                -   Shipping countries
                                -   Shipping states
                                -   Billing addresses
                                -   Billing countries
                                -   Billing states
                                -   Shipping methods
                                -   Payment methods
                         
                        The Checkout JS SDK allows you to present the checkout
                        process to the shopper in any way you like, and, through
                        frontend technologies and external web services, augment
                        the checkout with extra information. 


                        However, the Checkout JS SDK does not allow you to
                        change the underpinnings of the checkout - you must
                        still conform to the model of the Checkout API
                        underpinning the SDK to complete a Checkout and create
                        an Order in BigCommerce. 

                        The SDK does not allow you to implement custom payment,
                        shipping, or tax calculation providers into the checkout
                        - instead, the configured providers for these services
                        on a given store are expressed via our Checkout API.
                      header:
                        anchor: checkout-sdk_what-can-i-do
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Where Can I Get the SDK?

                        The Checkout JS SDK and associated documentation is
                        available from the [BigCommerce SDK Repo.](
                        https://github.com/bigcommerce/checkout-sdk-js)
                      header:
                        anchor: checkout-sdk_where-to-get
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Support and Customization

                        - Enterprise clients can reach out to their account
                        manager to review services and resources available.

                        - For more on our design policy please visit [Design
                        Support](https://forum.bigcommerce.com/s/article/BigCommerce-Design-Policy#support).
                      header:
                        anchor: checkout-sdk_support-customization
              - title: Add to Cart URLs
                route:
                  path: /add-to-cart-url
                data:
                  blocks:
                    - type: html
                      data: "<h1>Add to Cart URLs</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#add-cart-url_select-specific-sku\">Select Specific SKU (Product/Variant) on Product Detail Page</a></li>\n        <li><a href=\"#add-cart-url_add-specific-sku-cart\">Add Specific SKU to Cart</a></li>\n        <li><a href=\"#add-cart-url_add-sku-checkout-go-to-cart\">Add Specific SKU to Cart and Go Directly to Checkout</a></li>\n    \t<li><a href=\"#add-cart-url_add-specific-sku-checkout-source\">Add Specific SKU, Go to Checkout, and Include Source</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Your apps can use a product's or variant's <a
                        href="https://support.bigcommerce.com/articles/Public/Product-SKUs"
                        target="_blank">SKU</a> to create custom product URLs in
                        order to perform specific actions, like:


                        * Pre-select a specific SKU’s product option values when
                        loading a product detail page.

                        * Add a specific SKU to the cart.

                        * Add a specific SKU to the cart and go directly to
                        checkout.

                        * Add a specific SKU to the cart, go directly to
                        checkout, and include a source parameter for analytics
                        and conversion tracking.
                    - type: text
                      data: '---'
                    - type: callout
                      data:
                        title: 'Limitation: One Item per URL'
                        body: >-
                          Each of the custom links described here can add only a
                          single item (quantity 1) to the cart at a time.
                    - type: text
                      data: >-
                        ## Select Specific SKU (Product/Variant) on Product
                        Detail Page


                        To link to a specific product variant, append
                        `?sku=INSERT-SKU-HERE` to the product URL, as shown
                        below. This will link to the product page, with the
                        variant's options already selected.


                        ### Structure:

                        `site.com/sample-test-product-w-options/?sku=INSERT-SKU-HERE`



                        ### Example:

                        `myawesomestore.com/shirt/?sku=SHIRT-SM-RED`
                      header:
                        anchor: add-cart-url_select-specific-sku
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Add Specific SKU to Cart


                        To automatically add a product or variant to a shopper's
                        cart and take them directly to the cart page, append   

                        `/cart.php?action=add&sku=INSERT-SKU-HERE` to the
                        store's domain.


                        ### Structure:

                        `/site.com/cart.php?action=add&sku=INSERT-SKU-HERE`


                        ### Example:

                        `myawesomestore.com/cart.php?action=add&sku=SHIRT-SM-RED`
                      header:
                        anchor: add-specific-sku-cart
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Add Specific SKU to Cart and Go Directly to Checkout

                        To automatically add a product or variant to a shopper's
                        cart and forward them directly to checkout, append   

                        `/cart.php?action=buy&sku=INSERT-SKU-HERE` to the
                        store's domain.


                        ### Structure:

                        `/site.com/cart.php?action=buy&sku=INSERT-SKU-HERE`


                        ### Example:

                        `myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED`
                      header:
                        anchor: add-cart-url_add-sku-checkout-go-to-cart
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Add Specific SKU, Go to Checkout, and Include Source


                        To automatically add a product or variant to a shopper's
                        cart, forward them to checkout, and also include a
                        source parameter for analytics/conversion tracking,
                        append
                        `cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE`
                        to the store's domain. (The&#160;source parameter can be
                        any string.)


                        ### Structure:

                        `site.com/cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE`


                        ### Example:

                        `myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED&source=JULY-EMAIL-NEWSLETTER`
                      header:
                        anchor: add-cart-url_add-specific-sku-checkout-source
        - title: Orders
          route:
            path: /orders
          data:
            children:
              - title: Overview
                route:
                  path: /orders-overview
                data:
                  blocks:
                    - type: html
                      data: "<h1>Orders</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#order-overview_what-is-a-order\">What is a Order?</a></li>\n    \t\t<li><a href=\"#order-overview_available-endpoints\">Available Endpoints</a></li>\n        <li><a href=\"#order-overview_storefront-orders\">Storefront Orders API</a></li>\n        <li><a href=\"#order-overview_server-server-checkout\">Server to Server Checkout Orders</a></li>\n        <li><a href=\"#order-overview_v2-orders\">Orders API</a></li>\n    \t\t<li><a href=\"#order-overview_transactions\">Order Transactions</a></li>\n        <li><a href=\"#order-overview_oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#order-overview_available-webhooks\">Webhooks Available</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## What is an Order?

                        An order is a collection of items, along with customer
                        and shipping information, that has been finalized with a
                        payment or attempted payment. 


                        Orders can contain both digital or physical products.
                        Digital items are delivered via email and do not require
                        a shipping address, whereas physical items require a
                        shipping address and a delivery method. 


                        BigCommerce offers two possible workflows for creating
                        orders via the API: the Server-to-Server Checkout API
                        or  the Orders API.

                        * The Server-to-Server Checkout API represents an
                        extension of the Server-to-Server Cart API and can be
                        used to complete a purchase from product selection to
                        conversion.

                        * The Orders API is used to retrieve or update existing
                        orders or to push orders from a third party, like a POS,
                        to BigCommerce.
                      header:
                        anchor: order-overview_what-is-a-order
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Available Endpoints


                        | Name | Description |

                        | -- | -- |

                        | [Storefront
                        Orders](/api-reference/orders/storefront-orders-api) |
                        Retrieve order information from the Order Confirmation
                        page using JavaScript |

                        | [Server to Server
                        Checkout](/api-reference/cart-checkout/server-server-checkout-api/checkout/postcheckoutscheckoutidorders)
                        | Create an order from an existing checkout |

                        | [Orders API](/api-reference/orders/orders-api) |
                        Create and manage orders. Can manage orders created via
                        API or the Control Panel |

                        | [Order
                        Transactions](/api-reference/orders/orders-transactions-api)
                        | Get transaction information for existing orders. Read
                        Only Endpoint |
                      header:
                        anchor: order-overview_available-endpoints
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ##  Storefront Orders API 

                        The Storefront Orders API can be used to return
                        information about a just-placed order on the order
                        confirmation page. You can interact with the Storefront
                        Orders API using an app or a browser API. 


                        For an example using the Fetch API to log order
                        information to the console, see [Storefront Orders
                        API](http://).


                        ### When to Use:

                        * Scrape order information

                        * Send order data to an analytics app
                      header:
                        anchor: order-overview_storefront-orders
                    - type: code
                      data: >-
                        <script>

                        console.log("Log Orders")

                        fetch('/api/storefront/order/{{checkout.order.id}}',
                        {credentials: 'include'})

                        .then(function(response) {

                        return response.json();

                        })

                        .then(function(myJson) {

                        console.log(myJson);

                        });

                        </script>
                      header:
                        title: Log Orders to Console
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Server-to-Server Checkout API


                        The Server-to-Server Checkout API allows you to create a
                        checkout programmatically and then convert it to an
                        order. From there, the order can be managed in the
                        Control Panel or using the V2 Orders API. [See
                        Server-to-Server Checkout](http://) for more.


                        ### When to Use:

                        * Create an order from an existing checkout
                      header:
                        anchor: order-overview_server-server-checkout
                    - type: text
                      data: '---'
                    - type: text
                      data: >-

                        ## Orders API

                        The Orders API can be used to create an order without
                        first creating a cart and checkout. It also allows you
                        to manage an order's billing address, products, coupons,
                        and taxes. See [Orders
                        API](/api-reference/orders/orders-api) for a complete
                        list of methods.


                        ### When to Use: 

                        * Create an order and bypass creating a cart and
                        checkout

                        * Make changes to existing orders

                        * Export or import order information to a third-party
                        system
                      header:
                        anchor: order-overview_v2-orders
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Order Transactions

                        The Order Transactions API is a read-only endpoint that
                        returns transaction or payment data about an order. The
                        data returned does not include payment tokens for a
                        third party such as Braintree. 


                        ### When to Use:

                        * View transaction information about an Order. 
                      header:
                        anchor: order-overview_transactions
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## OAuth Scopes

                        - Orders

                        - Carts

                        - Checkouts


                        For a more details and a full list of available scopes,
                        see [Oauth
                        Scopes](api-docs/getting-started/about-api/authentication#authentication_oauth-scopes).
                      header:
                        anchor: order-oauth-scopes
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Webhooks Available

                        -
                        [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)
                      header:
                        anchor: order-webhooks-available
              - title: Orders API
                route:
                  path: /orders-api-guide
                data:
                  blocks:
                    - type: html
                      data: "<h1>Orders API Guide</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#orders-guide_create-order\">Create an Order</a></li>\n    \t\t<li><a href=\"#orders-api-guide_update-order\">Update an Order</a></li>\n        <li><a href=\"#orders-api-guide_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        An order can be created using the /orders endpoint. It
                        requires a list of products and a billing address for a
                        valid order.


                        This endpoint will accept existing products or custom
                        products created using the products array. Custom
                        products are not added to the existing store’s catalog. 
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Create an Order

                        **POST /v2/orders**


                        At a minimum, an order needs products and billing
                        addresses. 


                        For this example, we will create an order using a custom
                        product, existing store product and add a billing
                        address. 


                        ### Create a custom product


                        - **name**: Product Name

                        - **quantity**: Number of items

                        - **price_inc_tax**: Price including tax

                        - **price_ex_tax**: Price excluding tax
                      header:
                        anchor: orders-api-guide_create-order
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          Creating a custom product does not add it to the
                          catalog. Only to the current order
                    - type: code
                      data: |2-
                                  {
                                      "name": "BigCommerce Poster",
                                      "quantity": 1,
                                      "price_inc_tax": 10.98,
                                      "price_ex_tax": 10.00
                                  }
                      header:
                        title: Create Custom Product
                      config:
                        mode: json
                    - type: text
                      data: >-
                        ### Add an Existing Product with Options

                        To add an existing product with options, first, make a
                        request to
                        `https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/variants`


                        Make note of the `option_values` > `id` and
                        `option_values` > `option_id`. These will be passed into
                        the products array. 
                    - type: code
                      data: |-
                        {
                            "data": [
                                {
                                    "id": 421,
                                    "product_id": 184,
                                    "sku": "RED",
                                    "sku_id": 383,
                                    "price": null,
                                    "calculated_price": 249,
                                    "sale_price": null,
                                    "retail_price": null,
                                    "map_price": null,
                                    "weight": null,
                                    "calculated_weight": 15,
                                    "width": null,
                                    "height": null,
                                    "depth": null,
                                    "is_free_shipping": false,
                                    "fixed_cost_shipping_price": null,
                                    "purchasing_disabled": false,
                                    "purchasing_disabled_message": "",
                                    "image_url": "",
                                    "cost_price": 0,
                                    "upc": "",
                                    "mpn": "",
                                    "gtin": "",
                                    "inventory_level": 0,
                                    "inventory_warning_level": 0,
                                    "bin_picking_number": "",
                                    "option_values": [
                                        {
                                            "id": 180,
                                            "label": "Red",
                                            "option_id": 200,
                                            "option_display_name": "Color"
                                        },
                                        {
                                            "id": 192,
                                            "label": "Small",
                                            "option_id": 230,
                                            "option_display_name": "T-Shirt Size"
                                        }
                                    ]
                                }
                        ...
                      header:
                        title: 'Example /GET Variants Response '
                        subtitle: >-
                          https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/variants
                      config:
                        mode: json
                        highlightRange:
                          - from: '30'
                            to: '42'
                    - type: text
                      data: >-
                        Then create the products array which includes the custom
                        product and the existing product with product options.
                        Using the option_id and option_value id from the
                        previous request we can build the products array. 


                        `product_options` > `id` = `option_values` > `option_id`

                        `product_options` > `value` = `option_values` > `id`


                        The `product_options` > `value` must be passed in as a
                        string.
                    - type: code
                      data: |-
                        "products":[
                                  {
                                      "name": "BigCommerce Poster",
                                      "quantity": 1,
                                      "price_inc_tax": 10.98,
                                      "price_ex_tax": 10.00
                                  },
                                  {
                                      "product_id": 184,
                                        "product_options":[
                                            {
                                                "id": 200,
                                                "value": "180"
                                            },
                                            {
                                                "id": 230,
                                                "value": "192"
                                            }
                                        ]

                                  }
                              ]
                      header:
                        title: Example Products Array
                    - type: http
                      data:
                        headers:
                          X-Auth-Client: '{X-Auth-Client}'
                          X-Auth-Token: '{X-Auth-Token}'
                          Content-Type: application/json
                          Accept: application/json
                        method: post
                        url: >-
                          https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders
                        body: |-
                          {
                            "billing_address": {
                              "first_name": "Jane",
                              "last_name": "Does",
                              "company": "",
                              "street_1": "123 Main Street",
                              "street_2": "",
                              "city": "Austin",
                              "state": "Texas",
                              "zip": "78751",
                              "country": "United States",
                              "country_iso2": "US",
                              "email": "janedoe@email.com"
                            },
                            "products": [
                              {
                                "name": "BigCommerce Poster",
                                "quantity": 1,
                                "price_inc_tax": 10.98,
                                "price_ex_tax": 10
                              },
                              {
                                "product_id": //Add your product,
                                "product_options": [
                                  {
                                    "id": //Add your product,
                                    "value": ""//Add your product
                                  },
                                  {
                                    "id": //Add your product,
                                    "value": "" //Add your product
                                  }
                                ]
                              }
                            ]
                          }
                      header:
                        title: Try it Now
                        subtitle: Create an Order
                    - type: text
                      data: >-
                        The response will have abbreviated order contents with
                        sub-resources available to get the full order
                        information. The order is automatically set to a status
                        of 1 or Pending. It also returns an id which is the
                        order id. In the example below, the order id is 193. 


                        * The order products sub-resource will list the products
                        added. 

                        * The shipping_addresses sub-resource will have the
                        shipping addresses.

                        * The coupons sub-resource will have any coupons added
                        to the order.
                    - type: code
                      data: |-
                        {
                            "id": 193,
                            "customer_id": 0,
                            "date_created": "Fri, 12 Oct 2018 19:06:23 +0000",
                            "date_modified": "Fri, 12 Oct 2018 19:06:23 +0000",
                            "date_shipped": "",
                            "status_id": 1,
                            "status": "Pending",
                            "subtotal_ex_tax": "10.0000",
                            "subtotal_inc_tax": "10.9800",
                            "subtotal_tax": "0.9800",
                            "base_shipping_cost": "0.0000",
                            "shipping_cost_ex_tax": "0.0000",
                            "shipping_cost_inc_tax": "0.0000",
                            "shipping_cost_tax": "0.0000",
                            "shipping_cost_tax_class_id": 0,
                            "base_handling_cost": "0.0000",
                            "handling_cost_ex_tax": "0.0000",
                            "handling_cost_inc_tax": "0.0000",
                            "handling_cost_tax": "0.0000",
                            "handling_cost_tax_class_id": 0,
                            "base_wrapping_cost": "0.0000",
                            "wrapping_cost_ex_tax": "0.0000",
                            "wrapping_cost_inc_tax": "0.0000",
                            "wrapping_cost_tax": "0.0000",
                            "wrapping_cost_tax_class_id": 0,
                            "total_ex_tax": "10.0000",
                            "total_inc_tax": "10.9800",
                            "total_tax": "0.9800",
                            "items_total": 1,
                            "items_shipped": 0,
                            "payment_method": "Manual",
                            "payment_provider_id": null,
                            "payment_status": "",
                            "refunded_amount": "0.0000",
                            "order_is_digital": false,
                            "store_credit_amount": "0.0000",
                            "gift_certificate_amount": "0.0000",
                            "ip_address": "",
                            "geoip_country": "",
                            "geoip_country_iso2": "",
                            "currency_id": 1,
                            "currency_code": "USD",
                            "currency_exchange_rate": "1.0000000000",
                            "default_currency_id": 1,
                            "default_currency_code": "USD",
                            "staff_notes": null,
                            "customer_message": null,
                            "discount_amount": "0.0000",
                            "coupon_discount": "0.0000",
                            "shipping_address_count": 1,
                            "is_deleted": false,
                            "ebay_order_id": "0",
                            "cart_id": null,
                            "billing_address": {
                                "first_name": "Jane",
                                "last_name": "Doe",
                                "company": "",
                                "street_1": "123 Main Street",
                                "street_2": "",
                                "city": "Austin",
                                "state": "Texas",
                                "zip": "78751",
                                "country": "United States",
                                "country_iso2": "US",
                                "phone": "",
                                "email": "janedoe@email.com",
                                "form_fields": []
                            },
                            "is_email_opt_in": false,
                            "credit_card_type": null,
                            "order_source": "external",
                            "external_source": null,
                            "products": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/products",
                                "resource": "/orders/193/products"
                            },
                            "shipping_addresses": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/shippingaddresses",
                                "resource": "/orders/193/shippingaddresses"
                            },
                            "coupons": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/coupons",
                                "resource": "/orders/193/coupons"
                            },
                            "external_id": null,
                            "external_merchant_id": null,
                            "custom_status": "Pending"
                        }
                      header:
                        title: Create Order Response
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Update an Order\n\nIn the update, we are going to change the order status, customer_id and add an existing store product. \n\n### Order Status\n\nThe order status is currently set to `\"status\": \"Pending\"`. This is the default status for orders made using the API. To change this, the `status_id` needs to be updated with the corresponding id. In this example the status is set to 7 or Awaiting Payment. \n\nFor a full list of order statuses see [Order Status](/api-reference/orders/v2-orders/order-statues/getorderstatuses) endpoint. \n\n### Customer\n\nThe `customer_id` is set to 0. This is the default for orders created using the API. For a list of available customers in the store use the [Customers Endpoint](/api-reference/customer-subscribers/customers-api/customers/getcustomers). \n\n### Add a Product\n\nAn existing store product or a new custom product can be added during a /PUT request. The products must be added as an array of objects. To get a list of store products use the [Catalog Products](/api-reference/catalog/catalog-api/products/getproducts) endpoint. \n\n```\n{\n\t\"products\":[\n\t\t{\n\t\t\t\"product_id\": 196,\n\t\t\t\"quantity\": 1\n\n\t\t}\n\t]\n}\n```"
                      header:
                        anchor: orders-api-guide_update-order
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          The shipping address cannot be updated or set using
                          the API.  It will default to the billing address.
                    - type: http
                      data:
                        headers:
                          X-Auth-Client: '{X-Auth-Client}'
                          X-Auth-Token: '{X-Auth-Token}'
                          Content-Type: application/json
                          Accept: application/json
                        method: put
                        url: >-
                          https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/orders/{order_id}
                        body: " {\n   \"status_id\": 7,\n   \"customer_id\": // Add your customer_id here,\n  \t\"products\":[\n      {\n          \"product_id\": //Add your product id,\n          \"quantity\": 1\n\n      }\n  ]\n }\n"
                      header:
                        title: Try it Now
                        subtitle: Update an Order
                    - type: code
                      data: |
                        {
                            "id": 193,
                            "customer_id": 13,
                            "date_created": "Fri, 12 Oct 2018 19:06:23 +0000",
                            "date_modified": "Tue, 16 Oct 2018 17:05:30 +0000",
                            "date_shipped": "",
                            "status_id": 7,
                            "status": "Awaiting Payment",
                            "subtotal_ex_tax": "35.9900",
                            "subtotal_inc_tax": "41.2500",
                            "subtotal_tax": "5.2600",
                            "base_shipping_cost": "0.0000",
                            "shipping_cost_ex_tax": "0.0000",
                            "shipping_cost_inc_tax": "0.0000",
                            "shipping_cost_tax": "0.0000",
                            "shipping_cost_tax_class_id": 0,
                            "base_handling_cost": "0.0000",
                            "handling_cost_ex_tax": "0.0000",
                            "handling_cost_inc_tax": "0.0000",
                            "handling_cost_tax": "0.0000",
                            "handling_cost_tax_class_id": 0,
                            "base_wrapping_cost": "0.0000",
                            "wrapping_cost_ex_tax": "0.0000",
                            "wrapping_cost_inc_tax": "0.0000",
                            "wrapping_cost_tax": "0.0000",
                            "wrapping_cost_tax_class_id": 0,
                            "total_ex_tax": "35.9900",
                            "total_inc_tax": "40.2700",
                            "total_tax": "4.2800",
                            "items_total": 2,
                            "items_shipped": 0,
                            "payment_method": "Manual",
                            "payment_provider_id": null,
                            "payment_status": "",
                            "refunded_amount": "0.0000",
                            "order_is_digital": false,
                            "store_credit_amount": "0.0000",
                            "gift_certificate_amount": "0.0000",
                            "ip_address": "",
                            "geoip_country": "",
                            "geoip_country_iso2": "",
                            "currency_id": 1,
                            "currency_code": "USD",
                            "currency_exchange_rate": "1.0000000000",
                            "default_currency_id": 1,
                            "default_currency_code": "USD",
                            "staff_notes": null,
                            "customer_message": null,
                            "discount_amount": "0.0000",
                            "coupon_discount": "0.0000",
                            "shipping_address_count": 1,
                            "is_deleted": false,
                            "ebay_order_id": "0",
                            "cart_id": null,
                            "billing_address": {
                                "first_name": "John",
                                "last_name": "Doe",
                                "company": "",
                                "street_1": "123 Main Street",
                                "street_2": "",
                                "city": "Austin",
                                "state": "Texas",
                                "zip": "78751",
                                "country": "United States",
                                "country_iso2": "US",
                                "phone": "",
                                "email": "janedoe@email.com",
                                "form_fields": []
                            },
                            "is_email_opt_in": false,
                            "credit_card_type": null,
                            "order_source": "external",
                            "external_source": null,
                            "products": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/products",
                                "resource": "/orders/193/products"
                            },
                            "shipping_addresses": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/shippingaddresses",
                                "resource": "/orders/193/shippingaddresses"
                            },
                            "coupons": {
                                "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/coupons",
                                "resource": "/orders/193/coupons"
                            },
                            "external_id": null,
                            "external_merchant_id": null,
                            "custom_status": "Awaiting Payment"
                        }
                      header:
                        title: Example Order Response
                      config:
                        mode: json
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Next Steps

                        * Try updating the `billing_address`

                        * Review the [Orders
                        API](/api-reference/orders/orders-api)
                      header:
                        anchor: orders-api-guide_next-steps
        - title: Shipping
          route:
            path: /shipping
          data:
            children:
              - title: Overview
                route:
                  path: /shipping-overview
                data:
                  blocks:
                    - type: html
                      data: "<h1>Shipping</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#shipping_what-is-a-shipment\">What is a Shipment?</a></li>\n        <li><a href=\"#shipping_storefront-server-checkout\">Storefront Checkout and Server to Server Checkout</a></li>\n        <li><a href=\"#shipping_order-shipping-addresses\">Order Shipping Addresses</a></li>\n        <li><a href=\"#shipping_shipping-zone-methods\">Shipping Zone and Shipping Methods</a></li>\n        <li><a href=\"#shipping_real-time-carriers\">Real-Time Carriers</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## What is a Shipment?

                        Shipments are created from orders. A shipment represents
                        a grouping of order line items that are shipped to a
                        customer, and multiple shipments can be created from a
                        single order.


                        The V2 Shipping API allows you to manage Shipping Zones,
                        Shipping Methods, and Shipping Carrier Connections.


                        The Order Shipments resource creates a shipment for an
                        order. You can specify the shipping provider, tracking
                        number and shipping address id when creating a shipment.


                        For more see:

                        * [Create a
                        Shipment](/api-reference/orders/orders-api/order-shipments/postordersorderidshipments)
                      header:
                        anchor: shipping_what-is-a-shipment
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Storefront Checkout and Server-to-Server Checkout API


                        The Storefront and Server-to-Server Checkout APIs
                        provide methods for managing a checkout up until the
                        point when it is finalized into an order. Because
                        shipments can only be created from finalized orders, a
                        shipment cannot be created from Checkout API endpoints. 


                        However, both the Storefront and Server-to-Server
                        Checkout APIs provide methods for creating a
                        Consignment, which specifies the line items that should
                        ship to a particular address. Creating a Consignment
                        corresponds with the actions that a shopper might take
                        when filling out the storefront checkout page, assigning
                        the items in their basket to their respective shipping
                        destinations. 


                        A Checkout will always have one Consignment assigned to
                        it, which is the first shipping address. A Consignment
                        supports multiple shipping addresses, with each address
                        having its own line items.


                        For more see:

                        * [Storefront
                        Checkout](/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost)

                        * [Server to Server
                        Checkout](/api-reference/cart-checkout/server-server-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost)
                      header:
                        anchor: shipping_storefront-server-checkout
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Order Shipping Addresses


                        The Order Shipping Addresses endpoint allows you to view
                        the shipping addresses on an order. This will be the
                        address(es) the items are shipped to.  An order can have
                        more than one shipping address.


                        For more see:

                        * [Order Shipping
                        Addresses](/api-docs/api-reference/v2-api/v2-orders/order-shipping-addresses/getordersorderidshippingaddressesid)
                      header:
                        anchor: shipping_order-shipping-addresses
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Shipping Zone and Shipping Methods


                        Shipping zones can be configured in the control panel or
                        using the API to designate where a merchant ships their
                        products and which shipping methods should be available
                        in each geographic region. 


                        An example of a shipping zone might be North America,
                        and within that shipping zone, the shipping methods
                        might be Free Shipping, Ship-by-Weight, and USPS.


                        For more see:

                        * [Shipping
                        Zones](/api-reference/shipping/shipping-api/shipping-zones/getshippingzones)

                        * [Shipping
                        Methods](/api-reference/shipping/shipping-api/shipping-method/getshippingzoneszoneidmethods)
                      header:
                        anchor: shipping_shipping-zone-methods
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Real-Time Carriers


                        BigCommerce offers native integrations with many
                        real-time shipping carriers such as UPS, Fedex, and
                        USPS. The Real-Time Carriers resource allows you to
                        connect an account for one of our natively supported
                        shipping carrier integrations. 


                        For a list of all supported carriers, see [Real-Time
                        Quote
                        Providers](https://support.bigcommerce.com/articles/Public/Setting-Up-a-Real-Time-Shipping-Quote-Shipping-Method/#providers).


                        For more see:

                        * [Set Up Real-Time
                        Carriers](/api-reference/shipping/shipping-api/shipping-carrier/postshippingcarrierconnection)

                        * [Configure Real-Time
                        Carriers](/api-reference/shipping/shipping-api/shipping-method/postshippingzoneszoneidmethods)
                      header:
                        anchor: shipping_real-time-carriers
              - title: Shipper HQ
                route:
                  path: /shipper-hq
                data:
                  blocks:
                    - type: html
                      data: "<h1>Shipper HQ Metafields</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#shipper-hq-object-properties\">ShipperHQ Object Properties</a></li>\n        <li><a href=\"#control-panel-behavior\">Control Panel Behavior</a></li>\n        <li><a href=\"#add-shipperhq-metafield\">Add ShipperHQ Metafield</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        When ShipperHQ is enabled on a store, additional fields
                        become available on the product level:

                        * Shipping Origins

                        * Origin Locations

                        * Dimensional Rules are accessible. 


                        These field values can be set in the Control Panel by
                        the merchant as well as using the

                        [Product Metafields
                        Endpoint](/api-docs/api-reference/v3-api/catalog-api/product-metafields/createproductmetafield)
                        or the [Variant Metafields
                        Endpoint](/api-docs/api-reference/v3-api/catalog-api/product-variants-metafields/createvariantmetafield).
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## ShipperHQ Object Properties


                        | Property | Type | Values |

                        |---|---|---|

                        | permission_set | string | This must be set to `write`.
                        Setting to any other field will cause unintended
                        behavior. **required** |

                        | key | enum | Members: `shipping-groups`,
                        `shipping-origins`, `shipping-dimensional-rules`
                        **required** |

                        | value | JSON encoded string | This will be the name of
                        the attribute type in ShipperHQ. This needs to be input
                        exactly how it is listed within ShipperHQ. To pass in
                        more than one Shipping Origin, Origin Location or
                        Dimensional Rule use an array with a comma-separated
                        list. White spaces and special characters need to be
                        escaped. Must be a JSON encoded string `"[\"Origin Name
                        from SHQ-1\",\" Origin Name from SHQ-2\"]"` **required**
                        |

                        | namespace | string | This will always be
                        `shipping.shipperhq` **required** |

                        | resource_type | string | Either `product` or `variant`
                        |

                        | resource_id | string | Id of the product or variant
                        **read-only** |

                        | description | string | ShipperHQ shipping origins
                        associated with this product/sku. **read-only** |

                        | date_created | string | Date and time of the
                        metafield's creation. **read-only** |

                        | date_modified | string | Date and time when the
                        metafield was last updated. **read-only** |

                        | id | number | Id of the Metafield. **read-only** |
                      header:
                        anchor: shipper-hq-object-properties
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          The metafields must be entered exactly, otherwise they
                          will not work. Since metafields can also be used to
                          store information against a product, if the
                          <code>namespace</code> for example is set to shipping
                          and not <code>shipping.shipperhq</code>, it will not
                          update the shipping information.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Control Panel Behavior


                        When Shipping Origins are set using the API, the fields
                        cannot be deleted using the Control Panel. A /DELETE
                        request must be sent to the metafields resource.


                        `/DELETE
                        https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields`
                      header:
                        anchor: control-panel-behavior
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Add ShipperHQ Metafield


                        `/POST
                        https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields`
                      header:
                        anchor: add-shipperhq-metafield
                    - type: code
                      data: "{\n\t\"permission_set\": \"write\",\n\t\"key\": \"shipping-origins\",\n\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\"namespace\": \"shipping.shipperhq\"\n}"
                      header:
                        title: SHQ Add Metafield Request
                    - type: code
                      data: "{\n\t\"data\": [{\n\t\t\t\"id\": 51,\n\t\t\t\"key\": \"shipping-origins\",\n\t\t\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping origins associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-19T17:56:08+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 52,\n\t\t\t\"key\": \"shipping-groups\",\n\t\t\t\"value\": \"[\\\"SHIPPING GROUP NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping group rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 53,\n\t\t\t\"key\": \"shipping-dimensional-rules\",\n\t\t\t\"value\": \"[\\\"DIMENSIONAL RULES NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ dimensional rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"pagination\": {\n\t\t\t\"total\": 3,\n\t\t\t\"count\": 3,\n\t\t\t\"per_page\": 50,\n\t\t\t\"current_page\": 1,\n\t\t\t\"total_pages\": 1,\n\t\t\t\"links\": {\n\t\t\t\t\"current\": \"?page=1&limit=50\"\n\t\t\t}\n\t\t}\n\t}\n}"
                      header:
                        title: SHQ Add Metafield Response
  /api-reference:
    title: API Reference
    data:
      children:
        - title: Catalog
          route:
            path: /catalog
          data:
            children:
              - title: Catalog API
                route:
                  path: /catalog-api
                data:
                  $ref: ./V3 Catalog.oas2.yml
        - title: Store
          route:
            path: /store
          data:
            children:
              - title: Store Information API
                route:
                  path: /store-information-api
                data:
                  $ref: ./V2 Store.oas2.yml
              - title: ' Currency API'
                route:
                  path: /currency-api
                data:
                  $ref: ./V2 Currency.oas2.yml
              - title: Geography API
                route:
                  path: /geography-api
                data:
                  $ref: ./V2 Geography.oas2.yml
              - title: Tax Class API
                route:
                  path: /tax-classes-api
                data:
                  $ref: ./V2 Tax.oas2.yml
        - title: Cart & Checkout
          route:
            path: /cart-checkout
          data:
            children:
              - title: Storefront Cart API
                route:
                  path: /storefront-cart-api
                data:
                  $ref: ./Storefront Cart API.oas2.yml
              - title: Storefront Checkout API
                route:
                  path: /storefront-checkout-api
                data:
                  $ref: ./Storefront Checkout API.oas2.yml
              - title: Server to Server Cart API
                route:
                  path: /server-server-cart-api
                data:
                  $ref: ./Server to Server Cart.oas2.yml
              - title: Server to Server Checkout API
                route:
                  path: /server-server-checkout-api
                data:
                  $ref: ./Server to Server Checkout.oas2.yml
        - title: Orders
          route:
            path: /orders
          data:
            children:
              - title: Orders API
                route:
                  path: /orders-api
                data:
                  $ref: ./V2 Orders.oas2.yml
              - title: Order Transactions API
                route:
                  path: /orders-transactions-api
                data:
                  $ref: ./V3 Orders.oas2.yml
              - title: Storefront Orders API
                route:
                  path: /storefront-orders-api
                data:
                  $ref: ./Storefront Orders.oas2.yml
        - title: Customers & Subscribers
          route:
            path: /customer-subscribers
          data:
            children:
              - title: Customers API
                route:
                  path: /customers-api
                data:
                  $ref: ./V2 Customers.oas2.yml
              - title: Subscribers API
                route:
                  path: /subscribers-api
                data:
                  $ref: ./V3 Subscribers.oas2.yml
        - title: Price Lists
          route:
            path: /price-lists
          data:
            children:
              - title: Price Lists API
                route:
                  path: /pricelists-api
                data:
                  $ref: ./V3 Price Lists.oas2.yml
        - title: Content
          route:
            path: /content
          data:
            children:
              - title: Scripts API
                route:
                  path: /content-scripts-api
                data:
                  $ref: ./V3 Content.oas2.yml
              - title: Store Content API
                route:
                  path: /store-content-api
                data:
                  $ref: ./V2 Store Content.oas2.yml
        - title: Marketing
          route:
            path: /marketing
          data:
            children:
              - title: Marketing API
                route:
                  path: /marketing-api
                data:
                  $ref: ./V2 Marketing.oas2.yml
        - title: Payments
          route:
            path: /payments
          data:
            children:
              - title: Payment Methods API
                route:
                  path: /payment-methods-api
                data:
                  $ref: ./V2 Payment Methods.oas2.yml
        - title: Shipping
          route:
            path: /shipping
          data:
            children:
              - title: Shipping API
                route:
                  path: /shipping-api
                data:
                  $ref: ./V2 Shipping.oas2.yml
        - title: Themes
          route:
            path: /themes
          data:
            children:
              - title: Themes API
                route:
                  path: /themes-api
                data:
                  $ref: ./V3 Themes.oas2.yml
  /stencil-docs:
    title: Stencil Docs
    data:
      children:
        - title: Getting Started
          route:
            path: /getting-started
          data:
            children:
              - title: About Stencil
                route:
                  path: /about-stencil
                data:
                  blocks:
                    - type: html
                      data: <h1>About Stencil</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#about_what-is-stencil\"> What is Stencil?</a></li>\n\t\t<li><a href=\"#about_features-and-stack\"> Stencil Development Features and Technology Stack</a></li>\n\t\t<li><a href=\"#about_key-components\">Key Components: Video Demo</a></li>\n\t\t<li><a href=\"#about_blueprint\"> Blueprint (Legacy Framework) Documentation </a></li>\n\t</ul>\n</div>\n"
                    - type: text
                      data: >-
                        ## What is Stencil?


                        Stencil is the theming engine for the BigCommerce
                        platform and for BigCommerce's Cornerstone theme, which
                        is the foundation a developer needs to quickly start
                        developing premium, custom themes with Stencil. 


                        [Cornerstone](https://github.com/bigcommerce/cornerstone)
                        is available on Github as an open source software, and
                        will be the Stencil engined theme we reference in this
                        documentation in order to demonstrate Stencil's
                        capabilities in a fully functioning storefront theme.
                        Here is a demo of the [BigCommerce Cornerstone
                        theme](http://cornerstone-light-demo.mybigcommerce.com/).


                        Stencil also provides features that allow merchants to
                        customize a storefront's look and feel with no coding,
                        making Stencil a powerful and useful engine for all
                        audiences.
                      header:
                        anchor: about_what-is-stencil
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Stencil Development Features and Technology Stack


                        Stencil's provides the following features, allowing
                        BigCommerce theme developers to create beautiful,
                        dynamic, and powerful storefronts.



                        ### Stencil Command Line Interface (Stencil CLI)


                        The Stencil CLI enables developers to locally develop
                        and customize on any Stencil theme with no impact on a
                        merchant's live storefront during the development
                        process. When locally developing, you will have access
                        to real-time Browsersync preview and testing across
                        desktop, mobile, and tablet devices/viewports.


                        Stencil CLI runs on the Node.js runtime environment.
                        Installing Node.js also provides the required npm
                        package manager.


                        ### Logic-Based Templates


                        Stencil's logic based templates allow BigCommerce
                        developers to customize storefront pages efficiently
                        with the lightweight templating languge, Handlebars.js. 
                        Handlebars allows you to efficiently embed dynamic and
                        conditional logic onto your storefront pages.


                        ### Sass/SCSS Support


                        Stencils Sass and SCSS support allows developers to nest
                        properties, variables, and mixins. Use the familiar
                        Foundation framework (provided) or substitute your
                        choice of framework.


                        Stencil's Cornerstone base theme uses a BigCommerce
                        pattern library called Citadel, which is built on top of
                        the ZURB Foundation framework, version 5.5.3. Stencil
                        does not support Foundation 6.x, due to breaking changes
                        introduced between versions 5.x and 6.x.


                        Foundation offers the framework for creating a
                        responsive theme. You have the option of swapping out
                        Foundation for another framework, although doing so
                        would require significant work.


                        Foundation assets bundled with Cornerstone are located
                        in these subdirectories: 


                        * `Cornerstone/assets/scss/settings/foundation/ `

                        * `Cornerstone/assets/scss/components/foundation/`


                        Citadel extends Foundation’s mixins and components to
                        provide Stencil’s own mixins, extensible components, and
                        utilities. These include drop-down lists, forms, and
                        similar resources. Citadel resources are named according
                        to BEM and SUIT CSS conventions. Classes are named
                        functionally, rather than based on visual presentation
                        or content. Our style guide is published here.

                        Citadel assets bundled with Cornerstone are located in
                        these Cornerstone subdirectories: 


                        * `Cornerstone/assets/scss/settings/citadel/`

                        * `Cornerstone/assets/scss/components/citadel/`


                        More detailed information about the Citadel and
                        Foundation SCSS components, and their naming conventions
                        will be covered in *Components and Design Patterns*.


                        ### Page-specific Resource Definition


                        Specify the dynamic content you want to be displayed on
                        your storefront pages with YAML formatted front matter.


                        ### Javascript Event Hooks


                        Your Stencil themes can access remote objects through
                        event hooks, using the hooks to trigger defined events
                        based on shopper behavior. This will allow you to
                        collect product data and optimize a shopper's
                        experience.


                        To facilitate theme-building, BigCommerce provides the
                        stencil-utils client-side JavaScript library for
                        managing event hooks.


                        ---


                        ## Stencil Theme Editor


                        The Stencil Theme Editor is a browser-based tool that
                        enables merchants to rapidly customize a theme's look
                        and feel with no coding. 


                        BigCommerce theme developers' configuration choices
                        determine which theme aspects merchants can customize,
                        and the range of choices for each aspect.


                        Stencil's Theme Editor graphical interface enables
                        merchants and store administrators to make styling
                        changes to the theme currently applied to their
                        storefront. 


                        As a theme developer, you have the capability to define
                        which style settings appear in the Stencil Theme Editor.
                        You can grant access to colors, fonts, display/hiding of
                        page features, and number of products/entries to display
                        per feature.


                        ### Stencil Theme Variations


                        Each Stencil theme can contain one to four variations.
                        You can optimize individual variations for specific
                        markets, audiences and styles – while still managing and
                        distributing all of these variations as one theme.

                        Cornerstone comes with 3 variations: Cornerstone Light,
                        Cornerstone Warm, and Cornerstone Bold.


                        ### Responsive, Mobile-Friendly Themes


                        BigCommerce stores powered by Stencil allow shoppers to
                        have a first class experience across any device.



                        _Note that this is simply a summary Stencil's core
                        features. Continue reading through the Stencil Developer
                        Documentation to learn about Stencil's full
                        capabilities._
                      header:
                        anchor: about_features-and-stack
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Key Components: Video Demo


                        Watch Stencil senior developer's tour of Stencil's key
                        components:


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/p5SR8N0SeCg"
                        frameborder="0" allowfullscreen></iframe>
                      header:
                        anchor: about_key-components
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Blueprint (Legacy Framework) Documentation


                        If you are looking for information on Blueprint,
                        BigCommerce's legacy theme framework, you can access
                        that below:


                        * [Themes
                        (Blueprint)](https://developer.bigcommerce.com/themes)

                        * [Stores API
                        reference](https://developer.bigcommerce.com/api)
                      header:
                        anchor: about_blueprint
              - title: Transitioning to Stencil
                route:
                  path: /transitionining-to-stencil
                data:
                  blocks:
                    - type: html
                      data: <h1>Transitioning to Stencil</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#choosing-dev-path\"> Choosing a Development Path</a></li>\n\t\t<li><a href=\"#front-matter-quick-start\">Front-Matter Quick Start</a></li>\n    <li><a href=\"#front-matter-quick-start\">Handlebars Quick Start</a></li>\n\t\t<li><a href=\"#seo-tips\">SEO Tips and Best Practices</a></li>\n\t\t<li><a href=\"#blueprint-to-stencil\">Blueprint to Stencil Features Map</a></li>\n    <li><a href=\"#interacting-with-api\">Interacting with the BigCommerce API</a></li>\n    <li><a href=\"#partnering-with-bc\">Partnering with BigCommerce</a></li>\n    <li><a href=\"#next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Choosing a Development Path


                        Are you approaching Stencil from a different theming
                        framework, like Blueprint, BigCommerce's legacy
                        framework? Or moving to the Stencil templating
                        environment from a pure HTML and CSS-based design?


                        You have four (non-mutually exclusive) options for
                        developing Stencil themes:


                        * Find a Design & Solutions Partner

                        * Light Customization using the Theme Editor

                        * Light Customization using HTML and CSS

                        * Adapting a Stencil Theme or Developing from Scratch


                        ###  Find a Design & Solutions Partner


                        If you prefer to have an expert collaborator customize
                        your theme, we recommend working with one of our
                        certified BigCommerce Design & Solutions Partners.
                        Reference the following resources to do so:


                        * [Partner
                        Directory](https://partners.bigcommerce.com/directory/search?i=75)

                        * [Working with a Design
                        Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner)
                        (Support Guide)


                        ### Light Customization with Stencil Theme Editor


                        Stencil can be customized without the use of any
                        specialized development tools or techniques by using of
                        the Stencil Theme Editor. The Stencil Theme Editor still
                        enables customization of a theme's colors, typography,
                        banners, headings, carousel, and footer. It also enables
                        customization of broader layout characteristics, such as
                        the number of products displayed in various panels,
                        category pages, and brand pages.


                        For details, please see:


                        * [Theme
                        Editor](https://support.bigcommerce.com/articles/Public/Using-the-Stencil-Theme-Editor/)
                        (Support article)

                        * [Stencil and the BigCommerce Control
                        Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2)
                        (Video introduction to Theme Editor)

                        * [Changing Your Store's
                        Theme](https://support.bigcommerce.com/articles/Learning/What-to-Consider-When-Changing-Your-Theme)
                        (Support guide)

                        * [Personalizing Your
                        Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme)
                        (Support guide)


                        ### Light Customization with HTML and CSS


                        If you are most comfortable working in HTML and CSS,
                        Stencil's *Edit Theme Files* feature allows you to
                        directly edit most of your theme's files from the
                        Control Panel. For details, please see:


                        * [Editing Stencil Theme
                        Files](https://support.bigcommerce.com/articles/Public/Editing-Stencil-Theme-Files)
                        (Support article)

                        * [Getting Started with the Stencil
                        Framework](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)
                        (Video overview of copying and editing a theme's files)


                        ### Adapt a Stencil Theme, or Develop from Scratch


                        For complete control over a theme's appearance and logic
                        – including the ability to edit _all_ theme
                        configuration files – you will want to use the Stencil
                        Command-line interface, also known as the Stencil CLI.


                        To learn Stencil CLI's templating conventions, see
                        Installing Stencil CLI. Also take a look at
                        BigCommerce's [Getting Started with the Stencil
                        Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)
                        video playlist.
                      header:
                        anchor: choosing-dev-path
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Front-Matter Quick Start


                        Stencil templates start with a section of "front matter"
                        where you can and concisely customize each page's design
                        and layout details. 


                        This front-matter section uses conventions from YAML, a
                        simple, widely used markup language. If you haven't used
                        these conventions before, refer to our [Front-Matter
                        Overview](https://stencil.bigcommerce.com/docs/using-yaml-front-matter).
                      header:
                        anchor: front-matter-quick-start
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Handlebars Quick Start


                        Stencil uses Handlebars.js to assemble dynamic content
                        into the storefront pages that are displayed to
                        shoppers. The dynamic content can be drawn from a few
                        sources, like the store's catalog.


                        Handlebars' syntax is quite simple, and it allows you to
                        accomplish powerful JavaScript operations with minimal
                        JavaScript code. To learn more about Handlebars.js, see
                        these third-party tutorials: 


                        * [Learn Handlebars in 10 Minutes or
                        Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/)

                        * [A Beginner’s Guide to
                        Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/)

                        * [Getting Started with
                        Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js)

                        * [Handlebars interactive
                        tutorial](http://tryhandlebarsjs.com/)
                      header:
                        anchor: handlebars-quick-start
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## SEO Tips and Best Practices


                        Search-engine optimization (SEO) helps translate an
                        elegant theme into a successful, high-conversion
                        storefront. Because so many shoppers reach online stores
                        through a search engine, a search-optimized site will be
                        more visible – attracting more traffic. 


                        The Stencil framework is [designed for high SEO
                        performance](https://www.bigcommerce.com/improve-organic-traffic/).
                        However, you will want to keep SEO in mind as you build
                        out each theme and storefront. For guidelines, please
                        see these BigCommerce support articles (which are a
                        series of intermediate to advanced chapters in our Guide
                        to SEO):


                        * [SEO Do's and
                        Don'ts](https://support.bigcommerce.com/articles/Learning/Things-to-Know/)

                        * [Developing a Keyword
                        Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/)

                        * [SEO Success
                        Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/)

                        * [Advanced SEO on
                        BigCommerce](https://support.bigcommerce.com/articles/Learning/Advanced-SEO-on-Bigcommerce/)


                        Also checkout our [Guide to Keyword
                        Research](https://support.bigcommerce.com/articles/Learning/Value-of-Keywords/).
                      header:
                        anchor: seo-tips
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Blueprint-to-Stencil Features Map 


                        This following resources are designed to help you
                        identify the Stencil counterparts to familiar Blueprint
                        components.


                        * What to Consider When Changing Your Theme (Support
                        article)

                        * Stencil and the BigCommerce Control Panel (Video tour
                        of Blueprint-to-Stencil  changes in the BigCommerce
                        control panel)
                      header:
                        anchor: blueprint-to-stencil
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Interacting with the BigCommerce API


                        Interacting with the BigCommerce API

                        BigCommerce's growing API resources enable application
                        developers to create private scripts or apps that
                        support a single store, or to create public apps offered
                        to multiple stores via BigCommerce's App Marketplace.


                        As a theme developer, you can rely on apps to enhance
                        your themes' capabilities, and to extend or complement
                        the storefront features built into the BigCommerce
                        platform. Popular app areas include inventory
                        management, email marketing, coupons, reviews, shipping,
                        tax accounting, and security. For more information, see
                        BigCommerce's:


                        * App Marketplace

                        * API documentation
                      header:
                        anchor: interacting-with-api
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Partnering with BigCommerce


                        Do we belong together? No formal business relationship
                        is required to develop themes on the BigCommerce
                        platform. However, consider applying to become a
                        BigCommerce Design & Solutions Partner (DSP), in order
                        to accelerate your development of new business and
                        revenue. For details, see our:


                        * Overview of BigCommerce Partnerships

                        * Design & Solutions Partners – basics and application
                        links

                        * Technology Partners – basics and application links

                        * Partnership Application
                      header:
                        anchor: partnering-with-bc
                    - type: text
                      data: '---'
                    - type: text
                      data: |-
                        ## Next Steps

                        Proceed to: 

                        * Installation and Launch instructions
                        * Development Quick Start tutorial
                        * Front-matter overview of YAML conventions
                        * Front-matter attributes reference
                        * Handlebars overview
                      header:
                        anchor: next-steps
              - title: Supported Browsers
                route:
                  path: /supported-browsers
                data:
                  blocks:
                    - type: html
                      data: <h1>Supported Browsers</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Supported Desktop and Mobile Browsers</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Supported Desktop and Mobile Browsers


                        The following browsers are supported for BigCommerce
                        storefronts that use Stencil-based themes. 


                        The browsers are sorted by popularity, beginning with
                        the most popular browsers. Please ensure that your theme
                        functions properly with all supported browsers.


                        ### Desktop Browsers


                        * Google Chrome (latest edition)

                        * Firefox (latest edition)

                        * Internet Explorer 10 and 11

                        * Safari (latest edition)

                        * Microsoft Edge (latest edition)


                        ### Mobile Browsers 


                        * Android Chrome browser (latest edition)

                        * iOS Safari browser (latest edition)
                      header:
                        anchor: desktop-and-mobile
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          Browser support will cease to be offered if browser
                          usage falls below 2%.
                        title: Usage Support
              - title: Installing Stencil
                route:
                  path: /installing-stencil
                data:
                  blocks:
                    - type: html
                      data: <h1>Installing Stencil</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#installing_video-demo\">Video Demo</a></li>\n    <li><a href=\"#installing_prerequisites\">Prerequisites by OS</a></li>\n    <li><a href=\"#installing_installing-the-stencil-cli\">Installing the Stencil Command Line Interface (CLI)</a></li>\n    <li><a href=\"#installing_cloning-cornerstone\">Cloning Cornerstone Using Github</a></li>\n    <li><a href=\"#installing_installing-stencils-js-utilities\">Installing Stencil's Javascript Utilities</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Below you’ll find instructions on installing the Stencil
                        CLI, cloning the Cornerstone theme, and installing
                        Stencil’s Javascript utilities.

                        Each OS has different prerequisites, so check the
                        Prerequisites by OS section before attempting
                        installation.
                    - type: text
                      data: >-
                        ## Video Demo


                        Watch a brief demonstration of the Stencil installation
                        and launch:


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/iWBrJalyM0A"
                        frameborder="0" allow="autoplay; encrypted-media"
                        allowfullscreen></iframe>
                      header:
                        anchor: installing_video-demo
                    - type: tabs
                      data:
                        children:
                          - title: ' Mac OS Prerequisites'
                            blocks:
                              - type: html
                                data: <h1>Mac OS Prerequisites</h1>
                              - type: html
                                data: "<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Tab</h3>\n\t<ul>\n    <li><a href=\"mac_xcode\">Installing Xcode</a></li>\n    <li><a href=\"mac_nodejs\">Installing Node.js</a></li>\n    <li><a href=\"mac_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>\n"
                              - type: callout
                                data:
                                  body: >-
                                    These instructions have been tested on Mac
                                    OS X Yosemite. Dependencies for other
                                    platforms will be added upon further
                                    testing.
                                  title: Platform Support
                              - type: text
                                data: >-
                                  ## Installing Xcode 


                                  You must install the [Xcode development
                                  tools](https://developer.apple.com/xcode/)
                                  (latest stable version).
                                header:
                                  anchor: mac_xcode
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Node.js 


                                  Stencil requires the <a
                                  href="https://nodejs.org/">Node.js</a> runtime
                                  environment, version <a
                                  href="https://nodejs.org/en/blog/release/">6.x
                                  or later</a>. We have tested Stencil on
                                  selected Node.js versions, from <a
                                  href="https://nodejs.org/en/blog/release/v6.10.3/">6.10.3</a>
                                  to <a
                                  href="https://nodejs.org/en/blog/release/v7.9.0/">7.9.0</a>. 


                                  We recommend that you install or update
                                  Node.js using <a
                                  href="https://github.com/creationix/nvm#installation">nvm</a>.
                                  First install nvm, version <a
                                  href="https://github.com/creationix/nvm/tree/v0.31.0">0.31.0</a>,
                                  as follows:


                                  ```

                                  curl -o-
                                  https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
                                  | bash

                                  ```


                                  Next, explicitly install a supported Node.js
                                  version, using this convention:<br>


                                  ```

                                  nvm install 6.4.0

                                  ```
                                header:
                                  anchor: mac_nodejs
                              - type: callout
                                data:
                                  body: >-
                                    You can choose to instead download the
                                    latest x.x version of Node.js from the
                                    Node.js Foundation's archives, using URLs of
                                    the form:
                                    https://nodejs.org/dist/latest-v6.x/,
                                    https://nodejs.org/dist/latest-v7.x/, etc.
                                    We recommend installing only LTS ("Long-Term
                                    Support"/"Mature and Dependable") versions.
                                  title: Notes on Dependencies
                              - type: text
                                data: '---'
                              - type: text
                                data: >
                                  ## Troubleshooting


                                  If you run into any problems with Stencil
                                  installation or launch, first consult
                                  [Troubleshooting Your Setup](). 


                                  If that does not resolve your issue, consult
                                  our [Support resources](), which include
                                  community and peer support via BigCommerce and
                                  Stack Overflow forums.
                                header:
                                  anchor: mac_troubleshooting
                          - title: Linux Prerequisites
                            blocks:
                              - type: html
                                data: <h1>Linux Prerequisites</h1>
                              - type: html
                                data: "<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Tab</h3>\n\t<ul>\n    <li><a href=\"#linux_root\">Root Permissions</a></li>\n     <li><a href=\"#linux_git-client\">Git Client</a></li>\n     <li><a href=\"#linux_nodejs\">Node.js</a></li>\n      <li><a href=\"#linux_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                              - type: callout
                                data:
                                  body: >-
                                    These instructions have been tested on
                                    Linux/Ubuntu v.14.04.4. Dependencies for
                                    other platforms will be added upon further
                                    testing
                                  title: Platform Support
                              - type: text
                                data: >-
                                  ## Root Permissions


                                  You should have administrator/root permissions
                                  on your machine. (If not, you may need to
                                  precede some of the below commands with the
                                  `sudo` prefix.)
                                header:
                                  anchor: linux_root
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Git Client


                                  You must have a [Git
                                  client](https://git-scm.com/downloads)
                                  installed.
                                header:
                                  anchor: linux_git-client
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Node.js


                                  Stencil requires the Node.js runtime
                                  environment, version 6.x or later. We have
                                  tested Stencil on selected Node.js versions,
                                  from 6.10.3 to 7.9.0.


                                  We recommend that you install or update
                                  Node.js using nvm. First install nvm, version
                                  0.31.0, as follows:


                                  `curl -o-
                                  https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
                                  | bash`


                                  Next, explicitly install a supported Node.js
                                  version, using this convention:


                                  `nvm install 6.4.0`
                                header:
                                  anchor: linux_nodejs
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Troubleshooting


                                  If you run into any problems with Stencil
                                  installation or launch, please first see our
                                  Troubleshooting Your Setup page. Next, please
                                  consult our Support resources, which include
                                  community/peer support via BigCommerce and
                                  Stack Overflow forums.
                                header:
                                  anchor: linux_troubleshooting
                          - title: Windows Prerequisites
                            blocks:
                              - type: html
                                data: <h1>Windows Prerequisites</h1>
                              - type: html
                                data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Tab </h3>\n\t<ul>\n     <li><a href=\"#windows_root-permissions\">Root Permissions</a></li>\n     <li><a href=\"#windows_git-client\">Git Client and Git BASH</a></li>\n     <li><a href=\"#windows_python-installation\">Python Installation</a></li>\n     <li><a href=\"#windows_python-node-config\">Python/Node Configuration</a></li>\n     <li><a href=\"#windows_node-installation\">Node.js Installation</a></li>\n     <li><a href=\"#windows_compiler-options\">C++ Compiler Options</a></li>\n    <li><a href=\"#windows_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                              - type: callout
                                data:
                                  body: >-
                                    The following instructions have been tested
                                    on Windows 10. Dependencies for other
                                    platforms will be added upon further
                                    testing.
                                  title: Platform Support
                              - type: text
                                data: >-
                                  ## Root Permissions


                                  You must have authorization to run Powershell
                                  "as administrator" on your machine.
                                header:
                                  anchor: windows_root-permissions
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Git Client and Git BASH


                                  You must have a Git client installed. The Git
                                  for Windows distribution includes a Git
                                  client, and also provides the Git BASH
                                  emulator for command-line access. All commands
                                  should be run in Git Bash from here.
                                header:
                                  anchor: windows_git-client
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Python Installation


                                  Install [Python 2.7.x for
                                  Windows](https://www.python.org/downloads/windows/).
                                  This is required for Visual Studio's Windows
                                  Build Tools, installed below. **Python 3.x is
                                  not supported.**


                                  In the installer dialog shown below, change
                                  the bottom default, so as to enable the `Add
                                  python.exe` to Path option. This provides
                                  global command-line access to Python.
                                header:
                                  anchor: windows_python-installation
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6116/1539115629012
                              - type: text
                                data: '---'
                              - type: text
                                data: >-
                                  ## Node.js Installation


                                  Stencil requires the [Node.js]() runtime
                                  environment, version [6.x or later]().


                                  On Windows, we have tested Stencil CLI on
                                  selected Node.js version
                                  [7.10.0](https://nodejs.org/en/blog/release/v7.10.0/"7.10.0).
                                  We recommend that you install only an LTS
                                  ("Long-Term Support"/"Mature and Dependable")
                                  version, and that you download that version's
                                  `.msi` installer (not its `.exe` binary).


                                  **Note:** _You can choose to instead download
                                  the latest x.x version of Node.js from the
                                  Node.js Foundation's archives, using URLs of
                                  the form:
                                  [https://nodejs.org/dist/latest-v8.x/](https://nodejs.org/dist/latest-v8.x/),
                                  [https://nodejs.org/dist/latest-v8.x/](https://nodejs.org/dist/latest-v8.x/),
                                  etc. In all cases, we recommend installing
                                  only LTS ("Long-Term Support"/"Mature and
                                  Dependable") versions, and that you download
                                  the .msi installer, not the .exe binary.

                                  However, please see the restriction on
                                  technical assistance in the Notes on
                                  Dependencies below._


                                  To verify your Node.js installation or
                                  reinstallation, this [blog
                                  post](http://blog.teamtreehouse.com/install-node-js-npm-windows)
                                  provides Windows-specific tips and tests.
                                header:
                                  anchor: windows_node-installation
                              - type: callout
                                data:
                                  body: >-
                                    You will need to restart your computer to
                                    complete Node.js installation.
                                  type: warning
                                  title: Restart Required
                              - type: text
                                data: >-
                                  ## Python/Node Configuration


                                  After installing both Python and Node.js,
                                  configure Python within the Node.js runtime
                                  environment by running this npm command:


                                  `npm config set python python2.7`
                                header:
                                  anchor: windows_python-node-config
                              - type: callout
                                data:
                                  body: >-
                                    The [node package
                                    manager](https://www.npmjs.com/) was
                                    installed as part of Node.js. As you proceed
                                    through Stencil CLI setup (and later
                                    refreshes), you will use this command-line
                                    utility to install packages/modules, and to
                                    configure and manage dependencies and their
                                    versions.
                                  title: About Node Package Manager (npm)
                              - type: text
                                data: >
                                  ## C++ Compiler Options


                                  Choose to either install Turbo C++ or Visual
                                  Studio for your C++ Compiler.


                                  ### Turbo C++


                                  You can install Turbo C++ as a lighter version
                                  instead of Visual Studio. The installation
                                  takes about 5 minutes. After installation, a
                                  box opens that highlights the features of
                                  Turbo C++. This box can be closed since it is
                                  not needed to complete installation. If you
                                  prefer using Visual Studio then use the steps
                                  below.


                                  ### Visual Studio Installation

                                  Install MicroSoft Visual Studio. Stencil
                                  requires a 2013 or later release, Community
                                  Edition (free) or higher.


                                  Be sure to install Visual Studio's "Common
                                  Tools" component. You can also add this
                                  component later in the window shown below.


                                  ### Visual Studio Version/Node Configuration

                                  Finally, configure Visual Studio within the
                                  Node.js runtime environment by running the
                                  following npm command.

                                  (Replace the 2015 parameter with 2013 or 2017,
                                  as needed, to match the Visual Studio release
                                  you have installed:)


                                  `npm config set msvs_version 2015`
                                header:
                                  anchor: windows_compiler-options
                              - type: callout
                                data:
                                  title: Notes on Dependencies
                                  body: >-
                                    While alternate versions might also support
                                    Stencil, BigCommerce does not offer
                                    technical assistance on substitutions for,
                                    or customized versions of, the tested
                                    dependencies listed here.


                                    Once Stencil is fully installed, you can
                                    check dependencies' installed versions by
                                    examining your
                                    `<theme-name>/package.jsonfile`.
                              - type: text
                                data: >-
                                  ## Troubleshooting


                                  If you run into any problems with Stencil
                                  installation or launch, please first see our
                                  [Troubleshooting Your Setup]() article. If
                                  that doesn't solve the issue, try consulting
                                  our [Support
                                  resources](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers).
                                header:
                                  anchor: windows_troubleshooting
                      header:
                        title: Stencil Prerequisites by OS
                        anchor: installing_prerequisites
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Installing the Stencil Command Line Interface


                        The first step toward developing on Stencil is to
                        install the Stencil CLI. 


                        You can do this via the following command (_If you are
                        using Windows, you will need to run this command in git
                        bash._):


                        `npm install -g @bigcommerce/stencil-cli`


                        ### Items to Note


                        * The command above requires <a
                        href="https://www.npmjs.com/">npm</a> to be installed in
                        your local development environment.


                        * In Windows, this <span class="inline-code">npm</span>
                        command's execution might at times appear to freeze.
                        However, the installer is running. 

                        Give it several minutes to complete installation.


                        * On Mac OS machines with installed xcode, version 5.x,
                        this <span class="inline-code">npm</span> command has
                        generated errors of the form: 

                        <span class="inline-code">npm ERR! invalid:
                        string_decoder</span>. The workaround is to upgrade
                        xcode to the latest stable xcode version 

                        (7.3.1 as of this page's last revision). 


                        * If you receive a file-permissions error, and you did
                        not install Node.js via <a
                        href="https://github.com/creationix/nvm#installation">nvm</a>
                        (Node Version Manager), 

                        then either install nvm now, or follow one of the
                        workarounds on this external page: 
                          [https://docs.npmjs.com/getting-started/fixing-npm-permissions](https://docs.npmjs.com/getting-started/fixing-npm-permissions)
                      header:
                        anchor: installing_installing-the-stencil-cli
                    - type: callout
                      data:
                        body: >-
                          To ensure the Stencil CLI is compatible with all the
                          changes introduced in Cornerstone 2.0.0, you must
                          upgrade to the latest version of Stencil CLI (1.15.1)
                          if using Cornerstone 2.x.x.


                          Occasionally, you will receive a command line prompt
                          to run the installation command when you restart your
                          Stencil server. This occurs when BigCommerce publishes
                          a critical fix in Stencil CLI, to resolve an issue
                          like a newly discovered security exploit.
                        title: CLI Force Upgrade and Cornerstone 2.0.0
                        type: warning
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Cloning Cornerstone using Github


                        _Windows users need to run this in git bash._


                        Navigate to a directory where you would like to install
                        a subdirectory for your theme. You must have appropriate
                        write permissions in this directory. 


                        Execute the following command to clone Stencil's base
                        theme, Cornerstone, into a new subdirectory named
                        `.../cornerstone/`


                        `git clone
                        https://github.com/bigcommerce/cornerstone.git`
                          
                        If the above command fails, and you are accessing GitHub
                        anonymously, give the URL this alternate prefix:


                        `git clone git://github.com/bigcommerce/cornerstone.git`



                        <!-- Add a note here: If downloading a marketplace
                        theme, must install jspm, register your jspm instance,
                        and set up BitBucket access...  -->


                        <!-- If you are installing Stencil for the first time,
                        then in--> In the next step, you will install Stencil's
                        <a
                        href="/docs/stencil-docs/getting-started/installing-and-launching/javascript-utilities">JavaScript
                        utilities</a> to enable API access via Ajax.


                        /stencil-docs/getting-started/installing-and-launching/adding-a-base-theme
                      header:
                        anchor: installing_cloning-cornerstone
                    - type: callout
                      data:
                        body: >-
                          If you are reinstalling over a base theme on which you
                          have already begun development, first back up your
                          theme's `.stencil` file. This contains your store URL,
                          BigCommerce username and access tokens, and other
                          basic settings. Preserving those settings will speed
                          up initializing and launching the new version. If you
                          would like to allow for complete rollback, back up
                          your entire theme's directory.
                        type: error
                        title: Back Up before Reinstalling
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Installing Stencil's Javascript Utilities\n\nStencil's Cornerstone theme provides utilities called `stencil-utils` to enable API usage (via Ajax) to BigCommerce's backend. \n\nYou will learn more about Stencil Utils in our Stencil Utils overview, but for now, you'll want to be sure you have it installed in your theme. \n\nYou must use [npm](https://www.npmjs.com/) to install the `stencil-utils` module in your theme during initial installation. You must run `npm install` after downloading and installing a refreshed Cornerstone version to ensure that all your dependencies are up to date.\n\n_Windows users need to run this in git bash._\n\nComplete the following steps:\n\nNavigate to your Stencil theme directory. This example assumes that this target directory has the default name `cornerstone`.\n\n`cd cornerstone`\n\nNext, execute the following command inside of that directory:\n\t\n`npm install`\n\nThis will install the required npm modules to properly leverage the Stencil event framework.\n\nNow that your installation is complete, start \n<a href=\"/docs/preparing-your-store-tokens\">preparing your store/tokens</a>."
                      header:
                        anchor: installing_installing-stencils-js-utilities
                    - type: text
                      data: '---'
              - title: Authentication & Tokens
                route:
                  path: /authentication-and-tokens
                data:
                  blocks:
                    - type: html
                      data: <h1>Creating an API Account to Obtain OAuth Tokens</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authentication_creating-an-api-account\">Creating an API Account</a></li>\n    <li><a href=\"#authentication_issuing-additional\">Issuing Additional Tokens</a></li>\n    <li><a href=\"#authentication_revoking-tokens\">Revoking Tokens</a></li>\n    <li><a href=\"#authentication_copying-oauth-tokens\">Copying OAuth Tokens</a></li>\n\t</ul>\n</div>"
                    - type: callout
                      data:
                        type: error
                        body: >-
                          If you've successfully installed Stencil you're ready
                          to create a BigCommerce API Account. 

                          _If you have not yet installed Stencil, see the
                          articles in "Installing and Launching Stencil._
                        title: Status Check
                    - type: text
                      data: >-
                        ## Creating an API Account 


                        Follow the steps below to create an API Account and
                        obtain your OAuth Tokens.


                        1. Using the store owner's credentials, log into the
                        control panel of the store for which you are
                        developing. 


                        2. From the left nav, select `Advanced Settings` > `API
                        Accounts`.


                        3. From the resulting Store API Accounts page, select
                        the `Create API Account` button.


                        4. Give your account a name that reflects its purpose.


                        _The BigCommerce platform does not validate this name,
                        however, we recommend naming accounts by purpose to help
                        you keep track of which accounts you need to keep
                        active. You should assign a name that will make the
                        account's purpose clear to you and other store
                        administrators._


                        5. Under OAuth Scopes, set the Themes selector to either
                        `modify` or `read-only`.


                        _The read-only scope is sufficient to
                        authorize/initialize a Stencil theme. However, the
                        modify scope will achieve the same goal, while also
                        authorizing this account to upload themes to the store
                        from the command line._


                        6. Click `Save`. 


                        _As outlined in [this support article](), doing so will
                        display a modal, from which you can copy your `Client
                        ID` and `Access Token` values. The modal will also
                        prompt your browser to download a .txt file that
                        contains your credentials. You will need these values to
                        authorize and initialize your Stencil theme. If you're
                        ready to do so now, move ahead to [Authorizing and
                        Initializing Stencil]()._
                      header:
                        anchor: authentication_creating-an-api-account
                    - type: callout
                      data:
                        type: warning
                        title: Reserved Role
                        body: >-
                          Currently, only the store owner can create an OAuth
                          API account according to the instructions below. Also,
                          note that each store is limited to 50 accounts at a
                          time.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Issuing Additional Tokens


                        To issue store tokens for additional themes or
                        developers, repeat the process outlined in Creating an
                        API Account.


                        (Even if you originally initialized your theme using a
                        legacy API [Basic-Auth] token, you will need to generate
                        any new tokens using the new OAuth flow.)


                        You can create up to 50 API accounts/tokens per store.
                        If you hit this limit and still need to create new
                        tokens, you will need to delete existing accounts.
                        Deleting an account will invalidate the corresponding
                        token, which will affect any developer using that token.
                      header:
                        anchor: authentication_issuing-additional
                    - type: text
                      data: >-
                        ## Revoking OAuth Tokens


                        **Note**: After completing the below process, there is
                        no undo. The following process completely deletes the
                        selected account(s), revoking the corresponding
                        token(s).


                        If you are completely sure you would like to revoke an
                        existing OAuth store token, delete the corresponding
                        Store API account with the following steps:


                        1. Navigate to the Control Panel's API Accounts page.


                        2. Select the trash-can button to the right of the
                        account that you want to delete.


                        _*You can also use the check boxes at left to select
                        multiple accounts to delete them all at once._
                      header:
                        anchor: authentication_revoking-tokens
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1537421464104
                    - type: text
                      data: >-
                        ## Copying OAuth Tokens 


                        To access an existing OAuth token to authorize your
                        theme:


                        1. Open the `.txt` file that the BigCommerce control
                        panel generated when you created the API account.


                        _If you did not retain this file, you will need to
                        generate a new token by repeating the Creating an API
                        Account procedure._


                        2. Note the Client ID and Access Token hashes in the
                        file (or in the control-panel modal for your newly
                        created token).


                        3. If you are a merchant granting an outside theme
                        developer access to your store, provide the Client ID
                        and Access Token values to the developer. The developer
                        will need these when [Authorizing and Initializing
                        Stencil](). If you are a merchant developing a theme
                        against your own store, you will use the same two values
                        in the same [Authorizing and Initializing Stencil]()
                        step.
                      header:
                        anchor: 'authentication_copying-oauth-tokens '
              - title: Launching Stencil
                route:
                  path: /launching-stencil
                data:
                  children:
                    - title: Authorizing and Initializing Stencil
                      route:
                        path: /authorizing-and-initializing
                      data:
                        blocks:
                          - type: html
                            data: <h1>Authorizing and Initializing Stencil</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authorizing_authorizing-oauth\">Authorizing with OAuth Tokens</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              body: >-
                                Even when you share a theme across storefronts,
                                we strongly recommend that you clone a separate
                                subdirectory (each containing its own .stencil
                                file) for each store. This helps isolate and
                                secure each merchant's data.


                                You can clone your .../cornerstone/ subdirectory
                                now to create your first isolated copy, and then
                                switch to the resulting new subdirectory to
                                continue. (Prior to March 2017, Stencil's
                                default subdirectory name was .../stencil/.)
                              title: ' Best Practice: Isolate Stores by Subdirectory'
                          - type: text
                            data: >+
                              ## Authorizing with OAuth Tokens


                              Use the following steps to authorize your theme
                              using an OAuth API account:


                              1. Have your store API account's Client ID and
                              Access Token hashes ready. 

                              (Refer back to the Copying a Token to Initialize
                              Stencil or Creating an API Account instructions.)


                              2. Starting from the subdirectory for the
                              appropriate theme (and store), initialize Stencil
                              CLI by running the following command (_Windows
                              users need to run this in git bash_):


                              `stencil init`


                              3. You will be prompted to provide the homepage
                              URL of the production store against which you want
                              to develop. This can be your own store, or a
                              client store that you are customizing.


                              4. Next, you will be prompted to enter the port
                              where you would like to run your store on your
                              local machine. This can be any port you like, but
                              we recommend using port 3000.


                              5. Next, you will be prompted: What is your
                              Stencil OAuth Client ID? Enter your store API
                              account's Client ID.


                              (If you used this Client ID when you last ran
                              stencil init, you'll see it hinted on the command
                              line, and can just confirm it.)


                              6. Finally, you will be prompted: What is your
                              Stencil OAuth Access Token? If you entered these
                              credentials when you last ran stencil init, you'll
                              see the token hinted in cleartext. If not, paste
                              your Access Token hash onto the command line. Then
                              press Enter.



                              Your terminal window should now confirm that you
                              have successfully initialized Stencil CLI on your
                              local machine. With Stencil CLI initialized, you
                              are ready to start Stencil and begin development.


                            header:
                              anchor: authorizing_authorizing-oauth
                    - title: Running Stencil Locally
                      route:
                        path: /running-stencil-locally
                      data:
                        blocks:
                          - type: html
                            data: <h1>Running Stencil Locally</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#running_local-launch-theme\">Local Launch: Theme Only</a></li>\n    <li><a href=\"#running_local-launch-theme-and-editor\">Local Launch: Theme and Theme Editor</a></li>\n    <li><a href=\"#running_customizing\">Customizing Theme Editor's Port</a></li>\n    <li><a href=\"#running_disabling\">Local Launch: Disabling Caching</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Local Launch: Theme Only


                              In order to run Stencil locally, issue the
                              following command in your initialized Stencil
                              theme directory (_Windows users need to run this
                              in git bash_):


                              `stencil start`


                              Assuming that you set Stencil to run on `port
                              3000`, when you navigate to http://localhost:3000,
                              you should see the storefront to which you pointed
                              your local instance – but with the stencil theme
                              applied to it.


                              ## Troubleshooting Token Errors


                              If you receive the following error message, 


                              `Unauthorized, please use a valid username/token`


                              then store token authentication has failed.


                              In this case, please track back and review the
                              following articles:


                              * [Creating an API
                              Account](creating-an-api-account): How to issue or
                              reissue tokens in the BigCommerce control panel.

                              * [Authorizing and Initializing
                              Stencil:](authorizing-and-initializing-stencil):
                              How to initialize Stencil with your username and
                              token.
                            header:
                              anchor: running_local-launch
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Local Launch: Theme and Theme Editor


                              To run Stencil locally while also launching a
                              local version of Theme Editor, start in your theme
                              directory and run the following command, but
                              append the -e option:


                              `stencil start -e`


                              The Theme Editor server will run in parallel with
                              the stencil theme at
                              [http://localhost:8181](http://localhost:8181/).
                              The use case for this is a developer who is
                              reconfiguring the Theme Editor/Store Design (check
                              terminology) settings. It is important to note
                              this is a tool to understand the experience
                              changes when editing the schema.json file. Making
                              changes to your store on the Theme Editor/Using
                              store design on the local host port will not
                              affect your life store.


                              ### Customizing Theme Editor's Port


                              You can override Theme Editor's default port by
                              appending the "--theme-editor-port [port]" option.
                              For example, to specify port 9000, you would
                              enter:


                              `stencil start -e --theme-editor-port 9000

                              `


                              To verify Theme Editor's launch, you would then go
                              to http://localhost:9000. Using this option, you
                              can specify any port between `1024` and `65535`.
                            header:
                              anchor: running_local-launch-theme-and-editor
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Local Launch: Disabling Caching


                              By default, Stencil caches API resource data per
                              storefront page. This minimizes server traffic
                              while you develop your theme locally.

                              If you prefer to see your changes reflected
                              immediately in your live store, you can turn off
                              caching by appending the `--no-cache` or `-n`
                              option:


                              `stencil start --no-cache`

                              `stencil start -n`


                              ### To re-enable caching:


                              Kill the current Stencil server (_ctrl + c will do
                              the job_) and restart Stencil, this time omitting
                              the `--no-cache` or `-n` option.


                              `stencil start` 
                            header:
                              anchor: running_disabling
                    - title: Troubleshooting Your Setup
                      route:
                        path: /troubleshooting-your-setup
                      data:
                        blocks:
                          - type: html
                            data: <h1>Troubleshooting Your Setup</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#troubleshooting_unsupported\">Unsupported Node Version</a></li>\n    <li><a href=\"#troubleshooting_npm-install\">npm install errors (\"Unmet Peer Dependency\")</a></li>\n    <li><a href=\"#troubleshooting_npm-install-stencil-init\">npm install/stencil init Errors/a></li>\n    <li><a href=\"#troubleshooting_npm-install-permissions\">npm install permissions Error</a></li>\n    <li><a href=\"#troubleshooting_uncaught\">\"Uncaught TypeError: Illegal invocation\" error: Re-run npm install inside Theme Directory</a></li>\n    <li><a href=\"#troubleshooting_js-bundle\">\"js/bundle\" Errors upon stencil init</a></li>\n    <li><a href=\"#troubleshooting_stencil-init\">stencil init/stencil start Errors</a></li>\n    <li><a href=\"#troubleshooting_stencil-init\">stencil start/missing module Errors</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              title: First Check the Terminal Window
                              body: >-
                                For any unexpected behavior that you encounter
                                while developing your Stencil theme, first check
                                your terminal window where you started Stencil
                                CLI. 


                                In some cases, the terminal will provide a
                                verbose error message specifying where to look
                                for problems. In any case, it has the potential
                                to provide further insight on the issue.
                                Diagnostic suggestions are listed on this page
                                for error messages that may not be helpful in
                                revealing the issue you're experiencing.
                          - type: text
                            data: >-
                              ## Unsupported Node Version


                              If you receive the following error message, please
                              reinstall Node.js to a supported "LTS" ("Long-Term
                              Support") version:


                              ```

                              Debug: internal, implementation, error
                                      TypeError: Uncaught error: Object #<Object> has no method 'parse'
                                      at internals.implementation 
                                      (/usr/local/lib/node_modules/stencil-cli/server/plugins/CssCompiler/index.js:32:26)
                              ```


                              On Mac OS, we have tested Stencil CLI most
                              robustly on Node.js version 4.4.0. On Linux, we
                              have tested most robustly on version 4.1.2. On
                              Windows, we have tested most robustly on version
                              4.6.1. You’ll find detailed steps (for each
                              operating system) in these instructions'
                              Installing Stencil Prerequisites by OS section.
                            header:
                              anchor: troubleshooting_unsupported
                          - type: text
                            data: >-
                              ## `npm install` Errors


                              If you get any `Unmet Peer Dependency` errors when
                              issuing the `npm install` command – or at other
                              times – make sure you are running the `npm
                              install` command **inside** your theme directory.


                              If running the `npm install ` command inside your
                              theme directory does not resolve the error, try
                              one of the following:


                              * Try removing your theme directory's
                              `/node_modules/` subdirectory, by running `rm -rf
                              node_modules`


                              * Run the `npm cache clean` command


                              * Re-run `npm install`
                            header:
                              anchor: troubleshooting_npm-install
                          - type: text
                            data: >-
                              ## `npm install` and `stencil init` Errors


                              Please similarly check and adjust your Node.js
                              version – by following the Prerequisites link
                              above to see platform-specific recommendations –
                              if you get unexpected error messages when issuing
                              the npm install or stencil init commands.
                            header:
                              anchor: troubleshooting_npm-install-stencil-init
                          - type: text
                            data: >-
                              ## `npm install` Permissions (EPERM or EACCES)
                              Error


                              If you get a file-permissions error such as
                              `EPERM` or `EACCES` when issuing the `npm install`
                              command, try one of the workarounds listed on this
                              [external](https://docs.npmjs.com/getting-started/fixing-npm-permissions)
                              page. 
                            header:
                              anchor: troubleshooting_npm-install-permissions
                          - type: text
                            data: >
                              ## "Uncaught TypeError: Illegal invocation" error


                              If you receive an `Uncaught TypeError: Illegal
                              invocation` console error, and previously
                              installed Stencil using the original jspm-based
                              installation flow, then later switched to our
                              current webpack installation flow: Please remove
                              your theme's `/node_modules/` subdirectory, then
                              re-run `npm install` inside your theme's
                              directory.
                            header:
                              anchor: troubleshooting_uncaught
                          - type: text
                            data: >+
                              ## "js/bundle" Errors upon `stencil init`


                              If you get errors of the following type upon
                              executing the stencil init command:


                              ```

                              Potentially unhandled rejection [6] TypeError:
                              Error loading "js/bundle" 

                              at
                              file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js


                              Error evaluating
                              file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js


                              Cannot read property 'createElement' of
                              undefined...

                              ```


                              try the following workaround:


                              1. Download and unzip a fresh copy of the theme.


                              3. Refresh theme dependencies by running `npm
                              install && jspm install`


                              3. Run `stencil init`.


                              *You will see the same error message as before,
                              but proceed.*


                              4. Delete the `<theme-name>/assets/js/bundle.js`
                              file.


                              5. Run `stencil init` again.

                              This should now execute properly.

                              6. Run `stencil start`


                              8. Verify your theme's launch at:
                              http://localhost:3000.

                            header:
                              anchor: troubleshooting_js-bundle
                          - type: text
                            data: >-
                              ## `stencil init`/`stencil start` Errors


                              If you get unexpected error messages or unexpected
                              results upon executing the `stencil init`,
                              `stencil start`, or other Stencil CLI commands,
                              make sure you are working in the subdirectory for
                              the specific theme you intend to launch. 


                              One way of checking what directory you are working
                              in is by running the `pwd` command in your
                              terminal.
                            header:
                              anchor: troubleshooting_stencil-init
                          - type: text
                            data: >-
                              ## `stencil start`/missing module Errors


                              If executing `stencil start` provokes errors like
                              the following


                              ```

                              module.js:327

                              throw err;

                              ^


                              Error: Cannot find module 'webpack'

                              at Function.Module._resolveFilename
                              (module.js:325:15)

                              at Function.Module._load (module.js:276:25)

                              at Module.require (module.js:353:17)

                              at require (internal/module.js:12:17)

                              at Object.
                              (/Users/jane.doe/themes/cornerstone/stencil.conf.js:2:15)

                              at Module._compile (module.js:409:26)

                              at Object.Module._extensions..js
                              (module.js:416:10)

                              at Module.load (module.js:343:32)

                              at Function.Module._load (module.js:300:12)

                              at Module.require (module.js:353:17)

                              ```


                              switch to your theme directory and run `npm
                              install`. Running this command will add the
                              missing JavaScript library dependencies.


                              If you receive the same error again after running
                              `npm install`, you should completely uninstall and
                              reinstall both the Stencil framework and Node.js.


                              ### Uninstalling and Reinstalling Stencil CLI


                              If you encounter persistent problems in
                              initializing or starting Stencil, you have the
                              option of completely removing Stencil CLI and
                              doing a fresh reinstall. You would do so as
                              follows:


                              1. From your command line, issue the command:

                              `npm uninstall -g @bigcommerce/stencil-cli`


                              2. Navigate back to the Installing and Launching
                              Stencil section and repeat all installation steps
                              to reinstall dependencies and restore your theme,
                              according to your development scenario.
                            header: {}
                          - type: callout
                            data:
                              title: Alternative Options
                              body: >-
                                A more-drastic measure is to **also** uninstall
                                and reinstall Stencil CLI's Node.js
                                prerequisites (along with uninstalling Stencil
                                CLI). We do not recommend this, as it might
                                disable other Node.js applications on your local
                                machine.
                              type: error
                    - title: Stencil CLI Options and Commands
                      route:
                        path: /stencil-cli-options-and-commands
                      data:
                        blocks:
                          - type: html
                            data: <h1>Stencil CLI Options and Commands</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_basic-cli\">Basic CLI Options and Commands</a></li>\n    <li><a href=\"#stencil_stencil-start\">Stencil Start Options</a></li>\n    <li><a href=\"#stencil_stencil-push\">Stencil Push Options</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: "## Basic CLI Options and Commands\n\nThe syntax to run a basic Stencil CLI command is: stencil <commands> [options] <parameter>.\n\nTo see the basic options and commands that the Stencil CLI package supports, enter any of the following forms of the help option on your command line:\n\n`stencil <command> [option] <parameter>`\n\nTo see the basic options and commands that the Stencil CLI package supports, enter any of the following forms of the help option on your command line:\n\n```\nstencil\nstencil help\nstencil --help\nstencil -h\n```\n\nYour terminal window will display options and commands listed in the tables below. \n\t\n<table>\n  <tr>\n    <th>Option</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>-h, --help</td>\n    <td>Outputs usage information.</td>\n  </tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>Outputs the version number (which is read from package.json file</span>).</td>\n  </tr>\n</table>\n\n<p></p>\n<table>\n  <tr>\n    <th>Command</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>init</td>\n    <td >Interactively creates a .stencil file, which configures how to run a BigCommerce store locally.</td>\n  </tr>\n  <tr>\n    <td>start</td>\n    <td>Starts up the BigCommerce store, using theme files in the current directory. \n\n<b>Note:</b> If stencil start generates an \"Unauthorized, please use a valid username/token error: Please make sure that the .stencil file contains the correct store URL and (for OAuth) the correct URL prefix). Also, verify that you have copied the correct credentials, as outlined here. If you continue to get the same error, please reissue tokens, as outlined here.\n    </td>\n  </tr>\n \n  \n  <tr>\n    <td>bundle</td>\n    <td>Bundles up the theme into a structured .zip file, which can be uploaded to BigCommerce. (Please see restrictions here).</td>\n  </tr>\n  \n  <tr>\n    <td></a>push</td>\n    <td>Bundles up the theme into a structured .zip file; then directly uploads (pushes) the .zip to BigCommerce.(Please see</nobr> usage instructions here. The same restrictions apply as for the bundle command.)</td>\n  </tr>\n  \n  <tr>\n    <td>release</td>\n    <td>Creates a new release in a theme's GitHub repository. Developers outside BigCommerce can use this for forks (not master) of Stencil's Cornerstone base theme, or for their own parallel themes independent of Cornerstone.</td>\n  </tr>\n    \n  <tr>\n    <td>help &lt;command&gt;</td>\n    <td>return all the options available to use for the specified command. For example, <code>stencil help bundle</code> will return the options that are available to use specifically with the stencil bundle command.\t\n    </td>\n  </tr>  \n</table>\n"
                            header:
                              anchor: '#stencil_basic-cli'
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538055264839
                            header:
                              title: Basic Stencil CLI Options and Commands
                          - type: callout
                            data:
                              title: '''stencil start'' and ''stencil push'' Options'
                              body: >-
                                The `stencil start` and `stencil push` CLI
                                Commands have additional custom options that can
                                be used with the command, which are detailed
                                below.
                          - type: text
                            data: >
                              ## Stencil Start Options


                              To see Stencil CLI's additional options for the
                              `stencil start` command (described above), enter
                              the following on your command line:


                              `stencil help start` 


                              Your terminal screen should read similar to the
                              image below.
                            header:
                              anchor: '#stencil_stencil-start'
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538029681278
                            config:
                              maxWidth: '1300'
                              maxHeight: '1300'
                          - type: text
                            data: >-
                              ## Stencil Push Options


                              To see Stencil CLI's additional options for the
                              stencil push command (described above), enter the
                              following on your command line:


                              `stencil help push`


                              Your terminal screen should read similar to the
                              image below.
                            header:
                              anchor: stencil_stencil-push
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538055086025
                            config:
                              maxHeight: '800'
                              maxWidth: '800'
                          - type: text
                            data: >+
                              You can use the `-f` or `--filename` option in
                              cases where you have already run `stencil bundle`
                              to bundle your theme, but the resulting .zip file
                              has not yet uploaded to BigCommerce. Use the
                              generated .zip file's **filename** as a parameter
                              to identify the generated file in your theme
                              directory. An example of the command is outlined
                              below.


                              `stencil push -f Cornerstone-2.3.2.zip`


                              In this example, `Cornerstone-2.3.2.zip` is the
                              name of the file that was generated after running
                              `stencil bundle`.


                              When you run `stencil push` with the `-f` or
                              `--filename` option, Stencil CLI skips all its
                              bundling steps and diagnostics. It proceeds
                              directly to uploading the specified file,
                              displaying its processing progress bar to show
                              upload status.

                    - title: Cornerstone File Structure
                      route:
                        path: /cornerstone-file-structure
                      data:
                        blocks:
                          - type: html
                            data: <h1>Cornerstone File Structure</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cornerstone_cornerstone-file-structure\">The Cornerstone Theme File Structure</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >
                              ## The Cornerstone Theme File Structure


                              Cornerstone is the base Stencil theme, and it is
                              also the default theme for all newly initialized
                              local storefronts. Cornerstone provides the
                              standard file structure, base design pattern, and
                              default file assets necessary to start developing
                              a custom storefront experience.


                              The Cornerstone file structure consists of four
                              main subdirectories. Within those subdirectories,
                              you'll be directed to specific files in the
                              Development Quick Start tutorial and in Stencil
                              reference material:


                              ### `template/pages`

                              `templates/pages` contains all the base template
                              pages used in a BigCommerce online storefront. The
                              pages are grouped by page category. In order to
                              prevent any rendering errors, please avoid
                              changing page names. For details, please see
                              Templates Required Directory > Pages Subdirectory.



                              ### `template/components`

                              `templates/components` Components consist of code
                              snippets and partials that can be reused
                              throughout your theme. This directory is grouped
                              by component type. For details, please see
                              Templates Required Directory > Component
                              Subdirectory.


                              ### `template/layout`

                              `templates/layout` define the overall structure
                              (header, footer, etc.) for your storefront. You
                              can implement multiple layouts here, for different
                              use cases – to make it easy to switch between
                              different look-and-feel variations for the same
                              theme. For details, please see Templates Required
                              Directory > Layout Subdirectory.


                              ### `assets/`

                              `assets/` (images, CSS and JavaScript files) will
                              be located in this directory. For details, please
                              see CSS, JavaScript, and Design Resources.


                              ### `lang/`

                              `lang/` contains translation files, including the
                              required `en.json`. For details, please see the
                              Internationalization/Localization section of the
                              documentation.


                              When developing in your local environment, all
                              files that you change in your Stencil theme
                              directory (/cornerstone/ in our default
                              installation) will be reflected immediately at
                              [http://localhost:3000](http://localhost:3000).
                            header:
                              anchor: cornerstone_cornerstone-file-structure
                  blocks: []
              - title: Advanced Installation Options
                route:
                  path: /advanced-installation-options
                data:
                  blocks: []
                  children:
                    - title: Navigating Your Setup Scenario
                      route:
                        path: /navigating-your-setup-scenario
                      data:
                        blocks:
                          - type: html
                            data: <h1>Navigating Your Setup Scenario</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_illustration\">Illustration of Stencil's Setup Options</a></li>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone Setup</a></li>\n    <li><a href=\"#navigating_cornerstone-refresh\">Cornerstone Refresh</a></li>\n    <li><a href=\"#navigating_download-marketplace\">Download a Marketplace Theme</a></li>\n    <li><a href=\"#navigating_implementing-custom-build\">Implementing a Custom Build System</a></li>\n    <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              type: warning
                              title: Notes on Dependencies
                              body: >
                                Our installation instructions have been tested
                                on Mac OS X Yosemite, Linux/Ubuntu v.14.04.4,
                                and Windows. Dependencies for other
                                platforms/releases will be added upon further
                                testing.
                          - type: text
                            data: >-
                              ## Illustration of Stencil's Setup Options


                              The diagram below visually illustrates _all_
                              currently supported workflows for setting up a
                              Stencil theme. You will choose one pathway to
                              setup Stencil for your store. The color codes for
                              each setup scenario are as follows: 


                              * [Black arrows: Initial setup with the default
                              Cornerstone theme.](#navigating_initial)


                              * [Orange arrows: Refresh Cornerstone from Theme
                              Marketplace.](#navigating_cornerstone-refresh)


                              * [Purple arrows: Customize a theme (_other than_
                              Cornerstone) downloaded from Theme
                              Marketplace.](#navigating_download-marketplace)


                              * [Green arrows: Configure a custom JavaScript
                              build
                              system](#navigating_implementing-custom-build)


                              * [Blue arrows: Adds onto any of the preceding
                              four scenarios. If developing for a BigCommerce
                              Blueprint production store launched before Jan.
                              26, 2016, you must add one extra step to enable
                              Stencil in the store's control
                              panel.](#navigating_blueprint-store)
                            header:
                              anchor: navigating_illustration
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538540242143
                            config:
                              centered: true
                              fluid: true
                              bordered: true
                          - type: callout
                            data:
                              title: Detailed Steps Described Below
                              body: >-
                                Continue reading to get a detailed description
                                and breakdown of the steps required for each
                                setup scenario.
                          - type: text
                            data: "## Initial Cornerstone Setup \n\nThis is the workflow to start developing based on BigCommerce's default Cornerstone theme. This workflow uses Webpack as the JavaScript build system. Steps required:\n\n* Install your necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to prepare store and tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n\n\nOnce you have completed these steps, proceed to the _Launching Stencil_ section."
                            header:
                              anchor: navigating_initial
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Download and Install a New Version of Cornerstone \n\nIf you would like to download and install a **new** version of Cornerstone from BigCommerce's Theme Marketplace, perform the following steps:\n\n* Ensure all necessary prerequisites are installed\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Ensure Stencil CLI is installed](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Download a new Cornerstone .zip file](/stencil-docs/advanced-installation-options/downloading-cornerstone)\n* [Reinstall JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* Repeat steps in _Launching Stencil_"
                            header:
                              anchor: navigating_cornerstone
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Download a Marketplace Theme \n\nIf you would like to customize a theme _other than_ Cornerstone, follow the required steps to download a theme from BigCommerce's Theme Marketplace. This workflow requires BitBucket. Some earlier theme versions will also require additional steps for the jspm JavaScript build system. Steps required:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Set up BitBucket and Download the Marketplace theme's .zip file](/stencil-docs/advanced-installation-options/downloading-a-marketplace-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Complete the steps outlined in _Launching Stencil_"
                            header:
                              anchor: navigating_download-marketplace
                          - type: text
                            data: '---'
                          - type: text
                            data: "## Implement a Custom JavaScript Build System \n\nThe Stencil framework currently uses Webpack 4 as its default Javascript Build system (jspm for older versions), but if you prefer, you can substitute this for a custom JavaScript build system such as Grunt. Steps recommended:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Configure your custom build system](/stencil-docs/getting-started/installing-and-launching/configuring-webpack-or-custom-build)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Proceed to _Launching Stencil_"
                            header:
                              anchor: navigating_custom-build
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Blueprint Store Launched before January 26th,
                              2016


                              If your store is **both**:

                              * running on a Blueprint theme

                              * was launched before Jan. 26th, 2016 


                              and you would like to enable Stencil development
                              on it, you must perform the following steps:


                              * Follow the installation path above that
                              corresponds to your development scenario

                              * Enable Stencil in the store’s control panel
                            header:
                              anchor: navigating_blueprint-store
                    - title: Downloading the Cornerstone Theme
                      route:
                        path: /downloading-the-cornerstone-theme
                      data:
                        blocks:
                          - type: html
                            data: >-
                              <h1>Downloading the Cornerstone Theme from the
                              BigCommerce Control Panel</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_downloading-cornerstone-zip\">Downloading the Cornerstone .zip file</a></li>\n    <li><a href=\"#downloading_reinstalling-dependencies\">Reinstalling Dependencies and Relaunching</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              type: error
                              title: Back Up Before Reinstalling
                              body: >-
                                If you are reinstalling over a base theme on
                                which you have already begun development, first
                                back up at least your theme's .stencil file.
                                This file contains your store URL, your
                                BigCommerce username and access tokens, and
                                other basic settings. Preserving those settings
                                will speed up initializing and launching the new
                                version. To allow complete rollback, back up
                                your whole theme directory. (In a current
                                default installation, this directory is named
                                `cornerstone`. Prior to March 2017, this
                                directory's name defaulted to `stencil`).
                          - type: text
                            data: "## Downloading the Cornerstone .zip file from the Control Panel\n\n_If you have not yet added Cornerstone to your store, navigate to `Storefront` > `Themes Marketplace` and add the Cornerstone theme to your store._\n\nUse these steps to download a the Cornerstone theme from the store Control Panel: \n\n**Note:** The steps below are required only if you are downloading a refreshed copy of Stencil's default Cornerstone theme, specifically from the BigCommerce Theme Marketplace. \n\nIf you are downloading a Marketplace theme (other than Cornerstone) for customization, you must follow the workflow outlined in Downloading a Marketplace Themes.\n    \n* Go to `Storefront` -> `My Themes`.\n\n* Click the Cornerstone theme's thumbnail:\n\t* If Cornerstone is the store's currently active theme, click its image thumbnail at the top of the page, under the `Current Theme` heading.\n\t* If Cornerstone is _not_ the current theme, scroll down below the lower My Themes subheading, find, and click the Cornerstone thumbnail.\n\n_The Cornerstone theme's description should zoom to full-page and display a Theme Options drop-down list at the upper right._\n\n* From the `Theme Options` drop-down list, select `Download theme file` to download this Cornerstone release as it was refreshed on Theme Marketplace. \n\n* Unpack the zipped theme to a working directory. This can either be the directory where you have been developing your theme or a new directory.\n"
                            header:
                              anchor: '#downloading_downloading-cornerstone-zip'
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Reinstalling Dependencies and Relaunching


                              * Ensure that your theme includes all current
                              dependencies by repeating the [Stencil Utils
                              installation.](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils) 


                              * To relaunch, repeat the steps listed in the
                              _Launching Stencil_ section.
                            header:
                              anchor: '#downloading_reinstalling-dependencies'
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Next Steps


                              When you are ready to upload your custom theme to
                              a store, follow the instructions in Bundling and
                              Submitting a Theme and Troubleshooting Theme
                              Uploads.
                            header:
                              anchor: '#downloading_next-steps'
                          - type: callout
                            data:
                              body: >-
                                Distribution of Cornerstone-based themes is
                                subject to BigCommerce's Cornerstone license,
                                including the mandatory incorporation of
                                BigCommerce's copyright statement.
                              title: Distribution of Cornerstone-based Themes
                              type: error
                    - title: Downloading a Marketplace Theme
                      route:
                        path: /downloadining-a-marketplace-theme
                      data:
                        blocks:
                          - type: html
                            data: >-
                              <h1>Downloading a Marketplace Theme from the
                              BigCommerce Control Panel</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_setting-up-bitbucket\">Setting Up BitBucket SSH Keys</a></li>\n    <li><a href=\"#downloading_downloading-a-marketplace-theme\">Downloading a Marketplace Theme for Customization</a></li>\n    <li><a href=\"#downloading_checking-theme-version\">Checking the Theme's Version</a></li>\n    <li><a href=\"#downloading_jspm-steps\">jspm Steps for Earlier Versions</a></li>\n    <li><a href=\"#downloading_installing-modules\">Installing Modules (Webpack themes)</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n    </ul>\n</div>"
                          - type: callout
                            data:
                              body: >-
                                BitBucket registry access is required for all
                                Marketplace themes (excluding Cornerstone). jspm
                                Extra Steps (to enable jspm and jspm-git) are
                                required only for theme versions earlier than
                                v1.2.1, as outlined on this article.
                              title: BitBucket Registry Access
                              type: warning
                          - type: text
                            data: >+
                              ## Setting Up BitBucket SSH Keys


                              To set up Stencil CLI for themes other than
                              Cornerstone, you must authorize communication
                              among your local system, the BitBucket registry,
                              and GitHub.


                              **Note:** _Steps beyond this point require that
                              you have active accounts on both BitBucket and
                              GitHub._


                              To authorize ongoing communication, you must set
                              up a secure shell (SSH) key that is shared between
                              BitBucket and GitHub. This is a multi-step
                              process, which is beyond the scope of this
                              documentation. However, we have tested the
                              following instructions and found them to be
                              reliable:


                              * [Setting up SSH for Git on BitBucket](

                              https://confluence.atlassian.com/bitbucket/set-up-ssh-for-git-728138079.html)


                              _Follow the default instructions to create a key
                              in your `~/.ssh/config`_


                              * [Setting up SSH on GitHub (a series of linked
                              steps)](

                              https://help.github.com/articles/connecting-to-github-with-ssh/)

                          - type: callout
                            data:
                              body: >-
                                Marketplace themes other than Cornerstone must
                                be purchased in order to be downloadable.


                                You are entitled to customize a free or
                                purchased theme for a store that you support.
                                However, the theme's original creator retains
                                rights to that theme's design. So, except for
                                Cornerstone-based themes, you may not upload a
                                derived theme to a public theme marketplace
                                (whether BigCommerce's or third-party), nor sell
                                it privately.
                              title: ' Theme Access, Copyright/Ownership, and Distribution'
                          - type: text
                            data: "## Downloading a Marketplace Theme for Customization\n\nUse these steps to download a theme (other than Cornerstone) available in the store control panel's Storefront Design area. \n\n1. If you have not yet added the theme to your store, start at Storefront Design > Themes Marketplace, and add the theme.\n\n2. Go to `Storefront Design` > `My Themes`.\n\n3. Click the theme's thumbnail:\n\t \n\t* To download the store's currently active theme, click the image thumbnail at the top of the page, under the Current Theme heading.\n\t\n\t* To download an inactive theme, scroll down below the lower My Themes subheading, and click the appropriate theme's thumbnail.\n\nYour selected theme will zoom up to a full-page description and display a Theme Options drop-down list at the upper right.\n\n4. Note the version number displayed under the theme's title and credits. At Checking the Theme's Version below, you will use this number to choose between two installation flows.\n\n5. From the Theme Options drop-down list, select the appropriate Download option. (The options visible depend on your theme's current state:)\n\n\t* Download current theme: Download the theme version that is now active on the storefront. (This option appears only if you selected the Current Theme.)\n\n\t* Download your latest customizations: Download the theme's most recently saved version. (This option appears only for themes that have been customized for this store.)\n\n\t* Download theme file: Download the theme as it was originally uploaded to Theme Marketplace. \n\n6. Unpack the zipped theme to a working directory.\n(In the remainder of this documentation, substitute this working directory's name for the default `stencil` path or the `theme-name` placeholder.)"
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538543505088
                            header:
                              title: Theme Options
                              subtitle: 'Dropdown list options as related to step #5'
                            config:
                              centered: true
                              fluid: true
                              bordered: true
                              maxWidth: '300'
                              maxHeight: '300'
                          - type: callout
                            data:
                              body: >-
                                Some versions of the BigCommerce control panel
                                offer you shortcuts for steps 3–5 above,
                                removing the need to click the theme
                                card/thumbnail:


                                * For your store's currently active theme, look
                                for a version number to the right of the
                                thumbnail. You can select the Advanced drop-down
                                list to display options similar to those at step
                                5 above.


                                * For inactive themes, look for a version number
                                at the theme card's lower left. Also, you can
                                select the "..." menu at the theme card's lower
                                right to display options similar to those at
                                step 5 above.
                              title: Theme Download Shortcuts
                          - type: text
                            data: >
                              ## Checking the Theme's Version


                              Refer to the theme's version number that you noted
                              above at Downloading a Theme for Customization:


                              * If the version number is 1.10.0 or higher, the
                              theme uses Webpack as its JavaScript build system.
                              Skip ahead to the simplified installation
                              instructions in Installing Modules (Webpack
                              Themes).


                              * If the theme's version number is lower than
                              1.10.0, the theme uses jspm as its JavaScript
                              build system. Follow the steps outlined on [jspm
                              Steps for Earlier Versions]()
                          - type: callout
                            data:
                              body: >-
                                For version numbers below 1.10.0, consider using
                                the options within control panel > My Themes to
                                download a newer version of the same theme. This
                                will allow you to jump ahead to the streamlined
                                instructions below at Installing Modules
                                (Webpack Themes).


                                **Note**: These version numbers do not apply to
                                the Cornerstone theme. All currently supported
                                Cornerstone versions use Webpack, and can be
                                refreshed using the even simpler refresh
                                instructions in [Downloading the Cornerstone
                                Theme]().
                              title: Consider Updating Your Theme
                              type: warning
                          - type: text
                            data: |-
                              ## jspm Steps for Earlier Versions

                              link to legacy article
                          - type: text
                            data: >-
                              ## Installing Modules (Webpack themes)


                              For Marketplace themes whose version number is
                              1.10.0 or higher, simply use npm to install the
                              modules required to access Stencil JavaScript
                              events:


                              1. Navigate to your theme directory. This example
                              assumes that this target directory has the default
                              name Cornerstone:


                              `cd cornerstone`


                              2. Within that directory, install the
                              stencil-utils module to ensure that all your
                              dependencies are up to date:


                              `npm install`
                          - type: text
                            data: >
                              ## Next Steps


                              To authorize, initialize, and launch your theme,
                              follow the steps in the _Launching Stencil_
                              section.


                              Later, when you are ready to upload your
                              customized theme to a store, you should follow the
                              zipping and uploading instructions in Bundling and
                              Submitting a Theme and Troubleshooting Theme
                              Uploads.
                          - type: callout
                            data:
                              body: >-
                                When you issue the `stencil init` command to
                                authorize and initialize Stencil, you might
                                receive error messages about resolving BitBucket
                                as an SSH host. These errors occur when you have
                                not recently logged into BitBucket.


                                When prompted, enter the BitBucket password you
                                used in Setting Up BitBucket SSH Keys above.
                                This will clear the errors and allow you to
                                proceed.
                              type: warning
                              title: BitBucket Reauthentication
                    - title: Theme Updates & Version Control
                      route:
                        path: /theme-updates-and-version-control
                      data:
                        blocks:
                          - type: html
                            data: <h1>Theme Updates and Version Control</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#theme-updates_isolating\">Customizing Strategically for Easier Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-cornerstone\">Synchronizing Your Theme With Cornerstone's Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-multiple\">Synchronizing Updates for Multiple Themes</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              title: Distributed Version Control via Git
                              body: >-
                                Many techniques discussed below rely on GitHub's
                                _distributed version control_ model and
                                features. For the underlying principles, please
                                see [Git's own
                                documentation](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control).
                          - type: text
                            data: >-
                              ## Customizing Strategically for Easier Updates


                              In order to keep your store and Stencil theme
                              performant, it's crucial to know the best way to
                              set up your customized Stencil theme in order to
                              smoothly incorporate future bug fixes,
                              enhancements, and updates that are applied to the
                              base theme. 
                          - type: text
                            data: '---'
                          - type: text
                            data: "## GoRuck's Best Practices for Handling Theme Updates\n\nThe guidelines provided are from Web Developement team from the BigCommerce client, [GoRuck](https://www.goruck.com/). \n\nGoRuck's scenario addresses maintaining a single custom theme that is based on a third-party Marketplace theme (a theme other than Cornerstone). These guidelines can also apply to maintaining a custom theme based on Stencil's default Cornerstone theme.\n\n### Handling and Managing Theme Updates\n\n_We've made significant changes to our theme, and one principle that I've found successful is isolating my changes as much as possible. I try to put my changes into their own files, whether they're changes to templates, JavaScript, or SCSS._\n\n_I also name all my files, CSS classes and identifiers, and JavaScript methods and classes with a `gr-` prefix (as an abbreviation for our company, GORUCK LLC). Also, any changes I make to standard theme files are identified with a comment, such as:_\n\n`//Go Ruck Customization`\n\t\t\n_For example, I have a file in `assets/scss/` named `gr-theme.scss`. All of the styles I've added to the theme are either in this file, or imported by this file. So for styling, my only changes to the theme itself are in a handful of places where I had to change an existing theme style (identified with a comment), plus this one line in `templates/layout/base.html`:_\n\n`{{{stylesheet '/assets/css/gr-theme.css'}}}`\n\n_I've found that this approach provides several advantages:_\n\n* It makes it easier to distinguish my custom code from code supplied by the default theme.\n* It makes it less likely that my code will get intermingled with the standard theme code. This, in turn, prevents my code from unexpectedly being affected by theme updates.\n* It makes it easier to merge base-theme updates into my theme code.\n\n### Comparing and Merging Theme Updates\n\n_Having isolated my changes as much as I can, I identify theme changes and updates by comparing base themes, rather than by comparing base themes to my customized theme. When a new version of the theme is released, I download the .zip file from the BigCommerce Control Panel._\n\n_I then use a desktop diff tool (Beyond Compare) to \ncompare the new version to the .zip file of the theme's previous release. I ignore changes in the .zip file's\n `meta/` and `parsed/` folders, and to its `manifest.json`, and do a `Compare Contents` on the rest of the files._\n\nUltimately, I need to examine the changes carefully, to identify any changes that might affect, or be affected by, my customizations. And I need to test thoroughly. But comparing the stock themes to each other reduces the number of changes I have to examine. \n\nAlso, because I isolate my changes, most of the theme changes can be copied directly into the corresponding file in my customized theme. In practice, this means that I can limit my testing to the areas affected by changes in the standard theme, rather than having to re-test all my own changes.\n\nI personally find that it is also helpful to migrate *every* theme update into my customized version, as the update is released. If I were to wait, and to allow changes to accumulate and become more substantial, I think it would be more difficult to adequately test – and correctly integrate – the changes. Similarly, I'm grateful to the developer of our base theme (Pixel Union) for updates that have always made small, incremental changes.\n\n### Dynamic Content Injection\n\n_We've also come up with a variety of techniques for dynamically placing content on a page. For example, we can dynamically add tabs to a product page, using content stored on our WebDAV. Similarly, we can inject content from an external file into the body of a page. This allows us to put something that appears in many places, like a sizing chart, in a single place where it can be easily updated._\n\n_Or, we can use the BigCommerce control panel's various HTML editors – for Products, Categories, and Content > Web Pages – to inject content into predefined \"dropzones\" (custom div's). This allows us to generate a wide variety of content pages using a single custom template._\n\nAll of these techniques minimize the complexity of merging base-theme updates into our customized theme. For further details and examples on how we implement these techniques, see [Dynamic Content Rendering on Stencil Storefronts]()."
                          - type: text
                            data: '---'
                          - type: text
                            data: >+
                              ## Synchronizing Your Theme With Cornerstone's
                              Updates


                              This section addresses two methods that will allow
                              you to keep your customized Stencil theme up to
                              date with Cornerstone's updates, enhancements, and
                              bug fixes


                              Updating Lightly Customized Themes

                              Updating Heavily Customized Themes


                              We've adapted these tips from a Stencil
                              developer's titled Stencil Version Control Best
                              Practices? on the BigCommerce Community forums.


                              ### Updating Lightly Customized Themes


                              In this scenario, you can use Git's cherry-pick
                              option to merge in specific Cornerstone commits.


                              Use the Stencil Framework Release Notes to look up
                              specific updates' commit hashes on the Cornerstone
                              repository.


                              See this Stack Overflow explanation of how to use
                              the cherry-pick option.


                              ### Updating Highly Customized Themes


                              Here, unexpected errors from automatic merges can
                              be time-consuming to undo. So, consider this
                              handtooled approach:


                              Use GitHub's Web interface to inspect each
                              Cornerstone commit (change) of interest. Each
                              commit will show you – for all changed files – a
                              diff view highlighting any deletions (left/red)
                              and any insertions (right/green).


                              For changes that you want to incorporate into your
                              theme, access the source code.


                              As illustrated below, you can either access
                              individual files via Github's Raw view, or you can
                              download a .zip of the whole Cornerstone repo in
                              order to access all files locally.


                              Manually edit the changes into your theme's
                              affected files.


                              ### Accessing Individual Files


                              In the file-by-file approach: For each commit that
                              you would like to incorporate into your custom
                              theme, do the following for each of the commit's
                              changed files.


                              In GitHub's diff view, click the View button at
                              the upper right. (We show it highlighted with a
                              red border and a tooltip.) You will see the file's
                              full contents, as shown below.


                              Click the Raw button at the upper right (which we
                              show highlighted in red). This will reveal the
                              file's full contents as plaintext – allowing you
                              to copy and paste without picking up the table
                              metadata used to display line numbering.


                              ### Downloading the Cornerstone Repository


                              This approach downloads all theme files at once,
                              allowing you to copy/paste their relevant contents
                              locally.


                              1. Navigate to the [Cornerstone Github
                              Repository](https://github.com/bigcommerce/cornerstone).

                              2. On the right hand side of the page, click the
                              green `Clone or download` button, and select
                              Download ZIP.



                    - title: Configuring Webpack or a Custom Build System
                      route:
                        path: /configuring-webpack-or-custom-build
                      data:
                        blocks:
                          - type: html
                            data: >-
                              <h1>Configuring Webpack or a Custom Build
                              System</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#configuring_webpack-jspm-other\">Webpack, jspm, or Other JavaScript Managers</a></li>\n    <li><a href=\"#configuring_webpack-specific\">Webpack-Specific Configuration</a></li>\n    <li><a href=\"#configuring_downloaded\">Build-System Configuration File</a></li>\n    <li><a href=\"#configuring_custom-build\">Watched Folders: watchOptions Object</a></li>\n    <li><a href=\"#configuring_blueprint-store\">JavaScript Rebundling: development Function</a></li>\n    <li><a href=\"#configuring_blueprint-store\">Theme Packaging: production Function</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                          - type: text
                            data: >-
                              ## Webpack, jspm, or Other JavaScript Managers


                              Stencil themes are Node.js applications, and
                              therefore contain dependencies on other JavaScript
                              libraries. For the default Cornerstone theme, we
                              provide the
                              [Webpack](https://webpack.github.io/docs/) build
                              manager to handle these dependencies. 


                              As you develop and customize a theme based on
                              Cornerstone, you have option to reconfigure
                              Webpack's watched folders, and to even substitute
                              a different build system. These options are
                              explained below.


                              All themes in the BigCommerce Theme Marketplace
                              use Webpack. However, older versions of certain
                              themes used the jspm JavaScript dependency manager
                              instead of Webpack. Please see this page to
                              determine (by version number) whether you are
                              developing based on one of these earlier versions,
                              and to find the required jspm setup procedures.
                          - type: callout
                            data:
                              type: info
                              body: >-
                                The steps below are required only if you plan to
                                modify or override the default Webpack-based
                                workflow that installs with Stencil's default
                                Cornerstone theme or and current theme in the
                                BigCommerce Theme Marketplace. If you do not
                                require these advanced configuration options,
                                you can safely skip this page.
                              title: Optional Workflow
                          - type: text
                            data: >-
                              ## Webpack-Specific Javascript Diagnostics


                              The following Webpack configuration options can
                              aid in troubleshooting.


                              If JavaScript errors in your browser's developer
                              tools are not reporting filenames and line
                              numbers, try changing your `webpack.conf.js`
                              file's
                              [sourcemap](https://webpack.js.org/guides/build-performance/#devtool)
                              entry from:


                              ```

                              devtool: 'source-map'

                              ```

                              to:


                              ```

                              devtool: 'eval-source-map'

                              ```


                              The `eval-source-map` option is slower, but more
                              verbose. This [Webpack Devtool
                              Configuration](https://webpack.js.org/configuration/devtool/)
                              article provides an overview of all devtool
                              options and details regarding each.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Build-System Configuration File


                              To take advantage of automatic JavaScript bundling
                              and browser refresh, Stencil themes require the
                              [`stencil.conf.js`](https://github.com/bigcommerce/cornerstone/blob/master/stencil.conf.js)
                              file. If you would like to enable a custom build
                              system, you will need to edit this file.


                              Within `stencil.conf.js`, Stencil CLI looks for
                              the exported `watchOptions` object, and
                              `development` and `production` callbacks, shown
                              below. 


                              Continue reading to take a closer look at each of
                              these three references.
                          - type: text
                            data: >-
                              ## Watched Folders: watchOptions Object


                              The `watchOptions` object defines directories for
                              the [Browsersync](https://browsersync.io/docs)
                              preview engine to watch or ignore, in two
                              respective lists. You are free to edit these
                              lists:


                              ```

                              var watchOptions = {
                                  // If files in these directories change, reload the page.
                                  files: [
                                      '/templates',
                                      '/lang'
                                  ],

                                  //Do not watch files in these directories
                                   ignored: [
                                      '/assets/scss',
                                      '/assets/less',
                                      '/assets/css',
                                      '/assets/dist',
                                  ]
                              };

                              ```
                          - type: text
                            data: >-
                              ### JavaScript Rebundling: `development` Function


                              Upon the command-line instruction `stencil start`,
                              Stencil CLI will look for and call the
                              `development` function. 


                              In the base Cornerstone theme, we have created a
                              Webpack watcher to trigger a browser reload
                              whenever theme edits cause JavaScript to be
                              rebundled to the theme's `bundle.js` file. This
                              watcher uses options configured in the
                              `webpack.conf.js` file passed by `webpackConfig`.
                              So a JavaScript rebuild will refresh the browser:


                              ```

                              function development() {
                                  webpack(webpackConfig).watch({}, err => {
                                      if (err) {
                                          console.error(err.message, err.details);
                                      }

                                      process.send('reload');
                                  });
                              }

                              ```
                          - type: text
                            data: >-
                              ## Theme Packaging: `production` Function 


                              When you issue the command-line instruction
                              `stencil bundle`, to process and package a
                              completed theme for upload to a store, Stencil CLI
                              will look for and call the `production` function.
                              This function passes a callback as its first
                              argument to support asynchronous builds. 


                              The callback must be invoked somewhere inside the
                              `production` function to notify Stencil CLI that
                              the theme-specific build has completed and is
                              ready to package:


                              ```

                              function production() {
                                  webpackConfig.watch = false;
                                  webpackConfig.devtool = false;
                                  webpackConfig.plugins.push(new webpack.LoaderOptionsPlugin({
                                      minimize: true,
                                  }));
                                  webpackConfig.plugins.push(new webpack.optimize.UglifyJsPlugin({
                                      comments: false,
                                      compress: {
                                          warnings: true,
                                      },
                                      sourceMap: false, // Toggle to turn on source maps.
                                  }));

                                  webpack(webpackConfig).run(err => {
                                      if (err) {
                                          console.error(err.message, err.details);
                                          throw err;
                                      }

                                      process.send('done');
                                  });
                              }


                              if (process.send) {
                                  // running as a forked worker
                                  process.on('message', message => {
                                      if (message === 'development') {
                                          development();
                                      }

                                      if (message === 'production') {
                                          production();
                                      }
                                  });

                                  process.send('ready');
                              }

                              ```
            blocks: []
        - title: Theme Development Quickstart
          route:
            path: /development-quickstart
          data:
            children:
              - title: Customizing a Theme
                route:
                  path: /customizing-a-theme
                data:
                  blocks:
                    - type: html
                      data: <h1>Customizing a Theme</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#customizing_before\">Before You Begin</a></li>\n    <li><a href=\"#customizing_video\">Customizing a Theme: Video Series</a></li>\n\t\t<li><a href=\"#customizing_config-json\">Configuring config.json Keys</a></li>\n    <li><a href=\"#customizing_basic-changes\">Making Basic Design/Layout Changes</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Before You Begin


                        Before you begin developing on your Stencil theme, note
                        that you may decide to either:


                        * directly modify the theme that you installed when
                        completing the steps in _Getting Started_

                        * create a **copy** of the theme you installed in
                        _Getting Started_ and develop on the copy, leaving the
                        original installed theme in its default state. This
                        allows you to retain a local copy of the default theme.
                      header:
                        anchor: configuring_before
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          If you decide to copy your theme's directory
                          structure, you must reissue both the `stencil init`
                          and `stencil start` command-line instructions from
                          **inside** your newly created directory.
                        title: Reissue Stencil Commands
                    - type: text
                      data: >-
                        ## Customizing a Theme: Video Series


                        If you prefer to consume by watching video tutorials,
                        this video series will quickly get you started in
                        editing and customizing your Stencil theme.


                        1. [Customizing a Theme (Part 1) - Config.json and
                        Templates
                        Directory](https://www.youtube.com/watch?v=HORseXHq-nI&index=6&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)

                        2. [Customizing a Theme (Part 2) - Lang and Assets
                        Directories](https://www.youtube.com/watch?v=OUg8ksWQGA0&index=7&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)

                        3. [Customizing a Theme (Part 3) - Custom Pages, Fonts,
                        and
                        Icons](https://www.youtube.com/watch?v=ZwrVN5QrEZY&index=8&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)


                        Continue reading if you would like information to
                        supplement the videos, or if you would get started
                        customizing your theme by reading and following along.
                      header:
                        anchor: customizing_video
                    - type: text
                      data: "## Configuring config.json Keys\n\n**Note:** these instructions will refer to the top-level theme directory as _cornerstone_.\n\nThe first thing you must do when beginning theme developement is configure certain values in the [cornerstone/config.json file](https://github.com/bigcommerce/cornerstone/blob/master/config.json). For example, here are the first few key/value sets in Cornerstone's config.json:\n\n```\n{\n\"name\": \"Cornerstone\",\n\"version\": \"1.0.0\",\n\"meta\": {\n  \"price\": 0,\n   \"documentation_url\": \t\t\n   \"https://support.bigcommerce.com/articles/Public/Cornerstone-\n   \tTheme-Manual\",\n  ...\n  }\n}\n```\n\nFor further details about `config.json` settings and a breakdown of each key/value set, see the in-depth config.json reference. \n\nThe next code block shows how you might change these values to reflect your own theme’s name, version number, price on Theme Marketplace, and documentation URL:\n\n```\n{\n\"name\": \"MyTheme\",\n\"version\": \"1.1.2\",\n\"meta\": {\n  \"price\": 10000,\n  \"documentation_url\": \"https://www.mywebsite.com/theme-docs/my-theme.html\",\n  ...\n  }\n}\n```"
                      header:
                        anchor: configuring_config-json
                    - type: text
                      data: >-
                        ## Making Basic Design & Layout Changes


                        ### Changing the Footer’s Background Color (config.json)


                        In a browser, load the local version of your storefront
                        (by default, http://localhost:3000). Note the page
                        footer’s appearance.


                        Next, open your `<theme-name>/config.json` in a text
                        editor. Change the page footer’s default background
                        color to red, by changing the value `"585858"` to
                        `"#a96e6e"` as indicated below:

                        ```

                        {
                         "settings": {
                          "footer-backgroundColor": "#a96e6e",
                          }
                        }

                        ```


                        This new value will propagate through the theme’s CSS
                        files and will globally change your footer. Refresh your
                        store’s home page in your browser to verify the change.


                        ### Changing the Product Image Size (config.json and
                        Handlebars)


                        In the `<theme-name>/config.json` file’s `"settings"`
                        section, you can define theme-wide image sizes for
                        rendering dynamic content. The excerpt below shows this
                        section’s predefined keys and values (dimensions in
                        pixels) for product thumbnails, galleries, and other
                        standard sizes.


                        ```

                        {
                          "settings": {
                             //...
                            "logo_size": "250x100",
                            "brand_size": "190x250",
                            "gallery_size": "300x300",
                            "productgallery_size": "500x659",
                            "product_size": "500x659",
                            "productthumb_size": "100x100",
                            "thumb_size": "100x100",
                            "zoom_size": "1280x1280",
                            "blog_size": "190x250",
                            // ...
                          },
                        }

                        ```


                        For definitions of each key’s usage, please see the
                        `config.json` reference. You can also create theme-wide
                        custom sizes by defining new key/value pair properties
                        in the `config.json` file.


                        Below is an example of code that calls one of the above
                        variables, in
                        Cornerstone's,`<theme-name>/templates/components/products/card.html`
                        file. (This file defines the display of products’ panels
                        or "cards" on multiple storefront pages.): 



                        ```<img class="card-image" src="{{getImage image
                        'productgallery_size' (cdn
                        theme_settings.default_image_product)}}"
                        alt="{{image.alt}}">

                        ```


                        Note the `{{getImage image 'productgallery_size'}}`
                        statement, a Handlebars reference to the standard
                        `productgallery_size` size defined in config.json.


                        Further examples will guide you in customizing your
                        storefront using the Handlebars templating language. 

                        For now, open `config.json` and try redefining some of
                        the default size values shown above. Then, refresh your
                        storefront’s home page (or other pages or modals) in
                        your browser, and note how the display of product images
                        changes to match your new global size values.


                        ### Redesigning Page Elements (config.json and
                        Handlebars)


                        The following example demonstrates how to redesign a
                        storefront page’s layout by editing Handlebars
                        statements in the page’s HTML. The goal here is simply
                        to move the Product landing page’s "Customers Also
                        Viewed" panel above that page’s "Product Reviews" panel.


                        With your storefront’s local version loaded in a
                        browser, click through to any product, and note the
                        relative positions of the "Product Reviews" and
                        "Customers Also Viewed" panels.


                        Next, open your working theme’s
                        `<theme-name>/templates/components/products/tabs.html
                        file`. As indicated below, **delete or comment out** the
                        `similar_by_views` component:


                        ```

                        // ...
                          {{#if product.similar_by_views}}
                              <li class="tab" role="presentational">
                                  <a class="tab-title" href="#tab-similar" role="tab" tabindex="0" aria-selected="false" controls="tab-similar">{{lang 'products.similar_by_views'}}</a>
                              </li>
                          {{/if}}
                        </ul>



                        // ...


                        {{#if product.similar_by_views}}
                          <div role="tabpanel" aria-hidden="true" class="tab-content has-jsContent" id="tab-similar">
                              {{> components/products/carousel products=product.similar_by_views columns=6}}
                          </div>
                        {{/if}}

                        </div>

                        ```


                        Now open your `/templates/pages/product.html` file. As
                        indicated below (in bold), add the `similar_by_views`
                        component with a reusable carousel wrapper:


                        ```

                        {{#if product.videos.list.length}}
                          {{> components/products/videos product.videos}}
                        {{/if}}


                        {{#if product.similar_by_views}}
                           {{> components/products/carousel products=product.similar_by_views columns=6}}
                        {{/if}}


                        {{#if settings.show_product_reviews}}
                          {{> components/products/reviews reviews=product.reviews product=product urls=urls}}
                        {{/if}}

                        ```


                        In your browser, refresh the product page, and check the
                        new arrangement of these components.
                      header:
                        anchor: customizing_basic-changes
              - title: config.json Resource Interactions
                route:
                  path: /config-json-resource-interactions
                data:
                  blocks:
                    - type: html
                      data: <h1><code>config.json</code> Interactions</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"\">New Products Example</a></li>\n    <li><a href=\"\">Changing Page Layout using Local Front Matter</a></li>\n    <li><a href=\"\">Retrieving Specific config.json Values through Sass</a></li>\n    <li><a href=\"\">Adding/Removing Components</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >
                        To customize your theme’s appearance at a global level,
                        the values that you define in the 

                        `<theme-name>/config.json` file interact with local
                        resources. Your config.json definitions set global
                        defaults for templates, front-matter attributes, and
                        Handlebars resources throughout your theme. You can also
                        define custom variables in config.json, named according
                        to your needs.


                        ## New Products Example


                        To see how interactions with `config.json` values work,
                        first note the default values in `config.json` for the
                        `homepage_new_products_count` and
                        `product_list_display_mode` keys:


                        ```

                        {

                        "settings": {
                          "homepage_new_products_count": 12,
                          "product_list_display_mode": "grid",
                          }
                        }

                        ```


                        Next, open your `<theme-name>templates/pages/home.html`
                        file. Highlighted in bold below is a statement that uses
                        the theme-wide settings above to customize an API
                        request to the server.


                        (Note the reference to the `homepage_new_products_count`
                        key in the file’s front matter, between the two "---"
                        delimiters. If your current theme’s `home.html` front
                        matter omits this `products:new:limit` definition, paste
                        it in for this demonstration.)


                        ```

                        ---

                        products:
                          new:
                            limit: {{theme_settings.homepage_new_products_count}}
                          featured:
                            limit: {{theme_settings.homepage_featured_products_count}}
                          top_sellers:
                            limit: {{theme_settings.homepage_top_products_count}}
                        carousel: {{theme_settings.homepage_show_carousel}}

                        blog:
                            recent_posts:
                                limit: {{theme_settings.homepage_blog_posts_count}}
                        ---

                        {{#partial "hero"}}


                        <!-- [...] -->


                        {{/partial}}

                        {{> layout/base}}

                        ```


                        If you load your storefront’s home page (by default,
                        [http://localhost:3000](http://localhost:3000), you
                        should see a "New Products" section that displays 12
                        products in a grid.
                    - type: text
                      data: >
                        ## Changing Page Layout Using Local Front Matter


                        Look again at your
                        `<theme-name>templates/pages/home.html` file’s front
                        matter. As in the New Products example above, note how
                        the presence and number of featured products correlates
                        to your theme’s `config.json` setting:


                        ```

                        ---

                        [...]

                        products:
                          featured:
                              limit: {{theme_settings.homepage_featured_products_count}}
                        [...]

                        ---

                        ```


                        Next, try changing the `limit:
                        {{theme_settings.homepage_featured_products_count}}`
                        statement in the `home.html` file to a hard-coded limit:
                        2, as indicated below in bold:


                        ```

                        ---

                        products:
                          // [...]
                          featured:
                              limit: 2
                          // [...]  
                        ---


                        <!-- [...] -->


                        {{#partial "page"}}


                        <!-- [...] -->


                        <div class="main full">
                          {{#if products.featured}}
                              {{> components/products/featured products=products.featured columns=2}}
                          {{/if}}
                        </div>

                        {{/partial}}

                        {{> layout/base}}

                        ```


                        If you now reload your storefront’s home page in your
                        browser, you should see the number of displayed
                        "Featured Products" change from its default number (as
                        specified in `config.json`) to two.
                    - type: text
                      data: >
                        ## Retrieving Specific config.json Values through Sass


                        In `config.json`, global variables bring dynamic values
                        into the framework. Sass imports these global variables’
                        values to gracefully handle data like theme-wide colors’
                        hexadecimal values, and to make the data available to
                        Theme Editor. Here is one short snippet from
                        `config.json`:


                        ```

                        {

                        // [...]

                        "color-highlight": "#00abc9",

                        "color-highlightDark": "#f2f2f2",

                        "color-highlightDarker": "#dfdfdf",

                        // [...]

                        }

                        ```


                        Here are the corresponding references in the default
                        Stencil theme’s
                        `<theme-name>/assets/scss/settings/global/color/_color.scss`
                        file:


                        ```

                        // [...]

                        $color-highlight:       stencilColor("color-highlight");

                        $color-highlightDarker:
                        stencilColor("color-highlightDarker");

                        $color-highlightDark:  
                        stencilColor("color-highlightDark");

                        // [...]

                        ```


                        In `config.json`, try redefining one or more color
                        variables to hex values of your choice. Then re-render
                        your theme’s home page to see the effects.
                    - type: text
                      data: >
                        ## Adding/Removing Components


                        The storefront properties that Stencil abstracts as
                        Handlebars resources are completely portable between
                        HTML files. For an example of how this works, first open
                        any storefront page in a browser. In the page’s footer,
                        note the appearance of product Categories.


                        Next, open your
                        `<theme-name>/templates/components/common/footer.html`
                        file in a text editor. As indicated below, cut (or copy
                        and comment out) the code section shown below
                        (characterized by the strikethrough), and keep it on
                        your Clipboard:


                        ```

                        <footer class="footer" role="contentinfo">
                          <div class="container">
                              <section class="footer-info">
                                  <!-- [...] -->
                        <article class="footer-info-col footer-info-col--small">
                          <h5 class="footer-info-heading">{{lang 'footer.categories'}}</h5>
                          <ul class="footer-info-list">
                              {{#each categories}}
                              <li>
                                  <a href="{{url}}">{{name}}</a>
                              </li>
                              {{/each}}
                          </ul>
                        </article>

                        ```


                        If you now refresh the storefront page in your browser,
                        the Categories list should disappear from the footer.


                        Next, create a new
                        `<theme-name>/templates/components/footer/
                        `subdirectory. Paste the code block from the previous
                        cut/copy into a new file named
                        `<theme-name>/templates/components/footer/categories.html`,
                        and save it:


                        ```

                        <article class="footer-info-col footer-info-col--small">
                          <h5 class="footer-info-heading">{{lang 'footer.categories'}}</h5>
                          <ul class="footer-info-list">
                              {{#each categories}}
                              <li>
                                  <a href="{{url}}">{{name}}</a>
                              </li>
                              {{/each}}
                          </ul>
                        </article>

                        ```


                        Next, back in
                        `/templates/components/common/footer.html`, add a
                        reference to your new path/file, as indicated below in
                        comments:


                        ```

                        <footer class="footer" role="contentinfo">
                          <div class="container">
                              <section class="footer-info">
                                  <!-- [...] -->
                                  {{> components/footer/categories}}
                                  <!-- [...] -->
                              </section>
                          </div>
                        </footer>

                        ```


                        If you now refresh storefront pages in your browser, the
                        Categories list should reappear in the footer. The
                        component returns even though you have moved its data
                        resources to an arbitrary new location, and referenced
                        them indirectly.
              - title: Customizing Javascript
                route:
                  path: /customizing-javascript
                data:
                  blocks:
                    - type: html
                      data: <h1>Customizing Javascript</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#customizing-javascript_customizing\">Customizing Javascript for Inidivudal Pages</a></li>\n    \t<li><a href=\"#customizing-javascript_bringing-handlebars\">Bringing Handlebars Context Values into JavaScript</a></li>\n\t\t<li><a href=\"#customizing-javascript_installing-various\">Installing Various JavaScript Libraries</a></li>\n    <li><a href=\"#s\">Example Links </a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: "## Customizing JavaScript for Individual Pages\n\nHere is a very simple example of customizing the JavaScript provided in the default Stencil theme.\nIn a text editor, open the `<theme-name>/assets/js/theme/product.js` file. At the top of the Product class, insert the \"Hello World\" statement shown in bold below:\n\n\t\n```\n\texport default class Product extends PageManager {\n  constructor() {\n      super();\n  }\n\n  before(next) {\n      next();\n  }\n\n  loaded(next) {\n      console.log(\"Hello World\");\n    // Init collapsible\n    collapsible();\n    [...]\n}\n```\n\t\nIn your browser, refresh any product-details pop-up or page to see your new `\"Hello World\"` message.\n"
                      header:
                        anchor: customizing-javascript_customizing
                    - type: text
                      data: >
                        ## Bringing Handlebars Context Values into JavaScript


                        Within Stencil pages, you can inject any variables from
                        the Handlebars context into your client-side JavaScript.
                        You do so by calling the Stencil custom Handlebars
                        helper named `inject`, shown below:


                        `{{inject 'productThumbSize'
                        theme_settings.productthumb_size}}`


                        You could inject the above statement into a page
                        template rendered with `page_type = "Product"` (for
                        example: `<theme-name>/templates/pages/product.html`).
                        Stencil’s `PageManager` class will be provided this
                        context:


                        ```

                        export default class Product extends PageManager {
                          constructor() {
                              super();
                          }

                          before(next) {
                              next();
                          }

                          loaded(next) {
                              console.log("Hello World");
                              console.log(this.context.productThumbSize);
                          }

                        }

                        ```


                        Note that the
                        `console.log(this.context.themeImageSizes)`; statement
                        will report your configured image size, following the
                        `"Hello World"` message that you previously defined in
                        the Customizing JavaScript for Individual Pages above.
                      header:
                        anchor: customizing-javascript_bringing-handlebars
                    - type: text
                      data: >+
                        ## Installing Various JavaScript Libraries


                        Once you have installed the default Stencil theme, you
                        can add custom JavaScript libraries. To see how this
                        works, find your favorite library on GitHub – for
                        example: https://github.com/jquery/jquery.


                        To install this particular library for Stencil themes,
                        you would entering the following on the command line:


                        `npm install jquery`


                        Next, you would open
                        `<theme-name>/assets/js/theme/product.js`, and insert
                        the statements excerpted below:


                        ```

                        import $ from 'jquery';


                        $('.myElement').click(() => {
                            alert("You clicked myElement");
                        });

                        ```


                        As always, for specifics, refer to your chosen library’s
                        documentation.


                      header:
                        anchor: customizing-javascript_installing-various
                    - type: text
                      data: >-
                        ## Example Links 


                        For more-extended examples of adding custom JavaScript
                        (whether your own or third-party) to a theme, please see
                        this documentation's JavaScript Customization section.
                      header:
                        anchor: customizing-javascript_example-links
              - title: Rendering HTML with Ajax
                route:
                  path: /rendering-html-with-ajax
                data:
                  blocks:
                    - type: html
                      data: <h1>Rendering HTML with Ajax</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#rendering_rendering-html\">Rendering HTML with Ajax</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: "## Rendering HTML with Ajax\n\nStencil allows you to render dynamic components on the fly. For example, note this default code in `<theme-name>/templates/components/products/quick-view.html` (note also this file name, which Handlebars will reference later in this example):\n\n```\n<div class=\"modal-body quickView\">\n  <a href=\"#\" class=\"modal-close\" aria-label=\"Close\">&#215;</span></a>\n  {{> components/products/product-view}}\n</div>\n```\n\nTo render a different template, you would instead reference that template’s file name. For example, assume that you want to substitute a custom template that you’ve named: `<theme-name>/templates/components/products/quicker-view.html`.\n\nThis next code block is from the Stencil default theme’s `/assets/js/theme/global/quick-view.js` file. Note the statements deleted commented to swap in the new file name:\n\n```\nlet $modal = $('#modal'),\n  $modalContent = $('.modal-content', $modal),\n  $modalOverlay = $('.loadingOverlay', $modal),\n  modalModifierClasses = 'modal--large';\n\n$('body').on('click', '.quickview', (event) => {\n  let productId = $(event.currentTarget).data('product-id');\n\n  event.preventDefault();\n\n  // clear the modal\n  $modalContent.html('');\n  $modalOverlay.show();\n\n  // open modal\n  $modal.foundation('reveal', 'open');\n\n\t//quicker-view.html \n  utils.api.product.getById(productId, {template: 'products/quicker-view'}, function done(err, response) {\n      $modalOverlay.hide();\n      $modalContent.html(response);\n\n      return new ProductDetails($modalContent, context);\n  });\n});\nlet $modal = $('#modal'),\n  $modalContent = $('.modal-content', $modal),\n  $modalOverlay = $('.loadingOverlay', $modal),\n  modalModifierClasses = 'modal--large';\n\n$('body').on('click', '.quickview', (event) => {\n  let productId = $(event.currentTarget).data('product-id');\n\n  event.preventDefault();\n\n  // clear the modal\n  $modalContent.html('');\n  $modalOverlay.show();\n\n  // open modal\n  $modal.foundation('reveal', 'open');\n\n  utils.api.product.getById(productId, {template: 'products/quick-view'}, function done(err, response) {\n      $modalOverlay.hide();\n      $modalContent.html(response);\n      \n\n  utils.api.product.getById(productId, {template: 'products/quicker-view'}, function done(err, response) {\n      $modalOverlay.hide();\n      $modalContent.html(response);\n\n      return new ProductDetails($modalContent, context);\n  });\n});\n```"
                      header:
                        anchor: rendering_rendering-html
              - title: Testing and Debugging Your Theme
                route:
                  path: /testing-and-debugging-your-theme
                data:
                  blocks:
                    - type: html
                      data: <h1>Testing and Debugging Your Theme</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#testing_testing-and-debugging\">Testing and Debugging Your Theme</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >
                        ## Testing and Debugging Your Theme


                        The Stencil framework provides built-in debugging tools
                        to aid in your custom front-end development.

                        When you want to see what data is available on the page
                        you are working on, you can simply add the `debug` query
                        string to your store’s localhost URL. Here is an
                        example:


                        `http://localhost:3000/product/this-is-a-sample-product?debug=context

                        `


                        This will return a list of all the objects available on
                        the page, in JSON syntax.


                        If you want to view the available JSON objects and
                        rendered page at the same time, simply change the
                        `debug` value to `bar`. Here is an example:


                        `http://localhost:3000/product/this-is-a-sample-product?debug=bar`


                        ### Using Browsersync to Render the Store on
                        Desktop/Tablet/Mobile for Testing


                        The Stencil framework uses Browsersync to help you
                        rapidly test your storefront themes across devices of
                        different viewports. After you launch Stencil with
                        stencil start, your console window will display several
                        IP addresses below the BigCommerce "B".


                        Note the `External IP address`. You can copy/paste this
                        URL to access the Browsersync server from multiple
                        devices. Then, watch as scrolling and other actions sync
                        up across devices. (Note: Firewalls and other security
                        measures might interfere with this feature.)


                        To maximize the adoption of your themes, we recommend
                        that you use such testing to design responsive themes
                        that display and function well across multiple viewport
                        sizes.
                      header:
                        anchor: testing_testing-and-debugging
              - title: Managing Theme Variations
                route:
                  path: /new-subpage
                data:
                  blocks:
                    - type: html
                      data: <h1>Managing Theme Variations</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#managing_creating\">Creating and Naming a New Theme Variation </a></li>\n\t\t<li><a href=\"#managing_changing\">Changing a Theme Variation’s Font Family (config.json)</a></li>\n    <li><a href=\"#managing_preparing\">Preparing a Variation's Thumbnails</a></li>\n    <li><a href=\"#managing_using-cli\">Using Stencil CLI to Change Variations</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Creating and Naming a New Theme Variation  (Cascading
                        Settings from `config.json`)


                        You define variations in your `<theme-name>/config.json`
                        file. From the default Stencil theme’s config.json, here
                        is the Light variation’s definition, followed by the
                        head of the `Bold` variation’s definition:


                        ```

                        "variations": [

                        {
                          "name": "Light",
                          "id": "light",
                          "meta": {
                            "desktop_screenshot": "desktop_screenshot.jpg",
                            "mobile_screenshot": "mobile_screenshot.png",
                            "description": "This is the light style of the Stencil Theme",
                            "demo_url": "https://stencil-light.mybigcommerce.com",
                            "optimized_for": ["fashion", "image_heavy", "etc"],
                            "industries": []
                          },
                        {
                          "name": "Bold",
                          "id": "bold",
                        ...

                        ```


                        Try inserting a new custom variation of your own, below
                        the `"Light"` block shown above. Your variation’s
                        definition might look something like this:


                        ```

                        "variations": [

                        ...

                        {
                          "name": "MyCustomVariation",
                          "id": "my_custom_variation",
                          "meta": {
                            "desktop_screenshot": "my_custom_desktop_screenshot.jpg",
                            "mobile_screenshot": "my_custom_mobile_screenshot.png",
                            "description": "This is a really cool custom style of the Stencil Theme",
                            "demo_url": "https://stencil-custom.mybigcommerce.com",
                            "optimized_for": ["fashion", "image_heavy", "etc"],
                            "industries": []
                          },
                        {
                          "name": "Bold",
                          "id": "bold",
                        ...

                        "variations": [

                        ...

                        {
                          "name": "MyCustomVariation",
                          "id": "my_custom_variation",
                          "meta": {
                            "desktop_screenshot": "my_custom_desktop_screenshot.jpg",
                            "mobile_screenshot": "my_custom_mobile_screenshot.png",
                            "description": "This is a really cool custom style of the Stencil Theme",
                            "demo_url": "https://stencil-custom.mybigcommerce.com",
                            "optimized_for": ["fashion", "image_heavy", "etc"],
                            "industries": []
                          },
                        {
                          "name": "Bold",
                          "id": "bold",
                        ...

                        ```
                      header:
                        anchor: managing_creating
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Changing a Theme Variation’s Font Family
                        (config.json)


                        To learn more about defining variations, see the
                        `config.json` reference for details about each key’s
                        usage and allowable values. 

                        In particular, note the option to configure settings and
                        variables that are scoped to each variation. For
                        example, you could insert the
                        `"settings":...”body-font-family”` block shown below, to
                        set body text throughout this variation (only) to a
                        specific typeface/family:


                        ```

                        {
                          "name": "MyCustomVariation",
                          "id": "my_custom_variation",
                          "settings": {
                            ...
                            "body-font-family": "MyCoolFont, AnotherFont, sans-serif",
                            ...
                          }
                        }

                        ```
                      header:
                        anchor: managing_changing
                    - type: text
                      data: >
                        ## Preparing a Variation's Thumbnails


                        For details on preparing screenshots that enable
                        merchants to preview each variation – and to preview
                        your theme as a whole – in the BigCommerce control panel
                        and Theme Marketplace, see [Preparing Thumbnail
                        Images](/stencil-docs/stencil-theme-editor/preparing-thumbnail-images).
                      header:
                        anchor: managing_preparing
                    - type: text
                      data: >-
                        ## Using Stencil CLI to Change Variations


                        To locally test/debug a specific variation of your
                        theme, launch it by invoking the Stencil CLI’s
                        (command-line interface’s) `stencil start -v` switch.
                        Depending on how you’ve named your variation in
                        `config.json`, you would type something like this on the
                        command line:


                        `stencil start -v MyCustomVariation`
                      header:
                        anchor: managing_using-cli
                    - type: text
                      data: >
                        ## Bundling and Uploading Your Theme


                        If at this stage you are ready to bundle and upload your
                        theme, refer to [Bundling and
                        Uploading](/stencil-docs/prepare-and-upload-a-theme/bunding-and-uploading)
                        a Theme.
        - title: Stencil's Template Files
          route:
            path: /templates-directory
          data:
            children:
              - title: Templates Directory
                route:
                  path: /templates-directory
                data:
                  children:
                    - title: Components Subdirectory
                      route:
                        path: /components-subdirectory
                      data:
                        blocks:
                          - type: html
                            data: <h1>Components Subdirectory</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#components_components-subdirectory\">Components Subdirectory</a></li>\n    <li><a href=\"#components_naming-requirements\">Name Requirements</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Components Subdirectory


                              The `/templates/components/` subdirectory contains
                              Handlebars and HTML components (provided as
                              `.html` files) to create page structure. You can
                              reuse these code snippets and partials throughout
                              your theme.


                              You can take a look at the Cornerstone components
                              subdirectory and its contents in the [Github
                              repository
                              here](https://github.com/bigcommerce/cornerstone/tree/master/templates/components).


                              Subdirectories of `/templates/components/` group
                              together pages that serve a particular storefront
                              function. For example,
                              [here](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/search)
                              are the `.html` files contained in the `/search/`
                              subdirectory.


                              Furthermore, the [`/common/`
                              subdirectory](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common)
                              contains forms and icons resources, plus a
                              collection of single-purpose files.
                            header:
                              anchor: components_components-subdirectory
                          - type: text
                            data: >-
                              ## Naming Requirements


                              **Important:** Four children of the
                              `/templates/components/` subdirectory each contain
                              a set of templates whose file names must remain
                              constant. However, you are free to move each set
                              of template files to other path locations – as
                              long as you keep each set together in one folder
                              and specify the new location. Those folders are
                              note below:


                              *
                              [common/forms](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms)

                              *
                              [common/faceted-search/facets](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/faceted-search/facets)

                              *
                              [common/products/customizations](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/products/customizations)

                              *
                              [common/products/options](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/products/options)
                          - type: callout
                            data:
                              body: >-
                                You can use front matter to specify resources
                                only on pages in the `/templates/pages/`
                                subdirectory, not on pages here in the
                                `/templates/components/` subdirectory.


                                Please bear in mind that if a front-matter
                                directive contains an invalid option, Stencil
                                CLI will silently ignore that option.
                              title: ' Front-Matter Restrictions'
                              type: warning
                    - title: Layout Subdirectory
                      route:
                        path: /layout-subdirectory
                      data:
                        blocks:
                          - type: html
                            data: <h1>Layout Subdirectory</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#layout_layout-subdirectory\">Layout Subdirectory</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Layout Subdirectory


                              The `/templates/layout/` subdirectory is where you
                              assemble Handlebars resources to define your
                              storefront site’s overall structure (header,
                              footer, etc.). You can implement multiple layouts
                              here for different use cases, making it easy to
                              switch between different look-and-feel variations
                              of the same theme.


                              As prototypes, we have provided a minimal
                              [base.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/layout/base.html)
                              page in this subdirectory. To develop your theme,
                              you can copy and/or modify this prototype.


                              **Note:** _Be sure to set permission `755
                              (drwxr-xr-x)` on any new _subdirectories_ that you
                              add. Also, be sure to set permission `644
                              (rw-r--r--)` on any new _files_ that you add.
                              Without these permissions, running your theme
                              locally will fail with multiple error messages.
                              Bundling your theme will also fail, blocking its
                              upload to a store._
                            header:
                              anchor: layout_layout-subdirectory
                          - type: callout
                            data:
                              body: >-
                                You can use front matter to specify resources
                                only on pages in the `/templates/pages/`
                                subdirectory, but **not** on pages here in the
                                `/templates/layout/` subdirectory. If a
                                front-matter directive contains an invalid
                                option, Stencil CLI will silently ignore that
                                option.
                              title: Front Matter Restrictions
                              type: warning
                    - title: Pages Subdirectory
                      route:
                        path: /pages-subdirectory
                      data:
                        blocks:
                          - type: html
                            data: <h1>Pages Subdirectory</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#pages_pages-subdirectory\">Pages Subdirectory</a></li>\n    <li><a href=\"#pages_naming-requirements\">Naming Requirements</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              The `/templates/pages/` subdirectory contains the
                              complete set of base template pages used to
                              construct a BigCommerce online store. These pages
                              call resources from the `/templates/components/`
                              and `/templates/layout/` subdirectories.


                              Children of [this
                              subdirectory](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages)
                              group together pages that serve a particular
                              **storefront function**. For example, you can view
                              contents of the
                              [/errors/](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages/errors)
                              and
                              [/gift-certificate/](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages/gift-certificate)
                              subdirectories.


                              The subdirectory’s [.html
                              files](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages)
                              are single-purpose pages.
                            header:
                              anchor: pages_pages-subdirectory
                          - type: text
                            data: >-
                              ## Naming Requirements


                              Do not change the names of the `/templates/pages/`
                              subdirectory or its contained files. These default
                              names are required for the storefront to compile
                              properly. You can, however, edit pages’
                              front‑matter and Handlebars resources to customize
                              the storefront theme’s look and function.
                            header:
                              anchor: pages_naming-requirements
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                Pages in the `/templates/pages/` subdirectory
                                are the **only** place you can insert and modify

                                YAML front-matter attributes to customize the
                                rendered storefront.
                              title: ' Front-Matter Restriction'
                    - title: Custom Templates
                      route:
                        path: /custom-templates
                      data:
                        children:
                          - title: About Custom Templates
                            route:
                              path: /about-custom-templates
                            data:
                              blocks:
                                - type: html
                                  data: <h1>About Custom Templates</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#custom-templates_custom\">About Custom Templates</a></li>\n\t\t<li><a href=\"#custom-templates_stencil-versus-blueprint\">Stencil versus Blueprint Themes</a></li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >
                                    ## About Custom Templates


                                    About Custom Templates

                                    The Stencil framework allows theme
                                    developers and merchants to assign custom
                                    layout templates to storefront pages of the
                                    following types:


                                    * Brand

                                    * Category

                                    * Product

                                    * Page (meaning "Web Pages" – the
                                    BigCommerce control panel's designation for
                                    static store pages, which can include the
                                    store's home page)
                                  header:
                                    anchor: custom-templates_about-custom
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >-
                                    ## Stencil versus Blueprint Themes


                                    If you are migrating from BigCommerce's
                                    legacy Blueprint themes framework, please
                                    keep in mind these differences in how
                                    Stencil handles custom templates:


                                    * The brand option is entirely new in
                                    Stencil. If you are running on a Blueprint
                                    theme, you will not be able to create a
                                    custom template for brand pages.

                                    * Unlike Blueprint, Stencil does not require
                                    that custom templates' file names start with
                                    an underscore (_).

                                    * In the current Stencil release, you must
                                    create and bundle custom templates using
                                    Stencil CLI before you can upload the custom
                                    templates to stores. However, once you have
                                    created and uploaded templates, authorized
                                    store users can assign them to storefront
                                    pages through the control panel.
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >-
                                    ## Video Demo


                                    <iframe width="560" height="315"
                                    src="https://www.youtube.com/embed/qgaDX7bhmd8"
                                    frameborder="0" allow="autoplay;
                                    encrypted-media" allowfullscreen></iframe>
                          - title: 'Authoring, Testing, & Uploading Custom Templates'
                            route:
                              path: /new-subpage-2
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <h1>Authoring, Testing, and Uploading Custom
                                    Templates</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#authoring-testing-uploading_authoring\">Authoring Templates</a></li>\n    <li><a href=\"#authoring-testing-uploading_local-mapping\">Local Mapping and Testing</a></li>\n\t\t<li><a href=\"#authoring-testing-uploading_theme-upload\">Theme Upload</a></li>\n\t\t<li><a href=\"#authoring-testing-uploading_troubleshooting\">Troubleshooting Template Authoring</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n"
                                - type: text
                                  data: >-
                                    ## Authoring a Custom Template


                                    As a the theme developer, you must first
                                    create the `custom` subdirectory in the
                                    `templates/pages` directory, and four
                                    required subdirectories inside of it (brand,
                                    category, product, page), which will result
                                    in the following directory paths:


                                    * templates/pages/custom/brand 

                                    * custom/category/custom/category

                                    * custom/product/custom/product

                                    * custom/page/custom/page


                                    Next,  create the template HTML files, and
                                    then place them in the appropriate
                                    `<theme-name>/templates/pages/custom/`
                                    subdirectories corresponding to the types
                                    listed above. 
                                  header:
                                    anchor: authoring-testing-uploading_authoring
                                - type: callout
                                  data:
                                    type: warning
                                    body: >-
                                      Be sure to set permission `755
                                      (drwxr-x-r-x)` on any new subdirectories
                                      that you add.

                                      Also, be sure to set permission `644
                                      (rw-r–r–)` on any new files that you add.


                                      Without these permissions, running your
                                      theme locally will fail with multiple
                                      error messages.

                                      Bundling your theme will also fail,
                                      blocking its upload to a store.
                                    title: Subdirectory/File Permissions Required
                                - type: text
                                  data: '---'
                                - type: text
                                  data: "## Local Mapping and Testing\n\nTo test your custom templates locally, you must edit your `<theme-name>/.stencil` file to create mappings between each local template and a corresponding URL. Within the `.stencil` file, look for the following section:\n\n```\n\"customLayouts\": {\n    \"product\": {},\n    \"brand\": {},\n    \"category\": {},\n    \"page\": {}\n  }\n```\n\nIn this section, you would populate keys to create mappings. As a simple example, assume that you have a product custom template named alternate-`product.html`, and you want to see that template locally at the URL: http://localhost:3000/test-url/. In this case, you must populate the product key as follows:\n\n```\n    \"product\": {\n    \t\"alternate-product.html\":\"/test-url/\"\n    },\n```\n\n### Expanded Mapping Example\n\nHere is a more-complete example in which the `brand`, `page`, and `category` keys are also populated:\n\n```\n{\n  \"normalStoreUrl\": \"http://cornerstone-light-demo.mybigcommerce.com\",\n  \"port\": 3000,\n  \"username\": \"stencil\",\n  \"token\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"customLayouts\": {\n    \"product\": {\n      \"custom-product.html\": \"/custom-product/\"\n    },\n    \"brand\": {\n      \"custom-brand.html\": \"/brands/custombrand/\"\n    },\n    \"page\": {\n      \"custom-page.html\": \"/custom-page/\"\n    },\n    \"category\": {\n      \"custom-category.html\": \"/custom-category/\"\n    }\n  }\n}\n```\n\n### Mapping Requirements and Options\n\nIn the .stencil mapping examples above:\n\n* Each mapped URL must be a URL for a brand, category, product, or static page that is _already configured in the store_. This means that you cannot insert a placeholder URL that is an arbitrary string of letters, such as /abcdefghijklmnop/.\n* Each URL’s trailing slash is _optional_.\n* The HTML files must reside in either the brand, category, product, or page subdirectories.\n* All brand URLs are nested under the /brands/ parent. Use URL encoding with brand URLs.\n* That parent for brand URLs is /brands/ (plural), while the corresponding subdirectory for HTML files is /brand/ (singular).\n* After editing your `.stencil` file, you must restart stencil to see your changes locally. Enter `stencil start` on the command line, appending any appropriate switches for your workflow (e.g.: `stencil start -e -n`).\n\n### Why These URL Requirements?\n\nWhen you create a local custom template page for products, you expect that page to have access to all Stencil product objects. However, the server cannot readily determine the page type of each local custom template. So we give it a hint: We instruct the server to look at the page type of the URL to which you have mapped the template.\n\nIn the above `.stencil` configuration example’s final entry, the server will look at the URL `/custom‑category/` within the store, deduce that the page type is `category`, and return a category context to Stencil CLI. This allows Stencil CLI to properly display the page in the browser when you visit http://localhost:3000/custom‑category/ locally, or when shoppers visit the corresponding public store page.\n\n### Mapping Multiple URLs\nBeyond the single URL mapped to each template in the above examples, you have the option of mapping an array of URLs to each template. This is shown in the following example for the product template:\n\n```\n  \"customLayouts\": {\n    \"product\": {\n      \"featured-product.html\": [\"/special-product-one\", \"/special-product-two\"],\n      \"clearance-product.html\": \"/clearance-product\"\n    },\n    \"brands\": {},\n    \"categories\": {},\n    \"page\": {}\n  }\n}\n```"
                                  header:
                                    anchor: authoring-testing-uploading_local-mapping
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >-
                                    ## Theme Upload


                                    Finally, you must bundle and upload the
                                    theme to BigCommerce. See the Bundling and
                                    Uploading a Theme article for instructions
                                    on how to achieve this.
                                  header:
                                    anchor: authoring-testing-uploading_theme-upload
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >-
                                    ## Troubleshooting Template Authoring


                                    Here are solutions to some known problems in
                                    locally authoring and testing custom
                                    templates:


                                    ### Viewing Custom Brand Templates Locally


                                    If you are having trouble viewing custom
                                    brand templates locally, ensure that the URL
                                    used in your .stencil file is of the form:
                                    /brands/brandname. This is necessary because
                                    all the brand pages are located under the
                                    /brands/ URL path.

                                    Also, bear in mind that currently, all brand
                                    URLs are Unicode-encoded. So, for example,
                                    you should replace a hyphen with: %252d.


                                    ### Outdated Stencil CLI


                                    If you have an old version of Stencil CLI
                                    installed, it might lack support for custom
                                    templates. You can easily update your CLI by
                                    executing the following command:


                                    `npm install -g bigcommerce/stencil-cli`
                                  header:
                                    anchor: >-
                                      authoring-testing-uploading_troubleshooting
                          - title: Assigning Templates to Pages
                            route:
                              path: /assigining-templates-to-pages
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Assigning Templates to Pages</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#assigning_merchant-performed\">Merchant Performed Actions</a></li>\n\t\t<li><a href=\"#assigning_assigning-a-web-page\">Assigning a Web Page Template</a></li>\n    <li><a href=\"#assigning_assigning-a-product\">Assigning a Product, Brand, or Category Template</a></li>\n    <li><a href=\"#assigning_troubleshooting\">Troubleshooting Template Assignments</a></li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >-
                                    ## Merchant Performed Actions


                                    Once the developer has uploaded a theme to
                                    BigCommerce, the merchant (or other
                                    authorized store user) can assign custom
                                    templates to individual store pages in the
                                    BigCommerce Control Panel. The steps are
                                    similar whether assigning brands,
                                    categories, products, and static Web pages –
                                    with slight differences. Below, we show
                                    examples for assigning a Web Page and a
                                    Category. For further details, please see
                                    the [Stencil Custom Templates Knowledge Base
                                    article](https://forum.bigcommerce.com/s/article/Stencil-Themes#custom-template).
                                  header:
                                    anchor: assigning_assigning-a-web-page
                                - type: text
                                  data: >-
                                    ## Assigining a Web Page Template


                                    Starting from the BigCommerce control
                                    panel's left navigation pane:


                                    1. Select `Storefront` > `Web Pages`.

                                    2. From the resulting `View Web Pages`
                                    display, select the existing Page 

                                    3. Name to which you want to assign a custom
                                    template. (Or select `Create a Web Page` to
                                    define a new page.)

                                    4. From the resulting `Edit a Web Page`
                                    display, scroll down to the `Template Layout
                                    File` drop-down list. Then select your
                                    desired custom template from that list, as
                                    shown below.
                                  header:
                                    anchor: assigning_assigning-a-product
                                - type: image
                                  data: >-
                                    //s3.amazonaws.com/user-content.stoplight.io/6116/1539930165487
                                  config:
                                    centered: true
                                    fluid: true
                                    bordered: true
                                    maxWidth: '600'
                                    maxHeight: '400'
                                - type: callout
                                  data:
                                    body: >-
                                      Some static page types do not allow you to
                                      assign custom templates. You can recognize
                                      these excluded pages because their `Edit a
                                      Web Page` display will not include a
                                      `Template Layout File` drop-down list.
                                    title: Static Pages You Can't Assign
                                    type: warning
                                - type: text
                                  data: >
                                    ## Assigning a Product, Brand, or Category
                                    Template


                                    Starting from the BigCommerce control
                                    panel's left navigation pane:


                                    1. Select `Products` > `View` (for a product
                                    page) `Products` > `Product Categories` (for
                                    a category page), or `Products` > `Brands`
                                    (for a brand page).

                                    2. Select the Product Name, Category Name,
                                    or Brand Name to which you want to assign a
                                    custom template. (Or select the `Add` or
                                    `Create` button at the upper left to define
                                    a new product, category, or band.)

                                    3. For a product page (only), you must
                                    select the `Other Details` tab to proceed to
                                    the next step.

                                    4. Scroll to the `Template Layout File`
                                    drop-down list, and select your desired
                                    custom template from that list, as shown
                                    below for a Category assignment.

                                    5. Click the Save & Exit or Save & Keep
                                    Editing button at the lower right.
                                  header:
                                    anchor: assigning_troubleshooting
                                - type: image
                                  data: >-
                                    //s3.amazonaws.com/user-content.stoplight.io/6116/1539930552310
                                  config:
                                    fluid: true
                                    centered: true
                                    bordered: true
                                    maxWidth: '500'
                                    maxHeight: '200'
                                - type: text
                                  data: >-
                                    ## Troubleshooting Template Assignments


                                    In case of problems a custom template in the
                                    control panel: Check whether your theme's
                                    root directory contains a file named
                                    `manifest.json`.

                                    If you theme's root directory contains the
                                    file, perofrm the following:

                                    * delete the `manifest.json` file

                                    * bundle the theme again with the `stencil
                                    bundle` command

                                    * upload the theme

                                    * apply the theme


                                    This should enable assigning the template in
                                    the control panel.
                                  header:
                                    anchor: assigning_troubleshooting
                          - title: Using Disqus with Stencil
                            route:
                              path: /new-subpage
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Using Disqus with Stencil</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#using-disqus_disqus-overview\"></a>Disqus Overview</li>\n    <li><a href=\"#using-disqus_stencil-blog\"></a>Integrating Disqus with your Stencil blog</li>\n    <li><a href=\"#using-disqus_stencil-product-pages\"></a>Integrating Disqus with your Stencil Product Pages</li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >-
                                    ## Disqus Overview 


                                    Stencil themes have the ability to integrate
                                    with Disqus, a third party commenting system
                                    that allows users to leave blog comments on
                                    blog posts made with Stencil's Built-In
                                    Blog. Disqus can also be used with on
                                    Stencil product pages to allow comment and
                                    review threads on individual products.
                                  header:
                                    anchor: using-disqus_disqus-overview
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >
                                    ## Integrating Disqus with your Stencil blog


                                    To use Disqus blog comments in Stencil,
                                    follow the steps below:


                                    1. Log in to your BigCommerce Control Panel

                                    2. Navigate to Storefront Design > My Themes

                                    3. Open Edit Theme Files for your theme

                                    4. Navigate to Templates > Pages >
                                    blog-post.html

                                    5. Paste your Disqus Universal Code before
                                    the closing {{/partial}} tag

                                    6. Save your files

                                    7. Apply your theme
                                  header:
                                    anchor: using-disqus_stencil-blog
                                - type: text
                                  data: '---'
                                - type: text
                                  data: >-
                                    ## Integrating Disqus with your Stencil
                                    Product Pages


                                    1. Log in to your BigCommerce Control Panel

                                    2. Navigate to Storefront Design > My Themes

                                    3. Open Edit Theme Files for your theme

                                    4. Navigate to Templates > Pages >
                                    product.html

                                    5. Paste your Disqus Universal Code before
                                    the closing {{/partial}} tag

                                    6. In the Disqus Universal Code that you
                                    have posted, there is a function that reads
                                    like below:


                                    ```
                                     var disqus_config = function () {
                                            this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
                                            this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
                                        };
                                    ```


                                    Change the value of this.page.url to be
                                    `product.url;`, and the value of
                                    this.page.identifier to be `product.id`; so
                                    that the function now reads like below:


                                    ```

                                    var disqus_config = function () {
                                            this.page.url = product.url;
                                            this.page.identifier = product.id;
                                        };
                                    ```


                                    7. Save your files

                                    8. Apply your theme
                                  header:
                                    anchor: using-disqus_stencil-product-pages
                                - type: text
                                  data: >-
                                    ## Additional Resources

                                    * [Enabling Disqus for Product Reviews
                                    (Blueprint)](https://forum.bigcommerce.com/s/article/How-do-I-enable-Disqus-as-my-Comment-Service?_ga=2.224340315.1984523106.1539568940-967431010.1523308107#get-code)

                                    * [Using Disqus for Blog
                                    Comments](https://forum.bigcommerce.com/s/article/Using-Disqus-Comments?_ga=2.224340315.1984523106.1539568940-967431010.1523308107)
                  blocks: []
              - title: Stencil Checkout
                route:
                  path: /new-subpage
                data:
                  children:
                    - title: Preparing Stencil for Optimized One-Page Checkout
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Currency Conversion
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Multi Language Checkout
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Checkout/Confirmation Injection Options
                      route:
                        path: /new-subpage-1
                      data: {}
                    - title: Implement a Custom Checkout with React
                      route:
                        path: /implement-a-custom-checkout
                      data:
                        blocks:
                          - type: html
                            data: >-
                              <h1>Implementing a Custom React.js Checkout to
                              Cornerstone using the BigCommerce Checkout
                              SDK</h1>
                          - type: html
                            data: "<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"implement_tutorial-overview\">Tutorial Overview</a></li>\n    <li><a href=\"implement_steps\">Steps to Implement a Custom React Checkout</a></li>\n    <li><a href=\"implement_additional\">Additional Resources</a></li>\t\n</ul>\n</div>\n"
                          - type: text
                            data: >-
                              ## Tutorial Overview


                              This tutorial will take you through the steps to
                              implement a custom checkout built with React to
                              the Cornerstone Theme. The checkout will utilize
                              BigCommerce's Checkout SDK. This tutorial assumes
                              Cornerstone 2.4.0 as a starting point.
                            header:
                              anchor: implement_tutorial-overview
                          - type: callout
                            data:
                              type: error
                              body: >-
                                Please note that the provided checkout example
                                is a good starting and reference point, but is
                                **NOT production ready**. You should **not** use
                                this custom checkout in production as it stands.
                              title: Checkout Example NOT production ready!
                          - type: text
                            data: >-
                              ## Steps to Implement a Custom React Checkout in
                              Cornerstone


                              ### Tutorial Prerequisites


                              Before beginning this tutorial, you will need to
                              have the Stencil CLI installed.


                              If you do not yet have Stencil CLI installed,
                              complete the steps in [Installing the Stencil
                              CLI](stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli).


                              ### Install Dependencies


                              The React app used to demonstrate the Checkout SDK
                              has a few additional dependencies.

                              In your theme directory (e.g.
                              /stencil/cornerstone), run the following command:


                              `npm install --save react react-dom
                              react-text-mask classnames accounting
                              babel-preset-react css-loader node-sass
                              sass-loader style-loader
                              @bigcommerce/checkout-sdk`



                              ### Update webpack.common.js


                              The React app includes .jsx files which will not
                              be resolved using the default webpack
                              configuration in Cornerstone. Additionally,
                              loaders must be registered for .jsx and .scss
                              files.


                              **Note:** _Cornerstone 2.0 and above uses Webpack
                              4 which does **not** use a `webpack.conf.js` file
                              like earlier Webpack versions. Instead, we will
                              modify `webpack.common.js`._


                              #### Register .jsx and .scss loaders


                              In webpack.common.js, add the following objects to
                              the `rules` array:


                              ```

                              {
                                test: /\.jsx$/,
                                exclude: /node_modules/,
                                use: {
                                    loader: "babel-loader",
                                    options: {
                                        presets: ['react'],
                                    },
                                }
                              },


                              {
                                test: /\.scss$/,
                                use:  [
                                    'style-loader',
                                    {
                                        loader: 'css-loader',
                                        options: {
                                            modules: true
                                        }
                                    },
                                    'sass-loader'
                                ],
                              },

                              ```


                              Next, in webpack.common.js, add the following
                              property to the `resolve` object:



                              `extensions: ['.js', '.jsx']`



                              ### Add React Checkout Components to Theme


                              1. Clone or download BigCommerce's [Checkout SDK
                              JS
                              Example](https://github.com/bigcommerce/checkout-sdk-js-example)
                              **outside** of your theme directory


                              `git clone
                              git@github.com:bigcommerce/checkout-sdk-js-example.git`


                              2. In your theme directory, navigate to
                              `/assets/js/` and create a `checkout-app`
                              directory (i.e. `/assets/js/checkout-app`)


                              3. Copy the contents of
                              `/checkout-sdk-js-example/src` into your new
                              `/assets/js/checkout-app` directory 



                              ### Import Dependencies


                              Edit `/assets/js/app.js` and add the following
                              lines toward the beginning with the other import
                              statements:


                              ```

                              import React from 'react';

                              import ReactDOM from 'react-dom';

                              import Checkout from
                              './checkout-app/Checkout/checkout';

                              ```


                              ### Define a Function to Initialize React


                              Edit `/assets/js/app.js` and add the following
                              lines to the end:


                              ```

                              window.initReact = function initReact() {
                                  ReactDOM.render(
                                      React.createElement(Checkout, null, null),
                                      document.getElementById('checkout-app')
                                  );
                              };

                              ```


                              ### Customize the Checkout Template


                              1. Edit `/templates/pages/checkout.html` and add
                              the following lines between `{{{ footer.scripts
                              }}}` and `{{/partial}}`


                              ```

                              <script src="{{cdn
                              'assets/dist/theme-bundle.main.js'}}"></script>
                               
                              <script type="text/javascript" defer>
                                  // Exported in app.js
                                  window.initReact();
                              </script>

                              ```


                              2. In `/templates/pages/checkout.html`, replace
                              `{{{ checkout.checkout_content }}}` with the
                              following:


                              ```<div id="checkout-app"></div>```


                              ### Congratulations!


                              You should now be able to view your example React
                              checkout by running the `stencil start` command in
                              your theme directory and navigating to your
                              storefront at
                              [http://localhost:3000](http://localhost:3000).


                              You can make further customizations to the
                              checkout by modifying the React components in
                              `/assets/js/checkout-app`.
                            header:
                              anchor: implement_steps
                          - type: tabs
                            data:
                              children:
                                - title: webpack.common.js
                                  blocks:
                                    - type: code
                                      data: >
                                        LodashPlugin =
                                        require('lodash-webpack-plugin'),

                                        path = require('path'),

                                        webpack = require('webpack');


                                        // Common configuration, with extensions
                                        in webpack.dev.js and webpack.prod.js.

                                        module.exports = {

                                        bail: true,

                                        context: __dirname,

                                        entry: {
                                          main: './assets/js/app.js',
                                        },

                                        module: {
                                          rules: [
                                              {
                                                  test: /\.js$/,
                                                  include: /(assets\/js|assets\\js|stencil-utils)/,
                                                  use: {
                                                      loader: 'babel-loader',
                                                      options: {
                                                          plugins: [
                                                              'dynamic-import-webpack', // Needed for dynamic imports.
                                                              'lodash', // Automagically tree-shakes lodash.
                                                              'transform-regenerator', // Transforms async and generator functions.
                                                          ],
                                                          presets: [
                                                              ['env', {
                                                                  loose: true, // Enable "loose" transformations for any plugins in this preset that allow them.
                                                                  modules: false, // Don't transform modules; needed for tree-shaking.
                                                                  useBuiltIns: true, // Tree-shake babel-polyfill.
                                                              }],
                                                          ],
                                                      },
                                                  },
                                              },
                                              {
                                                  test: /jquery-migrate/,
                                                  use: 'imports-loader?define=>false',
                                              },
                                              {
                                                  test: /\.jsx$/,
                                                  exclude: /node_modules/,
                                                  use: {
                                                      loader: "babel-loader",
                                                      options: {
                                                          presets: ['react'],
                                                      },
                                                  }
                                              },
                                              {
                                                  test: /\.scss$/,
                                                  use:  [
                                                      'style-loader',
                                                      {
                                                          loader: 'css-loader',
                                                          options: {
                                                              modules: true
                                                          }
                                                      },
                                                      'sass-loader'
                                                  ]
                                              }
                                          ],
                                        },

                                        output: {
                                          chunkFilename: 'theme-bundle.chunk.[name].js',
                                          filename: 'theme-bundle.[name].js',
                                          path: path.resolve(__dirname, 'assets/dist'),
                                        },

                                        plugins: [
                                          new CleanPlugin(['assets/dist'], {
                                              verbose: false,
                                              watch: false,
                                          }),
                                          new LodashPlugin, // Complements babel-plugin-lodash by shrinking its cherry-picked builds further.
                                          new webpack.ProvidePlugin({
                                              $: 'jquery',
                                              jQuery: 'jquery',
                                              'window.jQuery': 'jquery',
                                          }),
                                        ],

                                        resolve: {
                                          alias: {
                                              'jquery-migrate': path.resolve(__dirname, 'node_modules/jquery-migrate/dist/jquery-migrate.min.js'),
                                              jstree: path.resolve(__dirname, 'node_modules/jstree/dist/jstree.min.js'),
                                              lazysizes: path.resolve(__dirname, 'node_modules/lazysizes/lazysizes.min.js'),
                                              pace: path.resolve(__dirname, 'node_modules/pace/pace.min.js'),
                                              'slick-carousel': path.resolve(__dirname, 'node_modules/slick-carousel/slick/slick.min.js'),
                                              'svg-injector': path.resolve(__dirname, 'node_modules/svg-injector/dist/svg-injector.min.js'),
                                              sweetalert2: path.resolve(__dirname, 'node_modules/sweetalert2/dist/sweetalert2.min.js'),
                                          },
                                          extensions: ['.js', '.jsx'],
                                        },

                                        };
                                      header:
                                        title: webpack.common.js
                                - title: app.js
                                  blocks: []
                                - title: checkout.html
                                  blocks:
                                    - type: code
                                      data: >-
                                        {{#partial "head"}}
                                         
                                        {{{ checkout.checkout_head }}}

                                        {{{ stylesheet
                                        '/assets/css/optimized-checkout.css' }}}

                                        {{ getFontsCollection }}
                                         
                                        <script type="text/javascript">
                                            window.language = {{{langJson 'optimized_checkout'}}};
                                        </script>
                                         
                                        {{{head.scripts}}}
                                         
                                        {{/partial}}
                                         
                                        {{#partial "page"}}

                                        <header class="checkoutHeader
                                        optimizedCheckout-header">
                                            <div class="checkoutHeader-content">
                                                <h1 class="is-srOnly">{{lang 'checkout.title'}}</h1>
                                                <h2 class="checkoutHeader-heading">
                                                    <a class="checkoutHeader-link" href="{{urls.home}}">
                                                        {{#if checkout.header_image}}
                                                            <img alt="{{settings.store_logo.title}}" class="checkoutHeader-logo" id="logoImage" src="{{ checkout.header_image }}"/>
                                                        {{ else }}
                                                            <span class="header-logo-text">{{settings.store_logo.title}}</span>
                                                        {{/if}}
                                                    </a>
                                                </h2>
                                            </div>
                                        </header>
                                         
                                        <div id="checkout-app"></div>
                                         
                                        {{{ footer.scripts }}}

                                        <script src="{{cdn
                                        'assets/dist/theme-bundle.main.js'}}"></script>
                                         
                                        <script type="text/javascript" defer>
                                            // Exported in app.js
                                            window.initReact();
                                        </script>

                                        {{/partial}}
                                         
                                        {{> layout/empty}}
                                      header:
                                        title: checkout.html
                            header:
                              title: Examples of files after completing this tutorial
                          - type: text
                            data: >-
                              ## Additional Resources


                              * [www.reactjs.org](www.reactjs.org)

                              *
                              [www.reactjs.org/tutorial/tutorial.html](www.reactjs.org/tutorial/tutorial.html)
                              (Excellent tutorial on the basics of React)

                              *
                              [https://webpack.js.org/concepts/](https://webpack.js.org/concepts/)
                            header:
                              anchor: implement_additional"
                    - title: Styling the Apple Pay Button
                      route:
                        path: /new-subpage-3
                      data: {}
                    - title: Customizing Invoices and Packing Slips
                      route:
                        path: /new-subpage-4
                      data: {}
        - title: 'Developing on the Stencil Theme Editor '
          route:
            path: /developing-on-the-stencil-theme-editor
          data:
            children:
              - title: Stencil Theme Editor Overview
                route:
                  path: /stencil-theme-editor-overview
                data:
                  blocks:
                    - type: html
                      data: <h1>Stencil Theme Editor Overview</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_stencil-theme-editor-overview\">Stencil Theme Editor</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Stencil Theme Editor

                        The [Stencil Theme
                        Editor](https://forum.bigcommerce.com/s/article/Stencil-Themes?_ga=2.258361674.1984523106.1539568940-967431010.1523308107)
                        is a Graphical User Interface (GUI) that allows
                        BigCommerce merchants to modify a storefront's look and
                        feel without manually entering any code. A merchant
                        using the Stencil Theme Editor can customize a
                        storefront theme by modifying characteristics from a
                        variety of menu options such as Styles, Colors,
                        Typography, Buttons, and more. Furthermore, the Stencil
                        Theme Editor is a useful rapid-customization tool for
                        developers. 


                        As a theme developer, you not only have the opportunity
                        to _use_ the theme editor to rapidly customize your
                        theme, but also _configure your own settings_ for the
                        Theme Editor. This will give merchants who download your
                        theme the ability to use the Theme Editor with your
                        theme in the ways you provide access to. Like previously
                        mentioned, the Theme Editor by default allows merchants
                        to customize everything from Styles, Colors, Typography,
                        Buttons, and more. As a theme developer, you can choose
                        and configure what features can be modified via the
                        Theme Editor for the theme that you develop.


                        To configure and work with the Theme Editor GUI locally,
                        run `stencil start -e` , and point your browser to
                        `localhost:8181`, as described here. This allows you to
                        see and test your personally configured Theme Editor
                        from a merchant's point of view. 


                        The remainder of this section guides you, as a
                        developer, through configuring your own theme options.
                      header:
                        anchor: stencil_stencil-theme-editor-overview
                    - type: callout
                      data:
                        type: error
                        body: >-
                          Open only one instance of Theme Editor at a time
                          against each storefront. There is currently no
                          synchronization mechanism for configuration changes
                          made by multiple Theme Editor instances.
                        title: ' Single Instance per Storefront'
              - title: Configuring the Stencil Theme Editor
                route:
                  path: /configuring-the-stencil-theme-editor
                data:
                  blocks:
                    - type: html
                      data: <h1>Configuring the Stencil Theme Editor</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#configuring_configuration-files\">Configuration Files</a></li>\n    <li><a href=\"#configuring_managing-keys\">Managing Keys between Versions</a></li>\n    <li><a href=\"#configuring_persistent-settings\">Persistent Settings Storage</a></li>\n    <li><a href=\"#configuring_theme-upgrades\">Theme Upgrades and Settings</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Configuration Files


                        Each theme contains two related JSON files of key-value
                        pairs: `config.json` and `schema.json`. These files'
                        keys provide the following features:


                        Keys that you include in `schema.json` – together with
                        their corresponding `config.json` default values –
                        define the settings that merchants can customize through
                        the Theme Editor graphical interface.

                        Other `config.json` keys contain metadata about the
                        theme, such as the theme's name, version, and resource
                        controls.

                        Keys located under the `config.json > variations` object
                        define variations of the theme. For example, a theme
                        might have a "Light" variation and a "Bold" variation,
                        each with different typography and colors. Each theme
                        can include as many variations as you like.

                        Keys located under both files' `settings` objects define
                        the theme's look, feel, and functionality.


                        For documentation on the principal keys included in
                        Stencil's reference Cornerstone theme, see this
                        section's [config.json Metadata]() and [schema.json
                        Metadata]() entries. For an introduction to the
                        graphical editor, see

                        [Stencil Theme Editor Overview]().
                      header:
                        anchor: configuring_configuration-files
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Managing Keys between Versions


                        To make sure revisions to your theme are
                        backward-compatibile, we generally recommend that you
                        manage keys in both your `config.json` and `schema.json`
                        files in an additive way. Specific recommendations:


                        Adding new keys is generally fine. (However, each key in
                        `schema.json` must have a matching default in
                        `config.json`, as outlined in [Enabling Theme
                        Editor]().)

                        * Use caution in deleting any key. Doing so can break
                        your new theme version's backward compatibility.

                        * We do not recommend renaming keys. Instead, we
                        recommend introducing a new key, while maintaining the
                        old key until it is no longer in use by anyone using an
                        older version of your theme.

                        * Each object within your `config.json` > [variations]()
                        object defines one theme variation. If you are adapting
                        an existing theme and consciously want to remove one or
                        more variations, you can do so by removing the
                        corresponding key(s).
                      header:
                        anchor: configuring_managing-keys
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Persistent Settings Storage


                        When store administrators use Theme Editor to customize
                        your theme for their store, the store's resulting
                        configuration settings are saved to a separate
                        configuration service at BigCommerce.
                      header:
                        anchor: configuring_persistent-settings
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Theme Upgrades and Settings


                        When a merchant upgrades your theme to a newer version,
                        all key-value pairs that were saved to the BigCommerce
                        configuration service are carried forward. For example,
                        assume this customization/upgrade scenario:


                        You release your Star Glow theme, version 1. This
                        theme's `config.json` includes a key named `logo_size`,
                        establishing a default value of 100x250. The combination
                        of the key and the value compose a `logo_size` setting.

                        The merchant uses Theme Editor to change the `logo_size`
                        setting to 175x275. This customized setting is stored in
                        the BigCommerce configuration service.

                        You release Star Glow, version 1.1. In this theme
                        revision, you have changed the `logo_size` to 300x300.

                        When the merchant applies Star Glow version 1.1 to their
                        store, their custom `logo_size` setting of 175x275
                        remains in effect.

                        If you the merchant creates a second store and applies
                        Star Glow version 1.1 to it, that store has no custom
                        `logo_size` setting – so it will default to the new
                        theme version's 300x300 value.
                      header:
                        anchor: configuring_theme-upgrades
              - title: config.json Metadata
                route:
                  path: /config.json-metadata
                data:
                  blocks:
                    - type: html
                      data: <h1><code>config.json</code> Metadata</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#config_stencil-theme-editor\"></a></li>\n\t</ul>\n</div>"
              - title: schema.json/Theme Editor Metadata
                route:
                  path: /new-subpage
                data:
                  blocks:
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_stencil-theme-editor\">Stencil Theme Editor</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Waiting to hear back from Erik Christensen about changes
                        that need to be made to this with the new Store Design
                        tool
              - title: Preparing Thumbnail Images
                route:
                  path: /preparing-thumbnail-images
                data:
                  blocks:
                    - type: html
                      data: <h1>Preparing Thumbnail Images</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#preparing_where-and-how-merchants\"></a>Where and How Merchants See Your Theme's Thumbnail Images</li>\n    <li><a href=\"#preparing_general-image\"></a>General Image Requirements</li>\n    <li><a href=\"#preparing_themewide-composite\"></a>Themewide Composite Image</li>\n    <li><a href=\"#preparing_variations\"></a>Variations: Desktop/Mobile Screenshots\n</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Where and How Merchants See Your Theme's Thumbnail
                        Images


                        A complete Stencil theme includes screenshots to show
                        off the theme on cards that appear in two locations
                        within the BigCommerce Control Panel:


                        * `Storefront` > `My Themes`: Each individual card
                        displays a _themewide composite image_, which is an
                        image that contains combination of screenshots of the
                        theme's multiple variations. 

                        `Storefront` > `Themes Marketplace`: Each card displays
                        one variation of your theme. The three variations of
                        Cornerstone (Light, Warm, and Bold) are displayed across
                        three 
                      header:
                        anchor: preparing_where-and-how-merchants
                    - type: tabs
                      data:
                        children:
                          - title: Desktop View of 'My Themes'
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6116/1539625143199
                                header:
                                  title: Storefront > My Themes
                                  subtitle: >-
                                    Each card contains a themewide composite
                                    image, showing all the variations of the
                                    theme in each. In this image, we see 3
                                    variations for the Cornerstone theme and 4
                                    for the Showroom theme.
                                config:
                                  centered: true
                                  fluid: true
                                  bordered: true
                                  maxWidth: '600'
                                  maxHeight: '900'
                          - title: Desktop View of Themes Marketplace
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6116/1539624737619
                                header:
                                  title: Storefront > Themes Marketplace
                          - title: Mobile View of Themes Marketplace
                            blocks:
                              - type: image
                                data: >-
                                  //s3.amazonaws.com/user-content.stoplight.io/6116/1539625004658
                                config:
                                  centered: true
                                  fluid: true
                                  bordered: true
                                  maxWidth: '500'
                                  maxHeight: '1000'
                      header:
                        title: >-
                          How your theme will appear in the Control Panel and
                          Theme Marketplace
                    - type: text
                      data: >-
                        ## General Image Requirements


                        Below are details about:

                        * how to size and save these images to stage them within
                        your theme's directory structure

                        * how to reference them in your config.json file.


                        All screenshots described below must meet the following
                        specifications in order for the `stencil bundle` command
                        to be able to process them:


                        * Saved to a supported image file type: .jpg/.jpeg,
                        .png, or .gif.

                        * Stored in your <theme‑name>/meta/ subdirectory.



                        Also note that all of these screenshots must be in
                        **portrait aspect ratio**, with specific resolutions
                        listed below.
                      header:
                        anchor: preparing_general-image
                    - type: text
                      data: "## Themewide Composite Image\n\nThe themewide composite image represents your theme in the Control Panel's `Storefront` > `My Themes` area, which shows merchants their currently available themes (including any custom uploaded themes). \n\nThis file will normally be a mosaic of screenshots from multiple variations within your theme. It must meet the following requirements, beyond the general specifications above:\n\n* Resolution of 600 x 760 pixels (horizontal x vertical).\n* File size smaller than 2 MB.\n* Arbitrary filename prefix, referenced in your config.json file as the \nmeta > composed_image key's value.\n\nHere is an example of a compliant file type and location:\n\n`<theme‑name>/meta/composed.png`\n\nHere is how you would reference this file within `config.json`:\n\n```\n{\n  [...]\n  \"meta\": {\n    [...]\n    \"composed_image\": \"composed.png\",\t\n    [...]\n}\n```"
                      header:
                        anchor: preparing_themewide-composite
                    - type: text
                      data: "## Variations: Desktop/Mobile Screenshots\n\nEach variation within your theme must be represented by two additional screenshots if you want that variation to appear in the control panel > Storefront > Themes Marketplace area, which shows merchants the themes that are available for download.\n\n### Desktop Screenshot\n\nThe first screenshot, showing your theme on a desktop viewport, must meet the following requirements beyond the general specifications above: \nResolution of 2048 x 2600 pixels (horizontal x vertical).\nFile size smaller than 5 MB.\nArbitrary filename prefix, referenced in your config.json file as the \n`<variation-name> > meta > desktop_screenshot` key's value.\n\t\n### Mobile Screenshot\n\nThe second screenshot, showing your theme on a mobile viewport, must meet the following requirements beyond the general specifications above: \n* Resolution of 304 x 540 pixels (horizontal x vertical).\n* File size smaller than 1 MB.\n* Arbitrary filename prefix, referenced in your config.json file as the \n`<variation-name> > meta > mobile_screenshot` key's value.\n\nHere is an example showing two files of compliant types and location:\n\n* `<theme‑name>/meta/desktop_bright.png`\n* `<theme‑name>/meta/mobile_bright.png`\t\n\nHere is how you would reference these files within `config.json`, for a variation named `Bright`:\n\n```\n [...]\n  \"variations\": [\n    {\n      \"name\": \"Bright\",\n      \"id\": \"bright\",\n      \"meta\": {\n        \"desktop_screenshot\": \"desktop_bright.png\",\n        \"mobile_screenshot\": \"mobile_bright.jpg\",\n    [...]\n    }\n  ]\n```\n"
                      header:
                        anchor: preparing_variations
              - title: Theme Editor Troubleshooting
                route:
                  path: /new-subpage
                data:
                  blocks:
                    - type: html
                      data: <h1>Theme Editor Troubleshooting</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#theme-editor_\">Empty Drop-Down List in Theme Editor Panel</a></li>\n    <li><a href=\"#theme-editor_\">Configured Control Missing from Theme Editor Panel</a></li>\n    <li><a href=\"#theme-editor_\">Theme Changes Not Saved from Theme Editor UI</a></li>\n\t</ul>\n</div>"
                    - type: callout
                      data:
                        title: Check the Terminal Window
                        body: >-
                          For any unexpected behavior that you encounter while
                          developing your Stencil theme, please also check the
                          terminal window where you started Stencil CLI. In some
                          cases, the terminal will provide a verbose error
                          message specifying where to look for problems. For
                          less-detailed error messages, we list diagnostic
                          suggestions in this documentation.
                    - type: text
                      data: >-
                        ## Empty Drop-Down List in Theme Editor Panel


                        * **Symptom:** A drop-down list's outline appears below
                        its configured label. However, the list appears to be
                        empty.

                        * **Likely Cause:** A default value specified in the
                        theme's config.json file is not enumerated in the
                        schema.json file.

                        * **Resolution:** Update schema.json to include the
                        config.json value.
                    - type: text
                      data: >-
                        ## Configured Control Missing from Theme Editor Panel


                        * **Symptom:** A control that you have configured within
                        schema.json is completely absent from the Theme Editor
                        UI.

                        * **Likely Cause:** The specified "type" is one of:
                        text, text area, radio [button], or image.

                        (Theme Editor does not currently support these data
                        types.)

                        * **Resolution:** Display the user option via one of the
                        supported data types: color, font, select [drop-down
                        list], or checkbox.
                    - type: text
                      data: >-
                        ## Theme Changes Not Saved from Theme Editor UI


                        * **Symptom:** Changes saved in a browser's Theme Editor
                        panel are not reflected in the storefront.

                        * **Likely Cause:** Check whether multiple users are
                        simultaneously using Theme Editor to customize the same
                        storefront.

                        * **Resolution:** We strongly recommend opening only one
                        instance of Theme Editor, at a time, per storefront.
                        BigCommerce currently provides no synchronization
                        mechanism for configuration changes from multiple Theme
                        Editor instances. So the storefront's schema.json will
                        record the last changes made by any instance – but
                        changes saved earlier by other instances might be lost.
        - title: Front-Matter Attributes
          route:
            path: /front-matter-attributes
          data:
            children:
              - title: Front Matter Overview
                route:
                  path: /front-matter-overview
                data:
                  blocks:
                    - type: html
                      data: <h1>Front Matter Overview</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#front-matter-overview_declaring-objects\">Declaring Objects</a></li>\n    <li><a href=\"#front-matter-overview_yaml-syntax\">YAML Syntax – Requirements</a></li>\n    <li><a href=\"#front-matter-overview_filtering-attributes\">Filtering Attributes</a></li>\n    <li><a href=\"#front-matter-overview_combining-front-matter\">Combining Front Matter with Handlebars Attributes</a></li>\n    <li><a href=\"#front-matter-overview_default-versus-custom\">Default versus Custom Attributes, per Page</a></li>\n    <li><a href=\"#front-matter-overview_declaring-multiple\">Declaring Multiple Attributes</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n"
                    - type: text
                      data: "## Declaring Front-Matter Objects\n\nWhen you create a store page that requires specific attributes (such as 'New Products') to be displayed, you must first declare the object and attribute on the page in a front-matter block at the top of the page's HTML template file. The front matter block makes the attribute accessible on the page. Then, to display the attribute on the storefront page, you will reference the the object using Handlebars within the page's HTML.\nFor example, to display 'new products' on a storefront's home page, you first need to make new products accessible on the home page. To achieve this, include the following front matter block at the top of the [home.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html) file to declare the products object with its new attribute. This allows a storefront's home page to access a store's \"New Products.\"\n\n```\n---\nproducts:\n    new:\n    \tlimit: {{theme_settings.homepage_new_products_count}}\n---\n```\n\n**Note:** A 'limit' is required for Product Objects to render on a storefront page. You can hard code the limit value or utilize handlebars.js to reference it from the theme's config.json file. In this case, the limit value is being referenced from the `settings` JSON object in the `config.json` file using handlebars.js. Information on required attributes is detailed in the Front Matter Attributes Reference. \n\nAfter including the front matter block at the top of the home.html file, the New Products attribute will be accessible in the home page's context. As previously stated, simply including the front matter block will not display the attribute on the page. In order to actually display the new products on the desired storefront page, you will refernce the attribute using Handlebars in the same file you have added the front matter block to.\nIn this example, we will include the following code in Cornerstone's [home.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html) file to display New Products on our store's home page. \n\n\n```\n  {{#if products.new}}\n        {{> components/products/new products=products.new columns=theme_settings.homepage_new_products_column_count}}\n    {{/if}}\n```\n"
                      header:
                        anchor: front-matter-overview_declaring-objects
                    - type: text
                      data: >+
                        ## YAML Syntax – Requirements


                        Stencil front matter uses the conventions of [YAML]()
                        (short for the recursive "YAML Ain't Markup Language").
                        Here are the YAML conventions you must follow in front
                        matter:


                        Place the front-matter block at the top of your
                        template.

                        Fence the beginning and end of the front-matter block
                        with a row of three hyphens (---), as you see in the
                        examples here.

                        Show attribute > key relationship (or object > property
                        relationship) by indenting the children. In the example
                        above, products is the object,

                        Place a colon (:) directly after each attribute name,
                        and directly after each key name. (Colons separate
                        key:value pairs.)

                        Identifiers are case-sensitive.


                        ### Restrictions


                        You can use front matter to specify attributes on the
                        tops of pages in your

                        `<theme-name>/templates/pages/` subdirectory.


                        You **cannot** use front matter to accomplish this on
                        pages in the following subdirectories:

                        * `<theme-name>/templates/components/`

                        * `<theme-name>/templates/layout/`

                        * `<theme-name>/templates/pages/custom/` 


                        * Indent using only spaces, not tabs. (YAML forbids
                        tabs, to avoid inconsistent encoding of tabs across
                        platforms.) An indent of even one space indicates a
                        child.


                        * Front matter on a given page cannot exceed 64 KB.


                        * If a front-matter directive contains an invalid
                        option, Stencil CLI will silently ignore that option.

                      header:
                        anchor: front-matter-overview_yaml-syntax
                    - type: text
                      data: >
                        ## Filtering Attributes


                        Some attributes can accept indented keys, or key-value
                        pairs, to further define the attribute. For example,
                        limit is a key commonly used to restrict the number of
                        objects to return for an attribute.

                        To return products similar to the product that a
                        customer is currently viewing – with a limit of six –
                        you would declare front matter as follows:


                        ```

                        ---

                        products:
                            similar_by_views:
                                limit: 6
                        ---

                        ```


                        Most keys have a default value, as listed in the [Front
                        Matter Attributes]() Reference. Specifying the key
                        without a value will call that default value. The
                        default value for `similar_by_views:limit:` happens to
                        be `4`, so inserting `limit` with no integer will
                        display four products:


                        ```

                        ---

                        products:
                            similar_by_views:
                                limit:
                        ---

                        ```
                      header:
                        anchor: front-matter-overview_filtering-attributes
                    - type: callout
                      data:
                        body: >-
                          To keep your pages lightweight, specify only the
                          attributes you need per page. Also, use the limit key
                          (with appropriate values) for attributes that accept
                          it.
                        title: Filtering for Faster Page Loads
                    - type: text
                      data: >-
                        ## Combining Front Matter with Handlebars Attributes


                        The next example builds on front-matter object
                        invocation and filtering, by showing a corresponding
                        Handlebars statement in HTML. Here is how you would
                        declare the `products` object to return four new
                        products, and to then display each product’s name:


                        ```

                        ---

                        products:
                            new:
                                limit: 4
                        ---


                        <h1> This is the HTML for the new-products example </h1>

                        {{#each products.new}}
                            <p>{{ name }}</p>
                        {{/each}}

                        ```
                      header:
                        anchor: front-matter-overview_combining-front-matter
                    - type: callout
                      data:
                        body: >-
                          In the above HTML, the {{ name }} identifier calls an
                          attribute of Stencil’s common product card model,
                          which consolidates details about a given product. For
                          this and other objects that you can access through
                          HTML, please see our reference section on Handlebars
                          objects.
                        title: ' Reading the Handlebars'
                    - type: text
                      data: >-
                        ## Default versus Custom Attributes, per Page


                        To make templates readily useful, they automatically
                        include a page’s default attributes. For example, a
                        theme’s
                        [product.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/product.html)
                        page will automatically include a product attribute.


                        However, if you want to include additional attributes on
                        a page, you can declare those attributes in front matter
                        using the conventions shown above. [The Declaring
                        Objects](#front-matter-overview_declaring-objects)
                        example shows the only way to display a "new products"
                        storefront section, which requires front-matter
                        invocation.
                      header:
                        anchor: front-matter-overview_default-versus-custom
                    - type: text
                      data: >+
                        ## Declaring Multiple Attributes


                        Below is an example that assumes you want to include a
                        product’s reviews and also related products. To display
                        images for the related products, the HTML statement
                        `<img src="{{getImage image 'gallery'}}">` relies on
                        Stencil's `{{getImage}}` custom Handlebars helper:


                        ```

                        ---

                        product:
                           reviews:
                               limit: 9
                           related_products:
                               limit: 10
                        ---



                        <h2>{{ product.name }}</h2>

                        {{#each product.reviews.list}}
                            <p>{{text}}</p>
                        {{/each}}

                        <h3>Related Products</h3>

                        {{#each product.related_products}}
                          <img src="{{getImage image 'gallery'}}">
                          <p>{{ name }}</p>
                        {{/each}}

                        ```

                      header:
                        anchor: front-matter-overview_declaring-multiple
              - title: Front Matter Attributes Reference
                route:
                  path: /front-matter-attributes-reference
                data:
                  blocks:
                    - type: html
                      data: <h1>Front Matter Attributes Reference</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#front-matter-attributes-reference_global\">Global Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_blog\">Blog Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_category\">Category Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_product\">Product Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_brand\">Brand Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_brand-list\">Brand List Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_cart\">Cart Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_search\">Search Attributes</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: "<h2> <a name=\"Front-ref-global\"></a>Global Attributes </h2>\n\nGlobal attributes are available on all pages. <br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details and Other \nAllowable Values/Results</td>\n  </tr>\n  <tr>\n    <td class=\"\">customer:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">Customer attributes are always included, and are available if the active shopper is logged in.</td>\n  </tr>\n\n  <tr>\n  \t<td class=\"\"></td>\n  \t<td class=\"\">addresses: true</td>\n    <td class=\"\">true – on address page<br><p></p>\n\nnull – on all other pages</td>\n    <td class=\"\">Boolean indicating whether to retrieve addresses for this customer.<br><p></p> \n\nNo filtering available. Default sorting is by address id, from lowest to highest.<br><p></p>\n\nnull or false: Do not retrieve addresses.\ntrue: Retrieve addresses.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">returns: true</td>\n    <td class=\"\">true – on returns page<br><p></p>\n\nnull – on all other pages</td>\n    <td class=\"\">Boolean indicating whether to retrieve product-return requests for this customer.<br><p></p> \n      \n      No filtering available.<br><p></p>\n      \n      true: Retrieve requests.<br><p></p>\n      \n      null or false: <NOBR>Do not</nobr> retrieve requests.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">wishlists: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No wishlists displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of wishlists displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, retrieves an unlimited number of wishlists.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">orders: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">Contains all orders, complete or not.\n      <br><p></p>\n      null: no orders displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of orders displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, displays 20 orders. (Default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">recently_viewed_products:</td>\n    <td class=\"\">null</td>\n    <td class=\"\">Boolean indicating whether to display recently viewed products.<br><p></p>\n\nNo filtering available.</td>\n  </tr>\n\n  <tr>\n    <td class=\"\">products:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(When filtering/limiting, products' default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">featured: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No featured products displayed.<br><p></p>\n&lt;number&gt; limits the number of featured products displayed.\n      <br><p></p>\n      If &lt;number&gt; is not set, defaults to 4 products.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">new:<br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\nnull</td>\n    <td class=\"\">null: No new products displayed.<br><p></p>\n&lt;number&gt; limits the number of new products displayed. Maximum allowable value is 25.\n      <br><p></p>\n      If &lt;number&gt; is not defined, defaults to 8 products.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">top_sellers: <br>\n      <span class=\"indent1\">limit:  &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No top-selling products displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of top sellers displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, defaults to all top sellers.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">carousel: true</td>\n    <td class=\"\"></td>\n  <td class=\"\">null</td>\n    <td class=\"\">Boolean indicating whether to display a carousel on storefront.\n      <br><p></p>\n      No filtering available.\n      <br><p></p>\n      null or false: No carousel display.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">blog:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(Default sorting is by published_date, from most-recent to earliest.)</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">recent_posts:<br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span>\n    </td>\n    <td class=\"\">20</td>\n    <td class=\"\">null: No recent blog posts displayed.\n      <br><p></p>      \n      &lt;number&gt; limits the number of recent blog posts displayed.\n      <br><p></p>      \n      If &lt;number&gt; is not defined, defaults to the maximum of 20 blog posts.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">summary: &lt;number&gt;</td>\n    <td class=\"\">100</td>\n    <td class=\"\"><!-- null: No summary characters displayed.<br><p></p> -->      \n      &lt;number&gt; sets the number of characters to display in each blog-post summary.\n      <br><p></p>\n      If &lt;number&gt; is not defined, displays 100 characters.</td>\n  </tr>\n  \n  <!-- <tr>\n    <td class=\"\">brands:<br>\n        <span class=\"indent1\">&lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: Do not display a brand list.<br><p></p>\n&lt;number&gt; limits the number of brands to return.<br><p></p>\nIf &lt;number&gt; is not defined, returns all brands.</td>\n  </tr> -->\n  \n  <tr>\n    <td class=\"\">cart: true</td>\n    <td class=\"\"></td>\n    <td class=\"\">false</td>\n    <td class=\"\">Boolean indicating whether to retrieve cart data.<br><p></p>\ntrue: Return cart data.<br><p></p>\nfalse: Do not return cart data.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">categories: true</td>\n    <td class=\"\"></td>\n    <td class=\"\">false</td>\n    <td class=\"\">Boolean indicating whether to retrieve the <a href=\"docs/global-resources#Categories\">category tree</a> during an AJAX request.\n      <br><p></p>\n      true: Retrieve the category tree.\n      <br><p></p>\n      false: Do not retrieve the category tree.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">description: true</td>\n    <td class=\"\">\nfalse</td>\n    <td class=\"\">\nBoolean indicating whether to retrieve category descriptions dynamically from the database.\n      <br><p></p>\n      Set to true for themes that must display category descriptions when pages render. (This can slow page loads.)</td>\n  </tr>\n    \n  <tr>\n    <td class=\"\">shop_by_brand:</td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">Typically used in a footer or sidebar.<br><p></p>\nnull: Do not display this brand list.<br><p></p>\n&lt;number&gt; limits the number of brands to return.<br><p></p>\nIf &lt;number&gt; is not defined, returns 10 brands, ordered by the number of products per brand.</td>\n  </tr>\n\n  <!-- <tr>\n    <td class=\"\">suggested_products:<br>\n  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: Do not display suggested products.<br><p></p>\n&lt;number&gt; limits the number of suggested products to return.<br><p></p>\nIf &lt;number&gt; is not defined, returns 4 suggested products.</td>\n  </tr> -->\n</table>\n\n\n<h2> <a name=\"Front-ref-cat\"></a>Category Attributes</h2>\n\nCategory attributes are available in the context of a category.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">category:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">shop_by_price:</td>\n    <td class=\"\">\nfalse</td>\n    <td class=\"\">\nBoolean indicating whether to display Shop-by-Price controls.</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">products:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n16</td>\n    <td class=\"\">\nDefines the number of products displayed per page for this category. Range of possible values is 1&ndash;100 products.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-blog\"></a>Blog Attributes</h2>\n\nBlog attributes are available in the context of a blog.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Sub-Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">blog:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">posts:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(Default sorting is by published_date, from most-recent to earliest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No blog posts displayed.<br><p></p>\n      &lt;number&gt; limits the number of blog posts displayed.<br><p></p>\n      Maximum is 20 blog posts per page.\n    </td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">pages: &lt;number&gt;</td>\n    <td class=\"\">5</td>\n    <td class=\"\">\nnull: No pagination.<br><p></p>\n      \n      &lt;number&gt; sets the number of pages to display in pagination links.<br><p></p>\n      \n      If &lt;number&gt; is not defined, defaults to 5 pages.\n    </td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">summary: &lt;number&gt;</td>\n    <td class=\"\">250</td>\n    <td class=\"\"> <!-- null: No summary characters displayed.<br><p></p> -->  \n      &lt;number&gt; sets the number of characters to display in each blog-post summary.<br><p></p>\nIf &lt;number&gt; is not defined, displays 250 characters.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-prod\"></a>Product Attributes</h2>\n\nProduct attributes are available in the context of a product.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">product:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(When filtering/limiting, products' default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">videos:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\">If product.videos is not defined, no videos are returned.<br><p></p>\n      \n      If product.videos is defined, the default behavior is to return all videos. <!-- Check & correct this. --> <br><p></p>\n      \n      If product.videos.limit is also defined, &lt;number&gt; sets the maximum number of videos returned.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">images:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\">If product.images is not defined, no images are returned.<br><p></p>\n      \n      If product.images is defined, you must also define product.images.limit, which throttles the number of images returned. <br><p></p>\nThe maximum allowable value for this option's &lt;number&gt; parameter is 5 images.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">reviews: true<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">[false]</td>\n    <td class=\"\">Boolean indicating whether to display product reviews.\n      <br><p></p>      \n      If product.reviews is present, and is not explicitly set to \"false\", reviews will appear.\n      <br><p></p>      \n      If &lt;number&gt; is not defined, defaults to 10 reviews.<br><p></p>\n      (When filtering/limiting reviews, default sorting is by review id, from lowest to highest.)</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">related_products:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\">Displays products that are related by name.<br><p></p>\n      \n      &lt;number&gt; limits the number of products displayed.<br><p></p>\n      \n      If &lt;limit&gt; is absent or undefined, the default behavior is to display all related products.<br><p></p> \n\nInserting “limit:” with no integer will display 0 products. </td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">similar_by_views:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">[unlimited]</td>\n    <td class=\"\">Displays products similar to those displayed in the current page context.<br><p></p>\n      \n      &lt;number&gt; limits the number of products displayed.<br><p></p>\n      \n      If &lt;limit&gt; is absent or undefined, default is to display 4 products.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-brand\"></a>Brand Attributes</h2>\n\nBrand attributes are available in the context of a brand.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">brand:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">products: <br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n50</td>\n    <td class=\"\">\nDefines the number of products displayed per page for this brand. Range of possible values is 1&ndash;50 products.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-brandlist\"></a>Brand List Attributes</h2>\n\nThese attributes are available in the context of a list of brands.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">brands:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(When retrieving a collection of brands, default sorting is by brand id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">50</td>\n    <td class=\"\">\nSets the number of brands displayed in the list. If &lt;limit&gt; is not defined, returns all brands, up to a maximum of 50.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-cart\"></a>Cart Attributes</h2>\n\nCart attributes are available in the context of a shopper's cart.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Sub-Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">cart</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">suggestions:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">Suggested products to display to shopper, based on cart contents. <NOBR>(If enabled,</nobr> these suggestions appear only immediately after the shopper adds an item to the cart.)</td>\n  </tr>\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: Do not display suggested products.<br><p></p>\n&lt;number&gt; limits the number of suggested products to return.<br><p></p>\nIf &lt;number&gt; is not defined, returns 4 suggested products.</td>\n  </tr>\n</table>\n\n\n<h2> <a name=\"Front-ref-search\"></a>Search Attributes</h2>\n\nSearch attributes are available in the context of a search results page.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Sub-Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">search</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">product_results:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">16</td>\n    <td class=\"\">\nDefines the number of product search results displayed per page. Range of possible values is 1&ndash;100 products.</td>\n  </tr>\n</table>"
        - title: Handlebars Syntax and Helpers
          route:
            path: /handlebars-syntax-and-helpers
          data:
            children:
              - title: Handlebars.js Overview
                route:
                  path: /handlebars-overview
                data:
                  blocks:
                    - type: html
                      data: <h1>Handlebars.js Overview</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_\"></a>Handlebars.js</li>\n    <li><a href=\"#handlebars_\"></a>Template Logic</li>\n    <li><a href=\"#handlebars_\"></a>Custom Handlebars Helpers</li>\n    <li><a href=\"#handlebars_\"></a>Stencil Handlebars Resources</li>\n    <li><a href=\"#handlebars_\"></a>Rendering Special Characters</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Handlebars.js


                        Handlebars is a minimal templating language that allows
                        you to create dynamic and robust templates for any
                        BigCommerce storefront. A Handlebars template looks just
                        like a regular HTML page, with the addition of
                        Handlebars expressions for all dynamic logic that you
                        embed into the page.


                        A Handlebars expression begins with: ``{{`` and ends
                        with: ``}}``.


                        Here is a basic example that accesses the title and body
                        variables:


                        ```

                        <div class="entry">

                        <div class="entry">
                          <h1>{{ title }}</h1>
                          <div class="body">
                            {{ body }}
                          </div>
                        </div>

                        ```


                        In production, Handlebars statements run on the server
                        side, generating HTML that the shopper's browser
                        receives.


                        For a thorough overview of how to use Handlebars inside
                        your templates, please review the Handlebars
                        documentation and tutorials located at
                        http://handlebarsjs.com/.
                    - type: text
                      data: >-
                        ## Template Logic


                        With Handlebars, it’s easy to embed logic right into
                        your templates. Handlebars has built-in helpers for
                        widely used logic and iterator functions. You can find a
                        list of all built-in Handlebars helpers here.
                    - type: text
                      data: >-
                        ## Custom Handlebars Helpers


                        BigCommerce has extended the built-in Handlebars helpers
                        with certain custom Handlebars helpers. For details,
                        please proceed to this reference section.
                    - type: text
                      data: >-
                        ## Stencil Handlebars Resources


                        For a comprehensive reference to the Stencil data
                        objects that you can manipulate via Handlebars
                        statements, please see the Stencil Object Model
                        Reference.
                    - type: text
                      data: >-
                        ## Rendering Special Characters


                        By default, Handlebars HTML-escapes values returned by a
                        Handlebars {{ expression }}. So, where a Handlebars
                        expression's referenced content includes special
                        characters, those characters will render literally on
                        the storefront as HTML entities.

                        In the example above, assume that the HTML referenced by
                        {{ title }} contains an ampersand and a "straight"
                        apostrophe. You will see the entities &amp; and &#039;
                        displayed literally on the storefront, instead of the
                        intended characters & and '. Similar display errors will
                        be triggered by apostrophes, quotation marks, primes,
                        and other extended characters.

                        The workaround is to place the Handlebars variable in
                        triple braces, like this: {{{ title }}}. Handlebars
                        documentation refers to this technique as a
                        "triple-stash."
              - title: Handlebars Helpers Reference
                route:
                  path: /handlebars-helpers-reference
                data:
                  blocks:
                    - type: html
                      data: <h1>Handlebars Helpers Reference</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"handlebars-helpers-reference_a\">Array Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_collection\">Collection Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_comparison\">Comparison Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_control-flow\">Control-Flow Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_html\">HTML Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_image\">Image Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_inflection\">Inflection Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_injection\">Injection Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_markdown\">Markdown Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_math\">Math Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_number\">Number Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_object\">Object Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_operator\">Operator Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_string\">String Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_url\">URL Helpers</a></li>\n    <li><a href=\"handlebars-helpers-reference_misc\">Miscellaneous Helpers</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >
                        ## {{itemAt}}


                        _Block helper that returns the item at the specified
                        index._


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `returns` {any} `value`


                        #### {{itemAt}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```

                        {{itemAt array 1}}

                        //=> 'b'


                        ```

                        ---


                        ## {{join}}


                        The `join` helper is custom to Stencil. It joins an
                        array of string items, with separators. It returns a
                        string. 


                        #### Parameters


                        - `values`: {Array}

                        - `separator`: {String}

                        - `limit=<number>`: An optional limit.


                        #### {{join}} Example


                        insert join example


                        ---


                        ### {{limit}}


                        The `limit` helper is custom to Stencil. It limits the
                        number of items returned from an array variable, and
                        returns a new array.


                        #### Parameters


                        - `data`: {Array}

                        - `limit`: {Number}


                        #### {{limit}} Example 


                        Assume that `{{cart.items}}` would return 10 items. You
                        could use this helper to limit that behavior to only the
                        first four items, by specifying: 


                        ```

                        {{limit cart.items 4}}

                        ```


                        ---


                        ### {{pluck}}


                        The `pluck` helper is custom to Stencil. For one or more
                        specified search key(s), it retrieves corresponding
                        values from some or all elements in a specified
                        collection. 


                        The `pluck` helper returns the retrieved values in a
                        comma-separated string. This helper's general form is:


                        ```

                        {{pluck ([limit] <collection> [<limit-value>])
                        '<search-key>'}}

                        ```


                        #### Parameters


                        - `limit`, `limit-value`: Optional parameters to limit
                        the number of results returned.

                        - `collection`: The collection to search.

                        - `search-key`: The string to search for.



                        #### {{pluck}} Example 1


                        Assume that the `categories` collection contains:


                        ```

                        categories: [
                          { "id": 1, "name": "Bakeware" },
                          { "id": 2, "name": "Cookware" },
                          { "id": 3, "name": "Cutlery" }
                        ]

                        ```


                        In this case, this Handlebars statement:


                        ```

                        {{pluck (limit categories 2) 'name'}}

                        ```


                        ...would return:


                        ```

                        "Bakeware,Cookware"

                        ```


                        #### {{pluck}} Example 2


                        If the `categories` themselves each contained an image
                        object, then you could use dot notation to access that
                        image object's children:


                        ```

                        categories: [
                          { "id": 1, "name": "Bakeware", "image": { "data": "http://...", "alt": "Bakeware image"} },
                          { "id": 2, "name": "Cookware" "image": { "data": "http://...", "alt": "Cookware image"} },
                          { "id": 3, "name": "Cutlery" "image": { "data": "http://...", "alt": "Cutlery image"} }
                        ]

                        ```


                        In this case, this Handlebars statement:


                        ```

                        {{pluck (limit categories 2) 'image.data'}}

                        ```


                        ...would return a comma-separated list of image URLs.


                        ---



                        ## <a name="array_std"></a> Standard Array Helpers


                        The following standard array helpers are supported on
                        the Stencil framework.


                        ### <a name="after"></a> {{after}}


                        Returns all of the items in an array after the specified
                        index. Opposite of [before](#before).


                        Given the array `['a', 'b', 'c']`:


                        #### Parameters


                        * `array` {Array}: Collection.

                        * `n` {Number}: Starting index (number of items to
                        exclude).

                        * `returns` {Array}: Array exluding `n` items.


                        #### Example


                        ```handlebars

                        {{after array 1}}

                        //=> '["c"]'

                        ```


                        ---


                        ## {{arrayify}}


                        Casts the given `value` to an array.


                        #### Parameters


                        * `value` {any}

                        * `returns` {Array}


                        #### {{arrayify}} Example


                        ```handlebars

                        {{arrayify "foo"}}

                        //=> '["foo"]'

                        ```

                        ---


                        ## <a name="before"></a> {{before}}


                        Returns all of the items in the collection before the
                        specified count. Opposite of [after](#after).


                        Given the array `['a', 'b', 'c']`:


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}

                        * `returns` {Array}: Array excluding items after the
                        given number.


                        #### {{before}} Example


                        ```handlebars

                        {{before array 2}}

                        //=> '["a", "b"]'

                        ```


                        ---


                        ## {{eachIndex}}


                        #### Parameters


                        * `array` {Array}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{eachIndex}} Example


                        ```handlebars

                        {{#eachIndex collection}}
                          {{item}} is {{index}}
                        {{/eachIndex}}

                        ```


                        ---


                        ### {{filter}}


                        Block helper that filters the given array. Renders the
                        block for values that evaluate to `true`; otherwise,
                        returns the inverse block.


                        #### Parameters


                        * `array` {Array}

                        * `value` {any}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{filter}} Example


                        ```handlebars

                        {{#filter array "foo"}}AAA{{else}}BBB{{/filter}}

                        //=> 'BBB

                        ```


                        ---


                        ## <a name="first"></a> {{first}}


                        Returns the first item, or first `n` items, of an array.


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}: Number of items to return, starting at
                        `0`.

                        * `returns` {Array}


                        #### {{first}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{first array 2}}

                        //=> '["a", "b"]'

                        ```


                        ---



                        ### {{forEach}}


                        Iterates over each item in an array, and exposes the
                        current item in the array as context to the inner block.
                        In addition to the current array item, the helper
                        exposes the following variables to the inner block:


                        * `index`

                        * `total`

                        * `isFirst`

                        * `isLast`


                        Also, `@index` is exposed as a private variable, and
                        additional private variables may be defined as hash
                        arguments.


                        #### Parameters


                        * `array` {Array}

                        * `returns` {String}


                        #### {{forEach}} Example


                        ```js

                        var accounts = [

                        {'name': 'John', 'email': 'john@example.com'},

                        {'name': 'Malcolm', 'email': 'malcolm@example.com'},

                        {'name': 'David', 'email': 'david@example.com'}

                        ];


                        // example usage

                        // {{#forEach accounts}}

                        //   <a href="mailto:{{ email }}" title="Send an email
                        to {{ name }}">

                        //     {{ name }}

                        //   </a>{{#unless isLast}}, {{/unless}}

                        // {{/forEach}}

                        ```


                        ---


                        ### {{inArray}}


                        Block helper that renders the block if an array has the
                        given `value`. Optionally, you can specify an inverse
                        block to render when the array does not have the given
                        value.


                        #### Parameters


                        * `array` {Array}

                        * `value` {any}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{inArray}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```handlebars

                        {{#inArray array "d"}}
                          foo
                        {{else}}
                          bar
                        {{/inArray}}

                        //=> 'bar'

                        ```


                        ---


                        ### {{isArray}}


                        Returns true if `value` is an es5 array.


                        #### Parameters


                        * `value` {any}: The value to test.

                        * `returns` {Boolean}


                        #### Example


                        ```handlebars

                        {{isArray "abc"}}

                        //=> 'false'

                        ```


                        ### <a name="last"></a> {{last}}


                        Returns the last item, or last `n` items, of an array.
                        Opposite of [first](#first).


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}: Number of items to return, starting with
                        the last item.

                        * `returns` {Array}


                        #### Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{last array 2}}

                        //=> '["d", "e"]'

                        ```


                        ### {{lengthEqual}}


                        Block helper that compares the length of the given array
                        to the number passed as the second argument. If the
                        array length is equal to the given `length`, the block
                        is returned. Otherwise, you have the option of returning
                        an inverse block.


                        #### Parameters


                        * `array` {Array}

                        * `length` {Number}

                        * `options` {Object}

                        * `returns` {String}


                        #### Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}

                        //=> 'BBB'

                        ```


                        ### {{map}}


                        Returns a new array, created by calling `function` on
                        each element of the given `array`.


                        #### Parameters


                        * `array` {Array}

                        * `fn` {Function}

                        * `returns` {String}


                        #### Example


                        Given an array `['a', 'b', 'c']`:


                        ```js

                        // register `double` as a helper

                        function double(str) {
                          return str + str;
                        }

                        // then used like this:

                        // {{map array double}}

                        //=> '["aa", "bb", "cc"]'

                        ```


                        ### {{some}}


                        Block helper that returns the block *if* the callback
                        returns true for some value in the given array.


                        #### Parameters


                        * `array` {Array}

                        * `cb` {Function}: Callback function.

                        * {Options}: Handlebars-provided options object.

                        * `returns` {Array}


                        #### Example


                        Given the array `[1, 'b', 3]`:


                        ```handlebars

                        {{#some array isString}}
                          Render me if the array has a string.
                        {{else}}
                          Render me if it doesn't.
                        {{/some}}

                        //=> 'Render me if the array has a string.'

                        ```


                        ### {{sort}}


                        Sorts the given `array`. If an array of objects is
                        passed, you may optionally pass (as the second argument)
                        a `key` to sort on. Alternatively, you may pass a
                        sorting function as the second argument.


                        #### Parameters


                        * `array` {Array}: The array to sort.

                        * `key` {String|Function}: The object key to sort by, or
                        a sorting function.


                        #### Example


                        Given an array `['b', 'a', 'c']`:



                        ```handlebars

                        {{sort array}}

                        //=> '["a", "b", "c"]'

                        ```


                        ### {{sortBy}}


                        Sorts an `array`. If an array of objects is passed, you
                        may optionally pass a `key` to sort on as the second
                        argument. You may alternatively pass a sorting function
                        as the second argument.


                        #### Parameters


                        * `array` {Array}: The array to sort.

                        * `props` {String|Function}: One or more properties to
                        sort by, or sorting functions to use.


                        #### {{sortBy}} Example


                        Given an array `[{a: 'zzz'}, {a: 'aaa'}]`:


                        ```handlebars

                        {{sortBy array "a"}}

                        //=> '[{"a":"aaa"}, {"a":"zzz"}]'

                        ```

                        ---


                        ### <a name="withAfter"></a> {{withAfter}}


                        Use the items in the array, _after_ the specified index,
                        as context inside a block. Opposite of
                        [withBefore](#withBefore).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {Array}


                        #### {{withAfter}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#withAfter array 3}}
                          {{this}}
                        {{/withAfter}}

                        //=> "de"

                        ```


                        ### <a name="withBefore"></a> {{withBefore}}


                        Use the items in the array, _before_ the specified
                        index, as context inside a block. Opposite of
                        [withAfter](#withAfter).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {Array}


                        #### {{withBefore}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#withBefore array 3}}
                          {{this}}
                        {{/withBefore}}

                        //=> 'ab'

                        ```


                        ### <a name="withFirst"></a> {{withFirst}}


                        Uses a collection's first item inside a Handlebars block
                        expression. Opposite of [withLast](#withLast).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{withFirst}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```handlebars

                        {{#withFirst array}}
                          {{this}}
                        {{/withFirst}}

                        //=> 'a'

                        ```
        - title: 'Stencil Object Model '
          route:
            path: /stencil-object-model-reference
          data:
            children:
              - title: Stencil Objects
                route:
                  path: /stencil-objects
                data:
                  children:
                    - title: Global Objects & Properties
                      route:
                        path: /global-objects
                      data:
                        children:
                          - title: 'Global Objects & Properties '
                            route:
                              path: /global-objects-and-properties-overview
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <h1>Global Objects and Properties
                                    Overview</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#global_global-objects\"></a>Global Objects and Properties Overview</li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >-
                                    ## Global Objects Overview 


                                    Global objects and properties are common
                                    components shared across the entire
                                    BigCommerce storefront. The
                                    objects/properties covered in this
                                    subsection are:


                                    *
                                    [Banner](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/banner)

                                    *
                                    [Breadcrumbs](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/breadcrumbs)

                                    *
                                    [Categories](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/)

                                    * [Currency
                                    Selector](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/breadcrumbs)

                                    * [Faceted
                                    Search](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/faceted-search)

                                    * [Featured
                                    Products](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/featured-products)

                                    *
                                    [Footer](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/footer)

                                    *
                                    [Carousel](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/carousel)

                                    * [HTML
                                    Head](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/html-head)

                                    *
                                    [Is_Ajax](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/is-ajax)

                                    *
                                    [Login](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/login)

                                    * [New
                                    Products](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/new-products)

                                    * [Page
                                    Content](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/page-content)

                                    *
                                    [Pages](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/pages)

                                    * [Page
                                    Type](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/page-type)

                                    *
                                    [Pagination](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/pagination)

                                    *
                                    [Search](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/search)

                                    *
                                    [Settings](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/settings)

                                    *
                                    [Sitemap](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/sitemap)

                                    * [Social
                                    Links](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/social-links)

                                    *
                                    [Template](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/template)

                                    * [Top
                                    Sellers](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/top-sellers)
                          - title: Banner
                            route:
                              path: /banner
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Banners</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Elements of marketing
                                    banners at page’s top and/or bottom


                                    <b>Handlebars Expressions:</b> `{{banner}}`,
                                    `{{{banner}}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>banners</td>
                                        <td>Blocks of static HTML content to define banners</td>
                                      </tr>
                                      <tr>
                                        <td>top</td>
                                        <td>Array of HTML content/strings, for custom top-banner content; banners are populated from the BigCommerce control panel</td>
                                      </tr>
                                      <tr>
                                        <td>bottom</td>
                                        <td>Array of HTML content/strings, for custom bottom-banner content; banners are populated from the BigCommerce control panel</td>
                                      </tr>
                                    </table>
                          - title: Breadcrumbs
                            route:
                              path: /breadcrumbs
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Breadcrumbs</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Defines a page's
                                    breadcrumbs – available on virtually all
                                    pages that have a breadcrumb trail


                                    <b>Handlebars Expression:</b>
                                    `{{breadcrumbs}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Displayed name of this breadcrumb element</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of this breadcrumb element</td>
                                      </tr>
                                    </table>
                          - title: Categories
                            route:
                              path: /categories
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Categories</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A list of all product
                                    categories shown in the current page
                                    context; default sorting is by category id,
                                    from lowest to highest


                                    <b>Handlebars Expression:</b>
                                    `{{categories}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID of the top-level category listed</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the top-level category</td>
                                      </tr>
                                      <tr>
                                        <td>description</td>
                                        <td>Description of the top-level category (optional - when requested in front matter)</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL to the category page</td>
                                      </tr>
                                      <tr>
                                        <td>count</td>
                                        <td>Number of products in this category</td>
                                      </tr>
                                      <tr>
                                        <td>children</td>
                                        <td>List of child categories for this top-level category</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID of the child category</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the child category</td>
                                      </tr>
                                        <tr>
                                        <td>description</td>
                                        <td>Description of the child category (optional - when requested in front matter)</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the child category</td>
                                      </tr>
                                      <tr>
                                        <td>count</td>
                                        <td>Number of products in this child category</td>
                                      </tr>
                                    </table>
                          - title: Currency Selector
                            route:
                              path: /currency-selector
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Currency Selector</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A list of all supported
                                    currencies, and the currency that is
                                    actively in use in the storefront


                                    <b>Handlebars Expression:</b>
                                    `{{currency_selector}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>active_currency_id</td>
                                        <td>ID of the currency actively in use in the storefront</td>
                                      </tr>
                                      <tr>
                                        <td>active_currency_flag</td>
                                        <td>Country flag used to represent the active currency</td>
                                      </tr>
                                      <tr>
                                        <td>active_currency_name</td>
                                        <td>Name of the active currency</td>
                                      </tr>
                                      <tr>
                                        <td>active_currency_code</td>
                                        <td>Code for the active currency</td>
                                      </tr>
                                      <tr>
                                        <td>currencies</td>
                                        <td>List of all the currencies supported for this storefront</td>
                                      </tr>
                                      <tr>
                                        <td>is_active</td>
                                        <td>Boolean that indicates whether this currency is active for use in the storefront</td>
                                      </tr>
                                      <tr>
                                        <td>switch_url</td>
                                        <td>The URL to invoke a switch to this currency</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID of the currency</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the currency</td>
                                      </tr>
                                      <tr>
                                        <td>flag</td>
                                        <td>Country flag used to visually represent the currency</td>
                                      </tr>
                                    </table>
                          - title: Faceted Search
                            route:
                              path: /faceted-search
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Faceted Search</h1>
                                - type: text
                                  data: "<b>Description:</b> Faceted-search object for searching globally, by category, or by brand\n\n<b>Handlebars Expression:</b> `{{faceted_search}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>facets</td>\n    <td>List of all search facets available</td>\n  </tr>\n  <tr>\n\t\t<td><b>selected</b></td>\n\t\t<td>Container for the selected search facets (<i>remove_all_url, items</i>)</td>\n  </tr>\n  <tr>\n    <td><i>remove_all_url<i></td>\n    <td>URL to remove all selected search restrictions</td>\n  </tr>\n  <tr>\n    <td><i>items<i></td>\n    <td>Currently enabled search facets</td>\n  </tr>\n</table>"
                          - title: Featured Products
                            route:
                              path: /featured-products
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Featured Products</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A list of all the
                                    featured products for the BigCommerce
                                    storefront


                                    <b>Handlebars Expression:</b>
                                    `{{products.featured}}`


                                    <b>Object Properties:</b> References the
                                    product card model.


                                    <b> Usage Example: </b>


                                    From Stencil's base Cornerstone theme, the
                                    example below displays the global
                                    `{{products.featured}}` object on the
                                    `<theme-name>/templates/pages/home.html`
                                    page template.


                                    First, to declare the object, the following
                                    front mattermust be placed at the top of
                                    this template. This particular declaration
                                    also limits the number of featured products
                                    to be displayed:


                                    ```

                                    ---

                                    products:
                                        [...]
                                        featured:
                                            limit: {{theme_settings.homepage_featured_products_count}}
                                    ---

                                    ```

                                    The `homepage_featured_products_count` limit
                                    is one of two relevant variables defined in
                                    Cornerstone's `config.json` file, here:


                                    ```
                                      "settings": {
                                        [...]
                                        "homepage_featured_products_count": 8,
                                        [...]
                                        "homepage_featured_products_column_count": 4,
                                        [...]    
                                    ```


                                    In the body of the `home.html` template, the
                                    following Handlebars conditional statement
                                    displays the featured-products object
                                    declared above:


                                    ```
                                        {{#if products.featured}}
                                            {{> components/products/featured products=products.featured columns=theme_settings.homepage_featured_products_column_count}}
                                        {{/if}}
                                    ```


                                    This statement formats the featured-products
                                    display according to the
                                    `homepage_featured_products_column_count`
                                    variable, also defined in the `config.json`
                                    excerpt above.
                          - title: Footer
                            route:
                              path: /footer
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Footer</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b>The footer content for
                                    each storefront page


                                    <b>Handlebars Expression:</b> `{{footer}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>sitemap_url</td>
                                        <td>The URL to the sitemap, based on store’s SEO setting</td>
                                      </tr>
                                      <tr>
                                        <td>scripts</td>
                                        <td>Scripts to be loaded after the HTML has loaded; includes performance metrics</td>
                                      </tr>
                                    </table>
                          - title: Carousel
                            route:
                              path: /carousel
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Carousel</h1>
                                - type: text
                                  data: "<b>Description:</b> A list of images, text, and style assets for a storefront’s image slide show\n\n<b>Handlebars Expression: </b> `{{carousel}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  \n  <tr>\n    <td>swap_frequency</td>\n    <td>Indicates how often (in seconds) the slides will change; the value must be between 1 and 90,000 seconds</td>\n  </tr>\n  \n  <tr>\n\t\t<td><b>slides</b></td>\n\t\t<td>Object containing properties for each slide in the slideshow (<i>image, alt_text, url, heading, heading_color, text, text_color, button_text, button_text_color</i>)</td>\n  </tr>\n  \n  <tr>\n    <td><i>image</i></td>\n    <td>Path to the image file used on this slide</td>\n  </tr>\n  <tr>\n\t\t<td><i>alt_text</i></td>\n    <td>Alt text for the image</td>\n  </tr>\n  <tr>\n\t\t<td><i>url</i></td>\n    <td>URL to which the image will link</td>\n  </tr>\n  <tr>\n    <td>heading</td>\n    <td>Heading message defined by the merchant</td>\n  </tr>\n  <tr>\n\t\t<td><i>heading_color</i></td>\n    <td>Color of the heading text</td>\n  </tr>\n  <tr>\n\t\t<td><i>text</i></td>\n    <td>Subheading defined by the merchant</td>\n  </tr>\n  <tr>\n\t\t<td><i>text_color</i></td>\n    <td>Color of the subheading text</td>\n  </tr>\n  <tr>\n\t\t<td><i>button_text</i></td>\n    <td>Text displayed on a call-to-action button defined by the merchant</td>\n  </tr>\n  <tr>\n\t\t<td><i>button_text_color</i></td>\n    <td>Color of the button</td>\n  </tr>\n</table>"
                          - title: HTML Head
                            route:
                              path: /html-head
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description:</b> Data to be included in
                                    the HTML `<head>` element<br>


                                    <b>Handlebars Expression:</b>`{{head}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>character_set</td>
                                        <td>The character set to specify</td>
                                      </tr>
                                      <tr>
                                        <td>meta_tags</td>
                                        <td>Meta tags to improve store SEO</td>
                                      </tr>
                                      <tr>
                                        <td>title</td>
                                        <td>Current page’s title</td>
                                      </tr>
                                      <tr>
                                        <td>stylesheets</td>
                                        <td>CSS files to be included</td>
                                      </tr>
                                      <tr>
                                        <td>scripts</td>
                                        <td>Scripts to be loaded in the &lt;head&gt; tag</td>
                                      </tr>
                                      <tr>
                                        <td>favicon</td>
                                        <td>The store’s favicon (Favorite icon)</td>
                                      </tr>
                                      <tr>
                                        <td>rsslinks</td>
                                        <td>RSS feeds to improve SEO</td>
                                      </tr>
                                    </table>
                          - title: Is_ajax
                            route:
                              path: /is-ajax
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Is_Ajax</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Boolean; returns `true`
                                    if the current executing request is an Ajax
                                    request


                                    <b>Handlebars Expression:</b> `{{is_ajax}}`
                          - title: Login
                            route:
                              path: /login
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Login</h1>
                                - type: text
                                  data: >-
                                    <b>Description: </b>Object to handle
                                    customer login details<br>


                                    <b>Handlebars Expression:</b>
                                    `{{forms.login}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>came_from_checkout</td>
                                        <td>Boolean indicating whether the customer submitted login information at checkout</td>
                                      </tr>
                                      <tr>
                                        <td>error</td>
                                        <td>BC-defined message to display when customer’s login fails</td>
                                      </tr>
                                    </table>
                          - title: 'New Products '
                            route:
                              path: /new-products
                            data:
                              blocks:
                                - type: html
                                  data: <h1>New Products</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A list of new products
                                    for the BigCommerce storefront


                                    <b>Handlebars
                                    Expression:</b>`{{products.new}}`


                                    <b>Object Properties:</b> References the
                                    product card model.


                                    <b> Usage Example:</b>


                                    To access the global `{{products.new}}`
                                    object on your page, you must first use
                                    front matter to declare the object at the
                                    top of your page template. For example, you
                                    would place this front-matter declaration at
                                    the top of your template file:


                                    ```

                                    ---

                                    products:
                                        new:
                                    ---

                                    ```
                          - title: 'Page Content '
                            route:
                              path: /page-content
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Page Content</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Defines elements of
                                    merchant’s store page


                                    <b>Handlebars Expression:</b> `{{page}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>title</td>
                                        <td>Page title, to be used as the HTML title tag</td>
                                      </tr>
                                      <tr>
                                        <td>description</td>
                                        <td>Description for the page, to be used as the HTML `meta > description` tag</td>
                                      </tr>
                                      <tr>
                                        <td>content</td>
                                        <td >HTML content of the page</td>
                                      </tr>
                                      <tr>
                                        <td>sub_pages</td>
                                        <td>Array of child pages</td>
                                      </tr>
                                      <tr>
                                        <td>title</td>
                                        <td>Title of this child page</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of this child page</td>
                                      </tr>
                                    </table>
                          - title: Pages
                            route:
                              path: /pages
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Pages</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A list of all web
                                    content pages for the BigCommerce
                                    storefront<br>


                                    <b>Handlebars Expression:</b> `{{pages}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the page</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the page</td>
                                      </tr>
                                      <tr>
                                        <td>children</td>
                                        <td>List of child pages for this page</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the child page</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the child page</td>
                                      </tr>
                                    </table>
                          - title: Page Type Property
                            route:
                              path: /page-type-property
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Page Type Property</h1>
                                - type: text
                                  data: >+
                                    <b>Description:</b> A string representing
                                    the type of page currently displayed. <br>


                                    <b>Handlebars Expression:</b>
                                    `{{page_type}}`


                                    <b>Values:</b> The four most-commonly-used
                                    values for `{{page_type}}` are:


                                    * default (for a home page)

                                    * product (for a product page)

                                    * category (for a category page)

                                    * page (for a Web [static] page)


                                    All possible values for `{{page_type}}` are:


                                    | account | shippingaddressform |
                                    account_new_return | 

                                    |---|---|---|

                                    | account_addressbook | account_downloaditem
                                    | account_inbox | 

                                    | editaccount | account_orderstatus |
                                    account_orders | 

                                    | invoice_print | account_order |
                                    account_recentitems | 

                                    | account_saved_return | account_returns |
                                    wishlists | 

                                    | add-wishlist | wishlist |
                                    createaccount_thanks | 

                                    | createaccount | forgotpassword | login | 

                                    | getnewpassword | blog | blog_post | 

                                    | brand | brands | cart | 

                                    | category | compare | 403 | 

                                    | 404 | error | giftcertificates_balance | 

                                    | giftcertificates | giftcertificates_redeem
                                    | default | 

                                    | page | page_contact_form | product | 

                                    | rss | search | sitemap | 

                                    | newsletter_subscribe | unsubscribe |
                                    hibernation | 

                                    | maintenance |

                          - title: Pagination
                            route:
                              path: /pagination
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Pagination</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Defines pagination of
                                    storefront pages


                                    <b>Handlebars Expression:</b>
                                    `{{pagination}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>next</td>
                                        <td>Link to next page, if any</td>
                                      </tr>
                                      <tr>
                                        <td>previous</td>
                                        <td>Link to previous page, if any</td>
                                      </tr>
                                      <tr>
                                        <td>sort</td>
                                        <td>Field to sort by</td>
                                      </tr>
                                      <tr>
                                        <td>current</td>
                                        <td>Number representing which page (in the current collection) the customer is viewing</td>
                                      </tr>
                                      <tr>
                                        <td>total</td>
                                        <td>Total number of results, across all pages</td>
                                      </tr>
                                      <tr>
                                        <td>links</td>
                                        <td>Array of pages that surround the current page; displayed as a set of links, dynamically sized based on the current page number</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL to this page of results</td>
                                      </tr>
                                      <tr>
                                        <td>number</td>
                                        <td>The page number of this link, based on an index starting at 1</td>
                                      </tr>
                                    </table>
                          - title: 'Search '
                            route:
                              path: /search
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Search</h1>
                                - type: text
                                  data: >
                                    <b>Description:</b> Defines search
                                    parameters for the merchant’s site<br>


                                    <b>Handlebars Expression:</b>
                                    `{{forms.search}}`


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td class="">Property</td>
                                        <td class="">Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">query</td>
                                        <td class="">Active search query, if available</td>
                                      </tr>

                                      <tr>
                                        <td class="">section</td>
                                        <td class="">Active search-results section: either content or product</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">content_url</td>
                                        <td class="">URL to the content section</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">product_url</td>
                                        <td class="">URL to the product section</td>
                                      </tr>
                                      
                                      
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Brand name</td>
                                      </tr>
                                      <tr>
                                        <td class="">suggested_query</td>
                                        <td class="">An alternative query – related to the current query – that can be offered to substitute for misspelled entries</td>
                                      </tr>
                                      <tr>
                                        <td class="">has_suggestions</td>
                                        <td class="">Boolean – true if there is at least one of brand results, category results, or a (non-null) suggested_query</td>
                                      </tr>
                                      <tr>
                                        <td class="">brand_results</td>
                                        <td class="">Array of brands that match the search query; default sorting is by brand id, from lowest to highest</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL of the brand</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Displayed name for the brand</td>
                                      </tr>
                                      <tr>
                                        <td class="">category_results</td>
                                        <td class="">An array of category paths matching the search query; used to populate category suggestions</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL of the category</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Displayed name for the category</td>
                                      </tr>
                                      <tr>
                                        <td class="">values</td>
                                        <td class="">Values of the submitted search form</td>
                                      </tr>
                                      <tr>
                                        <td class="">brand</td>
                                        <td class="">Any brand ID that customer has selected from drop-down list</td>
                                      </tr>
                                      <tr>
                                        <td class="">price_from</td>
                                        <td class="">Any minimum price the customer has specified</td>
                                      </tr>
                                      <tr>
                                        <td class="">price_to</td>
                                        <td class="">Any maximum price the customer has specified</td>
                                      </tr>
                                      <tr>
                                        <td class="">featured_products</td>
                                        <td class="">Whether customer has chosen to view featured products: null = no preference; 1 = only featured products; 2 = only non-featured products</td>
                                      </tr>
                                      <tr>
                                        <td class="">free_shipping</td>
                                        <td class="">Value indicating customer’s preference for free shipping within search results: null = no preference; 1 = free shipping only; 2 = paid shipping only</td>
                                      </tr>
                                      <tr>
                                        <td class="">result_count</td>
                                        <td class="">Combined number of returned results for product and content search</td>
                                      </tr>
                                      <tr>
                                        <td class=""><a name="Stencil-SearchCatOpt-ref"></a>category_options</td>
                                        <td class="">Array of options to present to customer as search-by-category fields</td>
                                      </tr>
                                      <tr>
                                        <td class="">id</td>
                                        <td class="">Category ID</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Displayed name of the category</td>
                                      </tr>
                                      <tr>
                                        <td class="">state</td>
                                        <td class="">If category contains children, and customer selects a child category: Whether that category’s display will default to closed (collapsed) or opened (expanded)</td>
                                      </tr>
                                      <tr>
                                        <td class="">children</td>
                                        <td class="">Array of objects representing a child category; recursively replicates the structure of its parent</td>
                                      </tr>
                                      <tr>
                                        <td class="">content_results</td>
                                        <td class="">Search results across blog posts and storefront pages (not products or categories)</td>
                                      </tr>
                                      <tr>
                                        <td class="">title</td>
                                        <td class="">Title of the result (title embedded in blog post or page)</td>
                                      </tr>
                                      <tr>
                                        <td class="">content</td>
                                        <td class="">Summary of text from the blog post or page (first 200 characters)</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL to the result</td>
                                      </tr>
                                      <tr>
                                        <td class="">type</td>
                                        <td class="">Either post (for blog posts) or page (for storefront pages)</td>
                                      </tr>
                                      <tr>
                                        <td class="">product_results</td>
                                        <td class="">Results of customer’s last search by product</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">products</span></td>
                                        <td class="">List of search results for a product; points to <a href="/docs/common-product-card-model">product card model</a></td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">show_compare</span></td>
                                        <td class="">Boolean corresponding to merchant’s control-panel selection whether or not to enable product comparisons </td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">faceted_search_enabled</span></td>
                                        <td class="">Boolean that defines whether product-filtering search is enabled for the store</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">facets</span></td>
                                        <td class="">All available search filters</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">pagination</span></td>
                                        <td class="">References pagination model</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">selected</span></td>
                                        <td class="">Currently selected filters</td>
                                      </tr>
                                    </table>
                          - title: Settings
                            route:
                              path: /settings
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Settings</h1>
                                - type: text
                                  data: "<b>Description:</b> Common settings shared across every BigCommerce storefront<br>\n\n<b>Handlebars Expression:</b> `{{settings}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>account_creation_enabled</td>\n    <td>Site-wide boolean value that indicates whether to allow customers to create accounts</td>\n  </tr>\n  <tr>\n    <td>show_product_rating</td>\n    <td>Site-wide boolean value that indicates whether to display product ratings (in numeric or star format) to visitors</td>\n  </tr>\n  <tr>\n    <td>show_product_reviews</td>\n    <td>Site-wide boolean value that indicates whether to display full-text product reviews to visitors</td>\n  </tr>\n  <tr>\n    <td>show_newsletter_box</td>\n    <td>Site-wide boolean value that indicates whether to display a mailing-list invite to visitors</td>\n  </tr>\n  <tr>\n    <td> gift_certificates_enabled</td>\n    <td>Site-wide boolean value that indicates whether to enable the gift certificate system for this store</td>\n  </tr>\n  \n  <tr>\n    <td> blog_enabled</td>\n    <td>Site-wide boolean value that indicates whether the blog is visible for this store</td>\n  </tr>\n  \n  <tr>\n    <td>show_wishlist</td>\n    <td>Site-wide boolean value that indicates whether to allow customers to create wishlists</td>\n  </tr>\n  <tr>\n    <td>base_url</td>\n    <td>The normal shop URL</td>\n  </tr>\n  <tr>\n    <td>client_ip_address</td>\n    <td>IP address of the customer browsing the store</td>\n  </tr>\n  <tr>\n    <td>secure_base_url</td>\n    <td>The SSL-enabled, secure, shop URL</td>\n  </tr>\n  <tr>\n    <td>address</td>\n    <td>Store’s complete physical address, as entered by merchant in the Store Profile</td>\n  </tr>\n  <tr>\n    <td>store_name</td>\n    <td>Name of the BigCommerce store</td>\n  </tr>\n  \n  <tr>\n    <td>store_logo</td>\n    <td>The store’s logo</td>\n  </tr>\n  <tr>\n    <td>title</span></td>\n    <td>Title for the logo - the text configured in the control panel under <code>Storefront Design</code> > <code>Design Options</code> > <code>Logo</code></td>\n  </tr>\n  <tr>\n    <td>Image</span></td>\n    <td>Optional image file, as a Stencil image object</td>\n  </tr>\n\t\n  <tr>\n    <td>privacy_cookie</td>\n    <td>If enabled, a string containing merchant-customizable text for (European Union&ndash;required) cookie-setting notification; if disabled, a boolean with a value of <code>false</code></td>\n  </tr>\n\t\n  <tr>\n    <td>urls</td>\n    <td>Global URLs that the template can access – for example, the template could link to the cart page using <code>{{urls.cart}}</code></td>\n  </tr>\n  <tr>\n    <td>home</span></td>\n    <td>Store’s home page</td>\n  </tr>\n  <tr>\n    <td>account</td>\n    <td>Collection of (customer and storefront) account-related URLs:</td>\n  </tr>\n  <tr>\n    <td>index</td>\n    <td>Account index page</td>\n  </tr>\n  <tr>\n    <td>orders</td>\n    <td>Collection of orders-related URLs:</td>\n  </tr>\n  <tr>\n    <td>all</td>\n    <td>List of all orders</td>\n  </tr>\n  <tr>\n    <td>save_new_return</td>\n    <td>URL to submit a New Return form</td>\n  </tr>\n  <tr>\n    <td>update_action</td>\n    <td>URL to submit an Edit Account form</td>\n  </tr>\n  <tr>\n    <td>returns</td>\n    <td>List of returns</td>\n  </tr>\n  <tr>\n    <td>addresses</td>\n    <td>List of addresses; default sorting is by address id, from lowest to highest</td>\n  </tr>\n  <tr>\n    <td>inbox</td>\n    <td>List of messages in customer’s inbox</td>\n  </tr>\n  <tr>\n    <td>send_message</td>\n    <td>URL to submit a message to the merchant</td>\n  </tr>\n  <tr>\n    <td>add_address</td>\n    <td>Link to Add Address form</td>\n  </tr>\n  <tr>\n    <td>wishlists</td>\n    <td>Collection of wishlist-related URLs:</td>\n  </tr>\n  <tr>\n    <td>add</td>\n    <td>URL to the Add Wishlist form</td>\n  </tr>\n  <tr>\n    <td>edit</td>\n    <td>URL to the Edit Wishlist form</td>\n  </tr>\n  <tr>\n    <td>delete</td>\n    <td>URL to delete a wishlist</td>\n  </tr>\n  <tr>\n    <td>all</td>\n    <td>URL to view all wishlists</td>\n  </tr>\n  <tr>\n    <td>details</td>\n    <td>URL to the Edit Account form</td>\n  </tr>\n  <tr>\n    <td>recent_items</td>\n    <td>URL to a list of recently viewed items</td>\n  </tr>\n  <tr>\n    <td>brands</td>\n    <td>URL to view all brands; default sorting is by brand id, from lowest to highest</td>\n  </tr>\n  <tr>\n\t</table>\n\t<table>\n\t<td><b>gift_certificate</b></td>\n\t<td>Collection of gift-certificate–related URLs (<i>purchase, redeem, and balance</i>)</td>\n  </tr>\n  <tr>\n\t<td><i>purchase</i></td>\n\t<td><i>URL to a form for purchasing a gift certificate</i></td>\n  </tr>\n  <tr>\n\t<td><i>redeem</i></td>\n\t<td><i>URL to view redemption information</i></td>\n  </tr>\n  <tr>\n\t<td><i>balance</i></td>\n    <td>URL to check the balance of a gift certificate</td>\n  </tr>\n\t</table>\n\t<table>\n  <tr>\n    <td>auth</td>\n    <td>Collection of authorization-related URLs:</td>\n  </tr>\n  <tr>\n    <td>login</td>\n    <td>URL to the login form</td>\n  </tr>\n  <tr>\n    <td>check_login</td>\n    <td>URL to which to submit the login form</td>\n  </tr>\n  <tr>\n    <td>create_account</td>\n    <td>URL to the Create Account form page</td>\n  </tr>\n  <tr>\n    <td>save_new_account</td>\n    <td>URL to which to submit the Create Account form</td>\n  </tr>\n  <tr>\n    <td>forgot_password</td>\n    <td>URL to the Forgot Password form</td>\n  </tr>\n  <tr>\n    <td>send_password_email</td>\n    <td>Submission URL for the Forgot Password form</td>\n  </tr>\n  <tr>\n    <td>save_new_password</td>\n    <td>Submission URL for saving a new password</td>\n  </tr>\n  <tr>\n    <td>logout</td>\n    <td>URL for customer to log out of their account</td>\n  </tr>\n  <tr>\n    <td>product</td>\n    <td>Collection of product-related URLs</td>\n  </tr>\n  <tr>\n    <td>post_review</td>\n    <td>URL to submit a Write Review form </td>\n  </tr>\n  <tr>\n    <td>cart</td>\n    <td>URL to the cart page</td>\n  </tr>\n  <tr>\n    <td>checkout</td>\n    <td>Collection of checkout related URLs</td>\n  </tr>\n  <tr>\n    <td>single_address</td>\n    <td>URL for the customer to check out with a single shipping address</td>\n  </tr>\n  <tr>\n    <td>multiple_address</td>\n    <td>URL for the customer to check out with multiple shipping addresses </td>\n  </tr>\n  <tr>\n    <td>rss</td>\n    <td>Collection of RSS-related URLs:</td>\n  </tr>\n  <tr>\n    <td>products</td>\n    <td>Collection of product-feed–related URLs:</td>\n  </tr>\n  <tr>\n    <td>new</td>\n    <td>RSS feed of new products</td>\n  </tr>\n  <tr>\n    <td>new_atom</td>\n    <td>RSS feed of new products, in Atom format</td>\n  </tr>\n  <tr>\n    <td>popular</td>\n    <td>RSS feed of popular products</td>\n  </tr>\n  <tr>\n    <td>popular_atom</td>\n    <td>RSS feed of popular products, in Atom format</td>\n  </tr>\n  <tr>\n    <td>featured</td>\n    <td>RSS feed of featured products</td>\n  </tr>\n  <tr>\n    <td>featured_atom</td>\n    <td>RSS feed of featured products, in Atom format</td>\n  </tr>\n  <tr>\n    <td>search</td>\n    <td>RSS feed of products matching the active search query</td>\n  </tr>\n  <tr>\n    <td>search_atom</td>\n    <td>RSS feed of products matching the active search query, in Atom format</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> blog</td>\n    <td>RSS feed of recent blog posts</td>\n  </tr>\n  <tr>\n    <td>blog_atom</td>\n    <td>RSS feed of recent blog posts, in Atom format</td>\n  </tr>\n  <tr>\n    <td>contact_us_submit</td>\n    <td>URL to submit the Contact Us form</td>\n  </tr>\n  <tr>\n    <td>search</td>\n    <td>URL to submit a search request</td>\n  </tr>\n  <tr>\n    <td>compare</td>\n    <td>A string String containing the URL to the products comparison page</td>\n  </tr>\n  <tr>\n    <td>sitemap</td>\n    <td>URL to the sitemap</td>\n  </tr>\n  <tr>\n    <td>subscribe</td>\n    <td>Collection of subscription-related URLs</td>\n  </tr>\n  <tr>\n    <td>action</td>\n    <td>URL to which the the newsletter subscription will be submitted</td>\n  </tr>\n  <tr>\n    <td>money</td>\n    <td>List of child items that define the store’s default currency formatting</td>\n  </tr>\n  <tr>\n    <td>currency_token</td>\n    <td>Symbol for the currency</td>\n  </tr>\n  <tr>\n    <td>currency_location</td>\n    <td>Whether currency symbol appears at left or right of the quantity</td>\n  </tr>\n  <tr>\n    <td>decimal_token</td>\n    <td>Symbol for decimal separator</td>\n  </tr>\n  <tr>\n    <td>decimal_places</td>\n    <td>Number of decimal places to display</td>\n  </tr>\n  <tr>\n    <td>thousands_token</td>\n    <td>Symbol for thousands separator</td>\n  </tr>\n  <tr>\n    <td>returns_enabled</td>\n    <td>Boolean that indicates whether the control-panel setting for the returns system is enabled</td>\n  </tr>\n  <tr>\n    <td>tax_label</td>\n    <td>Defines the Tax Label (VAT, Sales Tax, etc.) that a merchant can set in the control panel’s Settings > Tax page for display to customers</td>\n  </tr>\n  \n  <tr>\n    <td>add_this</td>\n    <td>Object that defines links for the AddThis social sharing component</td>\n  </tr>  \n  <tr>\n    <td>buttons</td>\n    <td>Array of buttons to display for AddThis social sharing</td>\n  </tr>\n  <tr>\n    <td>service</td>\n    <td>String containing the name of this button's social-media service (<code>facebook</code>, <code>email</code>, <code>print</code>, <code>twitter</code>, <code>linkedin</code>, <code>google</code>, etc.)</td>\n  </tr>\n  <tr>\n    <td>annotation</td>\n    <td>String containing HTML attributes associated with this button</td>\n  </tr>\n    \n  <tr>\n    <td>maintenance</td>\n    <td>Object that manages information about the store when in maintenance (offline) mode</td>\n  </tr>  \n  <tr>\n    <td>header</td>\n    <td>If store is in maintenance mode, string containing header text for the \"Down for Maintenance\" window displayed to visitors; otherwise, <code>null</code></td>\n  </tr>\n  <tr>\n    <td>message</td>\n    <td>If store is in maintenance mode, string containing merchant-customizable body text (and optionally, HTML) for the \"Down for Maintenance\" window displayed to visitors; otherwise, <code>null</code></td>\n  </tr>\n  <tr>\n    <td>notice</td>\n    <td>If store is in maintenance mode, one of three strings identifying the store's status, and generating a corresponding text notice to merchants about how to proceed: <code>AdminPrelaunchNotice</code> for preview stores, <code>AdminMaintenanceNotice</code> for active stores taken down for maintenance, or <code>AdminHibernationModeNotice</code> for deactivated stores; otherwise, <code>null</code>\n  </tr>\n    \n  <tr>\n    <td>phone_number</td>\n    <td>The contact phone number for the store</td>\n  </tr>  \n\n  <tr>\n    <td>rss_item_limit</td>\n    <td>An integer that sets a limit on the number of RSS items to display</td>\n  </tr>\n\n  <tr>\n    <td>password_requirements</td>\n    <td>Collection of properties representing BigCommerce requirements for customer-account passwords:</td>\n  </tr>\n  <tr>\n    <td>alpha</td>\n    <td>Regular expression representing required/acceptable alphabetic characters</td>\n  </tr>\n  <tr>\n    <td>numeric</td>\n    <td>Regular expression representing required/acceptable numeric characters</td>\n  </tr>\n  <tr>\n    <td>minlength</td>\n    <td>Integer representing minimum acceptable password length</td>\n  </tr>\n  <tr>\n    <td>error</td>\n    <td>String that passes a standard error message for noncompliant passwords</td>\n  </tr>\n  \n  <tr>\n    <td>measurements</td>\n    <td>Collection of units-of-measure definitions, to be used when displaying product details:</td>\n  </tr>\n  <tr>\n    <td>length</span></td>\n    <td>Units of measure for product length</td>\n  </tr>\n  <tr>\n    <td>weight</span></td>\n    <td>Units of measure for product weight</td>\n  </tr>\n\n  <tr>\n    <td>[Time and date settings]</td>\n    <td>[The four settings below are configured in the control panel under <NOBR><span class=\"inline-code\">Store Setup> <code>Store Settings</code> > <code>Language & Date</code> > <code>Date Settings</code>. Date formats follow <a href=\"http://us3.php.net/manual/en/function.date.php\">php conventions.</a></td>\n  </tr>\n\n  <tr>\n    <td>store_time_zone</td>\n\t\t<td>Store's time zone, as selected in the control panel's <code>Your Timezone</code> drop-down list</td>\n  </tr>\n\n  <tr>\n    <td>store_dst_correction</td>\n    <td>Whether or not this time zone observes Daylight Saving Time (boolean), as set by the control panel's <code>Enable DST Correction</code> check box</td>\n  </tr>\n\n  <tr>\n    <td>display_date_format</td>\n    <td>Brief display format/pattern for dates, as configured in the control panel's <code>Display Date Format</code> field</td>\n  </tr>\n\n  <tr>\n    <td>extended_display_date_format</td>\n    <td>Extended display format/pattern for dates, as configured in the control panel's <code>Extended Display Date Format</code> field</td>\n  </tr>   \n</table>"
                          - title: Sitemap
                            route:
                              path: /sitemap
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Sitemap</h1>
                                - type: text
                                  data: "<b>Description:</b>A list of all sitemap properties for this BigCommerce storefront: pages, categories, and brands.<br>\n\n<b>Handlebars Expression:</b> `{{sitemap}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>subsection_url</td>\n    <td>URL to subsection content (pages, categories, brands) of the sitemap</td>\n  </tr>\n  <tr>\n    <td>label</td>\n    <td>Subsection title (pages, categories, brands)</td>\n  </tr>\n  <tr>\n\t\t<td><b>body</b></td>\n    <td>List of all sitemap subsections (url, label, children)</td>\n  </tr>\n  <tr>\n\t\t<td><i>url</i></td>\n\t\t<td><i>URL to the page, category, or brand</i></td>\n  </tr>\n  <tr>\n\t\t<td><i>label</i></td>\n    <td>Label of the page, category, or brand</td>\n  </tr>\n  <tr>\n\t\t<td><i>children</i></td>\n    <td>Nested list of children within pages or categories; will be null for brands</td>\n  </tr>\n  <tr>\n\t\t<td><i>url</i></td>\n    <td>URL to the child page or category</td>\n  </tr>\n  <tr>\n\t\t<td><i>label</i></td>\n    <td>Label for the child page or category</td>\n  </tr>\n</table>"
                          - title: Social Links
                            route:
                              path: /social-links
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Social Links</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Array of all
                                    social-media site links for the
                                    storefront<br>


                                    <b>Handlebars Expression:</b>
                                    `{{social_media}}`


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Internal name of this social-media platform (e.g., "googleplus")</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL to point to, set by merchant in control panel (https://www.facebook.com/BigCommerce, etc.)</td>
                                      </tr>
                                      <tr>
                                        <td>position</td>
                                        <td>Display sort order for this platform within the social-media list</td>
                                      </tr>
                                      <tr>
                                        <td>display_name</td>
                                        <td>Displayed/formatted name of this social-media platform (e.g., “Google+”) </td>
                                      </tr>
                                    </table>
                          - title: Template Property
                            route:
                              path: /template-property
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Template Property</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> A string containing the
                                    name of the root template currently being
                                    rendered in the page context. <br>


                                    <b>Handlebars Expression:</b> `{{template}}`


                                    <b>Values:</b> Values will reflect each
                                    theme's specific directory structure.
                                    Possible values include:
                          - title: Top Sellers
                            route:
                              path: /top-sellers
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Top Sellers</h1>
                                - type: text
                                  data: >-
                                    <b>Description:</b> Object to display a
                                    sidebar of top-selling products<br>


                                    <b>Handlebars Expression:</b>
                                    `{{products.top_sellers}}`


                                    <b>Object Properties:</b> References the
                                    product card model</a>.


                                    <b> Usage Example: </b> <br>


                                    To access the
                                    global`{{products.top_sellers}}` object on
                                    your page, you must first use front matter
                                    to declare the object at the top of your
                                    page template. For example, you would place
                                    this front-matter declaration at the top of
                                    your template file:


                                    ```

                                    ---

                                    products:
                                        top_sellers:
                                    ---

                                    ```
                    - title: Common Objects
                      route:
                        path: /common-objects
                      data:
                        children:
                          - title: Common Objects
                            route:
                              path: /new-subpage
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Common Objects Overview</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#common_common-objects\"></a>Common Objects Overview</li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >
                                    Certain Stencil objects can be accessed
                                    through multiple other Stencil objects. For
                                    example, the image object is exposed through
                                    the Category, Product, Product Options, and
                                    other objects. Its structure is consistent
                                    for all objects/properties that access it. 


                                    This consistent behavior is true for each of
                                    the common objects documented in the
                                    following subsection: 

                                     * [Catalog Price](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price)
                                     * [Price](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price)
                                     * [Price Range](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price-range)
                                     * [Stencil Image](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image)
                                     * [Common Product Card Model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model)
                          - title: 'Catalog Price '
                            route:
                              path: /catalog-price
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description:</b> Exposes catalog price-
                                    and currency-related properties in both raw
                                    numeric, and formatted string,
                                    formats.<br><p></p>


                                    <b>Object Properties:</b> <br><br>


                                    <table>
                                      <tr>
                                        <td><b>Property<b></td>
                                        <td><b>Description<b></td>
                                      </tr>
                                      
                                      <tr>
                                        <td class=""> <A NAME="with_tax"></a> with_tax</td>
                                        <td class="">Price including tax</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      <tr>
                                        <td class=""> <A NAME="without_tax"></a> without_tax</td>
                                        <td class="">Price excluding tax</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">non_sale_price_with_tax</td>
                                        <td class="">Non-sale price, including tax (can be displayed alongside standard <a href="#with_tax">with_tax</a> during sale events)</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      <tr>
                                        <td class="">non_sale_price_without_tax</td>
                                        <td class="">Non-sale price, excluding tax (can be displayed alongside standard <a href="#without_tax">without_tax</a> during sale events)</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                     
                                      <tr>
                                        <td class="">rrp_with_tax</td>
                                        <td class="">List (i.e., manufacturer’s suggested retail) price, including tax</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      <tr>
                                        <td class="">rrp_without_tax</td>
                                        <td class="">List (i.e., suggested retail) price, excluding tax</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      <tr>
                                        <td class="">saved</td>
                                        <td class="">Amount customer saved, compared to list price </td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> formatted</span></td>
                                        <td class="">String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> value</span></td>
                                        <td class="">Raw numeric value of the above price</td>
                                      </tr>
                                      <tr>
                                        <td class="">tax_label</td>
                                        <td class="">Tax label (VAT, sales tax, etc.) displayed to customers</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">price_range</td>
                                        <td class=""><a href="https://stencil.bigcommerce.com/docs/price-range-object">See Price Range Object</a> </td>
                                      </tr>
                                          
                                        <tr>
                                        <td class="">map_price</td>
                                        <td class="">Minimum advertised price</td>
                                      </tr>
                                          
                                      <tr>
                                        <td>formatted</td>
                                        <td>String representation of the above price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td>value</td>
                                        <td>Raw numeric value of the above price</td>
                                      </tr>
                                         
                                    </table>


                                    <b>Available through:</b> 


                                    <b>Object/Property:</b> `{{product.price}}`
                          - title: 'Price '
                            route:
                              path: /price
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description:</b> Exposes price- and
                                    currency-related properties in both raw
                                    numeric, and formatted string, formats.
                                    <br><p></p>


                                    <b>Object Properties:</b> <br><br>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td class="">formatted</td>
                                        <td class="">String representation of the price, including currency formatting</td>
                                      </tr>
                                      <tr>
                                        <td class="">value</td>
                                        <td class="">Raw numeric value of the price</td>
                                      </tr>
                                    </table>


                                    <b>Available through:</b> <br><p></p>


                                    <b>Common Object:</b> <a
                                    href="/docs/common-product-card-model">Common
                                    Product Card Model</a> <br><p></p>


                                    <b>Object:</b> `{{category.shop_by_price}}`
                          - title: 'Price Range '
                            route:
                              path: /price-range
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description: </b>For products with
                                    several variants with different prices, a
                                    price range is available which exposes the
                                    minimum and maximum variant
                                    price.<br><p></p>


                                    <b>Object Properties:</b> <br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class=""> <A NAME="with_tax"></a> min</td>
                                        <td class="">The minimum variant price for the product, in the form of a <a href="https://stencil.bigcommerce.com/docs/catalog-price-common-object">Catalog Price Common Object</a></td>
                                      </tr>
                                      <tr>
                                        <td class=""> <A NAME="without_tax"></a> max</td>
                                        <td class="">The maximum variant price for the product, in the form of a <a href="https://stencil.bigcommerce.com/docs/catalog-price-common-object">Catalog Price Common Object</a>
                                    </td>
                                      </tr>
                                    </table>


                                    <b>Available through:</b> <br><p></p>


                                    <b>Object/Property:</b> <span
                                    class="inline-code"><a
                                    href="/docs/product-resources#price">
                                    {{product.price}} </a> </span> <br><br>
                          - title: Stencil Image
                            route:
                              path: /stencil-image
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description:</b> Exposes a URL and an
                                    "alt" string for images used in the Stencil
                                    framework <br><p></p>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>data</td>
                                        <td>Internal URL to product or category image</td>
                                      </tr>
                                      <tr>
                                        <td>alt</td>
                                        <td>Corresponding text to display for missing images, accessible screen readers, etc.</td>
                                      </tr>
                                    </table>


                                    <b>Available through:</b> <br><p></p>


                                    <b>Stencil Handlebars Helper:</b>
                                    `{{getImage}}`


                                    <b>Common Object:</b> <a
                                    href="/docs/common-product-card-model">Common
                                    Product Card Model</a> <br><p></p>


                                    <b>Object/Property:</b> `{{category.image}}`


                                    <b>Arrays/Elements:</b>
                                    `{{product.options.image}}`,
                                    `{{product.images}}`,
                                    `{{downloads.items.images}}`,
                                    `{{downloads.items.thumbnail}}`,
                                    `{{category.subcategories.image}}`,
                                    `{{order.items.image}}`,
                                    `{{customer.orders.image}}`,
                                    `{{brands.image}}`,
                                    `{{order.items.shipping_rows.image}}` 


                                    <b> Usage Example: </b> 


                                    `{{getImage image "thumbnail"}}`
                          - title: Common Product Card Model
                            route:
                              path: /common-product-card-model
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <b>Description:</b> A model for a product’s
                                    basic, primary properties. Typically used
                                    for list components that show multiple
                                    products, each in its own "card" or panel.


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td class="">ID of the product </td>
                                      </tr>
                                      <tr>
                                        <td class="">sku</td>
                                        <td class="">The product's SKU (stock keeping unit)/product code, as a string; if the SKU field is not populated, then null
                                     </td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Name of the product</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL to product detail page for the product</td>
                                      </tr>
                                      <tr>
                                        <td class="">availability</td>
                                        <td class="">Typical shipping time for the product; used to populate "Usually ships within…" fields</td>
                                      </tr>
                                      <tr>
                                        <td class="">rating</td>
                                        <td class="">Product’s rating</td>
                                      </tr>
                                      <tr>
                                        <td class="">ratings</td>
                                        <td class="">Number of reviews on which the rating is based</td>
                                      </tr>
                                      <tr>
                                        <td class="">brand</td>
                                        <td class="">Brand properties for the product</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> name</span></td>
                                        <td class="">Product’s brand name</td>
                                      </tr>
                                      <tr>
                                        <td class="">add_to_cart_url</td>
                                        <td class="">URL that adds this product to customer’s cart</td>
                                      </tr>
                                      <tr>
                                        <td class="">price</td>
                                        <td class="">References the <a href="/docs/catalog-price-common-object">catalog price object</a>, to access price properties in both raw-numeric and formatted/string formats</td>
                                      </tr>
                                      <tr>
                                        <td class="">summary</td>
                                        <td class="">Summary description of the product</td>
                                      </tr>
                                      <tr>
                                        <td class="">image</td>
                                        <td class="">Default image for the product, in <a href="/docs/stencil-image-common-object">Stencil image format</a> <!-- <a href="/docs/handlebars-image-helpers">Stencil image format</a> --> </td>
                                      </tr>
                                      <tr>
                                        <td class="">images</td>
                                        <td class="">Array of a product's images, in <a href="/docs/stencil-image-common-object">Stencil image format</a>; currently limited to 5 images </td>
                                      </tr>
                                      <tr>
                                        <td class="">date_added</td>
                                        <td class="">Date the product was added to this BigCommerce storefront</td>
                                      </tr>
                                      <tr>
                                        <td class="">pre_order</td>
                                        <td class="">Product’s availability for pre-order</td>
                                      </tr>
                                      <tr>
                                        <td class="">release_date</td>
                                        <td class="">Release date, if the product is set to pre-order status</td>
                                      </tr>
                                      <tr>
                                        <td class="">show_cart_action</td>
                                        <td class="">Boolean that indicates whether the product is available for purchase</td>
                                      </tr>
                                      <tr>
                                        <td class="">has_options</td>
                                        <td class="">Boolean that indicates whether customer is required to specify options when ordering the product</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">stock_level</td>
                                        <td class="">If inventory tracking is turned on: The number of items available for sale (0 or more). If inventory tracking is turned off: A "null" string. </td>
                                      </tr>
                                         
                                      <tr>
                                        <td class="">low_ stock_level</td>
                                        <td class="">If inventory tracking is turned on: Sets a threshold low-stock level. You can use conditional logic to display a "limited availability" badge if the <span class="inline-code">stock_level</span> property's value falls below this threshold. If inventory tracking is turned off: A "null" string. </td>
                                      </tr>
                                       
                                      <tr>
                                        <td class="">qty_in_cart</td>
                                        <td class="">Quantity of this item in the customer’s cart</td>
                                      </tr>
                                      <tr>
                                        <td class="">out_of_stock_message</td>
                                        <td class="">Text to display when the product is out of stock</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">custom_fields</td>
                                        <td class="">Array of <a href="https://support.bigcommerce.com/articles/Public/Custom-Fields">custom fields</a> for this product; custom fields can be used for purposes like: alternate brand name, merchandising title for the product, product type, "gift idea" indicator, etc.
                                    </td>
                                      </tr>

                                      <tr>
                                        <td class=""><span class="indent1"> id </span></td>
                                        <td class="">Unique (integer) identifier for this custom field</td>
                                      </tr>

                                      <tr>
                                        <td class=""><span class="indent1"> name </span></td>
                                        <td class="">Name of this custom field</td>
                                      </tr>

                                      <tr>
                                        <td class=""><span class="indent1"> value </span></td>
                                        <td class="">Value for this custom field</td>
                                      </tr>
                                        
                                    </table>


                                    <b>Available through:</b> <br><p></p>


                                    <b>Object:</b> <span class="inline-code">
                                    {{comparisons}} </span> <br><p></p>


                                    <b>Arrays/Elements:</b> <span
                                    class="inline-code">{{product.related_products}},
                                    {{product.similar_by_views}},
                                    {{category.products}},
                                    {{cart.suggested_products}},
                                    {{customer.recently_viewed_products}}
                                    </span><br><p></p>


                                    <!-- :"Common Product Card Model" moved from
                                    "Product Objects" page -->
                    - title: Other Objects/Properties
                      route:
                        path: /new-subpage
                      data:
                        children:
                          - title: 'Other Objects & Properties '
                            route:
                              path: /other-objects-and-properties-overview
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <h1>Other Objects and Properties
                                    Overview</h1>
                                - type: html
                                  data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#other-objects_other-objects-and-props\">Other Objects and Properties Overview</a></li>\n\t</ul>\n</div>"
                                - type: text
                                  data: >-
                                    ## Other Objects & Properties Overview


                                    This section covers the following objects.
                                    Note that in this section, each of the
                                    following reference pages contains multiple
                                    objects. For example, the Product Objects
                                    reference page contains all objects related
                                    to products not already covered, such as :



                                    Product Objects

                                    Category Objects

                                    Brand Objects

                                    Cart Objects

                                    Customer Objects

                                    Blog Objects

                                    Forms Objects

                                    </ul>
                          - title: Product
                            route:
                              path: /product-objects
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    Product objects map to the products defined
                                    by the merchant for their BigCommerce
                                    storefront:


                                    <ul>
                                     <li><a href="#Product">Product</a></li>
                                     <li><a href="#RelProd">Related Products</a></li>
                                     <li><a href="#Stencil-ProdRevu-ref">Product Reviews</a></li>
                                     <li><a href="#SimByView">Similar Products by Customer Views</a></li>  
                                     <li><a href="#Videos">Product Videos</a></li>
                                     <li><a href="#Compare">Compare</a></li>
                                     <li><a href="#DownItem">Download Item</a></li>
                                     <li><a href="#ProdOtherDetails">Product Other Details</a></li>
                                    </ul>
                                - type: callout
                                  data:
                                    body: >-
                                      Also see Common Objects > Common Product
                                      Card Model, which documents the product
                                      object returned in collections.
                                    title: Other Product Objects
                          - title: Category
                            route:
                              path: /category-objects
                            data:
                              blocks:
                                - type: text
                                  data: "<a name=\"Stencil-Category-ref\"></a>Category objects map to the storefront's product categories, defined by the merchant:<br>\n\n<ul>\n  <li><a href=\"#Category\">Category</a></li>\n <li><a href=\"#CatProd\">Category Products</a></li>\n <li><a href=\"#ShopByPrice\">Category Shop by Price</a></li>\n</ul>\n\n<h2> <A NAME=\"Category\"></a>Category</h2> \n\n<b>Description:</b> The category object for the page calling the object. When retrieving a collection of categories, default sorting is by category <span class=\"inline-code\">id</span>, from lowest to highest. (Called on the default <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/pages/category.html</span></nobr> template, and on several partials in the <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/components/</span></nobr> subdirectory: <NOBR><span class=\"inline-code\">category/shop-by-price.html</span></nobr>, <NOBR><span class=\"inline-code\">category/sidebar.html</span></nobr>, and <NOBR><span class=\"inline-code\">amp/category/subcategories.html</span></nobr>.) <br>\n\n<b>Handlebars Expression:</b> `{{category}}`\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">id</td>\n    <td class=\"\">Unique ID for the category </td>\n  </tr>\n  <tr>\n    <td class=\"\">name</td>\n    <td class=\"\">Merchant-defined category name</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL for the category-specific page</td>\n  </tr>\n  <tr>\n    <td class=\"\">description</td>\n    <td class=\"\">Merchant-defined description of the category</td>\n  </tr>\n  <tr>\n    <td class=\"\">image</td>\n    <td class=\"\">Image representing this category, in <a href=\"/docs/stencil-image-common-object\">Stencil image format</a></td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">subcategories <!-- Possible change to `children`--></td>\n    <td class=\"\">List of any child categories</td>\n  </tr>\n<!-- New for MERC-268: -->  \n  <tr>\n    <td class=\"\"><span class=\"indent1\">id</span></td>\n    <td class=\"\">Unique ID for the subcategory </td>\n  </tr>\n<!-- :New for MERC-268 -->\n  <tr>\n    <td class=\"\"><span class=\"indent1\">name</span></td>\n    <td class=\"\">Name of the subcategory</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">url</span></td>\n    <td class=\"\">URL to the subcategory</td>\n  </tr>\n\n<!-- New for MERC-268: -->  \n  <tr>\n    <td class=\"\"><span class=\"indent1\">description</span></td>\n    <td class=\"\">Merchant-defined description of the subcategory </td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">image</span></td>\n    <td class=\"\">Image representing this subcategory, in <a href=\"/docs/stencil-image-common-object\">Stencil image format</a></td>\n  </tr> \n<!-- :New for MERC-268 -->  \n\n<!-- New for MERC-320: -->  \n  <tr>\n    <td class=\"\"><span class=\"indent1\">product_count</span></td>\n    <td class=\"\">Number of products in the subcategory. (Counts at the current level only &ndash; not recursive to deeper levels.)</td>\n  </tr>\n<!-- :New for MERC-320 -->  \n  \n  <tr>\n  \t<td class=\"\">detail_messages</td>\n    <td class=\"\">Message displayed when a product is out of stock, and inventory settings are configured to redirect to a category: \"Sorry, the product you tried to view is currently out of stock, here are some similar products we have available.\" (This phrasing is set by the BigCommerce App.)</td>\n  </tr>\n  <tr>\n    <td class=\"\">show_compare</td>\n    <td class=\"\">Boolean that defines whether to show controls for product comparison</td>\n  </tr>\n  <tr>\n    <td class=\"\">show_add_to_cart</td>\n    <td class=\"\">Boolean that defines whether to show an Add to Cart button for this category</td>\n  </tr>\n  <tr>\n    <td class=\"\">total_products</td>\n    <td class=\"\">Count of the number of products in the category</td>\n  </tr>\n  <tr>\n    <td class=\"\">faceted_search_enabled</td>\n    <td class=\"\">Boolean that defines whether product-filtering search is enabled for the store</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">facets</span></td>\n    <td class=\"\">Available search facets</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">pagination</span></td>\n    <td class=\"\">References the pagination model</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">selected</span></td>\n    <td class=\"\">Selected search facets</td>\n  </tr>\n</table>\n\n\n<h2> <A NAME=\"CatProd\"></a>Category Products</h2>\n\n<b>Description:</b> A list of products associated with this category. (Called on the default <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/pages/category.html</span></nobr> template, and on the <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/components/category/product-listing.html</span></nobr> partial.) <br>\n\n<b>Handlebars Expression:</b> `{{category.products}}`\n\n<b>Object Properties:</b> References the product card model.\n\n\n<h2> <A NAME=\"ShopByPrice\"></a>Category Shop by Price</h2>\n\n<b>Description:</b> A list of price ranges, to enable customers to set price limits within a product category. <NOBR>(Called on the default</nobr> <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/components/category/shop-by-price.html</span></nobr> and <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/components/category/sidebar.html</span></nobr> partials.) <br>\n\n<b>Handlebars Expression:</b> `{{category.shop_by_price}}`\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">url</td>\n    <td class=\"\">URL of price-filtered product results for this category</td>\n  </tr>\n  <tr>\n    <td class=\"\">low</td>\n    <td class=\"\"><a href=\"/docs/price-common-object\">Price object</a> that defines the minimum price boundary </td>\n  </tr>\n  <tr>\n    <td class=\"\">high</td>\n    <td class=\"\"><a href=\"/docs/price-common-object\">Price object</a> that defines the maximum price boundary</td>\n  </tr>\n  <tr>\n    <td class=\"\">selected</td>\n    <td class=\"\"><a href=\"/docs/price-common-object\">Price object</a> that defines the currently selected price range</td>\n  </tr>\n</table>"
                          - title: Brand
                            route:
                              path: /brand-objects
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <a name="Stencil-Brand-ref"></a>Brand
                                    objects map to the product brands sold by
                                    the merchant:<br>


                                    <ul>
                                     <li><a href="#BrandList">Brand List</a></li>
                                     <li><a href="#Brand">Brand</a></li>
                                     <li><a href="#ShopByBrand">Shop by Brand</a></li>
                                    </ul>



                                    ## <div id="BrandList"></div>Brand List


                                    <b>Description:</b> A list of brands with
                                    their basic data. Default sorting is by
                                    brand id, from lowest to highest. (Called on
                                    the default
                                    <NOBR>`<theme-name>/templates/pages/brands.html`
                                    template.)


                                    <b>Handlebars Expression:</b> `{{brands}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL to this brand’s products listing</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the brand</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Internal identifier for the brand </td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>Stencil image object (if any) for the brand</td>
                                      </tr>
                                    </table>



                                    ## <div id="Brand"></a>Brand


                                    <b>Description:</b> The brand object for the
                                    page calling the object. (Called on the
                                    default
                                    `<theme-name>/templates/pages/brand.html`
                                    template.)


                                    <b>Handlebars Expression:</b> `{{brand}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>show_compare</td>
                                        <td>Boolean corresponding to merchant’s control panel selection whether or not to enable product comparisons</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the brand page</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of the brand </td>
                                      </tr>
                                      <tr>
                                        <td>pagination</td>
                                        <td>References the pagination model</td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>Image used to visually represent the brand (i.e., logo)</td>
                                      </tr>
                                      <tr>
                                        <td>faceted_search_enabled</td>
                                        <td>Boolean that defines whether product-filtering search is enabled for the store</td>
                                      </tr>
                                      <tr>
                                        <td>facets</td>
                                        <td>A list of all possible search filters for this brand</td>
                                      </tr>
                                      <tr>
                                        <td>products</td>
                                        <td>An array of product card models</a></td>
                                      </tr>
                                      <tr>
                                        <td>selected</td>
                                        <td>An array of selected facets</td>
                                      </tr>
                                    </table>



                                    ## <div id="ShopByBrand"></div>Shop by Brand


                                    <b>Description:</b> Objects to enable
                                    customers to shop by brand. Returns top 10
                                    brands, by product count. (Called on the
                                    default
                                    `<theme-name>/templates/components/brand/sidebar.html`
                                    and
                                    `<theme-name>/templates/components/common/footer.html`
                                    partials.)


                                    <b>Handlebars Expression:</b>
                                    `{{shop_by_brand}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>links</td>
                                        <td>Array of links to individual brands</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID for this brand</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL for this brand</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of this brand</td>
                                      </tr>
                                      <tr>
                                        <td>count</td>
                                        <td>Number of products matching this brand</td>
                                      </tr>
                                    </table>
                          - title: Cart
                            route:
                              path: /cart-objects
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    ## <div id="Cart_Status"></a>Cart Status
                                    Message</h2>


                                    <b>Description:</b> A list of relevant
                                    messages for the cart in the current session


                                    <b>Handlebars Expression:</b>
                                    `{{cart.status_messages}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>message</td>
                                        <td>System-generated messages for the cart</td>
                                      </tr>
                                      <tr>
                                        <td>type</td>
                                        <td>Type of message: error, info, or success</td>
                                      </tr>
                                    </table>



                                    ## <div id="Suggested"></div>Suggested
                                    Products


                                    <b>Description:</b> A list of suggested
                                    products, based on cart contents; displays
                                    only if enabled by the `cart.suggestions`
                                    front-matter attribute, and only immediately
                                    after a product is added to the cart


                                    <b>Handlebars Expression:</b>
                                    `{{cart.suggested_products}}`


                                    <b>Object Properties:</b> References
                                    standard product card model.
                          - title: Customer
                            route:
                              path: /customer-objects
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    ## <div id="Customer"></div>Customer


                                    <b>Description:</b> Customer-specific
                                    properties for a storefront customer object.
                                    When filtering/limiting, customers' default
                                    sorting is by customer id, from lowest to
                                    highest. (Called on several partials in the
                                    `<theme-name>/templates/components/`
                                    subdirectory: 

                                    `page/contact-us-form.html`,

                                    `common/subscription-form.html`,

                                    `account/address-list.html`,

                                    `account/messages-form.html`, and

                                    `account/wishlist-list.html`.)


                                    <b>Handlebars Expression:</b> `{{customer}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Customer’s ID</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Customer’s name</td>
                                      </tr>
                                      <tr>
                                        <td>email</td>
                                        <td>Customer’s email address</td>
                                      </tr>
                                      <tr>
                                        <td>phone</td>
                                        <td>Customer’s phone number</td>
                                      </tr>

                                      <tr>
                                        <td>store_credit</td>
                                        <td>Customer’s store credit</td>
                                      </tr>

                                      <tr>
                                        <td>customer_group_id</td>
                                        <td>ID of this customer's group</td>
                                      </tr>

                                      <tr>
                                        <td>customer_group_name</td>
                                        <td>Name of this customer's group</td>
                                      </tr>  
                                      
                                      <tr>
                                        <td>num_new_messages</td>
                                        <td>Number of unread messages for this customer</td>
                                      </tr>
                                      <tr>
                                        <td>num_wishlists</td>
                                        <td>Number of wishlists for this customer</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_address</td>
                                        <td>Shipping address used for the order</td>
                                      </tr>
                                      <tr>
                                        <td>id</span></td>
                                        <td>Unique, system-generated ID</td>
                                      </tr>
                                      <tr>
                                        <td>first_name</span></td>
                                        <td>Customer’s shipping (first) name</td>
                                      </tr>
                                      <tr>
                                        <td>last_name</td>
                                        <td>Customer’s shipping (last) name</td>
                                      </tr>
                                      <tr>
                                        <td>company</td>
                                        <td>Customer's shipping company name</td>
                                      </tr>
                                      <tr>
                                        <td>address1</td>
                                        <td>Customer's shipping address, first line</td>
                                      </tr>
                                      <tr>
                                        <td>address2</td>
                                        <td>Customer's shipping address, second line</td>
                                      </tr>
                                      <tr>
                                        <td>city</td>
                                        <td>Customer's shipping city</td>
                                      </tr>
                                      <tr>
                                        <td>state</td>
                                        <td>Customer's shipping state</td>
                                      </tr>
                                      <tr>
                                        <td>zip</td>
                                        <td>Customer's shipping zip</td>
                                      </tr>
                                      <tr>
                                        <td>country</td>
                                        <td>Customer's shipping country</td>
                                      </tr>
                                      <tr>
                                        <td>phone</td>
                                        <td>Customer's shipping phone number</td>
                                      </tr>
                                      <tr>
                                        <td>state_id</td>
                                        <td>ID for customer's shipping state/province/region
                                    </td>
                                      </tr>
                                      <tr>
                                        <td>country_id</td>
                                        <td>ID for customer's shipping country</td>
                                      </tr>
                                      <tr>
                                        <td>destination</td>
                                        <td>Type of delivery destination: residential or business/commercial</td>
                                      </tr>
                                      <tr>
                                        <td>last_used</td>
                                        <td>Timestamp when this address was last used as a shipping address</td>
                                      </tr>
                                      <tr>
                                        <td>form_session_id</td>
                                        <td>Used for custom shipping forms</td>
                                      </tr>
                                    </table>



                                    ## <div id="OrderDet"></div>Order Details


                                    <b>Description:</b> The order properties for
                                    a specific order, usable on the order
                                    details page. (Called on the default
                                    `<theme-name>/templates/pages/account/orders/details.html`
                                    and
                                    `<theme-name&gt;/templates/pages/account/orders/invoice.html`
                                    templates, and on the
                                    `<theme-name&gt;/templates/components/account/order-contents.html`
                                    partial.)


                                    <b>Handlebars Expression:</b> `{{order}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>date</td>
                                        <td>Date of the order</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Unique, system-generated ID</td>
                                      </tr>
                                      <tr>
                                        <td>total</td>
                                        <td>Price object that defines the order’s total value</td>
                                      </tr>
                                      <tr>
                                        <td>status</td>
                                        <td>Order status code</td>
                                      </tr>
                                      <tr>
                                        <td>status_text</td>
                                        <td>Status text associated with the status code for the order</td>
                                      </tr>
                                      <tr>
                                        <td>returns_enabled</td>
                                        <td>Boolean that indicates whether merchant allows products from the order to be returned</td>
                                      </tr>
                                      <tr>
                                        <td>reorder_url</td>
                                        <td>URL to place reorders for items in this order</td>
                                      </tr>
                                      <tr>
                                        <td>invoice_url</td>
                                        <td>URL to display an invoice for this order</td>
                                      </tr>
                                      <tr>
                                        <td>is_complete</td>
                                        <td>Boolean indicating that the order has been completed</td>
                                      </tr>
                                      <tr>
                                        <td>comments</td>
                                        <td>Customer’s message about the order</td>
                                      </tr>
                                      <tr>
                                        <td>is_digital</td>
                                        <td>Boolean indicating whether the order will be delivered digitally</td>
                                      </tr>
                                      <tr>
                                        <td>items</td>
                                        <td>List of items for the order</td>
                                      </tr>
                                      <tr>
                                        <td>order_product_id</span></td>
                                        <td>Product ID</td>
                                      </tr>
                                      <tr>
                                        <td>name</span></td>
                                        <td>Product Name</td>
                                      </tr>
                                      <tr>
                                        <td>quantity</span></td>
                                        <td>Quantity Ordered</td>
                                      </tr>
                                      <tr>
                                        <td>refunded</span></td>
                                        <td>Price object that defines the value of this product that has been refunded</td>
                                      </tr>
                                      <tr>
                                        <td>event_date</td>
                                        <td>A chosen event date for the product</td>
                                      </tr>
                                      <tr>
                                        <td>price</td>
                                        <td>Price object that defines the product’s price</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_rows</td>
                                        <td>Array of shipping addresses, for each item in the order</td>
                                      </tr>
                                      <tr>
                                        <td>address</td>
                                        <td>Street address to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>city</td>
                                        <td>City to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>state</td>
                                        <td>State to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>zip</td>
                                        <td>Postal/ZIP code to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>country</td>
                                        <td>Country to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>gift_wrapping_name</td>
                                        <td>Name of the gift-wrapping option used</td>
                                      </tr>
                                      <tr>
                                        <td>type</td>
                                        <td>Type of purchase; value is one of: physical, digital, giftcertificate</td>
                                      </tr>
                                      <tr>
                                        <td>download_url</td>
                                        <td>URL at which customer can download digital item</td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>The image of the order’s first product, in Stencil image format </td>
                                      </tr>
                                      <tr>
                                        <td>show_reorder
                                    </td>
                                        <td>Boolean indicating whether the customer should see a button for reordering items on the Account Order Details page</td>
                                      </tr>
                                      <tr>
                                        <td>reorder_message</td>
                                        <td>An error message to be displayed when the customer attempts to reorder items that can’t be reordered</td>
                                      </tr>
                                      <tr>
                                        <td>options</td>
                                        <td>A list of options selected when this product was purchased</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Display name for the option ("Small", “Medium”, etc.)</td>
                                      </tr>
                                      <tr>
                                        <td>value</td>
                                        <td>Value that customer selected for the option</td>
                                      </tr>
                                      <tr>
                                        <td>billing_address</td>
                                        <td>Billing address used for the order</td>
                                      </tr>
                                      <tr>
                                        <td>full_name</td>
                                        <td>Customer's billing name</td>
                                      </tr>
                                      <tr>
                                        <td>company</td>
                                        <td>Customer's billing company name</td>
                                      </tr>
                                      <tr>
                                        <td>address_lines</td>
                                        <td>Customer's billing address</td>
                                      </tr>
                                      <tr>
                                        <td>city</td>
                                        <td>Customer's billing city</td>
                                      </tr>
                                      <tr>
                                        <td>state</td>
                                        <td>Customer's billing state</td>
                                      </tr>
                                      <tr>
                                        <td>country</td>
                                        <td>Customer billing country</td>
                                      </tr>
                                      <tr>
                                        <td>zip</td>
                                        <td>Customer billing ZIP</td>
                                      </tr>
                                      <tr>
                                        <td>phone</td>
                                        <td>Customer billing phone number</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_address_count</td>
                                        <td>Number of shipping addresses the customer has specified for this order</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_address</td>
                                        <td>Shipping address used for the order</td>
                                      </tr>
                                      <tr>
                                        <td>full_name</td>
                                        <td>Customer's shipping name</td>
                                      </tr>
                                      <tr>
                                        <td>company</td>
                                        <td>Customer's shipping company name</td>
                                      </tr>
                                      <tr>
                                        <td>address_lines</td>
                                        <td>Customer's shipping address</td>
                                      </tr>
                                      <tr>
                                        <td>city</td>
                                        <td>Customer's shipping city</td>
                                      </tr>
                                      <tr>
                                        <td>state</td>
                                        <td>Customer's shipping state</td>
                                      </tr>
                                      <tr>
                                        <td>country</td>
                                        <td>Customer's shipping country</td>
                                      </tr>
                                      <tr>
                                        <td>zip</td>
                                        <td>Customer's shipping zip</td>
                                      </tr>
                                      <tr>
                                        <td>phone</td>
                                        <td>Customer's shipping phone number</td>
                                      </tr>
                                      <tr>
                                        <td>payment_method</td>
                                        <td>Customer’s payment method for this order (payment gateway)</td>
                                      </tr>
                                      <tr>
                                        <td>card_number_last_four</td>
                                        <td>Last four digits of customer’s credit card</td>
                                      </tr>
                                      <tr>
                                        <td>total_rows</td>
                                        <td>A list of “total” rows containing total pricing information</td>
                                      </tr>
                                      <tr>
                                        <td>label</td>
                                        <td>The label of the total row (Subtotal, Tax, Grand Total, etc.)</td>
                                      </tr>
                                    </table>



                                    ## <div id="Recent"></div> Recent Items


                                    <b>Description:</b> Items the customer has
                                    recently viewed. (Called on the default
                                    `<theme-name>/templates/pages/account/recent-items.html`
                                    template.)


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{customer.recently_viewed_products}}</span>


                                    <b>Object Properties:</b> References the
                                    standard product card model.



                                    ## <div id="Wishlists"></div> Customer
                                    Wishlists


                                    <b>Description:</b> Array of product
                                    wishlists, specific to this store, for the
                                    customer. (Called on the default
                                    `<theme-name>/templates/components/account/wishlist-list.html`
                                    partial.)


                                    <b>Handlebars Expression:</b>
                                    `{{customer.wishlists}}` 


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Unique system ID of the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>num_items</td>
                                        <td>Number of items in the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Customer-defined name of the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>is_public</td>
                                        <td>Boolean value indicating whether the wishlist is publicly available </td>
                                      </tr>
                                      <tr>
                                        <td>is_editable</td>
                                        <td>Boolean indicating whether the "Remove Item" button, and account navigation controls, are displayed (i.e., whether the customer viewing the wishlist is this wishlist’s owner)</td>
                                      </tr>
                                      <tr>
                                        <td>token</td>
                                        <td>Unique public token for the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>view_url</td>
                                        <td>URL to view the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>edit_url</td>
                                        <td>URL to edit the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>delete_url</td>
                                        <td>URL to delete the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>share_url</td>
                                        <td>URL to share the wishlist</td>
                                      </tr>
                                    </table>



                                    ## <div id="WishDet"></div>Wishlist Details


                                    <b>Description:</b> Wishlist information for
                                    a specific wishlist. (Called on the default
                                    `<theme-name>/templates/pages/account/wishlist-details.html`
                                    template and
                                    `<theme-name>/templates/components/account/wishlist-item-list.html`partial.)


                                    <b>Handlebars Expression:</b> `{{wishlist}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Unique system ID for the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Customer-defined name of the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>is_public</td>
                                        <td>Boolean value indicating whether the wishlist is publicly available </td>
                                      </tr>
                                      <tr>
                                        <td>token</td>
                                        <td>Unique public token for the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>share_url</td>
                                        <td>URL used to share the wishlist</td>
                                      </tr>
                                      <tr>
                                        <td>items</td>
                                        <td>List of items in the wishlist; extends the product card model, adding the extra properties below:</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>Unique system ID for this wishlist item</td>
                                      </tr>
                                      <tr>
                                        <td>product_id</td>
                                        <td>Product ID for the item</td>
                                      </tr>
                                      <tr>
                                        <td>remove_url</td>
                                        <td>URL to remove the product from the wishlist</td>
                                      </tr>
                                    </table>



                                    ## <div id="Shipments"></div> Account Order
                                    Shipments


                                    <b>Description:</b> Objects to manage
                                    shipments associated with a specific order
                                    details for the current customer. (Called on
                                    the default <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/pages/account/orders/details.html</span></nobr>
                                    template.) <br>


                                    <b>Handlebars Expression:</b>
                                    `{{shipments}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>date_shipped</td>
                                        <td>Shipping date for this shipment</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_provider</td>
                                        <td>Carrier for this shipment</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_method</td>
                                        <td>Shipping method for this shipment</td>
                                      </tr>
                                      <tr>
                                        <td>show_shipping_method</td>
                                        <td>Boolean indicating whether to display the shipping method to the customer</td>
                                      </tr>
                                      <tr>
                                        <td>shipping_track</td>
                                        <td>Tracking information for this shipment</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>Tracking URL for this shipment</td>
                                      </tr>
                                      <tr>
                                        <td>number</td>
                                        <td>Tracking number for this shipment</td>
                                      </tr>
                                    </table>



                                    ## <div du="Orders"></div>Account Orders


                                    <b>Description:</b> Objects to manage
                                    completed orders for the current customer.
                                    By default, orders sort by order id, from
                                    lowest to highest. (Called on the default
                                    `<theme-name>/templates/pages/account/orders/all.html`and
                                    `<theme-name&gt;/templates/pages/account/orders/completed.html` 
                                    templates, and on the
                                    `<theme-name>/templates/components/account/orders-list.html`
                                    partial.)


                                    <b>Handlebars
                                    Expression:</b>`{{customer.orders}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>pagination</td>
                                        <td>References pagination model</td>
                                      </tr>
                                      <tr>
                                        <td>date</td>
                                        <td>Date this order was placed</td>
                                      </tr>
                                      <tr>
                                        <td>last_update_date</td>
                                        <td>Date this order was last updated</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID for this order</td>
                                      </tr>
                                      <tr>
                                        <td>total</td>
                                        <td>Total value of this order</td>
                                      </tr>
                                      <tr>
                                        <td>status</td>
                                        <td>Status of this order ("Completed" or other)</td>
                                      </tr>
                                      <tr>
                                        <td>return_url</td>
                                        <td>URL for returning items in this order</td>
                                      </tr>
                                      <tr>
                                        <td>reorder_url</td>
                                        <td>URL for reordering items in this order</td>
                                      </tr>
                                      <tr>
                                        <td>details_url</td>
                                        <td>URL for details about this order</td>
                                      </tr>
                                      <tr>
                                        <td>payment_instructions</td>
                                        <td>Text field defined by merchant as to payment instructions for manual gateways such as “Bank Deposit”</td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>Image of the order’s first product, in Stencil image format</td>
                                      </tr>
                                      <tr>
                                        <td>items</td>
                                        <td>Array of products in this order</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of this product</td>
                                      </tr>
                                      <tr>
                                        <td>quantity</td>
                                        <td>Quantity of this product ordered</td>
                                      </tr>
                                      <tr>
                                        <td>refunded</td>
                                        <td>Price object that defines the amount of this product that has been refunded</td>
                                      </tr>
                                      <tr>
                                        <td>expected_release_date</td>
                                        <td>Expected ship date if the product is set to pre-order status</td>
                                      </tr>
                                      <tr>
                                        <td>type</span></td>
                                        <td>Type of purchase; value is one of: physical, digital, giftcertificate</td>
                                      </tr>
                                      <tr>
                                        <td>download_url</td>
                                        <td>URL for customer to download a digital product</td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>The image for this ordered product</td>
                                      </tr>
                                      <tr>
                                        <td>options</td>
                                        <td>Array of additional product details (size, color, etc.), as name/value pairs</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Displayed name for this category of information</td>
                                      </tr>
                                      <tr>
                                        <td>value</td>
                                        <td>Displayed value for this product’s entry</td>
                                      </tr>
                                    </table>



                                    ## <div id="Returns"></div>Account Returns


                                    <b>Description:</b> Objects to manage
                                    returns for the current customer. (Called on
                                    the default
                                    `<theme-name>/templates/pages/account/returns.html`
                                    template.) <br>


                                    <b>Handlebars Expression:</b>
                                    `{{customer.returns}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>date_requested</td>
                                        <td>Date on which the customer requested this return</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>The ID for this return</td>
                                      </tr>
                                      <tr>
                                        <td>quantity</td>
                                        <td>Quantity of items returned</td>
                                      </tr>
                                      <tr>
                                        <td>reason</td>
                                        <td>Reason for return; merchants can define actions beyond the default strings created with each store, which are: Received Wrong Product, Wrong Product Ordered, Not Satisfied With The Product, and There Was A Problem With The Product</td>
                                      </tr>
                                      <tr>
                                        <td>action</td>
                                        <td>Return action; merchants can define actions beyond the default set created with each store (Repair, Replacement, or Store Credit)</td>
                                      </tr>
                                      <tr>
                                        <td>comments</td>
                                        <td>Comments that the customer entered with the return request</td>
                                      </tr>
                                      <tr>
                                        <td>status</td>
                                        <td>Status of the return: Pending, Received, Authorized, Repaired, 
                                    Refunded, Rejected, or Cancelled</td>
                                      </tr>
                                      <tr>
                                        <td>product</td>
                                        <td>Array of products included in the return</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL for this product</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of this product</td>
                                      </tr>
                                      <tr>
                                        <td>options</td>
                                        <td>Array of additional product details (size, color, etc.), as name/value pairs</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Displayed name for this category of information</td>
                                      </tr>
                                      <tr>
                                        <td>value</td>
                                        <td>Displayed value for this product’s entry</td>
                                      </tr>
                                      <tr>
                                        <td>image</td>
                                        <td>Image for this product</td>
                                      </tr>
                                    </table>



                                    ## <div id="NewReturn"></div>Account New
                                    Return


                                    <b>Description:</b> Objects to handle a new
                                    return for the current customer. (Called on
                                    the default
                                    `<theme-name>/templates/pages/account/add-return.html`
                                    template.)


                                    <b>Handlebars Expression:</b>
                                    `{{forms.return}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>order_id</td>
                                        <td>ID for the original order</td>
                                      </tr>
                                      <tr>
                                        <td>reasons</td>
                                        <td>Reasons for return</td>
                                      </tr>
                                      <tr>
                                        <td>actions</td>
                                        <td>Return actions: an array of strings arbitrarily defined by the merchant: refund, exchange, credit, etc.</td>
                                      </tr>
                                      <tr>
                                        <td>order_products</td>
                                        <td>Array of products from the order that are available to return</td>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID for the product</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name of this product</td>
                                      </tr>
                                      <tr>
                                        <td>product_id</td>
                                        <td>ID for this product</td>
                                      </tr>
                                      <tr>
                                        <td>price</td>
                                        <td>Price object that defines this product’s price</td>
                                      </tr>
                                      <tr>
                                        <td>quantity</td>
                                        <td>Quantity of the product returned</td>
                                      </tr>
                                      <tr>
                                        <td>options</td>
                                        <td>Array of additional product details (size, color, etc.), as name/value pairs</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Displayed name for this category of information</td>
                                      </tr>
                                      <tr>
                                        <td>value</td>
                                        <td>Displayed value for this product’s entry</td>
                                      </tr>
                                    </table>



                                    ## <div id="CreateAccount"></div>Create
                                    Account


                                    <b>Description:</b> Object to enable the
                                    current customer to create a store account.
                                    (Called on the default
                                    `<theme-name&gt;/templates/pages/auth/create-account.html`
                                    template.)


                                    <b>Handlebars Expression:</b>
                                    `{{forms.create_account}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>recaptcha</td>
                                        <td>Objects for integrating the Google reCAPTCHA service to distinguish human visitors from ’bots (automated agents)</td>
                                      </tr>
                                      <tr>
                                        <td>enabled</td>
                                        <td>Boolean indicating whether reCAPTCHA is enabled for this store</td>
                                      </tr>
                                      <tr>
                                        <td>public_key</td>
                                        <td>Public key (site key) that reCAPTCHA returns upon merchant’s enabling CAPTCHA security in Store Settings > Display Settings</td>
                                      </tr>
                                      <tr>
                                        <td>address_fields</td>
                                        <td>Array of form fields that define each shipping address for this customer; for details, see <a href="https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms">this repo</a></td>
                                      </tr>
                                      <tr>
                                        <td>class_name</td>
                                        <td>Specifies a CSS class (defined in the theme's `/assets/scss/` subdirectory) to apply to a field within the array; for corresponding control-panel steps, see
                                     <NOBR><a href="https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings">this support article</a></td>
                                      </tr>
                                      <tr>
                                        <td>account_fields</td>
                                        <td>Object of form fields; for details, see <a href=https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms>this repo</a>
                                      </tr>
                                      <tr>
                                        <td>class_name</td>
                                        <td>Specifies a CSS class to apply to a field within the array; for corresponding control-panel steps, see:
                                     <a href="https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings">this support article</a></td>
                                      </tr>
                                      <tr>
                                        <td>error</td>
                                        <td>BCApp generated message to display when customer’s account creation fails</td>
                                      </tr>
                                      <tr>
                                        <td>checking_out</td>
                                        <td>Boolean indicating whether customer created the account during a purchase checkout</td>
                                      </tr>
                                    </table>



                                    ## <div id="ShipAddress"></div>Shipping
                                    Addresses


                                    <b>Description:</b> Object to enable the
                                    customer to enter shipping and contact
                                    information. (Called on the default
                                    `<theme-name>/templates/components/account/address-list.html`
                                    partial.)


                                    <b>Handlebars
                                    Expression:</b>`{{customer.addresses}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <th>Property</th>
                                        <th>Description</th>
                                      </tr>
                                      <tr>
                                        <td>id</td>
                                        <td>ID for this shipping address</td>
                                      </tr>
                                      <tr>
                                        <td>customer_id</td>
                                        <td>ID for this customer</td>
                                      </tr>
                                      <tr>
                                        <td>first_name</td>
                                        <td>First name to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>last_name</td>
                                        <td>Last name to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>company</td>
                                        <td>Company name to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>address1</td>
                                        <td>Street (etc.) address, first line</td>
                                      </tr>
                                      <tr>
                                        <td>address2</td>
                                        <td>Street (etc.) address, second line</td>
                                      </tr>
                                      <tr>
                                        <td>city</td>
                                        <td>City to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>state</td>
                                        <td>State/province/region to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>zip</td>
                                        <td>Postal/ZIP code to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>country</td>
                                        <td>Country to ship to</td>
                                      </tr>
                                      <tr>
                                        <td>phone</td>
                                        <td>Addressee’s phone number</td>
                                      </tr>
                                      <tr>
                                        <td>state_id</td>
                                        <td>ID for destination state/province/region</td>
                                      </tr>
                                      <tr>
                                        <td>country_id</td>
                                        <td>ID for destination country</td>
                                      </tr>
                                      <tr>
                                        <td>destination</td>
                                        <td>residential or commercial</td>
                                      </tr>
                                      <tr>
                                        <td>last_used</td>
                                        <td>Boolean, indicating whether this was the last-used shipping address for this customer</td>
                                      </tr>
                                      <tr>
                                        <td>full_name</td>
                                        <td>Full name of addressee</td>
                                      </tr>
                                      <tr>
                                        <td>edit_url</td>
                                        <td>URL for customer to edit this shipping address</td>
                                      </tr>
                                      <tr>
                                        <td>delete_url</td>
                                        <td>URL for customer to delete this shipping address </td>
                                      </tr>
                                    </table>
                          - title: 'Blog '
                            route:
                              path: /blog
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <a name="Stencil-Blog-ref"></a>Blog objects
                                    map to a merchant’s storefront blog:


                                    <ul>

                                    <li><a href="#Blog">Blog</a></li>
                                     <li><a href="#Post">Blog Post</a></li>
                                    </ul>


                                    These objects are called on the default
                                    `<theme-name>/templates/components/blog/post.html`
                                    partial.


                                    ## <div id="Blog"></div>Blog


                                    <b>Description:</b> Blog-specific properties
                                    for the blog feature within BigCommerce
                                    storefronts 


                                    <b>Handlebars Expression:</b> `{{blog}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Blog name</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>Blog custom url</td>
                                      </tr>
                                      <tr>
                                        <td>pagination</td>
                                        <td>References pagination model</td>
                                      </tr>
                                      <tr>
                                        <td>posts </td>
                                        <td>A list of posts for the blog index; default sorting is by date_published,<br> from most-recent to earliest</td>
                                      </tr>
                                      <tr>
                                        <td>author</td>
                                        <td>Author of the blog post</td>
                                      </tr>
                                      <tr>
                                        <td>title</td>
                                        <td>Title of the blog post</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>body</td>
                                        <td>Body of the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>thumbnail</td>
                                        <td>Image thumbnail for the blog entry, in <a href="/docs/stencil-image-common-object">Stencil image format</a></td>
                                      </tr>
                                      <tr>
                                        <td>date_published</td>
                                        <td>Date the blog entry was published</td>
                                      </tr>
                                      <tr>
                                        <td>social</td>
                                        <td>Social media tags for the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>tags </td>
                                        <td>Tags for the blog</td>
                                      </tr>
                                      <tr>
                                        <td>name</td>
                                        <td>Name for the tag</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL for the tag</td>
                                      </tr>
                                    </table>



                                    ## <div NAME="Post"></div>Blog Post


                                    <b>Description:</b> Individual blog post
                                    object


                                    <b>Handlebars Expression:</b>
                                    `{{blog.post}}`


                                    <b>Object Properties:</b>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td>author</td>
                                        <td>Author of the blog post</td>
                                      </tr>
                                      <tr>
                                        <td>title</td>
                                        <td>Title of the blog post</td>
                                      </tr>
                                      <tr>
                                        <td>url</td>
                                        <td>URL of the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>body</td>
                                        <td>Body of the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>thumbnail</td>
                                        <td>Image thumbnail for the blog entry, in <a href="/docs/stencil-image-common-object">Stencil image format</a></td>
                                      </tr>
                                      <tr>
                                        <td>date_published</td>
                                        <td>Date the blog entry was published</td>
                                      </tr>
                                      <tr>
                                        <td>social</td>
                                        <td>Social media tags for the blog entry</td>
                                      </tr>
                                      <tr>
                                        <td>tags </td>
                                        <td>Tags for the blog</td>
                                      </tr>
                                      <tr>
                                        <td> name</td>
                                        <td>Name for the tag</td>
                                      </tr>
                                      <tr>
                                        <td> url</td>
                                        <td>URL for the tag</td>
                                      </tr>
                                    </table>
                          - title: Forms
                            route:
                              path: /forms
                            data:
                              blocks:
                                - type: html
                                  data: <h1>Forms Objects</h1>
                                - type: text
                                  data: >-
                                    ## Forms Objects

                                    Forms objects map to dynamic forms
                                    associated with specific objects:<br>


                                    <ul>
                                      <li><a href="#AccountForm">Account Form</a></li>
                                     <li><a href="#AddressForm">Account Address Form</a></li>
                                     <li><a href="#WishForm">Wishlist Form</a></li>
                                     <li><a href="#GiftForm">Gift Certificate Form</a></li>
                                     <li><a href="#ContactForm">Contact Us Form</a></li>
                                    </ul>
                                - type: text
                                  data: >-
                                    ### Account Form


                                    <b>Description:</b> The form object used to
                                    edit a customer object. <br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{forms.account}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">first_name</td>
                                        <td class="">First name of the customer being edited</td>
                                      </tr>
                                      <tr>
                                        <td class="">last_name</td>
                                        <td class="">Last name of the customer being edited</td>
                                      </tr>
                                      <tr>
                                        <td class="">company_name</td>
                                        <td class="">Company of the customer being edited</td>
                                      </tr>
                                      <tr>
                                        <td class="">phone</td>
                                        <td class="">Phone number of the customer being edited</td>
                                      </tr>
                                      <tr>
                                        <td class="">error</td>
                                        <td class="">Message to display (generated by the BigCommerce App) when customer’s account edit fails</td>
                                      </tr>
                                      <tr>
                                        <td class="">success</td>
                                        <td class="">Message to display (generated by the BigCommerce App) when customer’s account edit succeeds</td>
                                      </tr>
                                    </table>
                                - type: text
                                  data: >-
                                    ### Account Address Form 


                                    <b>Description:</b> Form object presented to
                                    customers in the Add/Edit Address page.
                                    Called on the default <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/components/account/address-list.html</span></nobr>
                                    partial and <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/pages/account/add-address.html</span></nobr>
                                    template. <br>


                                    <b>Handlebars Expression</b><b>:</b> <span
                                    class="inline-code">{{forms.address}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">address_id</td>
                                        <td class="">ID for this shipping address</td>
                                      </tr>
                                      <tr>
                                        <td class="">shipping_fields</td>
                                        <td class="">Array of form fields that define each shipping address for this customer; for details, see this repo:
                                    https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms</td>
                                      </tr>
                                      <tr>
                                        <td class="">action</td>
                                        <td class="">URL to the proper handler (Update Address versus Save New Address)</td>
                                      </tr>
                                      <tr>
                                        <td class="">error</td>
                                        <td class="">Message to display when form entry fails (defined by the BigCommerce App)</td>
                                      </tr>
                                    </table>
                                - type: text
                                  data: >-
                                    ### Wishlist Form


                                    <b>Description:</b> Form object presented to
                                    customers on the Add/Edit Wishlist page.
                                    Called on the default <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/components/account/add-wishlist.html</span></nobr>
                                    partial and <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/pages/account/add-wishlist.html</span></nobr>
                                    template. <br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{forms.wishlist}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Displayed name for this wishlist</td>
                                      </tr>
                                      <tr>
                                        <td class="">id</td>
                                        <td class="">ID for this wishlist</td>
                                      </tr>
                                      <tr>
                                        <td class="">is_public</td>
                                        <td class="">Boolean indicating whether this wishlist is displayed to other store visitors</td>
                                      </tr>
                                      <tr>
                                        <td class="">errors</td>
                                        <td class="">Message to display when form entry fails (generated by the BigCommerce App)</td>
                                      </tr>
                                      <tr>
                                        <td class="">action</td>
                                        <td class="">URL to the proper handler (Update Wish List versus Save New Wish List)</td>
                                      </tr>
                                    </table>
                                - type: text
                                  data: >-
                                    <h2> <A NAME="GiftForm"></a>Gift Certificate
                                    Form</h2>


                                    <b>Description:</b><b><em> </em></b>Form
                                    object used to create and edit a gift
                                    certificate object for the merchant's store.
                                    Called on the default <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;templates/pages/gift-certificate/purchase.html</span></nobr>
                                    template. <br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{forms.gift_certificate}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">editing</td>
                                        <td class="">Whether the current context is editing a gift certificate in the cart, or adding a new gift certificate</td>
                                      </tr>
                                      <tr>
                                        <td class="">can_use_custom_amount</td>
                                        <td class="">Whether the customer can enter free-text input (otherwise, must select from a drop-down list)</td>
                                      </tr>
                                      <tr>
                                        <td class="">amount_options</td>
                                        <td class="">If can_use_custom_amount is disabled, this variable fills the dropdown with the available options, in <a href="/docs/price-common-object">price object</a> form</td>
                                      </tr>
                                      <tr>
                                        <td class="">minimum</td>
                                        <td class=""><a href="/docs/price-common-object">Price object</a> that defines the minimum amount a customer can enter (when can_use_custom_amount is enabled)</td>
                                      </tr>
                                      <tr>
                                        <td class="">maximum</td>
                                        <td class=""><a href="/docs/price-common-object">Price object</a> that defines the minimum amount a customer can enter  (when can_use_custom_amount is enabled)</td>
                                      </tr>
                                      <tr>
                                        <td class="">expires_in_days</td>
                                        <td class="">If the gift certificates expire, this will be non-0 numerical days</td>
                                      </tr>
                                      <tr>
                                        <td class="">errors</td>
                                        <td class="">Server-side validation errors from the form’s submission</td>
                                      </tr>
                                      <tr>
                                        <td class="">themes</td>
                                        <td class="">A list of active gift-certificate themes (Birthday, Celebration, General, etc.), each stored as an object containing corresponding display and value children</td>
                                      </tr>

                                      <tr>
                                        <td class=""><span class="indent1">display</span></td>
                                        <td class="">Birthday, Celebration, General, etc.</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">value</span></td>
                                        <td class="">Birthday.html, Celebration.html, General.html, etc.</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">action</td>
                                        <td class="">The action for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">cart_item_id</td>
                                        <td class="">If editing, this is the cart item id being edited.</td>
                                      </tr>
                                      <tr>
                                        <td class="">values</td>
                                        <td class="">An array of the form values for prefilling</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">to_name</span></td>
                                        <td class="">The recipient's name</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">to_email</span></td>
                                        <td class="">To email address</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">from_name</span></td>
                                        <td class="">The sender’s name</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">from_email</span></td>
                                        <td class="">From email address</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">message</span></td>
                                        <td class="">An optional custom message</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">amount</span></td>
                                        <td class=""><a href="/docs/price-common-object">Price object</a> that defines the amount of the gift certificate</td>
                                      </tr>
                                    </table>
                                - type: text
                                  data: >-
                                    ### Contact Us Form 


                                    <b>Description:</b><b><em> </em></b>Form
                                    object used to manage merchants’ "Contact
                                    Us" pages. Called on the default <NOBR><span
                                    class="inline-code">&lt;theme-name&gt;/templates/pages/contact-us.html</span></nobr>
                                    template. <br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{forms.contact}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">success</td>
                                        <td class="">Boolean indicating whether form was just submitted</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Boolean indicating whether name input is enabled for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">company</td>
                                        <td class="">Boolean indicating whether company-name input is enabled for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">phone</td>
                                        <td class="">Boolean indicating whether phone-number input is enabled for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">order</td>
                                        <td class="">Boolean indicating whether order-number input is enabled for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">rma</td>
                                        <td class="">Boolean indicating whether RMA (Return Merchandise Authorization) input is enabled for the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">page_id</td>
                                        <td class="">Page ID for this contact page (there can be multiple contact pages)</td>
                                      </tr>
                                      <tr>
                                        <td class="">captcha_url</td>
                                        <td class="">URL to provide an image file for a CAPTCHA field</td>
                                      </tr>
                                      <tr>
                                        <td class="">text</td>
                                        <td class="">Text content to display above the form</td>
                                      </tr>
                                      <tr>
                                        <td class="">error</td>
                                        <td class="">Potential error that occurred during previous form submission</td>
                                      </tr>
                                    </table>
            blocks: []
        - title: Adding Event Hooks to Your Theme
          route:
            path: /adding-event-hooks-to-your-theme
          data:
            children:
              - title: Event Hook Overview and Examples
                route:
                  path: /event-hook-overview-and-examples
                data:
                  blocks:
                    - type: html
                      data: <h1>Event Hook Overview and Examples</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#event_event-hook\"></a>Event Hook Overview</li>\n    <li><a href=\"#event_cookie-notification\"></a>Cookie Notification Example</li>\n    <li><a href=\"#event_ecart-dialog\"></a>Cart Dialog Example</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Event Hook Overview 


                        Stencil themes provide access to remote resources
                        through data tags and event hooks. Developers can use
                        these hooks to trigger defined events: A theme can hook
                        to an event to perform its own actions or calculations,
                        based on shopper behavior.


                        Your Stencil themes incorporate these resources by
                        importing the stencil-utils module, using this
                        statement:


                        `import utils from '@bigcommerce/stencil-utils';`
                      header:
                        anchor: event_event-hook
                    - type: text
                      data: >
                        ## Cookie Notification Example


                        In the JavaScript-only example below, the
                        `cookie-privacy-notification` hook enables customization
                        of the alert window that displays European
                        Union–required cookie notifications:


                        First, ensure you have loaded the `stencil-utils`
                        package with the following command:


                        `import utils from '@bigcommerce/stencil-utils';`


                        European websites must notify users of cookies to comply
                        with European Union law.

                        The following code implements hook that will alert
                        shoppers that the website uses cookies.


                        ```

                        export default function() {

                          // Here you can override the default browser alert box by
                          // hooking to the 'cookie-privacy-notification' hook.
                          utils.hooks.on('cookie-privacy-notification', (event, privacyMessage) => {

                            // You can make your own custom modal or alert box
                            // appear in your theme using the privacyMessage provided
                            myCustomAlert(privacyMessage);

                            // Call event.preventDefault() to prevent the default
                            // browser alert from occurring in stencil-utils
                            event.preventDefault();
                          });
                        }

                        ```


                        A theme could listen for the
                        `cookie-privacy-notification` event to override the
                        browser’s default notification UI.
                      header:
                        anchor: event_cookie-notification
                    - type: text
                      data: >
                        ## Cart Dialog Example


                        In the following code snippet from Cornerstone in
                        [templates/components/products/product-view.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/components/products/product-view.html),
                        note the data tag named `data‑cart‑item‑add`:


                        ```

                        <form class="form" method="post"
                        action="{{product.cart_url}}"
                            enctype="multipart/form-data" data-cart-item-add>
                        ```


                        This data tag enables the emission of the
                        `cart‑item‑add` event in this next snippet:


                        ```

                        /*  
                         * Import all product-specific js 
                         */
                        [...]

                        import utils from '@bigcommerce/stencil-utils';

                        [...]

                        addProductToCart() {
                            utils.hooks.on('cart-item-add', (event) => {
                                event.preventDefault();
                            });
                        }

                        ```
                      header:
                        anchor: event_cart-dialog
              - title: Remote API Example
                route:
                  path: /remote-api-example
                data:
                  blocks:
                    - type: html
                      data: <h1>Remote API Example</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#remote_remote-api-example\"></a>Remote API Example</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Remote API Example


                        Client-side JavaScript can access event hooks directly,
                        without using Handlebars statements. By setting up
                        listeners for these events, you can exercise granular
                        control over your storefront’s user interface. For
                        example, you can pop up custom windows when certain
                        events occur.


                        Below is an example implemented within a Stencil theme.
                        This code adds an item to the shopping cart, and
                        displays the result in a custom modal dialog rather than
                        a cart page.


                        _This particular example uses certain conventions of ES6
                        JavaScript (also known as ECMAScript 6 or

                        ECMAScript 2015)._


                        Here is the signature of the cart.itemAdd function used
                        below, with parameters for product ID, quantity, and
                        options:


                        `itemAdd(FormData, callback)`


                        Here is the signature of the cart.getContent function
                        used further down:


                        `getContent(options, callback)`


                        This first complete code snippet calls `cart.itemAdd`,
                        catches any errors, and displays the cart contents in a
                        modal dialog: 


                        ```
                         // Add item to cart
                                utils.api.cart.itemAdd(new FormData(form), (err, response) => {
                                    const errorMessage = err || response.data.error;

                                    $addToCartBtn
                                        .val(originalBtnVal)
                                        .prop('disabled', false);

                                    this.$overlay.hide();

                                    // Guard statement
                                    if (errorMessage) {
                                        // Strip the HTML from the error message
                                        const tmp = document.createElement('DIV');
                                        tmp.innerHTML = errorMessage;

                                        return alert(tmp.textContent || tmp.innerText);
                                    }

                                    // Open preview modal and update content
                                    if (this.previewModal) {
                                        this.previewModal.open();

                                        this.updateCartContent(this.previewModal, response.data.cart_item.hash);
                                    } else {
                                        this.$overlay.show();
                                        // if no modal, redirect to the cart page
                                        this.redirectTo(response.data.cart_item.cart_url || this.context.urls.cart);
                                    }
                                });
                        ```


                        This final code snippet calls `cart.getContent` to fetch
                        the cart contents, then display it in a preview format,
                        which is specified by a `template` option with a value
                        of `cart/preview`:


                        ```
                          /**
                             * Get cart contents
                             *
                             * @param {String} cartItemHash
                             * @param {Function} onComplete
                             */
                            getCartContent(cartItemHash, onComplete) {
                                const options = {
                                    template: 'cart/preview',
                                    params: {
                                        suggest: cartItemHash,
                                    },
                                    config: {
                                        cart: {
                                            suggestions: {
                                                limit: 4,
                                            },
                                        },
                                    },
                                };

                                utils.api.cart.getContent(options, onComplete);
                            }
                        ```
              - title: Data Tags/Event Hook Reference
                route:
                  path: /data-tags-event-hooks-reference
                data:
                  blocks:
                    - type: html
                      data: <h1>Data Tags/Event Hook Reference</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#data_stencil-data-tags\"></a>Stencil Data Tags and Event Hooks</li>\n\t</ul>\n</div>"
                    - type: text
                      data: "## Stencil Data Tags and Event Hooks\nStencil themes provide the following chains of data tags, delegated DOM (Document Object Model) events, emitted Stencil event hooks, and Stencil event parameter(s).\n\n### Cart Item Added\n\nHook for items added to the customer’s shopping cart.\n\n**Function Signature:**\n\n```\nitemAdd() {\n    this.$body.on('submit', '[data-cart-item-add]', (event) => {\n        this.emit('cart-item-add', event, event.target);\n    });\n}\n```\n\n<table>\n\t<tr>\n\t\t<th>Data Tag</th>\n\t\t<th>Delegated DOM Event</th>\n\t\t<th>Stencil Event/Hook</th>\n\t\t<th>Stencil Event Parameter(s)</th>\n\t</tr>\n\t<tr>\n\t\t<td>data-cart-item-add</td>\n\t\t<td>submit</td>\n\t\t<td>cart-item-add</td>\n\t\t<td>event, event.target</td>\n\t</tr>\n</table>\n\n### Faceted-Search Events\n\nHooks for faceted-search selections that the customer initiates or submits.\n\n**Function Signature**\n\n```\nsearchEvents() {\n  this.$body.on('click', '[data-faceted-search-facet]', (event) => {\n        this.emit('facetedSearch-facet-clicked', event);\n  });\n \n  this.$body.on('submit', '[data-faceted-search-range]', (event) => {\n        this.emit('facetedSearch-range-submitted', event);\n  });\n}\n\n```\n\n<table>\n\t<tr>\n\t\t<th>Data Tag</th>\n\t\t<th>Delegated DOM Event</th>\n\t\t<th>Stencil Event/Hook</th>\n\t\t<th>Stencil Event Parameter(s)</th>\n\t</tr>\n\t<tr>\n\t\t<td>data-faceted-search-facet</td>\n\t\t<td>click</td>\n\t\t<td>facetedSearch-facet-clicked</td>\n\t\t<td>event</td>\n\t</tr>\n\t<tr>\n\t\t<td>data-faceted-search-range</td>\n\t\t<td>submit</td>\n\t\t<td>facetedSearch-range-submitted</td>\n\t\t<td>event</td>\n\t</tr>\n</table>"
                      header:
                        anchor: data_stencil-data-tags
              - title: stencil-utils API Reference
                route:
                  path: /stencil-utils-api-reference
                data:
                  blocks:
                    - type: html
                      data: <h1>stencil-utils API Reference</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#remote_remote-api-example\"></a>stencil-utils API Reference</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        <h2> <A NAME="API-js"></a>API [api.js]</h2>


                        The <span class="inline-code">api.getPage()</span>
                        function allows you to add Ajax functionality to your
                        themes.<br>


                        <br> <span id="getpage"> <b>getPage Signature</b>
                        </span> <br>


                        The following statement passes <span
                        class="inline-code">url</span> and <span
                        class="inline-code">options</span> arguments to the
                        <span class="inline-code">api.getPage()</span>
                        function:<br><p></p>


                        <pre>utils.api.getPage(url, options, callback)

                        </pre><br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">url</td>
                            <td class="">String</td>
                            <td class="">URL to which you want to send a request (for example: localhost:4000/cart.php)</td>
                          </tr>
                          <tr>
                            <td class="">options</td>
                            <td class="">Object</td>
                            <td class="">Can contain <span class="inline-code">template</span>, <span class="inline-code"><a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">FormData</a></span> (for POST methods), <span class="inline-code">params</span>&nbsp;(for GET methods), and/or <span class="inline-code">config</span>. <br><br>    
                              The <span class="inline-code">template</span> option allows you to select a particular template, or an array of templates, for rendering one page. Each value must correspond to a file present in the theme's <span class="inline-code">templates/components/</span> subdirectory. <br><br>
                              The <span class="inline-code">config</span> option can be used to pass extra resources, corresponding to attributes that are valid in a page's <a href="/docs/using-yaml-front-matter">front matter</a>, as an object.
                            </td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>


                        The <span class="inline-code">config</span> argument
                        works like front matter: it encapsulates JSON. For a
                        usage example of <span
                        class="inline-code">config</span>, see <NOBR><a
                        href="/docs/remote-api-example">Remote API
                        Example</a></nobr>. <br><br>



                        <span id="getPageEx"> <b>getPage Example</b> </span>
                        <br>


                        In the following example (from <span
                        class="inline-code">common/faceted-search.js</span>),
                        <span class="inline-code">api.getPage()</span> is called
                        to help execute an <span
                        class="inline-code">updateView()</span>
                        function:<br><p></p>


                        <pre>    updateView() {
                                $(this.options.blockerSelector).show();

                                api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {
                                    $(this.options.blockerSelector).hide();

                                    if (err) {
                                        throw new Error(err);
                                    }

                                    // Refresh view with new content
                                    this.refreshView(content);
                                });
                            }</pre><p></p>


                        <h2> <A NAME="Cart-API"></a>Cart API </h2>


                        The following functions allow your theme to work with
                        cart contents in customized ways.<br><br>


                        <b>itemAdd Signature</b><br>


                        The <span class="inline-code">itemAdd</span> function
                        allows your code to add an item to the cart, with
                        options:<br><p></p>


                        <pre>utils.api.cart.itemAdd(<a
                        href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">FormData</a>,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class=""><A NAME="CartAPI-FormData"></a>formData</td>
                            <td class=""><a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">FormData</a> object </td>
                            <td class="">Contains all details about the added item and its product options</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <span id="itemAddEx"> <b>itemAdd Example</b> </span>
                        <br>


                        <span class="inline-code">itemAdd</span> is called at
                        the head of the following example (from <span
                        class="inline-code">common/product-details.js</span>) to
                        populate the cart:<br><p></p>


                        <pre>        // Add item to cart
                                utils.api.cart.itemAdd(new FormData(form), (err, response) => {
                                    const errorMessage = err || response.data.error;

                                    $addToCartBtn
                                        .val(originalBtnVal)
                                        .prop('disabled', false);

                                    this.$overlay.hide();

                                    // Guard statement
                                    if (errorMessage) {
                                        // Strip the HTML from the error message
                                        const tmp = document.createElement('DIV');
                                        tmp.innerHTML = errorMessage;

                                        return alert(tmp.textContent || tmp.innerText);
                                    }

                                    // Open preview modal and update content
                                    if (this.previewModal) {
                                        this.previewModal.open();

                                        this.updateCartContent(this.previewModal, response.data.cart_item.hash);
                                    } else {
                                        this.$overlay.show();
                                        // if no modal, redirect to the cart page
                                        this.redirectTo(response.data.cart_item.cart_url || this.context.urls.cart);
                                    }
                                }); </pre><br>


                        <b>itemUpdate Signature</b><br>


                        The <span class="inline-code">itemUpdate</span> function
                        allows your code to update a specified cart item’s
                        quantity:<br>


                        <p></p><pre>utils.api.cart.itemUpdate(itemId, qty,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">itemId</td>
                            <td class="">String</td>
                            <td class="">The item’s ID</td>
                          </tr>
                          <tr>
                            <td class="">qty</td>
                            <td class="">Integer</td>
                            <td class="">The item’s quantity in the cart</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>


                        <span id="itemUpdateEx"> <b>itemUpdate  Example</b>
                        </span> <br>


                        In the following example (from <span
                        class="inline-code">cart.js</span>), <span
                        class="inline-code">itemUpdate</span> is called just
                        before the final if/else test for an empty
                        cart:<br><p></p>


                        <pre>    cartUpdate($target) {
                                const itemId = $target.data('cartItemid');
                                const $el = $(`#qty-${itemId}`);
                                const oldQty = parseInt($el.val(), 10);
                                const maxQty = parseInt($el.data('quantityMax'), 10);
                                const minQty = parseInt($el.data('quantityMin'), 10);
                                const minError = $el.data('quantityMinError');
                                const maxError = $el.data('quantityMaxError');
                                const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;

                                // Does not quality for min/max quantity
                                if (newQty < minQty) {
                                    return swal({
                                        text: minError,
                                        type: 'error',
                                    });
                                } else if (maxQty > 0 && newQty > maxQty) {
                                    return swal({
                                        text: maxError,
                                        type: 'error',
                                    });
                                }

                                this.$overlay.show();

                                utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {
                                    this.$overlay.hide();

                                    if (response.data.status === 'succeed') {
                                        // if the quantity is changed "1" from "0", we have to remove the row.
                                        const remove = (newQty === 0);

                                        this.refreshContent(remove);
                                    } else {
                                        $el.val(oldQty);
                                        swal({
                                            text: response.data.errors.join('\n'),
                                            type: 'error',
                                        });
                                    }
                                });
                            } </pre><br>


                        <b>itemRemove Signature</b><br>


                        The <span class="inline-code">itemRemove</span> function
                        allows your code to remove items from the cart:<br>


                        <p></p><pre>utils.api.cart.itemRemove(itemId,
                        callback)</pre>
                         <br>

                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">itemId</td>
                            <td class="">String</td>
                            <td class="">The item’s ID</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <span id="itemRemoveEx"> <b>itemRemove Example</b>
                        </span><br>


                        In the following example (from <span
                        class="inline-code">cart.js</span>), <span
                        class="inline-code">itemRemove</span> is called before
                        the if/else test:<br><p></p>


                        <pre>    cartRemoveItem(itemId) {
                                this.$overlay.show();
                                utils.api.cart.itemRemove(itemId, (err, response) => {
                                    if (response.data.status === 'succeed') {
                                        this.refreshContent(true);
                                    } else {
                                        alert(response.data.errors.join('\n'));
                                    }
                                });
                            } </pre><br>


                        <b>update Signature</b><br>


                        The <span class="inline-code">update</span> function
                        allows your code to update the set of items in the
                        cart:<br>


                        <p></p><pre>utils.api.cart.update(itemId, qty,
                        callback)</pre>

                         <br>

                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">items</td>
                            <td class="">Array</td>
                            <td class="">The items in the cart</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <b>update Example</b><br>


                        The following example shows a call to <span
                        class="inline-code">update</span> within the <span
                        class="inline-code">itemUpdate</span>
                        function:<br><p></p>


                        <pre>    /**
                            itemUpdate(itemId, qty, callback) {
                                let callbackArg = callback;
                                let items;

                                if (Array.isArray(itemId) && typeof qty === 'function') {
                                    callbackArg = qty;
                                    items = itemId;
                                } else {
                                    items = [
                                        {
                                            id: itemId,
                                            quantity: qty,
                                        },
                                    ];
                                }

                                this.update(items, (err, response) => {
                                    const emitData = {
                                        items,
                                        err,
                                        response,
                                    };

                                    Hooks.emit('cart-item-update-remote', emitData);
                                    callbackArg(err, response);
                                });
                            } </pre><br>


                        <b>getItemGiftWrappingOptions Signature</b><br>


                        The <span
                        class="inline-code">getItemGiftWrappingOptions</span>
                        function allows your code to retrieve gift-wrapping
                        options for the current cart item, in customized
                        ways:<br><p></p>



                        <pre>utils.api.cart.getItemGiftWrappingOptions(itemId,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">itemId</td>
                            <td class="">String</td>
                            <td class="">The cart item</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <b>getItemGiftWrappingOptions Example</b> <br>


                        The following example (from <span
                        class="inline-code">cart.js</span>) calls <span
                        class="inline-code">getItemGiftWrappingOptions</span> to
                        display gift-wrapping options in a modal:<br><p></p>


                        <pre>    bindGiftWrappingEvents() {
                                const modal = defaultModal();

                                $('[data-item-giftwrap]').on('click', (event) => {
                                    const itemId = $(event.currentTarget).data('item-giftwrap');
                                    const options = {
                                        template: 'cart/modals/gift-wrapping-form',
                                    };

                                    event.preventDefault();

                                    modal.open();

                                    utils.api.cart.getItemGiftWrappingOptions(itemId, options, (err, response) => {
                                        modal.updateContent(response.content);

                                        this.bindGiftWrappingForm();
                                    });
                                });
                            } </pre><br>


                        <b>submitItemGiftWrappingOption Signature</b><br>


                        The <span
                        class="inline-code">submitItemGiftWrappingOption</span>
                        function allows your code to handle the customer’s
                        gift-wrapping selection for the current cart
                        item:<br><p></p>


                        <pre>utils.api.cart.submitItemGiftWrappingOption(itemId,
                        qty, callback)</pre>

                        <br>



                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">itemId</td>
                            <td class="">String</td>
                            <td class="">The cart item</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <b>submitItemGiftWrappingOption Example</b> <br>


                        This commented example shows a simple call to <span
                        class="inline-code">submitItemGiftWrappingOption</span>:


                        <pre>    /**
                             * Submit giftwrapping options
                             *
                             * @param {String} itemId
                             * @param {Function} callback
                             */
                            submitItemGiftWrappingOption(itemId, params, callback) {
                                this.remoteRequest(`/gift-wrapping/${itemId}`, 'POST', { params }, callback);
                            } </pre><br>


                        <b>getContent Signature</b><br>


                        The <span class="inline-code">getContent</span> function
                        allows your code to display the cart contents in
                        customized ways:<br>


                        <p></p><pre>utils.api.cart.getContent(options,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class=""><A NAME="getContent-options"></a>options</td>
                            <td class="">Object</td>
                            <td class="">Template containing content and totals children</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>


                        <span id="getContentEx"> <b>getContent Examples</b>
                        </span> <br>


                        The following example (from <span
                        class="inline-code">common/product-details.js</span>) a
                        call to <span class="inline-code">getContent</span>, set
                        up by a prior call to <span
                        class="inline-code">getCartContent</span>:<br><p></p>


                        <pre>    /**
                             * Get cart contents
                             *
                             * @param {String} cartItemHash
                             * @param {Function} onComplete
                             */
                            getCartContent(cartItemHash, onComplete) {
                                const options = {
                                    template: 'cart/preview',
                                    params: {
                                        suggest: cartItemHash,
                                    },
                                    config: {
                                        cart: {
                                            suggestions: {
                                                limit: 4,
                                            },
                                        },
                                    },
                                };

                                utils.api.cart.getContent(options, onComplete);
                            } </pre><p></p>

                        This example (from <span
                        class="inline-code">cart.js</span>) shows a call to
                        <span class="inline-code">getContent</span> within the
                        <span class="inline-code">refreshContent</span>
                        function:<br><p></p>


                        <pre>    refreshContent(remove) {
                                const $cartItemsRows = $('[data-item-row]', this.$cartContent);
                                const $cartPageTitle = $('[data-cart-page-title]');
                                const options = {
                                    template: {
                                        content: 'cart/content',
                                        totals: 'cart/totals',
                                        pageTitle: 'cart/page-title',
                                        statusMessages: 'cart/status-messages',
                                    },
                                };

                                this.$overlay.show();

                                // Remove last item from cart? Reload
                                if (remove && $cartItemsRows.length === 1) {
                                    return window.location.reload();
                                }

                                utils.api.cart.getContent(options, (err, response) => {
                                    this.$cartContent.html(response.content);
                                    this.$cartTotals.html(response.totals);
                                    this.$cartMessages.html(response.statusMessages);

                                    $cartPageTitle.replaceWith(response.pageTitle);
                                    this.bindEvents();
                                    this.$overlay.hide();

                                    const quantity = $('[data-cart-quantity]', this.$cartContent).data('cart-quantity') || 0;

                                    $('body').trigger('cart-quantity-update', quantity);
                                });
                            } </pre><p></p> 

                        Here is a final example of a call to <span
                        class="inline-code">getContent</span>, from <span
                        class="inline-code">global/cart-preview.js</span>:<br><p></p>


                        <pre>    $cart.on('click', (event) => {
                                const options = {
                                    template: 'common/cart-preview',
                                };

                                // Redirect to full cart page
                                //
                                // https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
                                // In summary, we recommend looking for the string 'Mobi' anywhere in the User Agent to detect a mobile device.
                                if (/Mobi/i.test(navigator.userAgent)) {
                                    return event.stopPropagation();
                                }

                                event.preventDefault();

                                $cartDropdown
                                    .addClass(loadingClass)
                                    .html($cartLoading);
                                $cartLoading
                                    .show();

                                utils.api.cart.getContent(options, (err, response) => {
                                    $cartDropdown
                                        .removeClass(loadingClass)
                                        .html(response);
                                    $cartLoading
                                        .hide();
                                });
                            }); </pre><br>


                        <b><A NAME="getShippingQuotes"></a>getShippingQuotes
                        Signature</b><br>


                        The <span class="inline-code">getShippingQuotes</span>
                        function allows your code to retrieve shipping-cost
                        quotes for the cart’s contents. It returns <span
                        class="inline-code">shippingQuote</span> objects that
                        contain IDs. You must follow <span
                        class="inline-code">getShippingQuotes</span> by calling
                        <span class="inline-code"><a
                        href="#submitShippingQuotes">submitShippingQuote</a></span>
                        on a <span class="inline-code">quoteId</span>:<br>


                        <p></p><pre>utils.api.cart.getShippingQuotes(params,
                        renderWith, callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">params</td>
                            <td class="">Object</td>
                            <td class="">Contains country_id, state_id, and zip_code</td>
                          </tr>
                          <tr>
                            <td class="">template</td>
                            <td class="">String/  Array/ Object</td>
                            <td class="">The template to use for rendering</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <b>getShippingQuotes and submitShippingQuote Example</b>
                        <br><p></p>


                        The following example (from <span
                        class="inline-code">cart/shipping-estimator.js</span>)
                        shows calls to both <span
                        class="inline-code">getShippingQuotes</span> and <span
                        class="inline-code">submitShippingQuote</span>:<br><p></p>


                        <pre>    bindEstimatorEvents() {
                                const $estimatorContainer = $('.shipping-estimator');
                                const $estimatorForm = $('.estimator-form');

                                $estimatorForm.on('submit', (event) => {
                                    const params = {
                                        country_id: $('[name="shipping-country"]', $estimatorForm).val(),
                                        state_id: $('[name="shipping-state"]', $estimatorForm).val(),
                                        city: $('[name="shipping-city"]', $estimatorForm).val(),
                                        zip_code: $('[name="shipping-zip"]', $estimatorForm).val(),
                                    };

                                    event.preventDefault();

                                    utils.api.cart.getShippingQuotes(params, 'cart/shipping-quotes', (err, response) => {
                                        $('.shipping-quotes').html(response.content);

                                        // bind the select button
                                        $('.select-shipping-quote').on('click', (clickEvent) => {
                                            const quoteId = $('.shipping-quote:checked').val();

                                            clickEvent.preventDefault();

                                            utils.api.cart.submitShippingQuote(quoteId, () => {
                                                location.reload();
                                            });
                                        });
                                    });
                                }); </pre><br>

                        <A NAME="submitShippingQuote"></a>
                        <b>submitShippingQuote Signature</b><br>


                        The <span class="inline-code">submitShippingQuote</span>
                        function must be called after <span
                        class="inline-code"><a
                        href="#getShippingQuotes">getShippingQuote</a></span>,
                        which returns <span
                        class="inline-code">shippingQuote</span> objects that
                        contain IDs. The cart page renders the shipping quotes.
                        When the user selects one of the quotes, this function
                        sends that <span class="inline-code">quoteId</span> to
                        the backend:<br>


                        <p></p><pre>utils.api.cart.submitShippingQuote(quoteId,
                        callback)</pre>

                         <br>

                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">quoteId</td>
                            <td class="">Number</td>
                            <td class="">ID for a shipping quote returned by <span class="inline-code"><a href="#getShippingQuotes">getShippingQuotes</a></span></td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>


                        (For sample code, please see <b>getShippingQuotes and
                        submitShippingQuote Example</b>, above.)<br><br>



                        <b>applyCode Signature</b><br>


                        The <span class="inline-code">applyCode</span> function
                        applies a coupon code or gift certificate to the
                        cart:<br>


                        <p></p><pre>utils.api.cart.applyCode(code,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">code</td>
                            <td class="">String</td>
                            <td class="">Alphanumeric representation of the coupon or gift-certificate code</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>


                        In the following example (from <span
                        class="inline-code">cart.js</span>),  <span
                        class="inline-code">applyCode</span> is called before
                        the final if/else test to apply a coupon
                        code:<br><p></p>


                        <pre>    bindPromoCodeEvents() {
                                const $couponContainer = $('.coupon-code');
                                const $couponForm = $('.coupon-form');
                                const $codeInput = $('[name="couponcode"]', $couponForm);

                                $('.coupon-code-add').on('click', (event) => {
                                    event.preventDefault();

                                    $(event.currentTarget).hide();
                                    $couponContainer.show();
                                    $('.coupon-code-cancel').show();
                                    $codeInput.focus();
                                });

                                $('.coupon-code-cancel').on('click', (event) => {
                                    event.preventDefault();

                                    $couponContainer.hide();
                                    $('.coupon-code-cancel').hide();
                                    $('.coupon-code-add').show();
                                });

                                $couponForm.on('submit', (event) => {
                                    const code = $codeInput.val();

                                    event.preventDefault();

                                    // Empty code
                                    if (!code) {
                                        return alert($codeInput.data('error'));
                                    }

                                    utils.api.cart.applyCode(code, (err, response) => {
                                        if (response.data.status === 'success') {
                                            this.refreshContent();
                                        } else {
                                            alert(response.data.errors.join('\n'));
                                        }
                                    });
                                });
                            } </pre><p></p>


                        <h2> <A NAME="Cookie"></a>Cookie Resource</h2>


                        This resource allows you to override a browser’s default
                        alert box for cookie notifications.<br><p></p>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">privacyMessage</td>
                            <td class="">Merchant-defined message informing customers of storefront’s cookie usage (e.g., to comply with E.U. notification requirement)</td>
                          </tr>
                        </tbody></table>



                        <b>Cookie Examples:</b> <br><p></p>


                        The following commented example (from <span
                        class="inline-code">global/cookieNotification.js)</span>
                        shows a call to <span
                        class="inline-code">utils.hooks.on('cookie-privacy-notification',
                        (event, privacyMessage)</span> to help comply with
                        European Union privacy requirements:<br><p></p>


                        <pre>/**
                         * European websites must notify users of cookies to comply with European Union law.
                         * This will alert shoppers that this website uses cookies.
                         */
                        export default function () {
                            /*
                            // Here you can override the default browser alert box by hooking to the 'cookie-privacy-notification' hook.
                            utils.hooks.on('cookie-privacy-notification', (event, privacyMessage) => {
                                // You can make your own custom modal or alert box appear in your theme using the privacyMessage provided
                                myCustomAlert(privacyMessage);

                                // Call event.preventDefault() to prevent the default browser alert from occurring in stencil-utils
                                event.preventDefault();
                            });
                            */

                            utils.hooks.on('cookie-privacy-notification', (event) => {
                                event.preventDefault();

                                const $privacyDialog = $('.cookieMessage');
                                $privacyDialog.show();

                                $('body').on('click', '[data-privacy-accept]', () => {
                                    utils.hooks.emit('cookie-privacy-accepted');
                                    $privacyDialog.hide();
                                });
                            });
                        } </pre><p></p> 



                        <h2> <A NAME="Countries"></a>Countries Resources</h2>


                        These functions allow your theme or app to retrieve
                        standardized country names, by numeric ID or by
                        string.<br>


                        <br><b>getById Signature</b><br>


                        The <span class="inline-code">getById</span> function
                        retrieves standardized country names by numeric ID:<br>


                        <p></p><pre>utils.api.countries.getById(countryId,
                        callback)</pre>

                         <br>

                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">countryId</td>
                            <td class="">Number</td>
                            <td class="">Country code</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        The following example a call to <span
                        class="inline-code">getById</span>, followed by a call
                        to the <span class="inline-code">getByName</span>
                        function (described below):<br><p></p>


                        <pre>    /**
                             *
                             * Get country data by id wrapper
                             *
                             * @param {Number} id
                             * @param {Function} callback
                             */
                            getById(id, callback) {
                                const url = this.endpoint + id;

                                this.remoteRequest(url, 'GET', {}, callback);
                            }

                            /**
                             * Get country data by country name
                             * @param name
                             * @param callback
                             */
                            getByName(name, callback) {
                                const url = this.endpoint + name;

                                this.remoteRequest(url, 'GET', {}, callback);
                            }
                        }
                         </pre><br>


                        <b>getByName Signature</b><br>


                        The <span class="inline-code">getByName</span> function
                        retrieves states by country name, and returns an array
                        of states that can be used in the callback:<br>


                        <p></p><pre>utils.api.countries.getByName(countryName,
                        callback)</pre>

                         <br>

                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">countryName</td>
                            <td class="">String</td>
                            <td class="">Country name</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        In the following example (from <span
                        class="inline-code">common/state-country.js</span>,
                        <span class="inline-code">getByName</span> is called
                        after the initial if test:<br><p></p>


                        <pre>   
                        $('select[data-field-type="Country"]').on('change',
                        (event) => {
                                const countryName = $(event.currentTarget).val();

                                if (countryName === '') {
                                    return;
                                }

                                utils.api.country.getByName(countryName, (err, response) => {
                                    if (err) {
                                        alert(context.state_error);

                                        return callback(err);
                                    }

                                    const $currentInput = $('[data-field-type="State"]');

                                    if (!_.isEmpty(response.data.states)) {
                                        // The element may have been replaced with a select, reselect it
                                        const $selectElement = makeStateRequired($currentInput, context);

                                        addOptions(response.data, $selectElement, options);
                                        callback(null, $selectElement);
                                    } else {
                                        const newElement = makeStateOptional($currentInput, context);

                                        callback(null, newElement);
                                    }
                                });
                            }); </pre><p></p> 


                        <h2> <A NAME="ProdAttrib"></a>Product Attributes
                        Resource</h2>


                        The <span class="inline-code">optionChange</span>
                        function is fired when the customer selects a product
                        option for the current cart item (for example, changing
                        a shirt’s color from a default "yellow" to
                        "green"):<br><br>


                        <b>optionChange Signature</b><br>


                        <p></p><pre>utils.api.productAttributes.optionChange(productId,
                        params, callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">params</td>
                            <td class="">Object</td>
                            <td class="">Contains a collection of IDs that map to product properties (color, size, etc.)</td>
                          </tr>
                          <tr>
                            <td class="">productId</td>
                            <td class="">Number</td>
                            <td class="">ID for this product</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        <b>optionChange Examples</b><br>


                        In this example (from <span
                        class="inline-code">common/product-details.js</span>),
                        <span class="inline-code">optionChange</span> is called
                        to update options in a Quick View modal:<br><p></p>


                        <pre>        // Update product attributes. If we're in
                        quick view and the product has options, then also update
                        the initial view in case items are oos
                                if (_.isEmpty(productAttributesData) && hasOptions) {
                                    const $productId = $('[name="product_id"]', $form).val();

                                    utils.api.productAttributes.optionChange($productId, $form.serialize(), (err, response) => {
                                        const attributesData = response.data || {};

                                        this.updateProductAttributes(attributesData);
                                        this.updateView(attributesData);
                                    });
                                } else {
                                    this.updateProductAttributes(productAttributesData);
                                } </pre><p></p>


                        In this example (from <span
                        class="inline-code">cart.js</span>), <span
                        class="inline-code">optionChange</span> is called before
                        the final if test:<br><p></p>


                        <pre>    cartEditOptions(itemId) {
                                const modal = defaultModal();
                                const options = {
                                    template: 'cart/modals/configure-product',
                                };

                                modal.open();

                                utils.api.productAttributes.configureInCart(itemId, options, (err, response) => {
                                    modal.updateContent(response.content);

                                    this.bindGiftWrappingForm();
                                });

                                utils.hooks.on('product-option-change', (event, option) => {
                                    const $changedOption = $(option);
                                    const $form = $changedOption.parents('form');
                                    const $submit = $('input.button', $form);
                                    const $messageBox = $('.alertMessageBox');
                                    const item = $('[name="item_id"]', $form).attr('value');

                                    utils.api.productAttributes.optionChange(item, $form.serialize(), (err, result) => {
                                        const data = result.data || {};

                                        if (err) {
                                            alert(err);
                                            return false;
                                        }  </pre><p></p>


                        <h2> <A NAME="Product"></a>Product Resource</h2>


                        The <span class="inline-code">product.getById</span>
                        function allows your code to retrieve, and to present,
                        detailed product information by product ID.<br>


                        <br><b>getById Signature</b><br>


                        <p></p><pre>utils.api.product.getById(productId, params,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">productId</td>
                            <td class="">Number</td>
                            <td class="">ID for this product</td>
                          </tr>
                          <tr>
                            <td class="">params</td>
                            <td class="">Object</td>
                            <td class="">Contains request options and/or presentation template</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody></table>



                        The following example (from <span
                        class="inline-code">global/quick-view.js</span>) calls
                        <span class="inline-code">product.getById</span> to
                        populate the Quick View modal:<br><p></p>


                        <pre>    $('body').on('click', '.quickview', (event) =>
                        {
                                event.preventDefault();

                                const productId = $(event.currentTarget).data('product-id');

                                modal.open({ size: 'large' });

                                utils.api.product.getById(productId, { template: 'products/quick-view' }, (err, response) => {
                                    modal.updateContent(response);

                                    modal.$content.find('.productView').addClass('productView--quickView');

                                    return new ProductDetails(modal.$content.find('.quickView'), context);
                                });
                            }); </pre><p></p>


                        <h2> <A NAME="Search"></a>Search Resource</h2>


                        The <span class="inline-code">search</span> function
                        allows you to present a customized user interface for
                        search results.<br>


                        <br><b>search Signature</b><br>


                        <p></p><pre>utils.api.search.search(query, params,
                        callback)</pre>

                        <br>


                        <table>
                          <tbody><tr>
                            <td class="">Argument</td>
                            <td class="">Type</td>
                            <td class="">Description/Usage</td>
                          </tr>
                          <tr>
                            <td class="">query</td>
                            <td class="">String</td>
                            <td class="">Contains the customer’s search query</td>
                          </tr>
                          <tr>
                            <td class="">params</td>
                            <td class="">Object</td>
                            <td class="">Contains request options and/or presentation template</td>
                          </tr>
                          <tr>
                            <td class="">callback</td>
                            <td class="">Function</td>
                            <td class="">Asynchronous function call to handle the results</td>
                          </tr>
                        </tbody>

                        </table>
        - title: CSS And Design Assets
          route:
            path: /css-and-design-assets
          data:
            children:
              - title: Assets Directory
                route:
                  path: /assets-directory
                data:
                  blocks:
                    - type: html
                      data: <h1>Assets Directory</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#assets_the-assets-directory\">The <code>assets</code> Directory</a></li>\n    <li><a href=\"#assets_video-demo\"></a>Video Demo</li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## The `assets` Directory


                        Each Stencil theme’s `<theme-name>/assets/` directory
                        contains CSS, JavaScript, and image assets that help
                        create the design of storefront pages. A minimal
                        `<theme-name>/assets/` directory contains the files and
                        subdirectories that you can view on the [Cornerstone
                        Github
                        Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets).


                        We will go further into detail about the subdirectories
                        within `/assets/` below: 


                        ### The `cdn` Subdirectory


                        The `/cdn/` subdirectory is designed to contain large
                        static assets that you will upload to a content delivery
                        network, separately from the rest of your theme. For
                        this reason – and by design – the contents of this
                        directory (only) are excluded from theme bundling. For
                        details, see Staging a Theme for CDN Delivery.


                        ### The `fonts` Subdirectory


                        The `/fonts/` subdirectory contains local versions of
                        theme-specific fonts.


                        ### The `icons` Subdirectory


                        The `/icons/` subdirectory contains .svg files for icons
                        used within a theme.


                        ### The `img` Subdirectory


                        The `/img/` subdirectory contains images used in the
                        theme’s display – background images, sprites, and other
                        images not related to store content.


                        You would typically reference these image assets using
                        Stencil's cdn Handlebars helper. For example,
                        generically:


                        `<img src="{{cdn 'assets/img/image.jpg'}}">`


                        Or, with a realistic file name:


                        `<img src="{{cdn 'assets/img/size-chart.png'}}">`


                        **Note:** For Stencil themes only, images that use the
                        default zoom library pass through Akami Image Manager.
                        This chooses the best image to serve based on device. To
                        bypass the image optimization, include imbypass=on as a
                        query parameter in the image url. This will serve
                        un-optimized images.


                        `<img src="{{cdn 'webdav:img/image.jpg?imbypass=on'}}">`


                        `<img src="{{getImage settings.store_logo.image
                        'logo_size'}}?imbypass=on">`


                        `<img src="{{cdn 'assets/img/image.jpg?imbypass=on'}}">`


                        ### The `js` Subdirectory


                        The `/js/` subdirectory contains general JavaScript
                        files used in the theme.


                        ### The `scss` Subdirectory


                        The `/scss/` subdirectory contains theme-specific CSS
                        resources.
                      header:
                        anchor: assets_the-assets-directory
                    - type: callout
                      data:
                        type: warning
                        title: ' Production-Safe Image References'
                        body: >+
                          To avoid unexpected 404 errors on your production
                          store, we recommend that you use short relative paths
                          in your SCSS to reference images in your `/img/`
                          subdirectory. So, for example, use references of the
                          form:

                          `background: url('../img/header-bg.png');` rather than
                          references of the form:

                          `background: url('/assets/img/header-bg.png');`

                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Video Demo


                        Watch a video tour of the `/assets/` directory, its
                        `/scss/` subdirectory, interactions between CSS and
                        `config.json` values, Stencil custom Sass functions, and
                        the `/img/` subdirectory.


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/zUDNgprOEts"
                        frameborder="0" allow="autoplay; encrypted-media"
                        allowfullscreen></iframe>
                      header:
                        anchor: assets_video-demo
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          This section's remaining pages list certain
                          restrictions on changing some subdirectories'
                          structure, contents, and file names.


                          In parts of your theme's directory tree where you are
                          free to add new subdirectories and files, be sure to:


                          * Set newly added directories to permission `755
                          (drwxr-xr-x)`.

                          * Set newly added files to permission `644
                          (rw-r--r--)`.

                          * Without these permissions, running your theme
                          locally will fail, with multiple error messages.
                          Bundling your theme will also fail, blocking its
                          upload to a store.
                        title: |2
                           Directory and File Restrictions/Permissions
              - title: Components Directory & Design Patterns
                route:
                  path: /stencil-design-patterns
                data:
                  blocks:
                    - type: html
                      data: <h1>Components Directory and Design Patterns</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#components_design-patterns\">Design Patterns</a></li>\n    <li><a href=\"#components_design-patterns\">Components Directory</a></li>\n    <li><a href=\"#components_design-patterns\">The <code>citadel</code> Subdirectory</a></li>\n    <li><a href=\"#components_design-patterns\">The <code>f</code> Subdirectory</a></li>\n    <li><a href=\"#components_design-patterns\">The <code>stencil</code> Subdirectory</a></li>\n    <li><a href=\"#components_design-patterns\">The <code>vendor</vendor> Subdirectory</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Design Patterns


                        Stencil themes include an internal pattern library
                        called Citadel, which consumes the ZURB Foundation
                        framework. Foundation provides the basis for creating
                        responsive themes. Citadel extends the Foundation
                        framework’s mixins and components to provide Stencil’s
                        own mixins, extensible components, and utilities.


                        **Note:** _Citadel is based specifically on Foundation
                        5.5.3, which installs with the Stencil framework.
                        (Direct download link is
                        [here](https://github.com/zurb/foundation-sites/releases/tag/v5.5.3);
                        documentation is
                        [here](https://foundation.zurb.com/sites/docs/v/5.5.3/).)
                        We do not support Foundation 6.x, due to breaking
                        changes introduced between versions 5.x and 6.x._


                        A theme developer might use drop-down lists, forms, and
                        similar resources from Citadel’s design patterns. The
                        design/style language underlying these Citadel resources
                        is the Sass/SCSS preprocessor.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Components Directory 


                        Citadel design patterns reside in the
                        `<theme-name>/assets/scss/components/` subdirectory. The
                        components subdirectory contains the 4 following
                        subdirectories:

                        * `/citadel/`, 

                        * `/foundation/`,

                        * `/stencil/`, and 

                        * `/vendor/`.



                        You can see the components directory and its children
                        present in the [Cornerstone Theme Github
                        Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/components).
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## The `citadel` Subdirectory


                        The `components/citadel` subdirectory contains
                        Citadel-specific resources. The resources are named
                        according to our [style
                        guide](https://github.com/bigcommerce/sass-style-guide),
                        which follows [BEM](http://getbem.com/naming/) and [SUIT
                        CSS](https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md)
                        naming conventions: Class names are structured, and
                        hyphens are meaningful (that is, hyphens are not used
                        merely to separate words). 


                        As a general rule, classes here are named functionally,
                        not based on their visual presentation or their content.
                        Here are some prototypes and examples:


                        * `componentName` (for example: `.dropdown or
                        .buttonGroup`)


                        * `componentName--modifierName` (for example:
                        `.dropdown--dropUp` or `.button--primary`)


                        * `componentName-descendantName` (for example:
                        `.dropdown-item`)


                        * `componentName.is-stateOfComponent` (for example:
                        `.dropdown.is-active`)


                        * `u-utilityName` (for example: `.u-textTruncate`)


                        * Abstractly:
                        `[<namespace>-]<componentName>[--modifierName|-descendentName]`


                        ### Components versus Utilities


                        Our naming scheme makes an architectural distinction
                        between components and utilities. Components are defined
                        as custom elements that enclose specific semantics,
                        styling, and behavior. Our syntax for naming them is:


                        `<componentName>[--modifierName|-descendantName]`


                        Component names are in camel case. We have tried to
                        choose names that are as short as possible, but as long
                        as necessary. For example:


                        * `.nav`, not `.navigation`; but:

                        * `.button`, not `.btn`


                        Utility classes are defined as low-level, structural and
                        positional traits. Utilities can be applied directly to
                        any element. Multiple utilities can be used together,
                        and utilities can be used alongside component classes.


                        To make HTML patterns as reusable as possible, we have
                        used utility classes sparingly, reserving them for
                        component-level styling.


                        Our syntax for naming utilities is camel case, prefixed
                        with a `u-` namespace:


                        `u-<utilityName>`


                        ### Variables and Mixins


                        Citadel variables and mixins follow similar naming
                        conventions.


                        Variables are things that can change over time. Their
                        names are in camel case, and show context:


                        `
                        [<componentName>[--modifierName][-descendentName]-<propertyName>

                        -<variablename>[--<modifierName>]`


                        Mixins follow regular camel-case naming conventions.
                        Namespacing is not universally required for mixins.
                        However, where a mixin has been created for a utility,
                        its name matches the utility’s name, including `u-`
                        namespacing:


                        ```

                        @mixin buttonVariant;

                        @mixin u-textTruncate;

                        ```
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## `foundation` Subdirectory


                        The `/components/foundation/` subdirectory contains
                        files installed by the [ZURB Foundation
                        framework](https://foundation.zurb.com/showcase/about.html).
                        (Stencil's Foundation support is limited to version
                        5.5.3.)
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## `stencil` Subdirectory


                        The `/components/stencil/` subdirectory contains CSS
                        files unique to Stencil themes, which are used to create
                        specific page elements within the themes. You can view
                        this subdirectory and all its children in the
                        [Cornerstone Theme Github
                        Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/components/stencil).


                        This subdirectory’s children contain CSS for the
                        following page elements:


                        This subdirectory’s children contain CSS for the
                        following page elements:


                        <p></p><table>
                          <tbody><tr>
                            <th>Subdirectory</th>
                            <th>UI Element/Purpose</th>
                          </tr>
                          <tr>
                            <td>account</td>
                            <td>Customer account details</td>
                          </tr>
                          <tr>
                            <td>addressBox</td>
                            <td>Customer shipping addresses</td>
                          </tr>
                          <tr>
                            <td>addReturn</td>
                            <td>Add a product-return request</td>
                          </tr>
                          <tr>
                            <td>banners</td>
                            <td>Banners displayed across storefront’s top and bottom</td>
                          </tr>
                          <tr>
                            <td>blocker</td>
                            <td>Position .blocker element above another element, to prevent a user action</td>
                          </tr>
                          <tr>
                            <td>compare</td>
                            <td>Layout for product-comparison table</td>
                          </tr>
                          <tr>
                            <td>facetedSearch</td>
                            <td>Faceted-search toggle (on/off), navigation list, and filters</td>
                          </tr>
                          <tr>
                            <td>facetLabel</td>
                            <td>Labels for faceted-search display</td>
                          </tr>
                          <tr>
                            <td>heroCarousel</td>
                            <td>Carousel of prominent ("hero") images</td>
                          </tr>
                          <tr>
                            <td>navPages</td>
                            <td>Styles for page navigation, with responsive layout</td>
                          </tr>
                          <tr>
                            <td>navUser</td>
                            <td>Styles for cart counter, quick search</td>
                          </tr>
                          <tr>
                            <td>productCarousel</td>
                            <td>Carousel of product images</td>
                          </tr>
                          <tr>
                            <td>productReviews</td>
                            <td>Styles for product reviews</td>
                          </tr>
                          <tr>
                            <td>productView</td>
                            <td>Product display (with thumbnails suppressed for mobile/tablet), product details, product options (size, color, etc.), product sharing</td>
                          </tr>
                          <tr>
                            <td>quickView</td>
                            <td>Quick-view modal window for a selected product</td>
                          </tr>
                          <tr>
                            <td>ribbon</td>
                            <td>Top-right text badges, for messages like "On sale"</td>
                          </tr>
                          <tr>
                            <td>socialLinks</td>
                            <td>Styles for social-media links</td>
                          </tr>
                          <tr>
                            <td>tags</td>
                            <td>Styles for blog-post tags</td>
                          </tr>
                          <tr>
                            <td>toggleLink</td>
                            <td>Styles for collapsible/expandable components</td>
                          </tr>
                          <tr>
                            <td>writeReview</td>
                            <td>Styles for product-review submission form</td>
                          </tr>
                        </tbody></table>
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## `vendor` Subdirectory


                        The `/components/vendor/` subdirectory contains the
                        consumed version of framework components from your
                        chosen provider. There is some renaming of these
                        components to match Stencil naming conventions.
              - title: 'Layouts, Utilities, & Settings Directories'
                route:
                  path: /layouts-and-utilities-directory
                data:
                  blocks:
                    - type: html
                      data: >-
                        <h1>The <code>layouts</code> and <code>utilities</code>
                        Directories</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#layouts-utilities-settings_the-layouts-directory\"></a></li>\n    <li><a href=\"#layouts-utilities-settings_the-utilities-directory\"></a></li>\n    <li><a href=\"#layouts-utilities-settings_the-settings-directory\"></a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## The `layouts` Directory


                        The `<theme-name>/assets/scss/layouts/` subdirectory
                        contains `.scss` files that provide default styling for
                        major layout components of theme pages. You can see the
                        `/layouts/` subdirectory's internal structure on the
                        [Cornerstone Github
                        Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/layouts)
                      header:
                        anchor: layouts-and-utilities_the-layouts-directory
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## The `utilities` Directory


                        The `<theme-name>/assets/scss/utilities` subdirectory
                        contains mixins and tools, beyond the Citadel library,
                        that help create UI’s. You can apply these CSS snippets
                        to your HTML for quick prototyping when you need a
                        unique, yet repeatable, style.


                        Every utility in this subdirectory will have both a
                        class and a mixin. For example, consider the utility
                        `truncatedText:` You can use it by applying the class
                        `.u-truncatedText`, or by applying the mixin @include
                        u-truncatedText;.
                      header:
                        anchor: layouts-and-utilities_the-utilities-directory
                    - type: text
                      data: '---'
                    - type: text
                      data: "## The `settings` Directory\n\nThe `<theme-name>/assets/scss/settings/` subdirectory contains SCSS variables for your framework. Files here map directly to components. If present, these variables override defaults in consumed libraries. The `/settings/` subdirectory's internal structure can be viewed at the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/settings) \n\t\nThe nested subdirectory for your chosen framework contains a file that includes that framework’s variables. (For example, in the default Stencil theme, this file is: `/settings/foundation/_foundation.scss`.)\n\nWithin each subdirectory nested at the ultimate level is one primary file, `_settings.scss`, that imports all other variables that have been broken into logical files (such as `_colors.scss`, `_typography.scss`, and `_z-index.scss`).\n\t\n### Sass Stylesheet Support for Theme Fonts\n\t\nTo support Theme Editor, your theme's Sass stylesheet must call Stencil's custom Sass functions to transform fonts specified in the theme's `config.json` file. You must call these functions on each `config.json` font key whose value you want to make available to Sass variables.\n\nThe default Stencil theme includes these function calls in this stylesheet:\n`<theme-name>/assets/scss/settings/foundation/type/_settings.scss`. However, if your theme relies on a Sass framework other than Foundation, the relevant stylesheet will be a different .scss file name within `<theme-name>/assets/scss/`.\n\n\t\n### How to Enable Fonts for Theme Editor\n\nAssume that your theme's `config.json` contains the following key name and value (the details of both are arbitrary, but the key name must end in `-font`, and the value must follow a defined format):\n\t\n`\"headings-font\": \"Google_Open+Sans_700\"`\n\t\nIn your Sass stylesheet, you would call the stencilFontFamily and stencilFontWeight custom Sass functions on the corresponding `config.json` key name:\n\t\n```\n$body-font-family: stencilFontFamily(\"body-font\");\n$body-font-weight: stencilFontWeight(\"body-font\");\n```\n\nThese functions would extract the corresponding `config.json` values as:\n\n```\n$body-font-family: 'Open Sans';\n$body-font-weight: 700;\n```\n\t\nThis transformation allows you to use the `$body-font-family` and `$body-font-weight` variables wherever needed in your theme. If a merchant uses Theme Editor to select a different font family and/or weight, the variables will propagate the change throughout your theme.\n"
                      header:
                        anchor: layouts-utilities-settings_the-settings-directory
              - title: Custom Sass Functions
                route:
                  path: /custom-sass-functions
                data:
                  blocks:
                    - type: html
                      data: <h1>Custom Sass Functions</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#custom-sass-functions_stencilColor\">stencilColor Function</a></li>\n    <li><a href=\"#custom-sass-functions_stencilFontFamily\">stencilFontFamily Function</a></li>\n    <li><a href=\"#custom-sass-functions_stencilFontWeight\">stencilFontWeight Function</a></li>\n    <li><a href=\"#custom-sass-functions_stencilNumber\">stencilNumber Function</a></li>\n    <li><a href=\"#custom-sass-functions_stencilString\">stencilString Function</a></li>\n    <li><a href=\"#custom-sass-functions_stencilImage\">stencilImage Function</a></li>\n    <li><a href=\"#custom-sass-functions_compiling-custom-sass-files\">Compiling Custom Sass Files</a></li>\n\t</ul>\n</div>\n"
                    - type: text
                      data: >-
                        ## stencilColor Function


                        stencilColor accepts (as a string) the key name of a
                        color that you have defined in config.json as editable.
                        It returns the color’s hexadecimal value.


                        In Stencil's Cornerstone (1.4.0) base theme, the
                        optimized-checkout.scss file sets the background color
                        for the page's header with the following code:


                        ```

                        .optimizedCheckout-header {
                            background-color: stencilColor("optimizedCheckout-header-backgroundColor");
                            // scss-lint:disable StringQuotes
                            background-image: url(stencilImage('optimizedCheckout-backgroundImage', 'optimizedCheckout-backgroundImage-size'));
                            // scss-lint:enable StringQuotes
                            background-size: cover;
                            ...
                        }

                        ```


                        The above CSS fetches the background-color property's
                        value by using the stencilColor() function to retrieve
                        the optimizedCheckout-header-backgroundColor key's
                        current value.


                        That optimizedCheckout-header-backgroundColor key is
                        defined, and assigned a default value, in config.json.
                        However, merchants can use Theme Editor to change the
                        value at any time. So using this stencilColor() call,
                        the key's current value (which might have been altered
                        from the static default value in config.json) will be
                        fetched from a BigCommerce settings server.
                      header:
                        anchor: custom-sass-functions_stencilColor
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## stencilFontFamily Function


                        stencilFontFamily accepts (as a string) the name of a
                        font key that you have defined in config.json. It
                        returns the corresponding font-family value, also as a
                        string. For a key named "headings-font" and defined as
                        Google Open Sans, stencilFontFamily would return a value
                        like this to Sass variables:


                        `$headings-‐font-‐family: 'Open Sans';`


                        (The above example's name and definition in config.json
                        are both arbitrary.)


                        Your Sass stylesheet must call stencilFontFamily for
                        each config.json font key whose font-family value you
                        want to provide to Sass variables. You would call the
                        function in the following format (again assuming a key
                        arbitrarily named "headings-font"):


                        `$headings-font-family:
                        stencilFontFamily("headings-font");`
                      header:
                        anchor: custom-sass-functions_stencilFontFamily
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## stencilFontWeight Function


                        stencilFontWeight accepts (as a string) the key name of
                        a font that you have defined in config.json. It returns
                        (as an integer) the corresponding font-weight value. For
                        a key arbitrarily named "headings-font" and defined as
                        700, it would return a value like this to Sass
                        variables:


                        `$headings-‐font-‐weight: 700;`


                        Your Sass stylesheet may optionally call
                        stencilFontWeight for each config.json font key whose
                        weight value you want to provide to Sass variables. You
                        would call the function in the following format:


                        `$headings-font-weight:
                        stencilFontWeight("headings-font");`
                      header:
                        anchor: custom-sass-functions_stencilFontWeight
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## stencilNumber Function


                        `stencilNumber` accepts (as a string) a key name that
                        you have defined in `config.json` as editable. It also
                        accepts (also as a string) an _optional_ second
                        parameter to define the unit. (This second parameter’s
                        value defaults to `"px"`.) It returns the corresponding
                        numeric value, postfixed with the defined unit.


                        You can use this function with arithmetical operators.
                        For example, assume that your `config.json` contains a
                        `"font-size"` value of `"3"`. The following statement
                        would evaluate to `9rem`.


                        `stencilNumber("font-size", "rem") * 3`
                      header:
                        anchor: custom-sass-functions_stencilNumber
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## stencilString Function


                        `stencilString` accepts (as a string) a key name that
                        you have defined in `config.json` as editable. It
                        returns (also as a string) the key’s value. This
                        function is used for purposes like defining font family
                        names, or defining paths to images.
                      header:
                        anchor: custom-sass-functions_stencilString
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## stencilImage Function


                        `stencilImag`e accepts (as a string) a key name for an
                        image url that you have defined in `config.json`. It
                        also accepts (as a string) the key name for the image
                        size that you have defined in `config.json`. It returns
                        the string value of the image URL and the size.
                      header:
                        anchor: custom-sass-functions_stencilImage
                    - type: text
                      data: >
                        ## Compiling Custom Sass Files


                        If you want to add your own custom Sass files, initiate
                        auto-compilation of those files by including the
                        associated tag in your HTML markup. Cornerstone's Sass
                        file is named:


                        `/cornerstone/assets/scss/theme.scss`


                        To add a custom Sass file, place it at this path
                        location, using an arbitrary filename prefix as shown:


                        `<theme-name>/assets/scss/<your-theme-or-file-name>.scss`


                        For example, to use the Foundation Sass framework, you
                        might need:


                        `<theme-name>/assets/scss/main.scss`

                        `<theme-name>/assets/scss/widgets.scss`


                        Next, be sure the following tag is included within your
                        `<theme-name>/templates/layout/base.html` file’s
                        `<head>` tag, to compile your Sass to the specified
                        object file:


                        `{{stylesheet '/assets/css/theme.css'}}`


                        While `stencil start` is running, it will recompile your
                        custom Sass files to the specified
                        `<theme-name>/assets/css/theme.css` file. (Note that
                        this object file’s name is always the same, and is
                        independent of your custom Sass files’ names.) For an
                        additional example, please see Replacing Content Blocks.
                      header:
                        anchor: custom-sass-functions_compiling-custom-sass-files
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          The Stencil framework is designed to support your
                          incorporation of custom Sass files/frameworks.
                          However, BigCommerce does not offer technical
                          assistance on substitutions for, or customized
                          versions of, Stencil's default dependencies.
                        title: Before You Customize
              - title: Page Composition and Styling
                route:
                  path: /page-composition-and-styling
                data:
                  blocks:
                    - type: html
                      data: <h1>Page Composition and Styling</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#page-composition_referencing-css-stylesheet\">Referencing a CSS Stylesheet</a></li>\n    <li><a href=\"#page-composition_template-composition\">Template Composition</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                    - type: text
                      data: >-
                        ## Referencing a CSS Stylesheet


                        To apply CSS styling to a page in your theme, make sure
                        that page's code includes a reference to the stylesheet
                        you want to use. This example does so using the
                        `{{partial}}` and `{{cdn}}` custom Handlebars helpers:


                        ```

                        {{#partial "head"}}
                            <link href="{{cdn '/assets/css/invoice.css'}}" rel="stylesheet">
                        {{/partial}}

                        ```
                      header:
                        anchor: page-composition_referencing-css-stylesheet
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Template Composition\n\nTemplate composition is a valuable Stencil feature. By defining blocks of overrideable content, your themes can insert templates on a per-page basis, while sharing code that is common to the whole theme.\n\n### Defining Content Blocks\n\nA base template defines content blocks by name. The following snippet uses `{{block}}` custom Handlebars helpers to define three content blocks, respectively named `head`, `hero`, and `page`:\n\n```\n// templates/layout/base.html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>{{ head.title }}</title>\n        {{#block \"head\"}} {{/block}}\n    </head>\n    <body>\n        <div class=\"body\">\n\t\t    {{#block \"hero\"}} {{/block}}\n\t\t    <div class=\"container\">\n\t\t        {{#block \"page\"}} {{/block}}\n\t\t    </div>\n\t\t    {{> components/common/modal}}\n        </div>\n    </body>\n</html>\n```\n\n### Replacing Content Blocks\n\nPages can use a base template, replacing the defined blocks with their own content. This example replaces content for the head and page blocks:\n\n```\n//templates/pages/account/orders/invoice.html\n{{#partial \"head\"}}\n    <link href=\"{{cdn '/assets/css/invoice.css'}}\" rel=\"stylesheet\">\n{{/partial}}\n\n{{#partial \"page\"}}\n    <p>An invoice for a particular order would go here</p>\n{{/partial}}\n{{> layout/empty}}\n```\n\n### Matching Partials with Blocks\n\nWe recommend that, for any given name defined within the template rendering path, you maintain a 1:1 mapping of partials to blocks."
                      header:
                        anchor: page-composition_template-composition
              - title: Using Custom Fonts
                route:
                  path: /using-custom-fonts
                data:
                  blocks:
                    - type: html
                      data: <h1>Using Custom Fonts</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#using-custom-fonts_stage-the-fonts\">Stage the Fonts</a></li>\n    <li><a href=\"#using-custom-fonts_reference-fonts\">Reference Fonts in Templates' <code>head</code></a></li>\n    <li><a href=\"#using-custom-fonts_video-demo\">Video Demo</a></li>\n    <li><a href=\"#using-custom-fonts_update-the-css\">Update the CSS</a></li>\n\t</ul>\n</div>\n"
                    - type: callout
                      data:
                        type: warning
                        title: Custom Fonts Unavailable on Theme Editor
                        body: >-
                          On the current Stencil framework, custom fonts that
                          you incorporate using this process will not be
                          available for selection in Theme Editor.
                    - type: text
                      data: >
                        ## Stage the Fonts


                        First, acquire your custom fonts. In this logo scenario,
                        we'll assume the single (nonexistent) font
                        `MyFontFile.ttf`.

                        Next, [use WebDav to upload each custom font](). (Upload
                        to WebDAV's default `/content/` folder.)
                      header:
                        anchor: using-custom-fonts_stage-the-fonts
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Reference Fonts in Templates' `<head>`\n\nNext, edit the appropriate template files' `<head>` sections to reference your custom fonts. In this logo example, you would edit the `/cornerstone/templates/layout/base.html` file's `<head>` section to insert the following code, which references the custom font you just uploaded:\n\t\n```\n<style type=\"text/css\" media=\"screen, print\">\n           @font-face {\n               font-family: \"MyFont\";\n               src: url(\"{{cdn 'webdav:MyFontFile.ttf'}}\");\n           }\n</style>\n```"
                      header:
                        anchor: using-custom-fonts_reference-fonts
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Video Demo


                        Watch a video demonstration of referencing custom fonts
                        in your template files' `<head>` sections: 


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/-w7Hbn_p_pw"
                        frameborder="0" allow="autoplay; encrypted-media"
                        allowfullscreen></iframe>
                      header:
                        anchor: using-custom-fonts_video-demo
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Update the CSS


                        Finally, update the appropriate CSS to reference the
                        same font. Here, you would edit the
                        `/cornerstone/assets/scss/layouts/header/_header.scss`
                        file to include the two lines below `.header-logo-text`:


                        ```

                        .header-logo-text {

                        display: block;
                           font-family: 'MyFont';
                           [...]
                        }

                        ```
                      header:
                        anchor: using-custom-fonts_update-the-css
                    - type: callout
                      data:
                        title: Notes
                        body: >-
                          * The cdn custom Handlebars helper assumes WebDAV's
                          default /content/ folder, so there is no need to
                          specify that folder.

                          * Fonts staged via WebDAV, as in the above example,
                          will not show up in the local version of your theme.
              - title: Using and Updating Icons
                route:
                  path: /using-and-updating-icons
                data:
                  blocks:
                    - type: html
                      data: <h1>Using and Updating Icons</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#using-and-updating-icons_installing-grunt\">Installing Grunt</a></li>\n    <li><a href=\"#using-and-updating-icons_calling-theme-icons\">Calling Theme Icons</a></li>\n    <li><a href=\"#using-and-updating-icons_adding-new-icons\">Adding New Icons</a></li>\n    <li><a href=\"#using-and-updating-icons_video-demo\">Video Demo</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >
                        ## Installing Grunt


                        Some of a Stencil theme's static assets are handled with
                        the Grunt JavaScript automator, where required. This
                        means that you have some dependencies on both Grunt and
                        npm. To get started:


                        First, make sure you have Grunt installed globally on
                        your machine:


                        `npm install -g grunt-cli`


                        Then, from your theme's root directory, run:


                        `npm install`
                      header:
                        anchor: using-and-updating-icons_installing-grunt
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Calling Theme Icons 


                        A Stencil theme's icons are delivered via a single SVG
                        sprite, which is embedded on the page in

                        `<theme-name>templates/layout/base.html`. This sprite is
                        generated via the Grunt task `grunt svgstore`.


                        The task takes individual SVG files for each icon (in
                        the theme's `assets/icons/` subdirectory) and bundles

                        them together, to be inlined on the top of the theme,
                        inside a Handlebars partial.


                        You can then call each icon in a similar way to an
                        inline image, via:


                        `<svg><use xlink:href="#icon-svgFileName" /></svg>`


                        The ID of each SVG icon you call is based on the
                        filename of the icon you want, with `icon-` prepended.

                        For example:


                        `xlink:href="#icon-facebook"`
                      header:
                        anchor: using-and-updating-icons_calling-theme-icons
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Adding New Icons


                        Simply add your new icon SVG file to the `assets/icons/
                        `folder. Then, from your theme's root directory, run
                        `grunt svgstore` or just `grunt`.
                      header:
                        anchor: using-and-updating-icons_adding-new-icons
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Video Demo


                        Watch a video demonstration of installing Grunt and
                        using it to update your theme's SVG sprite with custom
                        icons: 


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/-w7Hbn_p_pw"
                        frameborder="0" allow="autoplay; encrypted-media"
                        allowfullscreen></iframe>
                      header:
                        anchor: using-and-updating-icons_video-demo
        - title: 'Custom Javascript Implementations '
          route:
            path: /custom-javascript-implementations
          data:
            children:
              - title: Adding Javascript to Your Stencil Theme
                route:
                  path: /adding-javascript
                data:
                  blocks:
                    - type: html
                      data: <h1>Adding Javascript to Your Stencil Theme</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#adding_bundling-and-minification\">Bundling and Minification</a></li>\n    <li><a href=\"#adding_development-options\">Development Options</a></li>\n    <li><a href=\"#adding_using-npm\">Using npm (Node Package Manager)</a></li>\n    <li><a href=\"#adding_placing-modules\">Placing Modules in assets/js/</a></li>\n    <li><a href=\"#adding_theme-specific-js\">Theme-Specific JavaScript Modules</a></li>\n    <li><a href=\"#adding_mapping-page\">Mapping Page Types to JavaScript Modules</a></li>\n    <li><a href=\"#adding_mapping-custom\">Mapping Custom Templates to JavaScript Modules</a></li>\n    <li><a href=\"#adding_summary\">Summary</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n\n"
                    - type: text
                      data: "## Bundling and Minification\n\nA small Web application, such as an ecommerce theme, can include rich user interactions that depend on many small JavaScript and CSS modules. If we were to embed each of the JavaScript modules in a template file with a separate `<script>` tag, the shopper's browser would need to make separate HTTP requests to retrieve each module.\n\t\nIn some cases, it would take longer to set up the HTTP request than to download the small JavaScript module – leading to slower load times. On mobile devices, slow load times can be especially frustrating.\n\n### Bundling\nTo solve this problem, Stencil – like other modern front-end frameworks – bundles all the JavaScript modules into a single file (a bundle), allowing the shopper's browser to make only a single HTTP request. After the browser has downloaded the bundle of JavaScript modules, the browser caches them, speeding up the rest of the shopper's session.\n\n### Minification\nBeyond reducing the number of HTTP calls required to fetch all the required JavaScript modules, we can reduce the size of the individual JavaScript modules through minification. JavaScript minification removes white space and comments, shortens variable and function names, removes dead code, and more. The goal, in all cases, is to reduce the amount of bandwidth necessary to transmit the JavaScript module to the browser."
                      header:
                        anchor: adding_bundling-and-minification
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Development Options


                        When you add JavaScript to a theme, use one of the
                        following techniques, so that Stencil will automatically
                        bundle and minify your modules:


                        * **Using npm:** Add third-party JavaScript modules to
                        your theme with npm where possible.


                        * **Place Modules in assets/js/:** For a JavaScript
                        module that is not distributed via npm, add this module
                        to your theme by creating a subdirectory within
                        assets/js/ that contains your module.


                        * **Theme-Specific JavaScript Modules:** Stencil themes
                        include their own custom JavaScript modules for most
                        page types. You can alter these page-type–specific
                        modules by editing the files in assets/js/theme/*.js.


                        These techniques are outlined in the following sections.
                      header:
                        anchor: adding_development-options
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Using npm (Node Package Manager)


                        Many third-party JavaScript components are distributed
                        with npm (Node Package Manager). When you use the npm
                        command-line utility to add a JavaScript component to
                        your theme, Stencil will automatically bundle and minify
                        the component. To enable this bundling/minification, run
                        each module's `npm install` command from the root
                        directory of your theme.


                        ### Taking Over from npm


                        npm facilitates managing third-party JavaScript
                        components by placing each JavaScript component – and
                        any of its dependencies – in the correct directories.
                        However, as a developer, you will still need to edit
                        your theme files to wire up the JavaScript component to
                        expose it on your storefront. You will find several
                        examples of this on the following pages.
                      header:
                        anchor: adding_using-npm
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Placing Modules in assets/js/


                        You can freely create subdirectories within
                        `assets/js/`, to contain new JavaScript modules. The
                        constraint is that all JavaScript files in each module
                        must use the `.js` file extension.
                      header:
                        anchor: adding_placing-modules
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Theme-Specific JavaScript Modules


                        In your theme's `assets/js/theme/` subdirectory, you
                        will find a tree of JavaScript files. Each file is a
                        JavaScript module. Some modules are for specific page
                        types. Others are common modules that can be used in
                        other modules. Still others are global modules that are
                        available on every page.
                      header:
                        anchor: adding_theme-specific-js
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Mapping Page Types to JavaScript Modules


                        To find the mapping from page types to modules in
                        `assets/js/theme/`, examine the `PageClasses` object in
                        the file: `assets/js/app.js`. Each `=>import(...)`
                        function within this class maps a page type to the entry
                        module for that page type. For example: When the `cart`
                        page type is loaded in the browser, the JavaScript
                        module named `cart` will be loaded.


                        ### Mapping Example in app.js


                        Here is an excerpt of mappings from the Cornerstone base
                        theme's `assets/js/app.js`:


                        ```

                        [...]

                        const pageClasses = {
                            account_orderstatus: getAccount,
                            account_order: getAccount,
                            account_addressbook: getAccount,
                            [...]
                            createaccount: getLogin,
                            getnewpassword: getLogin,
                            forgotpassword: getLogin,
                            blog: () => import('./theme/blog'),
                            blog_post: () => import('./theme/blog'),
                            brand: () => import('./theme/brand'),
                            brands: () => import('./theme/brand'),
                            cart: () => import('./theme/cart'),
                            [...]
                        }; 

                        ```


                        ### Mapping Example in cart.js


                        Inside the `cart` module (`assets/js/theme/cart.js`),
                        other modules are imported, and custom JavaScript
                        methods for the cart module are created in the `Cart`
                        class.


                        Here is an excerpt from Cornerstone's
                        `assets/js/theme/cart.js` file:


                        ```

                        import PageManager from './page-manager';

                        import $ from 'jquery';

                        import _ from 'lodash';

                        import giftCertCheck from
                        './common/gift-certificate-validator';

                        import utils from '@bigcommerce/stencil-utils';

                        import ShippingEstimator from
                        './cart/shipping-estimator';

                        import { defaultModal } from './global/modal';

                        import swal from 'sweetalert2';


                        export default class Cart extends PageManager {
                            loaded(next) {
                                this.$cartContent = $('[data-cart-content]');
                                this.$cartMessages = $('[data-cart-status]');
                                this.$cartTotals = $('[data-cart-totals]');
                                this.$overlay = $('[data-cart] .loadingOverlay')
                                    .hide(); // TODO: temporary until roper pulls in his cart components

                                this.bindEvents();

                                next();
                            }

                            cartUpdate($target) {
                                const itemId = $target.data('cart-itemid');
                                const $el = $(`#qty-${itemId}`);
                                const oldQty = parseInt($el.val(), 10);
                                const maxQty = parseInt($el.data('quantity-max'), 10);
                                const minQty = parseInt($el.data('quantity-min'), 10);
                                const minError = $el.data('quantity-min-error');
                                const maxError = $el.data('quantity-max-error');
                                const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;
                                [...]
                        ```
                      header:
                        anchor: adding_mapping-page
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Mapping Custom Templates to JavaScript Modules\n\nIf you add [custom page templates]() to your theme, you can edit the same `assets/js/app.js` file to map each custom template to an appropriate JavaScript module.\n\nIn the example below, we have added the highlighted `if` statement to map a file called `my-custom-template`:\n\n```\nwindow.stencilBootstrap = function stencilBootstrap(pageType, contextJSON = null, loadGlobal = true) {\n    const context = JSON.parse(contextJSON || {});\n\n    return {\n        load() {\n            $(async () => {\n                let globalClass;\n                let pageClass;\n                let PageClass;\n\n\nif (context.template === 'pages/custom/page/my-custom-template') {\n           // do something, import a file, call a function ...\n}\n\n                [...] \n```\n\nIn the theme's `templates/layout/base.html` template, we've added the `{{inject 'template' template}}` just above `{{{snippet 'htmlhead'}}}` statement to inject the custom template:\n\n```\n<head>\n        <title>{{ head.title }}</title>\n        {{{ head.meta_tags }}}\n        {{{ head.config }}}\n\n        [...]\n\n        {{{head.scripts}}}\n        {{{head.rsslinks}}}\n\n        {{inject 'themeSettings' theme_settings}}\n        {{inject 'genericError' (lang 'common.generic_error')}}\n        {{inject 'maintenanceMode' settings.maintenance}}\n        {{inject 'urls' urls}}\n        {{inject 'template' template}} //injects the custom template\n        {{{snippet 'htmlhead'}}}\n    </head> \n\t\t\n\t\t```\n\n\n"
                      header:
                        anchor: adding_mapping-custom
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Summary


                        To review the basics of using JavaScript in your Stencil
                        theme:


                        * Stencil automatically bundles and minifies JavaScript
                        modules to optimize page performance.


                        * To insert custom JavaScript on a particular page in
                        your theme, edit the JavaScript module that corresponds
                        to the page's type.


                        * To add files from third-party JavaScript modules to a
                        theme, use npm, where possible.


                        * To add JavaScript modules not distributed via npm, you
                        can create new subdirectories within `assets/js/`.


                        * Theme-Specific JavaScript modules are provided in the
                        theme's `assets/js/theme/` subdirectory.


                        * To find the mapping between modules in
                        assets/js/theme/ and page types, examine the PageClasses
                        object contained in `assets/js/app.js`.


                        * You can map JavaScript modules to custom page
                        templates by editing the same `assets/js/app.js` file.
                      header:
                        anchor: adding_summary
              - title: Basic Non NPM Example
                route:
                  path: /basic-non-npm-example
                data:
                  blocks:
                    - type: html
                      data: <h1>Basic Non NPM Example</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#adding_locating-page\">Locating Page-Specific JavaScript</a></li>\n    <li><a href=\"#adding_adding-custom-js\">Adding Custom JS Functions</a></li>\n\t</ul>\n</div>\n\n\n\n"
                    - type: text
                      data: >-
                        ## Locating Page-Specific JavaScript 


                        In this example, let's say that we want to display Hello
                        world alerts when a shopper visits a blog page.


                        In Stencil's base Cornerstone theme, the JavaScript that
                        runs on the blog page can be found in

                        /cornerstone/assets/js/theme/blog.js. If we want to run
                        additional JavaScript on this page, we can add it to the
                        PageManager class in this file, which is empty by
                        default.
                      header:
                        anchor: adding_locating-page
                    - type: callout
                      data:
                        body: >-
                          Prior to March 2017, the Cornerstone's default path
                          name was `/stencil/`.
                        title: >-
                          Default Path Name Updated from "stencil" to
                          "cornerstone"
                    - type: text
                      data: >-
                        ## Adding Custom JS Functions 


                        In the code example below, we have added three custom
                        JavaScript functions (`blogHello`, `blogGreatday` and
                        `blogGoodbye`) to the page by populating `PageManager`.
                        Note how each function is called at a different time
                        during the page's life cycle:



                        ```

                        import PageManager from '../page-manager';


                        export default class Blog extends PageManager {
                            blogHello() {
                                alert('Hello world from blog.js');
                            }
                            blogGreatday() {
                                alert('Have a great day from blog.js');
                            }
                            blogGoodbye() {
                                alert('Goodbye world from blog.js');
                            }
                            before(next) {
                                this.blogHello();
                                next();
                            }
                            loaded(next) {
                                this.blogGreatday();
                                next();
                            }
                            after(next) {
                                this.blogGoodbye();
                                next();
                            }
                        }

                        ```
                      header:
                        anchor: adding_adding-custom-js
              - title: Basic NPM example
                route:
                  path: /new-subpage-2
                data:
                  blocks:
                    - type: html
                      data: <h1>Basic <code>npm</code> Example</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#basic_what-were-building\">What We're Building</a></li>\n    <li><a href=\"#basic_set-up\"></a>Set Up Your Store</li>\n    <li><a href=\"#basic_install-dependencies\"></a>Install Dependencies</li>\n    <li><a href=\"#basic_configure-webpack\"></a>Configure Webpack loaders in webpack.conf.js</li>\n    <li><a href=\"#basic_import-dependencies\"></a>Import Dependencies</li>\n    <li><a href=\"#basic_configured-loaded-method\"></a>Configure the loaded() Method</li>\n\t</ul>\n</div>\n\n\n\n\n\n\n\n"
                    - type: callout
                      data:
                        title: >-
                          Compatible with Cornerstone versions earlier than
                          2.x.x
                        body: >-
                          Because this example involves editing the
                          `webpack.conf.js` file, the way this example is
                          outlined will align with only with Cornerstone
                          versions earlier than 2.x.x. This is due to the
                          transition to Webpack 4 in Cornerstone 2.0.0, which
                          deprecated the `webpack.conf.js` file.
                        type: warning
                    - type: text
                      data: >-
                        ## What We're Building


                        This example will use the
                        [Foundation-datepicker.js](http://foundation-datepicker.peterbeno.com/#basic-example)
                        plugin to implement a datepicker for product pages'
                        Delivery/Event Date fields.
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539276603841
                      header:
                        title: Screenshot of final product
                      config:
                        bordered: true
                        maxWidth: '700'
                        maxHeight: '700'
                        centered: true
                        fluid: true
                    - type: text
                      data: >-
                        ## Set Up Your Store


                        To test this example, you'll want your (sandbox or
                        production) store to include at least a couple of
                        products that have a `Delivery/Event Date` configured.
                        (In production, you'd typically use this feature for
                        things like seasonally themed products, temporary
                        promotions, or event tickets.)


                        For product configuration steps in the BigCommerce
                        control panel, please see this support article.
                    - type: text
                      data: "## Install Dependencies\n\nUse the following command to install this example's required dependencies:\n\n`npm install --save-dev css-loader moment foundation-datepicker style-loader`\n\nThe above command's options are:\n\n* `--save-dev` saves the dependencies as `DevDependencies`; this flags them as required for development, but not at runtime. [This stack overflow thread](https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies) provides further context to this concept.\n\n* `css-loader` and `style-loader` are webpack loaders, used together:\n\t* [`css-loader`](https://github.com/webpack-contrib/css-loader) resolves `@import` and `url()` expressions in CSS files.\n\t* [`style-loader`](https://github.com/webpack-contrib/style-loader) generically loads stylesheets by injecting a `<style>` tag.\n\n* [`moment`](https://momentjs.com/) is a JavaScript component parses, validates, and displays dates and times.\n\n* `foundation-datepicker` specifies the datepicker package to install."
                    - type: text
                      data: >-
                        ## Configure Webpack loaders in webpack.conf.js


                        The [css]() and [style]() loaders are used to import CSS
                        and to inject it into the DOM, respectively:


                        ```

                        {
                            test: /\.css$/,
                            loader: 'style-loader!css-loader',
                        }

                        ```
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539280227448
                      header:
                        title: CSS and style loaders in context
                    - type: text
                      data: >-
                        ## Import the Dependencies


                        Import these new dependencies into
                        `<theme-name>/assets/js/theme/product.js`.


                        In `<theme-name>/assets/js/app.js`, notice that there is
                        a mapping between the product page and the `product.js`
                        script:


                        ```

                        const PageClasses = {
                            mapping: {
                                ...
                                'pages/product': product,
                        ```


                        That is, when a user navigates to the product page, the
                        `product.js` script is run. First its constructor will
                        be run, followed by the methods `before`, `loaded`, and
                        `after` – in that order.
                    - type: text
                      data: >-
                        ## Configure the loaded() Method


                        We'll use the `loaded` method to initialize our
                        datepicker widget:


                        ```

                        import $ from 'jquery';

                        import PageManager from '../page-manager';

                        import Review from './product/reviews';

                        import collapsibleFactory from './common/collapsible';

                        import ProductDetails from './common/product-details';

                        import videoGallery from './product/video-gallery';

                        import { classifyForm } from './common/form-utils';

                        import
                        'foundation-datepicker/js/foundation-datepicker.min.js';

                        import
                        'foundation-datepicker/css/foundation-datepicker.min.css';

                        import moment from 'moment';


                        ...


                        loaded(next) {
                            let validator;

                            // Init collapsible
                            collapsibleFactory();

                            this.productDetails = new ProductDetails($('.productView'), this.context);

                            videoGallery();

                            const $reviewForm = classifyForm('.writeReview-form');
                            const review = new Review($reviewForm);

                            $('body').on('click', '[data-reveal-id="modal-review-form"]', () => {
                                validator = review.registerValidation();
                            });

                            $reviewForm.on('submit', () => {
                                if (validator) {
                                    validator.performCheck();
                                    return validator.areAll('valid');
                                }

                                return false;
                            });

                            let $deliveryDateMth = $('#deliveryDateMth');
                            let $deliveryDateDay = $('#deliveryDateDay');
                            let $deliveryDateYr = $('#deliveryDateYr');
                            let earliestDate = moment(this.context.product.event_date.date_start, "MMM Do YYYY");
                            let latestDate = moment(this.context.product.event_date.date_end, "MMM Do YYYY");

                            $('#deliveryDate').fdatepicker({
                                leftArrow:'<<',
                                rightArrow:'>>',
                                onRender: function (date) {
                                    return moment(date).isBetween(earliestDate, latestDate, null, '[]') ? '' : 'disabled';
                                }
                            })
                            .on('changeDate', function(event) {
                                let date = event.date;
                                $deliveryDateMth.val(date.getMonth() + 1);
                                $deliveryDateDay.val(date.getDate());
                                $deliveryDateYr.val(date.getFullYear());
                            })
                            .data('datepicker');

                            next();
                        }

                        ```


                        Highlighted below is the new code added to the `loaded`
                        method:
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539275148248
                      header:
                        title: Code addition to loaded method in product.js
                    - type: text
                      data: >
                        Update the
                        `<theme-name>/templates/components/products/product-view.html`
                        template, replacing the existing `{{#if
                        product.event_date}}` block with the following:


                        ```

                        {{#if product.event_date}}
                            {{inject 'product' product}}
                            <div class="form-field">
                                <label class="form-label form-label--alternate form-label--inlineSmall">
                                {{product.event_date.name}}:
                                <small>{{lang 'common.required'}}</small>
                                </label>
                                <input type="text" class="form-input" id="deliveryDate" name="EventDate[Date]" required>
                                <input type="hidden" id="deliveryDateMth" name="EventDate[Mth]">
                                <input type="hidden" id="deliveryDateDay" name="EventDate[Day]">
                                <input type="hidden" id="deliveryDateYr" name="EventDate[Yr]">
                            </div>
                        {{/if}}

                        ```


                        Note that we're "injecting" the product here, so we have
                        access to its properties. This could be done closer to
                        the root of the tree, but it's been placed here for
                        proximity to the code that requires it.


                        We also needed to add form fields for the
                        `EventDate[Mth]`, `EventDate[Day]`, and `EventDate[Yr]`
                        data, which we update whenever the `changeDate` event
                        occurs. This conforms to the data format that the server
                        expects. These fields are hidden from the user.
              - title: Advanced NPM Example
                route:
                  path: /advanced-npm-example
                data:
                  blocks:
                    - type: html
                      data: <h1>Advanced NPM Example</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#advanced_video-of-what\">Video of What We're Building</a></li>\n    <li><a href=\"#advanced_install-dependencies\"></a>Install Dependencies</li>\n    <li><a href=\"#advanced_import-dependencies\"></a>Import Dependencies</li>\n    <li><a href=\"#advanced_update-webpackconfjs\"></a>Update webpack.conf.js</li>\n    <li><a href=\"#advanced_update-appjs\"></a>Update app.js</li>\n    <li><a href=\"#advanced_add-the-xcoupondrawer\"></a>Add the <<code>x-coupon-drawer</code>> Element to the Page</li>\n    <li><a href=\"#advanced_call-initreact\"></a>Call initReact from base.html</li>\n    <li><a href=\"#advanced_create-an-assetsjscomp\"></a>Create an assets/js/components Folder</li>\n    <li><a href=\"#advanced_create-a-coupondrawerjs-file\"></a>Create a CouponDrawer.js File</li>\n    <li><a href=\"#advanced_create-a-verticallinear\"></a>Create a VerticalLinearStepper.js File</li>\n\t</ul>\n</div>"
                    - type: text
                      data: '## Video of What We''re Building'
                    - type: text
                      data: '## Install Dependencies'
                    - type: text
                      data: '## Import Dependencies'
                    - type: text
                      data: '## Update webpack.conf.js'
                    - type: text
                      data: '## Update app.js'
                    - type: text
                      data: ''
                    - type: text
                      data: ''
                    - type: text
                      data: ''
                    - type: text
                      data: ''
                    - type: text
                      data: ''
              - title: Page Types and Life Cycle
                route:
                  path: /new-subpage
                data:
                  blocks:
                    - type: html
                      data: <h1>Page Types and Life Cycle</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#adding_bundling-and-minification\">Bundling and Minification</a></li>\n    <li><a href=\"#adding_development-options\"></a>Development Options</li>\n\t</ul>\n</div>"
        - title: Conditional-Logic Examples
          route:
            path: /conditional-logic-examples
          data:
            children:
              - title: 'Catalog Price Object: How Properties Interact'
                route:
                  path: /catalog-price-object
                data:
                  blocks:
                    - type: html
                      data: '<h1>Catalog Price Object: How Properties Interact</h1>'
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#catalog-price_price-prop-overview\">Price Properties Overview</a></li>\n    <li><a href=\"#catalog-price_cost-price\">Cost Price</a></li>\n    <li><a href=\"#catalog-price_basic-price-example\">Basic Price Example – No \"Sale Price\" Defined</a></li>\n    <li><a href=\"#catalog-price_sale-price-defined\">\"Sale Price\" Defined Example</a></li>\n    <li><a href=\"#catalog-price_prices-and-conditional\">Prices and Conditional Logic – Special for You!</a></li>\n    <li><a href=\"#catalog-price_including-and-or-excluding\">Including and/or Excluding Tax</a></li>\n    <li><a href=\"#catalog-price_tax-sale-price\">Tax/Sale Price Interactions</a></li>\n    <li><a href=\"#catalog-price_mapping-of-control\">Mapping of Control-Panel Options to Catalog Price Properties</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Price Properties Overview


                        For each product in a catalog, merchants can use
                        BigCommerce's control panel options to set multiple
                        prices for a product. 


                        As a theme developer seeking ways to more effectively
                        merchandise products, you might want to engineer your
                        theme to utilize this information and highlight the
                        savings that a merchant is providing over the list
                        price, commonly known as the manufacturer's suggested
                        retail price (MSRP). In order to do this, you will need
                        to reference the correct property that the Stencil
                        catalog price object returns for each product. 


                        This page explains how the properties interact with each
                        other, and with control-panel options. We will also
                        include an example of building conditional logic around
                        a price property.
                      header:
                        anchor: catalog-price_price-prop-overview
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Cost Price


                        The Cost Price property is never returned to the
                        storefront. This is by design. Generally, merchants
                        would not want to reveal the true cost of goods to
                        shoppers. Rather, the cost price field is meant to be
                        consumed by reports and third-party accounting
                        integrations.
                      header:
                        anchor: catalog-price_cost-price
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Basic Price Example – No `Sale Price` Defined


                        Assume that the merchant has defined a product’s price
                        like this in the BigCommerce Control Panel:
                      header:
                        anchor: catalog-price_basic-price-example
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539813608717
                      header:
                        title: Item without sale price defined
                      config:
                        centered: true
                        fluid: true
                        bordered: true
                        maxWidth: '650'
                        maxHeight: '350'
                    - type: text
                      data: >+
                        In the photo above:


                        * The `Price` field contains this product’s standard
                        store price.

                        * The `Excluding Tax` indicator to the right of the
                        `Price` field is applicable to the whole column of price
                        fields.

                        * The `Cost Price` field will not be returned, for
                        reasons described above.

                        * The `Retail Price` field contains the list price (also
                        known as MSRP).

                        * No `Sale Price has` been set here.



                        A corresponding Stencil `price` object for the product
                        will be structured as follows:


                        ```

                        "product": {
                          "price": {
                            "without_tax": {"formatted": "$150.00","value": 150},
                            "rrp_without_tax": {"formatted": "$250.00","value": 250},
                            "saved": {"formatted": "$100.00","value": 100},
                            "tax_label": "Tax"
                          }
                        }

                        ```

                        Items to note about the Stencil `price` object above: 


                        * The `without_tax` property represents the standard
                        store price (the control panel’s `Price` field).

                        * The `rrp_without_tax` property represents the list
                        price or MSRP. (Here, `rrp` is short for "regular retail
                        price.")

                        * The `saved` property is the computed difference
                        between the `without_tax` versus `rrp_without_tax`
                        values.

                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## `Sale Price` Defined Example


                        This example below is identical, except that here the
                        merchant has assigned the product a discounted `Sale
                        Price` of `$123`:
                      header:
                        anchor: catalog-price_sale-price-defined
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539837943099
                      header:
                        title: Item with sale price defined
                      config:
                        maxWidth: '600'
                        maxHeight: '300'
                        centered: true
                        fluid: true
                        bordered: true
                    - type: text
                      data: >+
                        A corresponding Stencil price object for the product
                        will be structured as shown below. 


                        ```

                        "product": {
                          "price": {
                            "without_tax": {"formatted": "$123.00","value": 123},
                            "non_sale_price_without_tax": {"formatted": "$150.00","value": 150},
                            "rrp_without_tax": {"formatted": "$250.00","value": 250},
                            "saved": {"formatted": "$127.00","value": 127},
                            "tax_label": "Tax"
                          }
                        }

                        ```


                        Items to note regarding the Stencil `price` object
                        above: 


                        * The product’s effective price is the `Sale Price`
                        which appears in the object’s `without_tax` property.

                        * The regular store price is now displayed in an added
                        property called `non_sale_price_without_tax`.

                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Prices and Conditional Logic – Special for You! 


                        Stencil structures product prices as described above for
                        backward compatibility with the BigCommerce platform's
                        traditional treatment of prices. As a theme developer,
                        this behavior enables you to embed logic that determines
                        whether to display a strikeout (struck-out) price on the
                        storefront.


                        The example below tests for the presence of the
                        `non_sale_price_without_tax` property. If it is present,
                        that means that the product has a sale price, so the
                        page will display the regular store price struck-out:


                        ```
                          {{#if price.non_sale_price_without_tax}}
                             ... [some code to display on-sale strikeout pricing] ...
                          {{/if}}
                        ```
                      header:
                        anchor: catalog-price_prices-and-conditional
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Including and/or Excluding Tax 


                        Depending on how the store has been set up in the
                        control panel’s `Store Setup > Tax > Configure Tax
                        Display Settings`, the price object’s properties will
                        represent prices including tax, excluding tax, or in
                        both ways.


                        This setting affects not only how values are returned in
                        the Stencil framework, but also how the values appear on
                        storefront pages:
                      header:
                        anchor: catalog-price_including-and-or-excluding
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539842045139
                      header:
                        title: Configure Tax Display Settings
                      config:
                        centered: true
                        fluid: true
                        bordered: true
                        maxWidth: '600'
                        maxHeight: '400'
                    - type: text
                      data: >-
                        Below is an example of a Stencil `price` object that
                        returns properties’ values both including, and
                        excluding, tax. Here, we have configured a flat 10% tax
                        rate:


                        ```

                        "product": {
                          "price": {
                            "with_tax": {"formatted": "$165.00","value": 165},
                            "without_tax": {"formatted": "$150.00","value": 150},
                            "rrp_with_tax": {"formatted": "$275.00","value": 275},
                            "rrp_without_tax": {"formatted": "$250.00","value": 250},
                            "saved": {"formatted": "$110.00","value": 110},
                            "tax_label": "Tax"
                          }
                        }

                        ```


                        Items to note:


                        * The `with_tax` property is new in this example, and
                        represents the `without_tax` value plus a 10% tax
                        markup.

                        * The `rrp_with_tax` property is new as well, and
                        represents the `rrp_without_tax` value plus a 10% tax
                        markup.

                        *You would see the same new properties and values if the
                        control-panel setting had been `Including tax`, rather
                        than `Including and excluding tax`. But these
                        properties/vaues would not be added for a control-panel
                        seting of Excluding tax.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Tax/Sale Price Interactions 


                        Here is the same example – values both including and
                        excluding tax, and a flat 10% tax rate – but we have
                        also defined a sale price for the product:


                        ```

                        "product": {
                          "price": {
                            "with_tax": {"formatted": "$135.30","value": 135.3},
                            "without_tax": {"formatted": "$123.00","value": 123},
                            "rrp_with_tax": {"formatted": "$275.00","value": 275},
                            "rrp_without_tax": {"formatted": "$250.00","value": 250},
                            "saved": {"formatted": "$139.70","value": 139.7},
                            "non_sale_price_without_tax": {"formatted": "$150.00","value": 150},
                            "non_sale_price_with_tax": {"formatted": "$165.00","value": 165},
                            "tax_label": "Tax"
                          }
                        }

                        ```


                        Here again:


                        * The `with_tax` property represents the without_tax
                        value, plus a 10% tax markup.

                        * The `rrp_with_tax` property represents the
                        `rrp_without_tax` value, plus a 10% tax markup.


                        New here:


                        * The `non_sale_price_without_tax` and
                        `non_sale_price_with_tax` properties are added, to
                        represent the standard store price (respectively)
                        without and with tax.

                        * The saved value is now based on the difference between
                        the `with_tax` versus `non_sale_price_with_tax` values.

                        * You would see the same results if the control-panel
                        setting had been Including tax, rather than Including
                        and excluding tax. But these properties/values would not
                        be added for a control-panel seting of Excluding tax.
                      header:
                        anchor: catalog-price_tax-sale-price
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Mapping of Control-Panel Options to Catalog Price Properties\n\nThis table shows how price options available in the BigCommerce control panel relate to properties returned on the Stencil framework.\n\n<table>\n  <tr>\n    <th>Control-Panel Field</th>\n    <th>Stencil Catalog Price Object and Property</th>\n    <th>Notes</th>\n  </tr>\n\n  <tr>\n    <td>Retail Price (excluding tax)</td>\n\t\t<td><code>{{ product.price.rrp_without_tax }}</code></td>\n    <td>Typically used to represent the product’s list price (MSRP).</td>\n  </tr>\n\n  <tr>\n    <td>Retail Price (including tax)</td>\n\t\t<td><code>{{ product.price.rrp_with_tax }}</code></td>\n    <td>Typically used to represent the product’s list price (MSRP), including tax.</td>\n  </tr>\n\n  <tr>\n    <td>Price (excluding tax)</td>\n\t\t<td><code>{{ product.price.non_sale_price_without_tax }}</code></td>\n    <td>The standard store price for the product.</td>\n  </tr>\n\n  <tr>\n    <td>Price (including tax)</td>\n\t\t<td><code>{{ product.price.non_sale_price_with_tax }}</code></td>\n    <td>The standard store price for the product, with tax.</td>\n  </tr>\n  \n  <tr>\n    <td>Sale Price (excluding tax)</td>\n\t\t<td><code>{{ product.price.without_tax }}</code></td>\n    <td>This product’s discounted/sale price.</td>\n  </tr>\n  \n  <tr>\n    <td>Sale Price (including tax)</td>\n    <td>{{ product.price.with_tax }}</td>\n    <td>This product’s discounted/sale price, with tax.</td>\n  </tr>\n  \n  <tr>\n    <td>[No control-panel field]</td>\n    <td>{{ product.price.saved }}</td>\n    <td>The customer’s savings on the effective price versus list price.</td>\n  </tr>\n</table>"
                      header:
                        anchor: catalog-price_mapping-of-control
              - title: 'Cart Price Properties: Relationships'
                route:
                  path: /cart-price-relationships
                data:
                  blocks:
                    - type: html
                      data: '<h1>Cart Price Properties: Relationships</h1>'
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cart-price_cart-price-props\">Cart Price Properties: Relationships</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >+
                        This page shows the relationship of price properties
                        available on the `{{cart.items}}` object. These
                        properties' values cascade as follows.


                        For a single cart item, the `rrp` property contains the
                        list price, also known as MSRP:


                        ```

                        "rrp": { 
                          "formatted": "$130.00",
                          "value": 130
                        }

                        ```


                        Let's assume that the standard store price for this item
                        is actually $100.00, and that these bulk discount rules
                        are applied:


                        ```

                        "bulk_pricing": { 
                          "base_price": {
                            "formatted": "$100.00",
                            "value": 100
                          },
                          "discount_percentage": 5,  
                          "discount_amount": null
                        }

                        ```


                        Within `{{cart.items}}`, the `price` property contains
                        the item's price after bulk discounts, but before cart
                        discounts and promotions:


                        ```

                        "price": { 
                          "formatted": "$95.00",
                          "value": 95
                        }

                        ```


                        The `price_discounted` property contains the item's
                        price after cart discounts and promotions:


                        ```

                        "price_discounted": {  
                          "formatted": "$85.50",
                          "value": 85.5
                        }

                        ```

                      header:
                        anchor: cart-price_cart-price-props
              - title: Calling Theme-Wide Variables via Handlebars
                route:
                  path: /calling-theme-wide-variables
                data:
                  blocks:
                    - type: html
                      data: <h1>Calling Theme-Wide Variables via Handlebars</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#calling-theme-wide_calling-theme-wide\">Calling Theme-Wide Variables via Handlebars</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Calling Theme-Wide Variables via Handlebars


                        As shown in an earlier Quick Start example, you can
                        reference variables from `config.json` in a theme
                        template's front matter. But you can also call any
                        `config.json` variable within a template's
                        HTML/Handlebars body, by using a Handlebars expression
                        that precedes the variable with `theme_settings`.


                        Below, from Cornerstone's `templates/pages/home.html`,
                        is a code snippet that provides three examples:


                        ```

                        <div class="main full">
                            {{#if products.featured}}
                                {{> components/products/featured products=products.featured
                                    columns=theme_settings.homepage_featured_products_column_count}}
                            {{/if}}

                            {{#if products.top_sellers}}
                                {{> components/products/top products=products.top_sellers
                                    columns=theme_settings.homepage_top_products_column_count}}
                            {{/if}}

                            {{#if products.new}}
                                {{> components/products/new products=products.new 
                                    columns=theme_settings.homepage_new_products_column_count}}
                            {{/if}}
                        </div> 

                        ```


                        Above, each `if` conditional statement tests whether one
                        of the three products attributes (Featured Products, Top
                        Sellers/Popular Brands, or New Products) is declared
                        within this template's front matter. If so, for the
                        corresponding section on this page, it sets the local
                        column count to match the theme-wide
                        `theme_settings...._column_count value` defined in
                        `config.json`.
                      header:
                        anchor: calling-theme-wide_calling-theme-wide
              - title: Dynamic Content Rendering on Stencil Storefronts
                route:
                  path: /dynamic-content-rendering
                data:
                  blocks:
                    - type: html
                      data: >-
                        <h1>Dynamic Content Rendering on Stencil
                        Storefronts</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#dynamic-content_why-dynamic-content\">Why Dynamic Content?: Dropzones, Dynamic Tabs, and Snippets</a></li>\n    <li><a href=\"#dynamic-content_dropzones\">Dropzones</a></li>\n    <li><a href=\"#dynamic-content_dynamic-tabs\">Dynamic Tabs</a></li>\n    <li><a href=\"#dynamic-content_snippets\">Snippets</a></li>\n    <li><a href=\"#dynamic-content_recap\">Recap</a></li>\n  </ul>\n</div>"
                    - type: text
                      data: >-
                        _We're gratefully sharing techniques devised by Ken
                        Utting, Web Developer for BigCommerce client
                        goruck.com_.


                        ## Why Dynamic Content?: Dropzones, Dynamic Tabs, and
                        Snippets


                        At GORUCK, we've customized our Stencil theme (currently
                        using the
                        [Merchant](https://www.bigcommerce.com/theme/merchant-light/?_ga=2.52710120.1984523106.1539568940-967431010.1523308107)
                        theme) to provide several ways to update our site
                        content without requiring changes to the theme itself.
                        This allows our content folks to make changes to our
                        theme without having to wait on our software developers.


                        Also, by pushing content out of the theme, these
                        techniques reduce the differences between our customized
                        theme and the out-of-the-box (base) theme – which makes
                        it easier to integrate ongoing updates into our theme.
                        Finally, these techniques allow us share identical
                        content across pages without copying and pasting.


                        Three techniques in particular have proven useful to us.
                        We call them Dropzones, Dynamic Tabs, and Snippets.
                        There is nothing particularly special to GORUCK about
                        these techniques, so there is no reason you can't adopt
                        them for your own store/theme.


                        ### Building on the Control Panel


                        The BigCommerce control panel provides an HTML editor
                        where you can enter custom content for Products,
                        Categories, and custom static pages (Storefront > Web
                        Pages). However, we encountered the following
                        limitations:


                        The HTML editor will remove a number of tags,
                        particularly style and script tags.


                        Without changes like the ones we made at GORUCK
                        (described below), all the content will be placed in a
                        single location on the page.


                        At GORUCK, we needed the ability to inject arbitrary
                        HTML into our page, and to place that content at various
                        specific page locations. To achieve this, we developed
                        the three techniques described below.
                      header:
                        anchor: dynamic-content_why-dynamic-content
                    - type: text
                      data: >-
                        ## Dropzones


                        Let's say that at the top of your category pages, you
                        want to display a full-width, category-specific, image.
                        And at the bottom of these pages, you want to display a
                        category-specific message or image gallery.


                        One possibility is to define a custom page for every
                        category. But aside from the work involved to set this
                        up, every time you added or removed a category, you
                        would need to add or remove a custom page from your
                        theme. And of course, it's possible that you would also
                        want control like this on product pages, and on other
                        pages on your storefront.


                        A more general solution we implemented was to create a
                        small set of custom pages: one for categories, one for
                        products, and so on. Each of the custom pages contains a
                        few `div` elements that define dropzones for that page.


                        With these dropzones defined, we can then populate them
                        with dynamic content specific to any instance of the
                        page. Here is an example of a dropzone that places an
                        image gallery at the bottom of a category page:
                      header:
                        anchor: dynamic-content_dropzones
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539874696853
                      header:
                        title: >-
                          Dropzone that places an image gallery at the bottom of
                          a category page
                    - type: text
                      data: >-
                        ### Dropzones HTML


                        The HTML for a dropzone is simply something like:


                        `<div id="gr-dropzone-top"></div>`


                        where the div's `id` defines the dropzone's name.


                        Then, using the BigCommerce **control panel's custom
                        HTML editor** (in this example, the Categories editor),
                        we place our content inside div tags that specify the
                        dropzone where the content should be inserted. Here is a
                        simple example:


                        ```

                        <div class="gr-dropzone" data-gr-zone="gr-dropzone-top">
                            <p>This content will be placed in a dropzone at the top of the page, because that dropzone has the id matching our data-gr-zone attribute.</p>
                        </div>

                        ```


                        ### Dropzones HTML Example


                        Here is an example of some HTML that we actually use:


                        ```

                        <div class="gr-dropzone"
                        data-gr-zone="gr-dropzone-bottom">
                            <h3>GORUCK GEAR IN THE FIELD</h3>
                            <div id="bv-grid-gallery" data-gr-groups="goruck-rm-group" data-gr-tags="gear"></div>
                        </div>

                        ```


                        ### Dropzones JavaScript


                        The content is moved from the default location to the
                        dropzone by JavaScript we added to the PageManager
                        class. In BigCommerce's Cornerstone base theme, Pixel
                        Union's Merchant theme, and other Stencil themes,
                        PageManager is the parent class of all page classes. So,
                        its methods get invoked on every page. This makes it a
                        great place to put code like this, which needs to run
                        every time a page is loaded.


                        We modified our theme's PageManager.before method to
                        invoke a new method named `gr_moveHtmlToDropzones`:


                        ```
                         gr_moveHtmlToDropzones () {
                                $(".gr-dropzone").each(function () {
                                    const $this = $(this);
                                    const zoneId = $this.data("gr-zone");
                                    if (zoneId) {
                                        $("#" + zoneId).html($this.html());   // copy the html to where it should be
                                        $this.remove();             // remove the html from its temporary location
                                    } else {
                                        console.warn("PageManager.gr_moveHtmlToDropzones: dropzone has no target.");
                                    }
                                });
                            }
                        ```


                        Finally, in our .scss file, we set the `.gr-dropzone`
                        class to display: none. This prevents the content from
                        appearing on the page in the wrong location before
                        PageManager has a chance to move it into the dropzone.
                    - type: text
                      data: >-
                        ## Dynamic Tabs


                        Our Stencil base theme presents information on our
                        product pages in several tabs. We wanted to introduce
                        several new tabs, and to vary the tabs by product
                        category and brand. Additionally, we wanted the ability
                        to store a tab's content in an external file, on our
                        WebDAV or CDN (content delivery network).


                        By storing content in an external file, we can share
                        identical content across pages, without copying and
                        pasting. Also, changes to the content can be made just
                        once, and be reflected on all our pages.


                        So we implemented a feature we call Dynamic Tabs.
                        Dynamic Tabs are similar to dropzones, in that they
                        allow you to use the control panel's HTML editor to
                        provide content, while moving it to a specific location
                        on the page. In this case, our content will appear in a
                        tab.


                        In the example below, we use this technique to place the
                        `RIGHT BY YOU` tab in the fourth position:
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539874970240
                    - type: text
                      data: >+
                        ### Dynamic Tabs HTML


                        There are two versions of the HTML. The first is
                        designed for a tab you want to drop in using a page's
                        own HTML:


                        ```

                        <div class="gr-tab" data-gr-position="POSITION"
                        data-gr-title="TITLE"> 
                             CONTENT 
                        </div>

                        ```


                        The second version is designed for a tab that gets its
                        content from an external file:


                        ```

                        <div class="gr-tab" data-gr-content="CONTENT URL">

                        </div>

                        ```


                        In this second case, the HTML in that external file must
                        start with the POSITION and TITLE information:


                        ```

                        <input id="gr-tab-data" type="hidden"
                        data-gr-position="POSITION" data-gr-title="TITLE" /> 
                         CONTENT
                        ```


                        ### Dynamic Tabs Parameters


                        POSITION is a number, which determines where the dynamic
                        tab will be put. For example, a POSITION of 3 means that
                        the tab will be placed after the third tab.


                        We use a POSITION of 0 to place a tab ahead of the first
                        tab. If the POSITION attribute is omitted, the tab will
                        be placed after all the other tabs. (Note that if you
                        add multiple dynamic tabs, any POSITION that you specify
                        must account for the previously inserted dynamic tabs.)


                        TITLE is the text you want to display as the tab's
                        title. For example: Our Guarantee.


                        CONTENT is any arbitrary HTML, and is displayed when the
                        user clicks on the tab's title.


                        ### Dynamic Tabs HTML Example


                        To create the RIGHT BY YOU tab in the screenshot above,
                        we added this code to our base theme's
                        templates/pages/product.html template:


                        ```

                        <!-- GORUCK Customization: pull in a dynamic tab -->
                          <div class="gr-tab" data-gr-content="/content/tabs/dynamicTab1.html?v=14">
                          </div>
                        ```


                        This tells our code to pull in a file named
                        `dynamicTab1.html`, located in our WebDAV's
                        `/content/tabs/` folder. The querystring is used just to
                        defeat caching.


                        Here are the contents of our `dynamicTab1.html` file:


                        ```

                        <input id="gr-tab-data" type="hidden"
                        data-gr-position="3" data-gr-title="Right By You"/>

                        <div class="container container-small gr-rightbyyou">
                          <div style="display: flex; flex-direction: column">
                            <div style="display: flex">
                              <div>
                                <img style="display: block; width: 100px; max-width: 100px; margin-right: 24px" 
                                src="https://content.goruck.com/2017site/products/free-returns-icon.png" height="auto"/>
                              </div>
                            <div>
                              <h3 style="margin-top: 0">Free &amp; Easy Returns</h3>
                              <p>Don't like it? Send it back for free. Returnable in like-new condition within 30 days and 
                              every order comes with a free return shipping label. Too easy.</p>
                            </div>
                          </div>

                          <div style="display: flex; margin-top: 12px">
                            <div>
                              <img style="display: block; width: 100px; max-width: 100px; margin-right: 24px" 
                              src="https://content.goruck.com/2017site/products/challenge-excellence.png" height="auto"/>
                            </div>

                            <div>
                              <h3 style="margin-top: 0">Challenge Excellence</h3>
                              <p>We have two grades, A and F and A- rounds down. Excellence is the standard and please hold us to it, 
                              we want you to love your gear as much as we do.</p>
                            </div>
                          </div>

                          <div style="display: flex; margin-top: 12px">
                            <div>
                              <img style="display: block; width: 100px; max-width: 100px; margin-right: 24px" 
                              src="https://content.goruck.com/2017site/products/customer-service-icon.png" height="auto"/>
                            </div>
                              <div>
                                <h3 style="margin-top: 0">Do Right By People</h3>
                                <p>Our goal is to run a company our grandfathers would be proud of. And the central tenet 
                                &mdash; an oldie but a goodie &mdash; is that we do whatever it takes to do right by people.
                                Contact us at <a href="https://goruck.zendesk.com/hc/en-us/requests/new" target="_blank">
                                team@goruck.com</a> with any questions and we'll get back to you ASAP.</p>
                              </div>
                            </div>
                          </div>
                        </div>

                        ```


                        ### Dynamic Tabs Javascript 


                        Again, the JavaScript code to implement Dynamic Tabs is
                        invoked in the PageManager class' before method. The
                        Dynamic Tabs code is more complex, and it relies on
                        other classes we wrote to get content from the external
                        server and cache it in the browser.


                        Nevertheless, none of it is rocket science. The three
                        classes involved are 250 lines of code. Interested
                        readers are invited to contact me via the BigCommerce
                        Developers forum for more information about the
                        implementation.

                    - type: text
                      data: >-
                        ## Snippets


                        Snippets are similar to Dynamic Tabs, in that they allow
                        you to use the BigCommerce control panel's HTML editor
                        to provide content, but pull it from a separate file.
                        This allows you to share common content across multiple
                        pages.


                        Also, because the control panel's HTML editor strips out
                        stylesheets, this is a good way to provide page-specific
                        styles for a page.


                        We use snippets at GORUCK to display our sizing charts,
                        as shown below. This makes sense since because we have a
                        handful of charts that need to be shared across many
                        products, so we don't want to copy and paste each chart
                        for every product that needs it.
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539878331668
                      config:
                        centered: true
                        fluid: true
                        bordered: true
                        maxWidth: '650'
                        maxHeight: '350'
                    - type: text
                      data: >+
                        ## Snippets HTML


                        Here is the format of the HTML that needs to placed on
                        each page that uses the snippet:


                        ```

                        <div class="gr-snippet" data-gr-content="CONTENT URL">
                             <em>Loading...</em>
                        </div>

                        ```


                        The external file can contain any arbitrary HTML and
                        CSS, and the styled HTML is displayed in the page
                        location where the `gr-snippet` div is located.


                        ## Snippets JavaScript


                        Like Dropzones and Dynamic Tabs, the Snippets code is
                        invoked in `PageManager`'s `before` method. Snippets
                        adds just another 50 lines of JavaScript code to the
                        theme, also relying on the same code that Dynamic Tabs
                        uses to get the external file and cache it in the
                        browser.

                    - type: text
                      data: >-
                        ## Recap 


                        At GORUCK, we've developed a number of techniques that
                        allow us to separate our content from our theme. These
                        techniques have proved valuable to us, because they
                        allow us to:


                        * Keep our content development and software development
                        workflows separate.

                        * Reduce modifications to our theme, which simplifies
                        merging updates from our theme provider.

                        * Share content across multiple pages.

                        * Tailor our content based on product category and
                        brand.
        - title: Internationalization/Localization
          route:
            path: /internationalization-and-localization
          data:
            children:
              - title: Localizing Stores
                route:
                  path: /localizing-stores
                data:
                  blocks:
                    - type: html
                      data: <h1>Localizing Stores</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#localizing_localization-touchpoints\">Localization Touchpoints Overview</a></li>\n    <li><a href=\"#localizing_translating-theme-files\">Translating Theme Files via Stencil CLI</a></li>\n    <li><a href=\"#localizing_localizing-checkout\">Localizing Checkout</a></li>\n    <li><a href=\"#localizing_localizing-control-panel\">Localizing Non-Theme Content</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Localization Touchpoints Overview 


                        You can run a BigCommerce store in any single language
                        of your choice. If you want to support multiple
                        languages, we recommend setting up a separate store for
                        each language. To fully localize a store into a
                        language/region other than U.S. English, you will need
                        to customize three areas:


                        Storefront theme pages: Translate static strings. This
                        requires adding translation files for your chosen
                        non-English languages, via Stencil CLI.


                        Checkout: Localizing checkout requires modifications
                        both to theme files (in Stencil CLI) and to settings in
                        the BigCommerce control panel.


                        Outside your theme: Adjust other localization details
                        via the BigCommerce control panel.


                        The following sections provide a linked summary of all
                        the steps involved.
                      header:
                        anchor: '#localizing_localization-touchpoints'
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Translating Theme Files via Stencil CLI


                        The core of localizing a store is to translate content
                        on your theme's page templates into each language that
                        you choose to support. You will need to abstract these
                        templates' literal text strings into `{{lang}}`
                        variables, then provide per-language JSON files that
                        define these variables in corresponding key/value pairs.


                        For details on this process, see this section's
                        remaining pages, starting with [Basis for
                        Internationalization]().
                      header:
                        anchor: '#localizing_translating-theme-files'
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Localizing Checkout


                        Localizing your theme's checkout and order confirmation
                        pages requires specific steps in:

                        * the corresponding templates 

                        * each of your JSON translation files 

                        * and in the BigCommerce control panel


                        **Note:** _To localize your theme's checkout and/or
                        order confirmation page, you must first enable
                        [Optimized One-Page Checkout.]()_


                        For details, please see the following pages:


                        * [Preparing Stencil Themes for Optimized One-Page
                        Checkout]() is a **prerequisite** for the remaining
                        checkout internationalization options below.


                        * [Currency-Conversion Options]() covers displaying
                        prices in alternate currencies.


                        * [Multi-Language Checkout]() covers translating your
                        checkout and/or order confirmation templates.
                      header:
                        anchor: '#localizing_localizing-checkout'
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Localizing Control Panel Content


                        The remaining localization options reside outside your
                        theme and are accessible through the BigCommerce control
                        panel:


                        * [Product Catalog](#product-catalog)

                        * [Currency](#currency)

                        * [Checkout Type](#checkout-type)

                        * [Date Format](#date-format)

                        * [Order Statuses](#order-statuses)

                        * [Blog](#blog)

                        * [Static Web Pages](#static-web-pages)

                        * [Transactional Emails](#transactional-emails)

                        * [Gift Certificates](#gift-certificates)


                        **Note:** _The BigCommerce platform does not currently
                        support translation of Transactional Emails or Gift
                        Certificates into languages other than English, so we
                        have rather provided a management best practice for
                        each._



                        ### <div id="product-catalog">Localizing the Product
                        Catalog</div>


                        You must localize the store's product catalog separately
                        from its theme. Each entry within a catalog can be set
                        up in only one language, so you will want to localize a
                        separate version of your catalog for each
                        single-language store.


                        For an overview of populating the store catalog –
                        including options for bulk-importing content that you
                        can localize outside the BigCommerce platform – please
                        see our support article on [Adding and Managing Your
                        Product Catalog]().


                        ### <div id="currency">Localizing Currency</div>

                        Each store's default currency is configured in the
                        BigCommerce control panel. For details, please see our
                        support article on Changing Your Default Currency.


                        ### <div id="date-format">Localizing Date Format</div>

                        You can set the appropriate date format for your store's
                        language/region in the BigCommerce control panel (under
                        Store Setup > Store Settings > Date & Timezone). For
                        details, please see this support article.


                        ### <div id="order-statuses">Localizing Order
                        Statuses</div>

                        The order-status labels displayed on a BigCommerce
                        storefront are configured outside your theme. You can
                        translate each of these strings via the BigCommerce
                        control panel's Orders > Order Statuses option. For
                        instructions, please see the Customizing an Order Status
                        Label support topic.


                        ### <div id="blog">Localizing the Blog</div>

                        You manage blog entries through the BigCommerce control
                        panel (under Storefront Content > Blog). You are free to
                        add blog content in any language you choose. For
                        details, please see this support article.


                        ### Localizing Static Web Pages

                        If you create static pages as Stencil custom templates,
                        you can localize their content just like other theme
                        pages' content. However, if you create custom pages via
                        the BigCommerce control panel (under Storefront Content
                        > Web Pages), you must also enter their localized
                        content via the control panel; for details, please see
                        this support article.


                        ### <div id="transactional-emails">Managing
                        Transactional Emails</div>

                        BigCommerce does not currently provide native support
                        for localizing transactional emails. To fully localize a
                        store into a language other than English, the simplest
                        solution is to disable the sending of BigCommerce native
                        emails. You can access this option from the BigCommerce
                        control panel's left nav in one of two locations
                        (depending on your store's control-panel version):


                        Storefront Design > My Themes > Design Options > More
                        [drop-down list] > Emails

                        Next, in the Enable column, uncheck the check box for
                        each email type that you want to disable. (These toggles
                        require no confirmation step.) For further details about
                        managing BigCommerce transactional emails, please see
                        this support article.


                        ### <div id="gift-certificates">Managing Gift
                        Certificates</div>

                        The BigCommerce platform does not currently support
                        translation of gift certificates into languages other
                        than English. To fully localize your store, you can
                        choose to disable gift certificates via the BigCommerce
                        control panel.
                      header:
                        anchor: '#localizing_localizing-control-panel'
              - title: Basis for Internationalization
                route:
                  path: /basis-for-internationalization
                data:
                  blocks:
                    - type: html
                      data: <h1>Basis for Internationalization</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#basis_what-translates\">What Does and Doesn't Translate</a></li>\n    <li><a href=\"#basis_required\">Required Subdirectory</a></li>\n    <li><a href=\"#basis_schema\">The Schema</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## What Does and Doesn't Translate


                        The Stencil framework allows you to define multiple
                        translations for each theme based on a predefined
                        schema. Theme developers are not required to localize a
                        theme in order to make it work. BigCommerce does not
                        provide translations for the theme’s content, however,
                        you have the option of localizing your themes for
                        desired target languages, based on the provided schema.


                        * In order for theme translation to occur, you must
                        create a JSON file for each language you choose to
                        support and include key/value pairs for the text
                        blocks/parameters that you choose to translate. The
                        following pages provide details for these steps.


                        * The translated values will be displayed to visitors
                        who have selected the corresponding language in their
                        browser's locale preferences. The Stencil framework
                        automatically detects the Accept-Language request HTTP
                        header from the visitor's browser.


                        * Where a Stencil theme contains no JSON file matching
                        any of the visitor's preferred languages, it will fall
                        back to the values in the default English-language JSON
                        file.


                        * Stencil's multi-language capabilities are currently
                        limited to these particular strings that you specify
                        within the theme. The Stencil framework does not
                        currently translate content rendered from a store's
                        catalog database – for example, products' names.


                        * If you want to fully support multiple languages, we
                        recommend that you set up a separate storefront for each
                        language. This will enable you to thoroughly customize
                        all of your content (including your product catalog) for
                        each target audience.
                    - type: text
                      data: >
                        ## Required Subdirectory


                        Within each theme, a top level `/lang/` subdirectory is
                        reserved for internationalization. This `.../lang/`
                        subdirectory, with its contained en.json file (which
                        contains English-language defaults), must be present in
                        order for a Stencil theme to function.


                        You can localize a theme by providing other appropriate
                        .json translation files in the `.../lang/` subdirectory.
                        One file is required for each language that you want to
                        support. (These can include non-U.S. versions of
                        English, each with their own spellings.)


                        Within these files, you would define key values
                        corresponding to the text blocks in your theme's
                        templates that you choose to abstract into translatable
                        keys.
                    - type: text
                      data: "## The Schema\n\nName your translation files based on the <a href=\"https://tools.ietf.org/html/bcp47\">BCP47 specification</a> of language and region codes. For a summary of how these codes are designed, see the World Wide Web Consortium’s <a href=\"http://www.w3.org/International/articles/language-tags/\">overview</a>.<br>\n\n <br>\n\nYou can find a list of code subtags in the <a href=\"http://www.iana.org/assignments/language-subtag-registry\">IANA Language Subtag Registry</a>. These subtags are primitives that you can combine to create file names’ prefixes for individual regions. Here are some examples:\n\n<table>\n\t\t<tr>\n    <th>Localization file name</th>\n    <th>Corresponding regional language variant</th>\n    <th>Subtags used</th>\n  </tr>\n  <tr>\n    <td class=\"\">en.json</td>\n    <td class=\"\">English (default file)</td>\n    <td class=\"\">en (English)</td>\n  </tr>\n  <tr>\n    <td class=\"\">en-US.json</td>\n    <td class=\"\">American English</td>\n    <td class=\"\">en (English) + US (United States)</td>\n  </tr>\n  <tr>\n    <td class=\"\">en-AU.json</td>\n    <td class=\"\">Australian English</td>\n    <td class=\"\">en (English) + AU (Australia)</td>\n  </tr>\n  <tr>\n    <td class=\"\">fr.json</td>\n    <td class=\"\">French</td>\n    <td class=\"\">en (French)</td>\n  </tr>\n  <tr>\n    <td class=\"\">fr-CA.json</td>\n    <td class=\"\">Canadian French</td>\n    <td class=\"\">fr (French) + CA (Canada)</td>\n  </tr>\n</table>\n\n\nFor more examples of frequently-used codes, see the following linked table’s \"LCID string\" (middle) column: <a href=\"http://www.science.co.il/Language/Locale-codes.asp\">http://www.science.co.il/Language/Locale-codes.asp</a>."
                    - type: text
                      data: >-
                        ## Localization File Structure


                        The `.json` translation files have a straightforward
                        structure of key-value pairs. Here is an example, from
                        Stencil’s default `en.json` file:


                        `"welcome_back": "Welcome back, {name}"`


                        Above, `"welcome_back"` is an arbitrary key name for a
                        welcome message. The string `"Welcome back, {name}"` is
                        its assigned value for English-language stores.


                        If you design your theme’s storefront pages to refer to
                        this message by its generic key name `"welcome_back"`,
                        they can pass its localized value in other languages, as
                        that value is defined in each language’s `.json` file.

                        Key-value pairs are grouped into objects, as you can see
                        in this longer example:


                        ```

                        {
                           "header": {
                            "welcome_back": "Welcome back, {name}"
                           },
                           "prelaunch": {
                            "coming_soon": "Coming Soon",
                            "intro": "This store will be launching shortly. Please visit again!"
                           },
                           "cart": {
                            "items": "{NUM, plural, =0{(0 items)} one {(# item)} other {(# items)}}",
                            "label": "Cart",
                            "is_empty": "Your cart is empty",
                             "coupon_code": "Coupon Code",
                            "gift_certificate": "Gift Certificate",
                            "freeshipping": "Free Shipping",
                            "shipping_peritem": "Per Item Shipping",
                            "shipping_estimator": {
                                "add_info": "Add Info",
                                "select_a_country": "Select a Country",
                                "select_a_state": "Select a State",
                                "estimate_shipping": "Estimate Shipping"
                            }
                           },
                        }

                        ```
              - title: Invoking Translation Keys
                route:
                  path: /invoking-translation-keys
                data:
                  blocks:
                    - type: html
                      data: <h1>Invoking Translation Keys</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#invoking_translation\">Translation Syntax</a></li>\n    <li><a href=\"#invoking_video\">Video Demo/a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Translation Syntax


                        Once keys and values are defined in the appropriate
                        .json translation files, you invoke dynamic translation
                        strings using the Stencil framework’s `{{lang}}` custom
                        Handlebars helper. Your invocation would follow this
                        generic format:


                        `{{lang "translation.key"
                        optionalVariable=”someValue”}}`


                        Here is how this works. In a non-internationalized
                        theme, a storefront page might include a static/dynamic
                        string like this:


                        `<a href="{{ urls.account }}">Welcome Back <span>{{
                        customer.name }}</span></a>`


                        The corresponding internationalized version – ready to
                        work with any language – would substitute the fully
                        dynamic `{{ lang... }}` Handlebars helper shown below:


                        `<a href="{{ urls.account }}">{{ lang
                        "header.welcome_back" name=customer.name }}</a>`
                      header:
                        anchor: invoking_translation
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Video Demo


                        Watch a video demonstration of how JSON translation
                        files' key/value pairs interact with your templates'
                        Handlebars statements to localize your storefront
                        pages: 


                        <iframe width="560" height="315"
                        src="https://www.youtube.com/embed/ygiRGfSrmnA"
                        frameborder="0" allow="autoplay; encrypted-media"
                        allowfullscreen></iframe>
                      header:
                        anchor: invoking_video
                    - type: callout
                      data:
                        body: >-
                          Be sure to set permission 644 (rw-r–r–) on any new
                          translation files that you add. Without these
                          permissions, running your theme locally will fail,
                          with multiple error messages. Bundling your theme will
                          also fail, blocking its upload to a store.
                        type: warning
                        title: File Permissions Required
              - title: Features Supported
                route:
                  path: /features-supported
                data:
                  blocks:
                    - type: html
                      data: <h1>Features Supported</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#implementation_cornerstone-example\">Automatic Language Detection</a></li>\n    <li><a href=\"#implementation_cornerstone-example\">Cascading Translations</a></li>\n\t\t<li><a href=\"#implementation_cornerstone-example\">Nested Plurality and Gender Support</a></li>\n\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        The .json translation files are loaded and parsed as
                        UTF-8, so they should support virtually any natural
                        language. The schema also supports the following
                        features:
                    - type: text
                      data: >-
                        ## Automatic Language Detection


                        The Stencil framework can automatically detect a
                        localized language, based on the active shopper’s
                        `"Accept‑Language"` header.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Cascading Translations


                        Cascading works as follows: Assume that a
                        Quebec/French-Canadian customer visits a storefront
                        built with both `fr.json` and `fr‑CA.json` localization
                        files. The framework places the `fr‑CA` locale "on top
                        of" the base `fr locale`. Therefore, any strings missing
                        from the `fr‑CA.json` file will “fall back” to
                        definitions in the base `fr.json file`, providing at
                        least approximate translations. This cascading works
                        generally across languages and locales.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Nested Plurality and Gender Support

                        The framework allows you to code conditional plurality
                        for strings within each translation file. For example,
                        your code within an English-language file could overload
                        a single message to display in each of the following
                        forms – depending on the actual value of its two numeric
                        variables:


                        * "There are 3 items in 2 categories"

                        * "There is 1 item in 2 categories"

                        * "There are 2 items in 1 category"


                        Here is the markup that would handle the first three
                        words in each example above, assuming appropriate
                        parameters were inserted in the translation files:


                        ```

                        <h2 class="modal-header-title">
                           {{lang 'cart.added_to_cart.what_next' num_products=cart.quantity}} [...]
                        </h2>

                        ```


                        Similarly, the framework supports per-language
                        conditional coding of appropriate genders for pronouns
                        and nouns.
              - title: Implementation Example
                route:
                  path: /implementation-example
                data:
                  blocks:
                    - type: html
                      data: <h1>Implementation Example</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#implementation_cornerstone-example\">Cornerstone Implementation Example</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Here is an example based on this file within
                        Cornerstone:

                        `cornerstone/templates/components/cart/shipping-estimator.html`


                        In the excerpt below, each highlighted `{{lang...}}`
                        statement is a Handlebars helper. Each of the statements
                        abstracts the message indicated by its
                        (English-language) key name to enable
                        internationalization of that message:


                        ```

                        <div class="shipping-estimator" style="display: none;">
                            <form class="estimator-form">
                              <button class="shipping-estimate-hide">{{lang 'cancel'}}</button>
                              <select name="shipping-country">
                              <option>{{lang 'cart.shipping_estimator.select_a_country'}}</option>
                              {{#each countries}}
                                  <option value="{{id}}" {{#if selected}}selected="selected"{{/if}}>
                                        {{name}}
                                  </option>
                              {{/each}}
                              </select>
                              <select name="shipping-state">
                              <option>{{lang 'cart.shipping_estimator.select_a_state'}}</option>
                              {{#each states}}
                                  <option value="{{id}}" {{#if selected}}selected="selected"{{/if}}>
                                      {{name}}
                                  </option>
                              {{/each}}
                              </select>
                              <input type="text" name="shipping-zip" value="{{selected_zip}}">
                              <button class="shipping-estimate-submit">{{lang 'cart.shipping_estimator.estimate_shipping'}}
                              </button>
                            </form>
                            <div class="shipping-quotes"></div>
                        </div>


                        ```



                        In the excerpts below, you can see that the default
                        theme’s basic `.../lang/en.json` file includes matches,
                        and value definitions, for each of the translation keys
                        in the Handlebars helpers above:



                        ```

                        {
                          "header": {
                                "welcome_back": "Welcome back, {name}"
                          },
                          ...
                              "label": "Cart",
                                "is_empty": "Your cart is empty",
                                "coupon_code": "Coupon Code",
                                "gift_certificate": "Gift Certificate",
                                "freeshipping": "Free Shipping",
                                "shipping_peritem": "Per Item Shipping",
                              "shipping_estimator": {
                                    "add_info": "Add Info",
                                  "select_a_country": "Select a Country",
                                  "select_a_state": "Select a State",
                                  "estimate_shipping": "Estimate Shipping"
                              }
                          },
                          "common": {
                                "currency_converter": "Currency Converter",
                                "newsletter_signup": "Sign up for our newsletter",
                                "form_submit": "Submit",
                                "required": "Required",
                                "email_address": "Email Address",
                              "edit": "Edit",
                              "no": "No",
                              "yes": "Yes",
                              "cancel": "Cancel",
                              "share": "Share",
                              "delete": "Delete",
                              "public": "Public",
                                "private": "Private",
                                "view_all": "View All",
                                "paginator": {
                                    "page_of": "Page {current} of {total}"
                              },
                              ...
                        ```



                        Translation files for other languages would use the same
                        format, to define these keys’ values in their respective
                        languages.
                      header:
                        anchor: '#implementation_cornerstone-example'
        - title: Prepare & Upload a Theme
          route:
            path: /prepare-and-upload-a-theme
          data:
            children:
              - title: Sizing A Theme
                route:
                  path: /sizing-a-theme
                data:
                  blocks:
                    - type: html
                      data: <h1>Sizing Your Theme</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#sizing_sizing-your-theme\">Sizing Your Theme</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Sizing Your Theme


                        Your theme should ideally bundle into an archive of only
                        a few megabytes. BigCommerce imposes a hard limit of 50
                        MB, but most themes do not approach this limit unless
                        they include many large static assets.


                        If your theme is unlikely to exceed 50 MB, you can skip
                        past jump directly to [Bundling and Submitting a
                        Theme]().


                        A few themes, however, might exceed the 50 MB limit. In
                        these cases, you can either

                        [Shrink Your Theme with the help of WebDAV]() or [Stage
                        Your Theme for CDN Delivery]() to restructure your theme
                        to a size that's manageable for upload to BigCommerce.
                      header:
                        anchor: sizing_sizing-your-theme
              - title: 'Shrinking A Theme '
                route:
                  path: /shrinking-your-theme
                data:
                  blocks:
                    - type: html
                      data: >-
                        <h1>Shrinking a Theme by Excluding Static Assets Using
                        WebDAV</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#shrinking_restructuring\">Restructuring a Theme</a></li>\n    <li><a href=\"#shrinking_webdav-folders\">WebDAV Folders and Stencil Themes</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >
                        ## Restructuring Your Theme


                        In this section, you will first isolate static assets
                        from your theme's local directory, then use WebDAV to
                        cloud-host those assets, and finally reference those
                        assets using Stencil's cdn Handlebars helper.

                        For an existing theme, make a backup of your whole
                        <theme‑name> directory before proceeding.


                        Examine your theme's `/assets/` subdirectory and/or its
                        intended contents. Check for large static assets like
                        images (especially in `/assets/img/`) and videos that
                        are likely culprits in causing a bundled `.zip` file to
                        go toward or beyond BigCommerce's 50 MB limit.


                        Use WebDAV to upload these items to WebDAV's remote
                        `/content/` directory. For WebDAV specifics, please see
                        BigCommerce's Knowledge Base articles on:

                        * [Connecting to WebDav]()

                        * [WebDAV Folder Structure]()


                        Throughout your theme, reference each of these assets
                        using Stencil's `cdn` custom Handlebars helper –
                        prepending the `webdav:` option to the `assetPath`
                        parameter.


                        Prepending `webdav:` will build a URL in the remote
                        WebDAV directory. This allows your theme's deployed
                        topology to diverge from any your local directory
                        structure. As noted above, the `cdn` helper will treat
                        `/content/` as the default/root WebDAV directory. So,
                        for example, this statement:


                        `<img src="{{cdn "webdav:img/image.jpg"}}">`


                        will build the URL transformed below:


                        `<img
                        src="https://cdn.bcapp/3dsf74g/content/img/image.jpg">`


                        On your local machine, move the large static assets to a
                        location where the `stencil bundle` command will ignore
                        them.

                        This can be a location outside your `<theme-name>`
                        directory, or it can be the `<theme-name>/assets/cdn/
                        subdirectory`, which stencil bundle excludes from
                        bundling. Separating these assets is necessary to
                        exclude them from the next step.


                        Run or re-run the `stencil bundle` command, from inside
                        your streamlined `<theme‑name>` directory.

                        Once your resulting `.zip` file is 50 MB or smaller,
                        upload it to BigCommerce, as described [here]().
                      header:
                        anchor: shrinking_restructuring
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          Both in production and locally, subdirectories of your
                          theme's `assets/` directory – like `img/`,` js/`, and
                          `fonts/` – are parallel to its `scss/` subdirectory.
                          So within your CSS, path references to such assets
                          should reflect this parallel relationship – for
                          example: `../img/test.jpg`.
                        title: URL References to Assets
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## WebDAV Folders and Stencil Themes


                        If you have used WebDAV in developing BigCommerce's
                        earlier (Blueprint) generation of themes, you will see
                        some differences when uploading Stencil themes.<br><br>


                        The directories accessible through WebDAV will
                        dynamically change, depending on the type of theme that
                        is active in the merchant's store, as follows:<p></p>


                        <table>
                          <tr>
                            <td><b>Available while the merchant's active theme is Blueprint:</b></td>
                            <td class=""><b>Available while the merchant's active
                              theme is Stencil:</b></td>
                          </tr>
                          <tr>
                            <td>/content/</td>
                            <td>/content/</td>
                          </tr>
                          <tr>
                            <td>/product_images/</td>
                            <td>/product_images/</td>
                          </tr>
                          <tr>
                            <td>/product_downloads/</td>
                            <td>/product_downloads/</td>
                          </tr>
                          <tr>
                            <td>/import_files/</td>
                            <td>/import_files/</td>
                          </tr>
                          <tr>
                            <td>/exports/</td>
                            <td>/exports/</td>
                          </tr>
                          <tr>
                            <td>/template/</td>
                            <td>-</td>
                          </tr>
                          <tr>
                            <td>/mobile_template/</td>
                            <td>-</td>
                          </tr>
                         </table>

                        <i>The overall difference is that the WebDAV
                        `/template/` and `/mobile_template/` directories are
                        <b>not</b> available for Stencil themes. These templates
                        must reside and remain within your Stencil theme's local
                        directory and file structure.</i>
                      header:
                        anchor: shrinking_webdav-folders
              - title: Staging A Theme for CDN Delivery
                route:
                  path: /staging-a-theme
                data:
                  blocks:
                    - type: html
                      data: <h1>Staging A Theme for CDN Delivery</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#staging_sizing-your-theme\">Organizing Your Theme</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Organizing Your Theme


                        For themes that would otherwise exceed BigCommerce's 50
                        MB limit on uploads, delivering your theme's large
                        static assets via a CDN (content delivery network) is an
                        alternative to the simpler WebDAV approach.


                        The advantage of this alternative is that all assets
                        stay within your theme's directory, so your theme's
                        local structure matches its deployed structure. The
                        disadvantage is that the procedure outlined below
                        requires the expense of a CDN.


                        To stage your theme for CDN delivery, you would locally
                        store your large static assets within your theme's

                        `<theme-name>/assets/cdn/` subdirectory. By design, the
                        `stencil bundle` command omits this subdirectory's
                        contents. So those contents do not count against the 50
                        MB limit on the resulting `.zip` file.


                        Then, as you develop your theme, reference each of these
                        assets using Stencil's `cdn` custom Handlebars helper,
                        like below:


                        `<img src="{{cdn "webdav:img/image.jpg"}}">`


                        **Note:** _The presumed WebDAV root directory is
                        /content/. (So, in this example, the `image.jpg` file
                        had been uploaded to the WebDAV `/content/` directory.)
                        The presumed local directory is `<theme-name>/assets/`,
                        so you can omit that path when referencing its contained
                        files or subdirectories._


                        When you are ready to upload your theme to BigCommerce,
                        follow the procedure in [Bundling and Submitting a
                        Theme](/stencil-docs/shipping-a-theme/bundling-and-submitting).
              - title: Bundling and Uploading a Theme
                route:
                  path: /bundling-and-uploading
                data:
                  blocks:
                    - type: html
                      data: <h1>Bundling and Uploading a Theme</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#bundling_confirm-dependencies\">Confirm Dependencies</a></li>\n    <li><a href=\"#bundling_verify-directory\">Verify Directory and File Permissions</a></li>\n    <li><a href=\"#bundling_bundling-your-theme\">Bundling Your Theme</a></li>\n    <li><a href=\"#bundling_uploading-theme\">Uploading Your Theme</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n\n\n"
                    - type: text
                      data: >-
                        ## Confirm Dependencies


                        If you have customized a theme originally downloaded
                        from the BigCommerce Theme Marketplace: Before you
                        package your theme, make sure your theme directory
                        includes all the dependencies that BigCommerce requires
                        for submission. 


                        Follow the link for your scenario:


                        If you downloaded a refreshed version of Stencil's
                        default Cornerstone theme: Run `npm install` in the
                        theme directory to install refreshed JavaScript
                        dependencies, as outlined in [Installing
                        Stencil](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities).


                        If you downloaded a different Marketplace theme, and its
                        [version was lower than 1.10.0]():

                        You must also run `jspm install` in the theme directory.
                      header:
                        anchor: bundling_confirm-dependencies
                    - type: callout
                      data:
                        body: >-
                          The `stencil bundle` and `stencil push` commands do
                          not check for the dependencies that these build
                          systems install. So if those dependencies are missing,
                          these commands will not immediately report errors.
                          However, your resulting .zip file will not properly
                          upload to BigCommerce, and will not run properly on a
                          storefront.
                        title: No Automatic Check for Dependencies
                        type: warning
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Verify Directory and File Permissions


                        If you have added any new subdirectories or files to
                        your base theme, verify that you have:


                        Set newly added directories to permission `755`
                        (`drwxr-xr-x`).

                        Set newly added files to permission `644` (`rw-r--r--`).
                      header:
                        anchor: bundling_verify-directory
                    - type: callout
                      data:
                        body: >-
                          Without these permissions, bundling your theme will
                          fail, blocking its upload to BigCommerce.
                        title: Writable Permissions Are Required
                        type: warning
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Bundling Your Theme


                        Once you have verified the requirements above, you are
                        ready to process and package your theme for upload to
                        BigCommerce. Stencil CLI provides two options for
                        creating a `.zip` file that contains all of your theme's
                        essentials, while excluding redundant components. The
                        options are either only bundling your theme, or bundling
                        and pushing your theme. These options are available
                        depending on how you've
                        [authorized](/stencil-docs/getting-started/launching-stencil/authorizing-and-initializing)
                        your theme:


                        ### Bundle Only 


                        The `stencil bundle` command is available for all
                        themes, whether they were initialized using OAuth or
                        Basic-Auth tokens. To use it, just enter the following
                        on your command line:


                        `stencil bundle`


                        The `bundle` command will notify you of its progress and
                        completion.



                        ####  Check/Adjust Zipfile's Size


                        Check the resulting `.zip` file's size before you
                        proceed. The zipped bundle should be only a few
                        megabytes. BigCommerce imposes a hard limit of 50 MB,
                        and any file size approaching that is problematic. If
                        your `.zip` file fits comfortably within the size limit
                        above, jump directly to [Uploading Your
                        Theme](bundling_uploading-your-theme). However, if your
                        `.zip` file approaches or exceeds 50 MB, you must first
                        use one of these procedures to restructure your theme to
                        a size that's manageable for upload to BigCommerce:


                        * [Shrinking Your Theme by Excluding Static Assets
                        (WebDAV)]()

                        * [Staging a Theme for CDN Delivery]()



                        ### Bundle and Push 


                        The `stencil push` command is available only for themes
                        that you have successfully initialized using an OAuth
                        token (with `Themes:modify scope`). This command bundles
                        your theme and uploads it to the associated store, in
                        one continuous process.


                        For further requirements and usage details, please see
                        the _Command-Line Upload_ in [Uploading Your
                        Theme](bundling_uploading-your-theme) below.


                        For file-size error diagnostics and workarounds, please
                        _Check/Adjust Zipfile's Size_ above.


                        ### Software Requirements / Resolving Lint Errors


                        * Only use the `stencil bundle` or the `stencil push`
                        command to process and package themes for submission.
                        These commands generate `.zip` files that match
                        BigCommerce's expected structure. They also generate
                        metadata required for your theme to function properly.


                        * Do not create `.zip` files using general-purpose
                        archiving software. The resulting files will trigger
                        errors upon upload to BigCommerce.


                        * Do not open a bundled theme `.zip` file to add,
                        delete, rename, or update files. Doing so will make your
                        theme unusable on the production store.


                        * If bundling your theme triggers multiple lint errors
                        related to the `bundle.js` file, then your theme is
                        missing the `.eslintignore` file. Please retrieve this
                        file from the [Stencil Cornerstone
                        repo](https://github.com/bigcommerce/cornerstone/blob/master/.eslintignore),
                        then re-run `stencil bundle` or `stencil push`.
                      header:
                        anchor: bundling_bundling-your-theme
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Uploading Your Theme


                        BigCommerce provides two alternatives for uploading a
                        theme to its associated BigCommerce store. You can
                        perform either a Control Panel Upload, or a Command Line
                        Upload. These options are available depending on how
                        you've authorized your theme:


                        ### Control-Panel Upload (OAuth or Basic Auth)


                        Uploading your theme via the BigCommerce control panel's
                        GUI is compatible with any store token (whether OAuth or
                        Basic-Auth), and with any OAuth token scope, and with
                        all versions of Stencil CLI. However, this option
                        requires that you first use stencil bundle to package
                        your theme into a .zip file. (Prepare your file
                        according to Bundle Only above.)


                        For the upload steps in the control panel, see the
                        [Uploading Custom Themes]() article in our Knowledge
                        Base. 


                        For error codes that you might encounter when uploading
                        a theme – and corresponding workarounds, see
                        [Troubleshooting Theme Uploads]().


                        ### Command-Line Upload (OAuth Required)


                        The stencil push command allows you to both bundle your
                        theme and upload it to the store, with a single terminal
                        command. To run stencil push, you must first:


                        Successfully initialize your theme using an OAuth token
                        that was created with the Themes:modify scope.

                        Install Stencil CLI version 1.12.0 or higher.


                        To check your current Stencil CLI version, enter
                        `stencil --version` or `stencil -V` on the command line.
                        If you need to update an earlier version, reinstall
                        Stencil CLI.


                        ### Pushing a Theme Upload


                        To initiate bundling and upload, enter the following on
                        the command line:


                        `stencil push`


                        Stencil CLI is designed to display the same
                        notifications, prompts, and selection options that you
                        would receive when using the control panel's GUI. Below
                        are some of the notifications and interactions you might
                        see.


                        ### Successful Bundling


                        Stencil CLI will display `ok` confirmations, or `not ok`
                        errors, or `warnings` for individual substeps in
                        bundling and uploading your theme. If bundling is
                        successful, you will next see a `Processing` progress
                        bar to track the upload.
                      header:
                        anchor: bundling_uploading-your-theme
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539055887301
                    - type: text
                      data: >-
                        ### Successful Upload


                        Upon a successful upload, you will be prompted: `Would
                        you like to apply your theme to your store at
                        <storehash>? (y/N)` Any response except `y` or `Y` will
                        be processed as "No." You can always apply the theme
                        later through the control panel.


                        ### Apply Which Variation?


                        If you chose to apply the newly uploaded theme, you will
                        be prompted: `Which variation would you like to apply?
                        (Use arrow keys)`
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539055910721
                    - type: text
                      data: >-
                        Use your arrow keys to move the selection
                        caret/highlight to the variation you want, and then
                        press `Enter`.


                        Stencil CLI will then confirm which variation is active
                        on the storefront.
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539055915081
                    - type: text
                      data: '---'
                    - type: text
                      data: >+
                        ## Theme Quota Warning


                        If you run `stencil push` when your store's `My Themes`
                        section has reached its [maximum of 20 themes](), you
                        will be prompted to select at least one existing theme
                        for deletion.

                      header:
                        anchor: bunding_theme-quota
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1539055988142
                    - type: text
                      data: >+
                        Custom themes – which are available for selection – will
                        have a circle to their left. Marketplace themes and the
                        store's active theme – all of which are protected from
                        deletion – will be flagged `(Disabled)`.


                        Use your arrow keys to move the selection caret to each
                        theme/version that you want to select. Then press the
                        spacebar to select it. (Filled circles will indicate
                        your selected themes/versions.)


                        If you are certain of your selections, you can next
                        press `Enter` to delete the themes.

                    - type: callout
                      data:
                        body: >-
                          Once you press `Enter`, the selected themes will be
                          deleted immediately, with no further confirmation.


                          If you have any doubts – especially about deleting
                          multiple themes/versions – it is safest to delete them
                          through the control panel GUI. This GUI allows you to
                          compare uploaded versions, and to inspect their
                          metadata.
                        title: ' Select Carefully – No Confirmation'
                        type: error
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Other Bundling or Upload Errors


                        For any other `not ok` bundling or upload errors that
                        you receive, please refer to these debugging guidelines
                        Theme setup and sizing diagnostics in preceding sections
                        throughout this page, or the following article titled
                        [Troubleshooting Theme Uploads]().
                      header:
                        anchor: bundling_other-bundling
              - title: Adding ReCAPTCHA V2
                route:
                  path: /adding-recaptcha-v2
                data:
                  blocks:
                    - type: html
                      data: <h1>Adding ReCAPTCHA V2</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#adding-recaptcha_better-spam-deterrence\">Better Spam Deterrence</a></li>\n    <li><a href=\"#adding-recaptcha_preloaded-themes\">Preloaded Themes</a></li>\n    <li><a href=\"#adding-recaptcha_how-to-upgrade\">How to Upgrade</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                    - type: text
                      data: >-
                        ## Better Spam Deterrence


                        reCAPTCHA v1 was deprecated as of March 31, 2018.

                        To deter spam submission through storefront forms,
                        BigCommerce now supports Google reCAPTCHA v2 challenges,
                        to distinguish human customers/visitors from automated
                        bots. We recommend that all storefront themes take
                        advantage of this upgraded bot detection.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Themes that Already Incorporate reCAPTCHA V2


                        If you have based your theme on a theme/version that
                        already incorporates reCAPTCHA v2, you do not need to
                        take any further action. Compliant themes/versions
                        currently include:


                        * Cornerstone 1.6.1 or higher

                        * 22 Savile Row (all versions)

                        * Arcade 1.13.0 or higher

                        * Atelier 1.10.1 or higher

                        * Bazaar 1.0.1 or higher

                        * Capacity 1.12.0 or higher

                        * Chelsea 1.12.0 or higher

                        * Diamond 1.0.5 or higher

                        * Exhibit 1.10.4 or higher

                        * Flagship 1.10.6 or higher

                        * Fortune 1.12.1 or higher

                        * Foundry 1.10.1 or higher

                        * Geneva 1.10.1 or higher

                        * Hero 1.11.1 or higher

                        * Lookbook 1.10.3 or higher

                        * Merchant 1.12.0 or higher

                        * Mogul 1.0.7 or higher

                        * Parts Warehouse (all versions)

                        * Peak 1.11.4 or higher

                        * Prosper 1.10.2 or higher

                        * Queen 1.0.3 or higher

                        * Runway 1.11.2 or higher

                        * Scales 1.0.2 or higher

                        * Showroom 1.12.0 or higher

                        * Soho 1.11.1 or higher

                        * Solo 1.10.3 or higher

                        * Spotlight 1.11.0 or higher

                        * Supermarket (all versions)

                        * Touch 1.0.1 or higher

                        * Venture 1.11.4 or higher


                        However, if your theme is built on an earlier version of
                        these themes, or on a different base theme, follow the
                        updating instructions in How to Upgrade below.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## How to Upgrade


                        To add reCAPTCHA v2 support to a theme, you will need to
                        update script references in three template files:


                        * [Create-Account
                        Template](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-ecbae6e2b7d5bbf5c950d68878e79d99)

                        * [Write-Review
                        Template](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-945a5d7f1563068188ae39df568cfd43)

                        * [Contact-Us
                        Template](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-5351402159301e1c225752f03d9f1f8e)


                        See [PR #951 on the Cornerstone Github
                        Repository](https://github.com/bigcommerce/cornerstone/pull/951/files)
                        to see differential for each of the files that need to
                        be modified and how.
              - title: Troubleshooting Theme Uploads
                route:
                  path: /troubleshooting-theme-uploads
                data:
                  blocks:
                    - type: html
                      data: <h1>Troubleshooting Theme Uploads</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#troubleshooting-theme-uploads_restrictions\">Restrictions</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_error-codes\">Error Codes</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_warnings\">Warnings</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_workarounds\">Workarounds and Further Info</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Restrictions


                        Custom theme uploads must meet these restrictions:


                        * You may upload a maximum of 20 custom themes at a time
                        to the control panel's `Store Design` > `My Themes`
                        section.


                        * If you reach this maximum, you can delete custom
                        themes to make room for more uploads.


                        * Before uploading, you must package custom themes into
                        a Stencil-specific `.zip` file format, using Stencil
                        CLI's `stencil bundle` command.


                        * A theme's `.zip` file must be no larger than 50 MB. If
                        your file exceeds that size, please use either a WebDAV
                        or a CDN upload to exclude large static assets.
                      header:
                        anchor: troubleshooting-theme-uploads_restrictions
                    - type: text
                      data: |
                        ## Error Codes

                        <table>
                          <tr>
                            <th>Error Code</th>
                            <th>Meaning</th>
                          </tr>
                          <tr>
                            <td>TR-100, -101, -700, -1200, -1300</td>
                            <td>A server error occurred.</td>
                          </tr>
                          <tr>
                            <td>TR-200</td>
                            <td>Problem uploading the theme.</td>
                          </tr>
                          <tr>
                            <td>TR-300</td>
                            <td>Invalid .zip file. (Among other possible root causes, this can indicate an included <code>bundle.js.map</code> source-map file that exceeds its size limit of 5 MB. As a workaround, move this file outside your theme directory before re-running <code>stencil bundle</code>).</td>
                          </tr>
                          <tr>
                            <td>TR-301</td>
                            <td>Failed to unzip file.</td>
                          </tr>
                          <tr>
                            <td>TR-400</td>
                            <td>The .zip contains restricted/invalid file(s) - e.g., a file with an invalid extension.</td>
                          </tr>
                          <tr>
                            <td>TR-500</td>
                            <td>The .zip file is larger than the 50MB limit.</td>
                          </tr>
                          <tr>
                            <td>TR-600</td>
                            <td>The .zip file is missing a required file (<code>theme-name/templates/pages/home.html</code>).</td>
                          </tr>
                          <tr>
                            <td>TR-601</td>
                            <td>The .zip file is missing some parsed template file(s); or, one or more non-<code>.html</code> files are present in the <code>theme-name/templates/</code></nobr> subdirectory.</td>
                          </tr>
                          <tr>
                            <td>TR-800</td>
                            <td>There was a problem processing the contained config.json file. <b>Please check the config.json documentation for required keys and for keys that require values.</b></td>
                          </tr>
                          <tr>
                            <td>TR-900</td>
                            <td>The contained config.json file is missing required developer information.</td>
                          </tr>
                          <tr>
                            <td>TR-901</td>
                            <td>A theme variation defined in the contained config.json file is missing its required external ID.</td>
                          </tr>
                          <tr>
                            <td>TR-902</td>
                            <td>Two or more theme variations defined in the contained config.json file share a external ID. All external IDs must be unique.</td>
                          </tr>
                          <tr>
                            <td>TR-1000</td>
                            <td>There was a problem processing the contained <a href="/docs/schemajson-metadata-for-theme-editor">schema.json</a> file.</td>
                          </tr>
                          <tr>
                            <td>TR-1001</td>
                            <td>The theme is missing its required <a href="/docs/schemajson-metadata-for-theme-editor">schema.json</a> file.</td>
                          </tr>
                          <tr>
                            <td class="">TR-1400</td>
                            <td class="">There was a problem processing template <a href="/docs/using-yaml-front-matter">front matter</a>.</td>
                          </tr>
                          <tr>
                            <td>TR-1401</td>
                            <td>There was a database validation error when saving <a href="/docs/using-yaml-front-matter">front matter</a> to the database.</td>
                          </tr>
                          <tr>
                            <td>TR-1500</td>
                            <td>There was a problem uploading your files, due to multi-threading (multiple simultaneous uploads). Please try again.</td>
                          </tr>
                          <tr>
                            <td>TR-1600</td>
                            <td>There was a temporary problem on our system. Please try again.</td>
                          </tr>
                          <tr>
                            <td>TR-1601</td>
                            <td>There was a problem processing screenshots.</td>
                          </tr>
                          <tr>
                            <td>TR-1700, -1800, -1801, -1802, -1803</td>
                            <td>System error, possibly temporary. Please try again.</td>
                          </tr>
                          <tr>
                            <td>TR-3402</td>
                            <td>You are not allowed to edit your active theme. [Please select <code>Make a Copy</code>, then edit the resulting copy of your theme.]</td>
                          </tr>
                          <tr>
                            <td>TR-4400</td>
                            <td>One or more values in the <code>config.json</code> file exceed the 64-character limit. (Can also indicate string lengths that exceed their limits in other JSON files.)</td>
                          </tr>
                         </table>
                      header:
                        anchor: troubleshooting-theme-uploads_error-codes
                    - type: text
                      data: >-
                        ## Warnings


                        Warnings will not block a theme's upload, but these
                        onscreen and/or log messages notify you of problems
                        within the zipped theme. Here are the warnings and their
                        meanings:


                        | Warning |

                        |---|

                        | (These messages do not have numeric codes) |

                        | Issue in processing this theme's thumbnail screenshot
                        (`composed_image`). |

                        | Issue in processing this theme's full-size screenshot
                        (`desktop_screenshot`). |

                        | Issue in processing this theme's mobile
                        [screenshot](/docs/configjson-reference#config-var-meta)
                        (`mobile_screenshot`). |

                        | Missing file: This theme does not support Theme
                        Editor, as it is missing its required `[schema.json]`
                        file. |

                        | One or more of this theme's screenshots are not image
                        files. |

                        | Theme is missing a valid thumbnail image
                        `composed_image`). |

                        | Theme is missing a valid full-size image
                        `desktop_screenshot`). |

                        | Theme is missing a valid mobile image
                        (`mobile_screenshot`). |

                        | One or more of this theme's images is not of a
                        supported file type. Valid filetypes are: `.jpg`,
                        `.jpeg`, `.png`, `.gif`. |

                        | Thumbnail (`composed_image`) image dimensions are not
                        right. Expected 600 x 760 pixels. |

                        | Full-size (`desktop_screenshot`) image dimensions are
                        not right. Expected 2048 x 2600 pixels. |

                        | Mobile (`mobile_screenshot`) image dimensions are not
                        right. Expected 304 x 540 pixels. |

                        | Too-large image file size for a theme screenshot
                        `composed_image` (thumbnails), `desktop_screenshot`, or
                        `mobile_screenshot`] . The maximum supported size is x,
                        but the file's actual size is y. |
                      header:
                        anchor: troubleshooting-theme-uploads_warnings
                    - type: text
                      data: >-
                        ## Workarounds and Further Info


                        If a custom theme does not render properly after you
                        upload and apply it to a storefront, make sure you have
                        created the theme's `.zip` file using the `stencil
                        bundle` command, on a Mac OS, Linux computer, or virtual
                        machine. This will exclude Windows-specific errors that
                        have occurred on some bundles.


                        If you repeatedly encounter the same error or warning
                        and neither this page nor our KB resolves the problem,
                        see support resources for theme developers in our
                        [Developer
                        Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers).
                      header:
                        anchor: troubleshooting-theme-uploads_workarounds
      blocks:
        - type: html
          data: |-
            <div class="docs-landing bg-bclightblue">        
            <div class="cBrLandingTiles">
                      <div class="ui-widget">
                        <div>
                          <div style="padding: 62px 0px 0px;">
                            <div class="container">
                              <h1 class="h1 panel-title__text-dark">Stencil Documentation</h1>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div><!-- landing tiles -->
                    <div class="cBrLandingTiles" style="margin-bottom: 5%;">
                      <div data-region-name="landingTiles">
                        <div class="ui-widget">
                          <div class="lift-content">
                            <div>
                              <div>
                                <div class="row row--pad">
                                  <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Github-Branch.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/https://github.com/bigcommerce/cornerstone">Contribute to Cornerstone</a></h4>
                                        <p class="panel-media__text type--sm">The Cornerstone theme is the foundation for building on the BigCommerce Stencil framework.</p>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Install-Stencil.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/stencil-docs/getting-started/installation-and-launch/installing-stencil">Installing Stencil</a></h4>
                                        <p class="panel-media__text type--sm">Install Stencil and its necessary dependencies to develope a theme or customizing the storefront.</p>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Getting-Started.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/stencil-docs/theme-development-quickstart/editing-your-theme">Customization Quickstart</a></h4>
                                        <p class="panel-media__text type--sm">Start locally developing on your default stencil theme right away.</p>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Handlebars.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference">Handlebars Helpers Reference</a></h4>
                                        <p class="panel-media__text type--sm">Take a look at what Handlebars Helpers you can use to customize your theme.</p>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="column-md-12 column-lg-6 column--pad m-bottom-25">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Stencil-Object-Reference.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/stencil-docs/stencil-object-model-reference
            ">Stencil Object Model Reference</a></h4>
                                        <p class="panel-media__text type--sm">See what objects are available in Stencil's utility library for the Stencil theme framework.
            .</p>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="column-md-12 column-lg-6 column--pad">
                                    <div class="panel-media doc-landing">
                                      <div class="panel-media__wrap-icon">
                                        <div class="panel-media__icon">
                                          <img alt="" src="https://store-qtmbtj.mybigcommerce.com/template/images/Front-Matter.svg">
                                        </div>
                                      </div>
                                      <div class="panel-media__wrap-content">
                                        <h4 class="h4 panel-media__title"><a href="/stencil-docs">Front Matter Reference</a></h4>
                                        <p class="panel-media__text type--sm">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sed dictum sem. Nulla eu pellentesque erat.</p>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
              </div>
  /tools-resources:
    title: Tools & Resources
    data:
      $ref: ./Tools and Resources.html
  /changelog:
    title: Changelog
    data:
      $ref: ./Changelog.html
  /legacy:
    title: Legacy
    data:
      children:
        - title: Products
          route:
            path: /v2-products
          data:
            children:
              - title: V2 versus V3
                route:
                  path: /v2-v3
                data:
                  blocks:
                    - type: html
                      data: "<h1>V2 versus V3 API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-v3_advantages\">Advantages of V3 over V2</a></li>\n\t\t<li><a href=\"#v2-v3_products\">Products in V3</a></li>\n\t\t<li><a href=\"#v2-v3_whats-not-in-v3\"> What's not in V3</a></li>\n\t\t<li><a href=\"#v2-v3_recommendations\"> Recommendations</a></li>\n\t\t<li><a href=\"#v2-v3_cheat-sheet\"> Cheat Sheet</a></li>\n\t</ul>\n</div>\n"
                    - type: text
                      data: >
                        ## Advantages of V3 over V2


                        The V3 API introduces a number of improvements designed
                        to improve efficiency. Most tasks can be performed with
                        fewer API calls, and the V3 API supports the inclusion
                        of subresources within a request. For example, you can
                        now create a product with variants and custom fields in
                        a single API call.


                        Each V3 resource includes a `meta` object at the end of
                        the response, making pagination easier.


                        Additionally, metafields have been added to the V3
                        Products resource so data can be stored against the
                        object. Metafield values can be specific to your
                        application or visible to other applications.


                        Lastly, the V3 API has been optimized for performance,
                        allowing data to be synced quickly.
                      header:
                        anchor: v2-v3_advantages
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Products in V3


                        ### Variants


                        Every purchasable entity in the catalog is now a
                        variant, including the product itself. This enables
                        enhanced flows around inventory management, such as the
                        ability to solely use the variants endpoint to manage
                        inventory levels. For more on variants see
                        [Variants](/api-docs/catalog/products/product-variant-options).


                        In V3 a variant needs to be created for every
                        combination of option values. In V2 it was possible to
                        create a SKU with a subset of product options.


                        We recommend creating products using V3 as BigCommerce
                        starts to move operations to the V3 API. 


                        ### Interoperability between V2 and V3


                        When a product option is created in V2 and assigned to a
                        product, trying to edit the option using the V3 API
                        returns a 422 error. 


                        ```

                        {
                            "status": 422,
                            "title": "The product is currently associated with an option set, please remove it before editing an option or modifier.",
                            "type": "https://developer.bigcommerce.com/api#api-status-codes",
                            "errors": {
                                "product_id": "The product is currently associated with an option set, please remove it before editing an option or modifier."
                            }
                        }

                        ```


                        This happens because in V2, options are created globally
                        before being assigned to products. In V3, variant
                        options are assigned at the product level. The way to
                        fix this error is to remove the option set in the
                        control panel or delete it using the API, then re-create
                        the options using V3 variants. 


                        ### Options and Modifiers


                        There is now a clear separation of [options that define
                        variants](/api-docs/catalog/products/product-variant-options)
                        versus [options that are modifiers of a
                        variant](/api-docs/catalog/products/modifier-options).
                        This simplifies the creation and management of variant
                        prices and modifier adjusters and removes the need to
                        use complex rules, in all but the most extreme cases.


                        In V3, options and modifiers are attached directly to
                        the product, without the requirement to create an option
                        set beforehand.


                        Creating Options on V2 has several steps:

                        1. Create the product

                        2. Create the options

                        3. Create an option set

                        4. Assign the option set to the product

                        5. Create adjustments, such as price adjustment, using
                        rules


                        Creating Products and Variants on V3:

                        1. Create the product with variants in one call

                        2. Create adjustments, such as price adjustment,
                        directly on the variant or modifier


                        Variants can be included with a GET request to lower the
                        number of API calls being made using
                        `?include=variants`.


                        V3 includes an endpoint for creating a [Catalog
                        Tree](/api-docs/api-reference/v3-api/catalog/getcatalogsummary).
                      header:
                        anchor: v2-v3_products
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## What's not in V3


                        In V3, options are attached directly to products. So
                        option sets are not required, and v3 includes no
                        endpoint to manage option sets. However, V3 will respect
                        option sets that have been attached via V2 or the
                        control panel.


                        Moving forward, new resources will be built in V3 and
                        existing V2 resources will eventually be migrated to V3.
                        Some V3 resources do not have V2 counterparts, and vice
                        versa. 


                        ### Complex Rules


                        Most of the use cases for using V2 rules can be solved
                        by making adjustments directly on variants and modifier
                        options. We recommend using variants as best practice,
                        but in cases where an adjustment depends on the
                        selection of multiple modifier values, V3 includes a
                        Complex Rules resource.


                        ### Product Rules 

                        Any variant created in v3 with non-null core properties
                        (price, weight, image, purchasability) will create a
                        rule under the hood. The same goes for modifier
                        adjusters. These will show in v2 as product rules, and
                        any edits to them will be shared across API versions.


                        ### Option Sets

                        In our control panel’s Add/Edit Product section, any
                        products created by the V3 API will not have an option
                        set applied, but merchants can still edit the options.
                        If the merchant applies an option set to a V3 product,
                        the product's variants will be removed. Currently, the
                        Add/Edit Product area consumes the V2 API, so products
                        created and managed through the control panel will be
                        converted to the V2 model, using option sets.
                      header:
                        anchor: v2-v3_whats-not-in-v3
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Recommendations

                        When the resource is available in V3, it is best
                        practice to use the V3 endpoint. For resources that do
                        not have a V3 counterpart, like Orders, use V2. Both the
                        V2 and V3 APIs authenticate with Oauth and are designed
                        to be used concurrently within a single application.


                        We have created a handy [cheat sheet](v2-v3_cheat-sheet)
                        that lists all the differences between V2 and V3 of the
                        API. 
                      header:
                        anchor: v2-v3_recommendations
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## V3 and V3 Cheat Sheet


                        This identifies the differences between major actions on
                        both versions.


                        In the examples below: 

                        * Simple product is defined as not having variants,
                        modifiers or options.

                        * Complex Products are defined as having variants,
                        options and modifiers.
                      header:
                        anchor: v2-v3_cheat-sheet
                    - type: tabs
                      data:
                        children:
                          - title: Simple Product
                            blocks:
                              - type: tabs
                                data:
                                  children:
                                    - title: Get a Product
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: 'GET /v3/catalog/products/{product_id}'
                                                blocks:
                                                  - type: text
                                                    data: '### Response V3 Get Product'
                                                  - type: code
                                                    data: |-
                                                      {
                                                          "data": {
                                                              "id": 195,
                                                              "name": "BigCommerce Coffee Mug_3",
                                                              "type": "physical",
                                                              "sku": "",
                                                              "description": "",
                                                              "weight": 3,
                                                              "width": 0,
                                                              "depth": 0,
                                                              "height": 0,
                                                              "price": 11,
                                                              "cost_price": 0,
                                                              "retail_price": 0,
                                                              "sale_price": 0,
                                                              "map_price": 0,
                                                              "tax_class_id": 0,
                                                              "product_tax_code": "",
                                                              "calculated_price": 11,
                                                              "categories": [
                                                                  21
                                                              ],
                                                              "brand_id": 38,
                                                              "option_set_id": 50,
                                                              "option_set_display": "right",
                                                              "inventory_level": 400,
                                                              "inventory_warning_level": 40,
                                                              "inventory_tracking": "variant",
                                                              "reviews_rating_sum": 0,
                                                              "reviews_count": 0,
                                                              "total_sold": 0,
                                                              "fixed_cost_shipping_price": 0,
                                                              "is_free_shipping": false,
                                                              "is_visible": true,
                                                              "is_featured": false,
                                                              "related_products": [
                                                                  -1
                                                              ],
                                                              "warranty": "",
                                                              "bin_picking_number": "",
                                                              "layout_file": "product.html",
                                                              "upc": "",
                                                              "mpn": "",
                                                              "gtin": "",
                                                              "search_keywords": "",
                                                              "availability": "available",
                                                              "availability_description": "",
                                                              "gift_wrapping_options_type": "any",
                                                              "gift_wrapping_options_list": [],
                                                              "sort_order": 0,
                                                              "condition": "New",
                                                              "is_condition_shown": false,
                                                              "order_quantity_minimum": 0,
                                                              "order_quantity_maximum": 0,
                                                              "page_title": "",
                                                              "meta_keywords": [],
                                                              "meta_description": "",
                                                              "date_created": "2018-09-05T20:22:19+00:00",
                                                              "date_modified": "2018-09-20T15:28:50+00:00",
                                                              "view_count": 4,
                                                              "preorder_release_date": null,
                                                              "preorder_message": "",
                                                              "is_preorder_only": false,
                                                              "is_price_hidden": false,
                                                              "price_hidden_label": "",
                                                              "custom_url": {
                                                                  "url": "/bigcommerce-coffee-mug_3/",
                                                                  "is_customized": false
                                                              },
                                                              "base_variant_id": null,
                                                              "open_graph_type": "product",
                                                              "open_graph_title": "",
                                                              "open_graph_description": "",
                                                              "open_graph_use_meta_description": true,
                                                              "open_graph_use_product_name": true,
                                                              "open_graph_use_image": true
                                                          },
                                                          "meta": {}
                                                      }
                                                    header: {}
                                              - title: 'GET /v2/products/{product_id}'
                                                blocks:
                                                  - type: text
                                                    data: '### Response V2 Get Product'
                                                  - type: code
                                                    data: |-
                                                      {
                                                          "id": 195,
                                                          "keyword_filter": null,
                                                          "name": "BigCommerce Coffee Mug_3",
                                                          "type": "physical",
                                                          "sku": "",
                                                          "description": "",
                                                          "search_keywords": "",
                                                          "availability_description": "",
                                                          "price": "11.0000",
                                                          "cost_price": "0.0000",
                                                          "retail_price": "0.0000",
                                                          "sale_price": "0.0000",
                                                          "calculated_price": "11.0000",
                                                          "sort_order": 0,
                                                          "is_visible": true,
                                                          "is_featured": false,
                                                          "related_products": "-1",
                                                          "inventory_level": 400,
                                                          "inventory_warning_level": 40,
                                                          "warranty": "",
                                                          "weight": "3.0000",
                                                          "width": "0.0000",
                                                          "height": "0.0000",
                                                          "depth": "0.0000",
                                                          "fixed_cost_shipping_price": "0.0000",
                                                          "is_free_shipping": false,
                                                          "inventory_tracking": "sku",
                                                          "rating_total": 0,
                                                          "rating_count": 0,
                                                          "total_sold": 0,
                                                          "date_created": "Wed, 05 Sep 2018 20:22:19 +0000",
                                                          "brand_id": 38,
                                                          "view_count": 4,
                                                          "page_title": "",
                                                          "meta_keywords": "",
                                                          "meta_description": "",
                                                          "layout_file": "product.html",
                                                          "is_price_hidden": false,
                                                          "price_hidden_label": "",
                                                          "categories": [
                                                              21
                                                          ],
                                                          "date_modified": "Thu, 20 Sep 2018 15:28:50 +0000",
                                                          "event_date_field_name": "",
                                                          "event_date_type": "none",
                                                          "event_date_start": null,
                                                          "event_date_end": null,
                                                          "myob_asset_account": "",
                                                          "myob_income_account": "",
                                                          "myob_expense_account": "",
                                                          "peachtree_gl_account": "",
                                                          "condition": "New",
                                                          "is_condition_shown": false,
                                                          "preorder_release_date": "",
                                                          "is_preorder_only": false,
                                                          "preorder_message": "",
                                                          "order_quantity_minimum": 0,
                                                          "order_quantity_maximum": 0,
                                                          "open_graph_type": "product",
                                                          "open_graph_title": "",
                                                          "open_graph_description": "",
                                                          "is_open_graph_thumbnail": true,
                                                          "upc": "",
                                                          "avalara_product_tax_code": "",
                                                          "date_last_imported": "",
                                                          "option_set_id": 50,
                                                          "tax_class_id": 0,
                                                          "option_set_display": "right",
                                                          "bin_picking_number": "",
                                                          "custom_url": "/bigcommerce-coffee-mug_3/",
                                                          "primary_image": {
                                                              "id": 0,
                                                              "zoom_url": null,
                                                              "thumbnail_url": null,
                                                              "standard_url": null,
                                                              "tiny_url": null
                                                          },
                                                          "availability": "available",
                                                          "brand": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/brands/38",
                                                              "resource": "/brands/38"
                                                          },
                                                          "downloads": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/downloads",
                                                              "resource": "/products/195/downloads"
                                                          },
                                                          "images": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/images",
                                                              "resource": "/products/195/images"
                                                          },
                                                          "discount_rules": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/discountrules",
                                                              "resource": "/products/195/discountrules"
                                                          },
                                                          "configurable_fields": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/configurablefields",
                                                              "resource": "/products/195/configurablefields"
                                                          },
                                                          "custom_fields": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/customfields",
                                                              "resource": "/products/195/customfields"
                                                          },
                                                          "videos": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/videos",
                                                              "resource": "/products/195/videos"
                                                          },
                                                          "skus": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/skus",
                                                              "resource": "/products/195/skus"
                                                          },
                                                          "rules": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/rules",
                                                              "resource": "/products/195/rules"
                                                          },
                                                          "option_set": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/optionsets/50",
                                                              "resource": "/optionsets/50"
                                                          },
                                                          "options": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/options",
                                                              "resource": "/products/195/options"
                                                          },
                                                          "tax_class": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/taxclasses/0",
                                                              "resource": "/taxclasses/0"
                                                          },
                                                          "reviews": {
                                                              "url": "https://api.bigcommerce.com/stores/id30h7ohwf/v2/products/195/reviews",
                                                              "resource": "/products/195/reviews"
                                                          },
                                                          "metadata": []
                                                      }
                                                    header: {}
                                          header: {}
                                    - title: Create a Product
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: 'POST /v3/catalog/products '
                                                blocks:
                                                  - type: text
                                                    data: '### Create V3 Product Request'
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "name": "BigCommerce Coffee Mug",
                                                        "price": "10.00",
                                                        "categories": [
                                                          23,
                                                          21
                                                        ],
                                                        "weight": 4,
                                                        "type": "physical"
                                                      }
                                                    header: {}
                                                    config:
                                                      mode: json
                                              - title: POST /v2/products
                                                blocks:
                                                  - type: text
                                                    data: '### Create V2 Product Request'
                                                  - type: code
                                                    data: |-
                                                      {
                                                          "name": "Plain T-Shirt",
                                                          "type": "physical",
                                                          "description": "This timeless fashion staple will never go out of style!",
                                                          "price": "29.99",
                                                          "categories": [18],
                                                          "availability": "available",
                                                          "weight": "0.5"
                                                      }
                                                    header: {}
                                                    config:
                                                      mode: json
                                          header: {}
                                    - title: Create Product with Images
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: >-
                                                  POST
                                                  /v3/catalog/products/{product_id}/images
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create V3 Product with Images


                                                      1. Create a product using: `POST
                                                      /v3/catalog/products`

                                                      2. Add images using: `POST
                                                      /v3/catalog/products/{product_id}/images`
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "is_thumbnail": true,
                                                        "sort_order": 1,
                                                        "description": "Top View",
                                                        "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                                                      }
                                              - title: 'POST /v2/products/{product_id}/images'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create V2 Product with Images


                                                      1. Create a product using: `POST
                                                      /v2/products`

                                                      2. Add images using: `POST
                                                      /v2/products/{product_id}/images`


                                                      **Only accepts form data.**
                                                  - type: code
                                                    data: |-
                                                      curl -X POST \
                                                        https://api.bigcommerce.com/stores/{store_hash}/v2/products/{product_id}/images \
                                                        -H 'Accept: application/json' \
                                                        -H 'Cache-Control: no-cache' \
                                                        -H 'Content-Type: application/json' \
                                                        -H 'Postman-Token: 841f5f9a-244b-4d2c-900f-938ac2067a4a' \
                                                        -H 'X-Auth-Client: {X-Auth-Client}' \
                                                        -H 'X-Auth-Token: {X-Auth-Token}' \
                                                        -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
                                                        -F image_file=@/Users/{user_name}/Documents/product_images/image_file.png
                                                    config:
                                                      mode: http
                                    - title: Create Product with Videos
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: 'POST /v3/catalog/products/{{id}}/videos'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create V3 Product with Videos


                                                      1. Create a product using: `POST
                                                      /v3/catalog/products`

                                                      2. Add video using: `POST
                                                      /v3/catalog/products/{{id}}/videos`
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "title": "Your Video",
                                                        "description": "Company Values",
                                                        "sort_order": 1,
                                                        "type": "youtube",
                                                        "video_id": "123345AA"
                                                      }
                                                    config:
                                                      mode: json
                                              - title: 'POST /v2/products/{{id}}/videos'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create V2 Product with Videos


                                                      1. Create a product using: `POST
                                                      /v2/products`

                                                      2. Add video using: `POST
                                                      /v2/products/{{id}}/videos`
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "url": "https://www.youtube.com/watch?v=4wZ3ZG_Wams"
                                                      }
                                                    config:
                                                      mode: json
                          - title: Stock Levels
                            blocks:
                              - type: tabs
                                data:
                                  children:
                                    - title: Update Stock Levels
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: 'PUT /v3/catalog/products/{id}'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Request Update V3 Product Stock
                                                      Levels

                                                      * For a simple product
                                                  - type: code
                                                    data: |

                                                      {
                                                        "inventory_level": 100,
                                                        "inventory_warning_level": 10
                                                      }
                                                    config:
                                                      mode: json
                                              - title: 'PUT /v2/products/{id}'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Request Update V2 Product Stock
                                                      Levels

                                                      * For a simple product
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "inventory_level": 15,
                                                        "inventory_warning_level": 5,
                                                      }
                                    - title: Update Stock Levels on Variant/SKU
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: >-
                                                  PUT
                                                  /v3/catalog/products/{id}/variants/{id}
                                                blocks:
                                                  - type: text
                                                    data: |-
                                                      ### Update V3 Variant Stock Level
                                                      * For a single variant
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "inventory_level": 100,
                                                        "inventory_warning_level": 10
                                                      }
                                              - title: 'PUT /v2/products/{id}/skus/{id}'
                                                blocks:
                                                  - type: text
                                                    data: |-
                                                      ### Update V2 SKU Level
                                                      * For a single sku
                                                  - type: code
                                                    data: |2-
                                                        {
                                                          "inventory_level": 100,
                                                          "inventory_warning_level": 10,
                                                          "id": 388,
                                                          "sku": "SKU-4484A834"
                                                        }
                                    - title: >-
                                        Update Stock Levels on Multiple
                                        Variants/SKU
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: 'PUT /v3/catalog/products/{id}'
                                                blocks:
                                                  - type: text
                                                    data: '### Update V3 Multiple Stock Levels'
                                                  - type: code
                                                    data: |-
                                                      [
                                                      {
                                                        "inventory_level": 100,
                                                        "inventory_warning_level": 10,
                                                        "id": 388,
                                                        "sku": "SKU-4484A834"
                                                      },
                                                        {
                                                        "inventory_level": 100,
                                                        "inventory_warning_level": 10,
                                                        "id": 389,
                                                        "sku": "SKU-9E932372"
                                                      }
                                                      ]
                                                    config:
                                                      mode: json
                                              - title: 'PUT /v2/products/{id}/skus/{id}'
                                                blocks:
                                                  - type: text
                                                    data: |-
                                                      ### Update V2 Multiple Stock Levels
                                                      * A request must be sent for each SKU
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "inventory_level": 100,
                                                        "inventory_warning_level": 10
                                                      }
                          - title: Complex Products
                            blocks:
                              - type: tabs
                                data:
                                  children:
                                    - title: Create Product with Variants/SKU
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: POST /v3/catalog/products
                                                blocks:
                                                  - type: text
                                                    data: '### Create a V3 Product with Variants'
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "name": "BigCommerce Coffee Mug",
                                                        "price": "10.00",
                                                        "categories": [
                                                          23,
                                                          21
                                                        ],
                                                        "weight": 4,
                                                        "type": "physical",
                                                        "variants": [
                                                          {
                                                            "sku": "SKU-BLU",
                                                            "option_values": [
                                                              {
                                                                "option_display_name": "Mug Color",
                                                                "label": "Blue"
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "sku": "SKU-GRAY",
                                                            "option_values": [
                                                              {
                                                                "option_display_name": "Mug Color",
                                                                "label": "Gray"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                              - title: V2 Scenarios
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create V2 Products with SKU's


                                                      When using the V2 Products API to make
                                                      product options and option sets. The
                                                      simplest workflow is when starting from
                                                      scratch is below:


                                                      1. Create an Option (in this example
                                                      Size)

                                                      2. Add option values

                                                      3. Add the options created in step 1 to
                                                      the option set

                                                      4. Create an Option Set

                                                      5. Add options created in step 1 and
                                                      step 2 to the option set.

                                                      6. Assign the option set to the product

                                                      7. Assign SKU's to the Options on the
                                                      product
                                                  - type: text
                                                    data: >-
                                                      This will only create an option with no
                                                      values added.
                                                  - type: code
                                                    data: |
                                                      {
                                                        "name": "Size",
                                                        "display_name": "T-Shirt Size",
                                                        "type": "RT"
                                                      }
                                                    header:
                                                      title: Create an Option
                                                      subtitle: POST /v2/option_sets
                                                  - type: text
                                                    data: >-
                                                      This will add values such as small,
                                                      medium and large. Only one value at a
                                                      time can be created. In this example it
                                                      will take 3 seperate /POST requests to
                                                      create all sizes.
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "label": "Medium",
                                                        "sort_order": 1,
                                                        "value": "Medium",
                                                        "is_default": false
                                                      }
                                                    header:
                                                      title: Add option values
                                                      subtitle: 'POST /v2/options/{option_id}/values'
                                                  - type: text
                                                    data: >-
                                                      After the option with values has been
                                                      created, a option set needs to be
                                                      created so the option and values created
                                                      in the previous steps can be added to
                                                      it. 
                                                  - type: code
                                                    data: "{\n\t\"name\": \"T-Shirt Sizes BigCommerce\"\n}"
                                                    header:
                                                      title: Create Option Set
                                                      subtitle: POST /v2/optionsets
                                                  - type: code
                                                    data: "{\n\t\"option_id\":88\n}"
                                                    header:
                                                      title: Add the T-Shirt Size Options to Set
                                                      subtitle: 'POST /optionsets/{option_set_id}/options'
                                                  - type: text
                                                    data: >-
                                                      To assign the option set to a product,
                                                      do a /PUT request aganist the product
                                                      and update the `option_set_id` field. 
                                                  - type: code
                                                    data: "{\n\t\"option_set_id\": 60\n}"
                                                    header:
                                                      title: Assign the Option Set to the Product
                                                      subtitle: 'PUT /v2/products/{product_id}'
                                                  - type: text
                                                    data: >-
                                                      To create the SKU's first you need the
                                                      `option_value_id`. Sent a /GET to 

                                                      `optionsets/{option_set_id}/options` .


                                                      ```

                                                      {
                                                          "id": 119,
                                                          "option_id": 88,
                                                          "option_set_id": 60,
                                                          "display_name": "T-Shirt Size",
                                                          "sort_order": 0,
                                                          "is_required": false,
                                                          "option": {
                                                              "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/options/88",
                                                              "resource": "/options/88"
                                                          },
                                                          "values": [
                                                              {
                                                                  "label": "Small",
                                                                  "sort_order": 0,
                                                                  "value": "Small",
                                                                  "is_default": false,
                                                                  "option_value_id": 192
                                                              },
                                                              {
                                                                  "label": "Medium",
                                                                  "sort_order": 1,
                                                                  "value": "Medium",
                                                                  "is_default": false,
                                                                  "option_value_id": 193
                                                              },
                                                              {
                                                                  "label": "Large",
                                                                  "sort_order": 2,
                                                                  "value": "Large",
                                                                  "is_default": false,
                                                                  "option_value_id": 194
                                                              }
                                                          ]
                                                      }

                                                      ```


                                                      The `product_option_id` is also
                                                      required.

                                                      `/v2/products/{product_id}/options`. 


                                                      Each size will need a seperate POST to
                                                      create all the SKU's.
                                                  - type: code
                                                    data: "{\n\t\"sku\": \"SMALL-1\",\n\t\"options\":[\n\t\t{\n\t\t\t\"product_option_id\": 223,\n\t\t\t\"option_value_id\": 192\n\t\t}\n\t]\n}"
                                                    header:
                                                      title: Add Product SKU
                                                      subtitle: 'POST /v2/products/{product_id}/skus'
                                    - title: >-
                                        Create a Product with Variants &
                                        Modifiers
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: ' POST /v3/catalog/products/{product_id}/modifiers'
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create Modifier V#


                                                      This examples uses a checkbox which is
                                                      created in two steps. 
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "type": "checkbox",
                                                        "required": false,
                                                        "config": {
                                                          "default_value": "Yes",
                                                          "checked_by_default": false,
                                                          "checkbox_label": "Check for Donation"
                                                        },
                                                        "display_name": "Add a $5 Donation"
                                                      }
                                                    header:
                                                      title: Create Modifier
                                                      subtitle: >-
                                                        POST
                                                        /v3/catalog/products/{product_id}/modifiers
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "is_default": false,
                                                        "adjusters": {
                                                          "price": {
                                                            "adjuster": "relative",
                                                            "adjuster_value": 5
                                                          }
                                                        }
                                                      }
                                                    header:
                                                      title: Update Modifier Values
                                                      subtitle: >-
                                                        PUT
                                                        /v3/catalog/products/{product_id}/modifiers/{modifier_id}/values
                                              - title: V2 Modifier
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Create Modifiers V2


                                                      * Modifiers are considered an option on
                                                      V2. They can be assigned a SKU or not. 

                                                      * They follow the same steps as Create
                                                      Product with Variants/SKU


                                                      1. Create an Option (in this example
                                                      Size)

                                                      2. Add option values

                                                      3. Add the options created in step 1 to
                                                      the option set

                                                      4. Create an Option Set

                                                      5. Add options created in step 1 and
                                                      step 2 to the option set.

                                                      6. Assign the option set to the product.
                                    - title: >-
                                        Create a Product with Rules/Complex
                                        Rules
                                      blocks:
                                        - type: tabs
                                          data:
                                            children:
                                              - title: >-
                                                  POST
                                                  /v3/catalog/products/{product_id}/complex-rules
                                                blocks:
                                                  - type: text
                                                    data: >-
                                                      ### Complex Rules V3

                                                      * They are not recommened for V3
                                                      products since they can be created at
                                                      the variant level. See Complex Rules for
                                                      more information
                                                  - type: code
                                                    data: |-
                                                      {
                                                        "product_id": 1200,
                                                        "enabled": true,
                                                        "price_adjuster": {
                                                          "adjuster_value": 10
                                                        },
                                                        "conditions": [
                                                          {
                                                            "modifier_id": 506,
                                                            "modifier_value_id": 852
                                                          },
                                                          {
                                                            "modifier_id": 507,
                                                            "modifier_value_id": 854
                                                          }
                                                        ]
                                                      }
                                                    header: {}
                                              - title: '/v2/products/{product_id}/rules'
                                                blocks:
                                                  - type: text
                                                    data: >+
                                                      ### Add a Complex Rule


                                                      * A complex rule can not be added
                                                      without an option


                                                      The example below add's a complex rule
                                                      to increase the price by $5 if the
                                                      checkbox is selected.


                                                      ```

                                                      {
                                                          "id": 89,
                                                          "product_id": null,
                                                          "name": "Checkbox",
                                                          "display_name": "$5 for Insurance",
                                                          "type": "C",
                                                          "values": {
                                                              "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/options/89/values",
                                                              "resource": "/options/89/values"
                                                          }
                                                      }

                                                      ```

                                                  - type: code
                                                    data: "{\n        \"price_adjuster\": {\n            \"adjuster\": \"relative\",\n            \"adjuster_value\": 5\n        },\n      \"conditions\": [\n\t\t    {\n\t\t      \"product_option_id\": 89,\n\t\t      \"option_value_id\": 195\n\t\t    }\n\t\t  ]\n}\n"
                                                    header:
                                                      subtitle: 'POST /v2/products/{product_id}/rules'
                                                      title: Add Product Rule
                      header: {}
        - title: Blueprint Themes
          route:
            path: /blueprint-themes
          data:
            children:
              - title: reCAPTCHA v2
                route:
                  path: /recaptcha-two
                data:
                  blocks:
                    - type: html
                      data: "<h1>ReCaptcha 2</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#better-spam-deterrance\">Better Spam Deterrance</a></li>\n\t\t<li><a href=\"#blueprint-how-to-upgrade-recaptcha\">How to Upgrade</a></li>\n\t\t<li><a href=\"#blueprint-supported-browsers\">Supported Browsers</a></li>\n\t\t</ul>\n</div>"
                    - type: text
                      data: >-
                        To deter spam submission through storefront forms,
                        BigCommerce now supports Google [reCAPTCHA
                        v2](https://support.google.com/recaptcha/?hl=en#6080933)
                        challenges, to distinguish human customers/visitors from
                        automated bots.
                      header: {}
                    - type: text
                      data: >
                        ## Better Spam Deterrence


                        We recommend that all storefront themes take advantage
                        of this upgraded bot detection. However, BigCommerce's
                        legacy Blueprint themes were last published in our Theme
                        Marketplace before we implemented reCAPTCHA v2.
                        Therefore, please use the following instructions to
                        update your Blueprint-based theme with the
                        best-available deterrent against automated spam.
                      header:
                        anchor: better-spam-deterrance
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## How to Upgrade


                        To incorporate reCAPTCHA v2, you will need to update
                        script references in these three template files: 


                        * `Panels/CreateAccountForm.html`

                        * `page_contact_form.html`

                        * `product_comments.html`
                      header:
                        anchor: blueprint-how-to-upgrade-recaptcha
                    - type: callout
                      data:
                        type: error
                        body: >-
                          Please back up each file before making any changes. 


                          The instructions below are based on the default
                          Blueprint theme (Classic Next), as it was last
                          published in BigCommerce’s Theme Marketplace.
                          Therefore, the HTML markup will vary, based on
                          customizations you have already made to this theme, or
                          to other Marketplace themes.
                        title: |2
                           Updating Safely 
                    - type: text
                      data: >-
                        ### Script Tag to Remove

                        Search each of the three template files for a
                        ``<script>`` tag like the following. If you find it,
                        delete the whole tag. (This script invokes a legacy
                        reCAPTCHA v1 challenge:)
                    - type: code
                      data: |-
                        <script type="text/javascript"> 
                         var RecaptchaOptions = { 
                         theme : 'clean' or 'white' 
                         }; 
                         </script>
                      header:
                        title: Script Tag to Remove
                      config:
                        mode: html
                    - type: text
                      data: >+
                        ### Variable to Remove


                        Alternately, you might see the same `RecaptchaOptions`
                        variable inside a different `<script>` tag at the top of
                        the same three templates. If so, delete the lines shown
                        here:

                    - type: code
                      data: |
                        var RecaptchaOptions = { 
                         theme : 'clean' or 'white'
                         };
                      config:
                        mode: js
                    - type: text
                      data: >-
                        ### reCAPTCHA Script to Update


                        Next, in each of the three template files, replace the
                        "before" code block just below with the simplified
                        "after" code that follows.



                        #### Replace this (before):
                      header: {}
                    - type: code
                      data: >-
                        <script type="text/javascript"

                        src="https://www.google.com/recaptcha/api/challenge?k=%%GLOBAL_ReCaptchaAPIKeyPublic%%">

                        </script>


                        <noscript>

                        <iframe
                        src="https://www.google.com/recaptcha/api/noscript?k=%%GLOBAL_ReCaptchaAPIKeyPublic%%"

                        height="300" width="500" frameborder="0"></iframe>

                        <br>

                        <textarea name="recaptcha_challenge_field" rows="3"
                        cols="40">

                        </textarea>

                        <input type="hidden" name="recaptcha_response_field"

                        value="manual_challenge">

                        </noscript>
                      config:
                        mode: html
                    - type: text
                      data: |
                        #### ...with this (after):
                    - type: code
                      data: |
                        %%GLOBAL_ReCaptchaMarkup%%
                      config:
                        mode: java
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Supported Browsers 


                        Below are the browsers supported for the BigCommerce
                        control panel. We drop support when a version falls
                        below 2% of usage. The browsers are sorted by
                        popularity, with the most popular browsers at the top.


                        | Desktop |

                        | --- |

                        | Chrome latest |

                        | Firefox latest |

                        | Internet Explorer 11 or later |

                        | Safari latest |


                        For a current list of target browsers (desktop and
                        mobile) that BigCommerce supports for _storefronts_
                        using our themes, please see <NOBR><a
                        href="https://forum.bigcommerce.com/s/article/Themes-Supported-Browsers"
                        target="_blank">this support page</a>.</nobr>
                      header:
                        anchor: blueprint-supported-browsers
              - title: Anatomy of a Theme
                route:
                  path: /anatomy-of-a-theme
                data:
                  blocks:
                    - type: html
                      data: "<h1>Anatomy of a Theme</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#directory-structure\">Directory Structure</a></li>\n\t\t<li><a href=\"#blueprint-images\">Images</a></li>\n\t\t<li><a href=\"#blueprint-layouts\">Layouts</a></li>\n    <li><a href=\"#blueprint-panels\">Panels</a></li>\n    <li><a href=\"#blueprint-snippets\">Snippets</a></li>\n    <li><a href=\"#blueprint-styles\">Styles</a></li>\n\t\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Themes are built using a powerful template system that
                        enables designers and developers familiar with CSS and
                        HTML to modify the presentation and structure of a
                        BigCommerce store.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Directory Structure


                        Theme files that apply to a store design are organized
                        in several different directories, as follows:


                        *   **Images**

                        *   **Panels**

                        *   **Snippets**

                        *   **Styles**
                      header:
                        anchor: directory-structure
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Images


                        Theme specific static images (referenced from CSS, or in
                        image tags).
                      header:
                        anchor: blueprint-images
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Layouts


                        Layout templates provide the base HTML structure that
                        wraps storefront page content. Each layout file
                        corresponds to a specific page.


                        For example, `product.html` refers to the page that’s
                        shown when a customer is viewing the details of a
                        product.


                        Most layout files contain nothing more than references
                        to individual panels to be shown on a page. These panels
                        are contained in div tags that generally define left,
                        center, or right columns of the page.
                      header:
                        anchor: blueprint-layouts
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Panels


                        Panels provide reusable blocks or dynamic sections of
                        content.


                        For example, the `SideCategoryList` panel builds a list
                        of categories to be shown throughout the store.


                        Panels are generally referenced directly from layout
                        templates. They define which content should be shown on
                        a particular page and handle the generation of that
                        specific content.


                        Some panels contain strictly static content (such as the
                        store name) whilst others generate content dynamically.
                        Dynamically generated panels cannot be created ad-hoc as
                        they are linked to specific data and logic within the
                        application.
                      header:
                        anchor: blueprint-panels
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Snippets


                        Snippets are templates containing a fragment of HTML
                        that can be embedded multiple times in a page, either
                        from direct references or from being part of a loop that
                        iterates over the items in a list.


                        For example, the `HomeFeaturedProductsItem` snippet
                        renders each individual product listed in the
                        `HomeFeaturedProducts` panel.
                      header:
                        anchor: blueprint-snippets
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Styles


                        Primary layout stylesheets for the Theme, with
                        `styles.css` being the core file.
                      header:
                        anchor: blueprint-styles
              - title: Blueprint and Developer Mode
                route:
                  path: /blueprint-and-developer-mode
                data:
                  blocks:
                    - type: text
                      data: "<h1>Blueprint and Developer Mode</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#foundation-for-creating-themes\">A Foundation for Creating Themes</a></li>\n\t\t<li><a href=\"#setting-up-your-environment\">Setting Up Your Environment</a></li>\n\t\t</ul>\n</div>"
                    - type: callout
                      data:
                        title: Restricted/Grandfathered Access
                        body: >-
                          As of November 2016, new BigCommerce stores are being
                          offered themes exclusively from BigCommerce's new <a
                          href="https://support.bigcommerce.com/articles/Public/The-Stencil-Theme-Platform"
                          target="_blank">Stencil</a> theme platform. For
                          existing stores, the control panel's <NOBR><b>Themes
                          Marketplace</b></nobr> and <NOBR><b>My
                          Themes</b></nobr> pages will show only those Blueprint
                          themes that have been applied to the store and/or
                          purchased before November 2016. <br><br> 


                          This means that the workflow below will work only for
                          stores that have applied or purchased at least one
                          Blueprint theme before November 2016. For information
                          about developing on the current Stencil platform,
                          please see <a
                          href="https://stencil.bigcommerce.com/docs/"
                          target="_blank">this developer documentation</a>.
                        type: warning
                    - type: text
                      data: >-
                        ## A Foundation for Creating Themes 


                        Our (legacy) Blueprint "Classic Next" base theme
                        provides a starting point for creating a new theme. This
                        theme includes responsive support out-of-the-box, so it
                        works with lower resolutions like those on mobile
                        devices. The visual design has been stripped back, so
                        you can create from a clean canvas.


                        <a href="https://blueprint-demo.mybigcommerce.com"
                        target="_blank">View the demo</a>.
                      header:
                        anchor: foundation-for-creating-themes
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Setting Up Your Environment 


                        Follow these steps to start developing using the
                        Blueprint theme:


                        1.  To enable the Blueprint theme on your store, simply
                        log in to the control panel, and place
                        <NOBR>`/index.php?ToDo=viewTemplates&dev=enable`
                        </nobr>after `/admin`.<br>
                            (For example: <NOBR>`https://store-123abmy.mybigcommerce.com/admin/index.php?ToDo=viewTemplates&dev=enable`.</nobr>)
                        2.  Apply the Blueprint theme.

                        3.  Connect to the site via <a
                        href="https://forum.bigcommerce.com/s/article/File-Access-WebDAV"
                        target="_blank">WebDAV</a>.

                        4.  Once connected via WebDav, navigate to the
                        `/template/` folder, where you will have access to all
                        the files that make up a theme.

                        5.  To make a change to a file, just download the file,
                        edit it, and then upload your altered version.

                        6.  Every time you make changes to any files, you will
                        need to upload them through WebDAV for the changes to be
                        reflected on your site.
                      header:
                        anchor: setting-up-your-environment
              - title: Theme Update Process
                route:
                  path: /blueprint-theme-update-process
                data:
                  blocks:
                    - type: html
                      data: "<h1>Theme Update Process</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#theme-update-prerequisites\">Prerequisites</a></li>\n\t\t<li><a href=\"#blueprint-theme-update-process\">Update Process</a></li>\n    <li><a href=\"#theme-update-other-requirements\">Requirements</a></li>\n  \n\t\t</ul>\n</div>"
                    - type: text
                      data: >-
                        Here is how BigCommerce and our partners collaborate to
                        integrate a partner's theme changes/updates into the
                        BigCommerce Theme Marketplace (which merchants also know
                        as our "theme store"):
                    - type: text
                      data: >-
                        ## Prerequisites 


                        Integrating a partner's theme changes requires these
                        preconditions:


                        *   Partner has an existing theme in the BigCommerce
                        Theme Marketplace.


                        *   BigCommerce sets up a Theme Development store (or
                        converts an existing regular store) and applies the
                        theme. All theme files will automatically be copied into
                        the WebDAV `/template/` directory.
                      header:
                        anchor: theme-update-prerequisites
                    - type: callout
                      data:
                        title: Template Path Abstracted
                        body: >
                          The Theme Development store resolves the
                          %%GLOBAL_TPL_PATH%% variable into /template/.
                          Therefore, assets will be pulled from the /template/
                          directory, which is accessible via WebDAV or via the
                          BigCommerce control panel.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Update Process 


                        1.  The partner switches on Theme Development mode, by
                        using:  

                        `http://<STORE>/admin/index.php?ToDo=viewTemplates&dev=enable`.

                        2.  The partner asks BigCommerce to switch a theme.
                        (Partners currently cannot switch it directly, because
                        it’s a paid theme.)
                      header:
                        anchor: blueprint-theme-update-process
                    - type: callout
                      data:
                        type: error
                        body: >-
                          This step will wipe out all files in the /template/
                          directory and copy in the latest version of the
                          integrated theme.
                    - type: text
                      data: >-
                        3.  The partner pulls changes from BigCommerce's GitHub
                        fork, to get the most recent version onto their local
                        machine as well.

                        4.  The partner makes appropriate changes to CSS/HTML
                        files.

                        5.  The partner commits their changes into the feature
                        branch, and opens a pull request against the BigCommerce
                        fork.
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          If BigCommerce made conflicting changes (which should
                          happen only when resolving urgent issues), the partner
                          might need to rebase changes (using git rebase master)
                          in order to resolve the conflicts.
                    - type: text
                      data: >-
                        6.  Partner [emails](mailto:themestore@bigcommerce.com)
                        their Git URL to the BigCommerce Theme Marketplace.

                        7.  BigCommerce integrates changes into BigCommerce
                        Themes.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Other Requirements 


                        *   Partners must not change the repository's directory
                        structure or directory names.

                        *   Files should have permission 644 (`rw-r–r–`).

                        *   Directories should have permission 755
                        (`drwxr-x-r-x`).
                      header:
                        anchor: theme-update-other-requirements
              - title: Style Editor
                route:
                  path: /style-editor
                data:
                  blocks:
                    - type: html
                      data: "<h1>Style Editor</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#what-is-lessjs\">What is Less.js?</a></li>\n\t\t<li><a href=\"#integrating-theme-style-editor\">Integrating a Theme with the Style Editor</a></li>\n\t\t<li><a href=\"#testing-style-editor-with-theme\">Testing Style Editor with Your Theme</a></li>\n \n\t\t</ul>\n</div>"
                    - type: text
                      data: >
                        Style Editor allows users to customize the look and feel
                        of their BigCommerce store, without needing to know HTML
                        or CSS conventions. Using a simple WYSIWYG interface,
                        users can edit colors and fonts, then see the changes
                        simultaneously in a live preview.


                        Style Editor uses Less.js as a CSS preprocessor. This
                        allows Style Editor to take advantage of variables and
                        other functions to ensure design consistency.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## What Is Less.js? 


                        Less (formally, Less.js) is a CSS preprocessor that
                        allows theme designers to use advanced functions and
                        programming principles in their CSS. A JavaScript
                        compiler runs over the Less files, and converts them
                        into usable CSS that can be included in themes.


                        For more information on examples, techniques, and how to
                        install Less, please see <a href="http://lesscss.org/"
                        target="_blank">lesscss.org</a>.
                      header:
                        anchor: what-is-lessjs
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Integrating a Theme with the Style Editor 


                        The Style Editor uses a specific group of files to build
                        its user interface, and to compile and generate the
                        stylesheet. BigCommerce’s base developer theme,
                        Blueprint, already contains these out-of-the-box. The
                        files are stored in the `Styles/less` directory.


                        The Style Editor depends on these files:


                        *   `style-editor-variables.less`

                        *   `internal-variables.less`

                        *   `init.less`

                        *   `theme.less`


                        ### style-editor-variables.less 


                        Style Editor uses this file to generate its user
                        interface. Here, you can enter variables for colours,
                        fonts and numbers that will help the merchant customize
                        the design of the theme. You can separate these
                        variables out into sections with headings to help
                        categorize the variables in a logical manner. No actual
                        CSS is written in this file.


                        There are some syntax patterns involved that Style
                        Editor will understand to help you customize the UI.
                        Special syntax:


                        `@color-your-text-here` — This is the naming convention
                        for a color variable. The style editor will generate
                        this as a color picker, with the value of the variable
                        set as the color picker’s default hexadecimal color
                        value.


                        For example:
                      header:
                        anchor: integrating-theme-style-editor
                    - type: code
                      data: '@color-header-background: #FFFFFF;'
                      config:
                        mode: css
                    - type: text
                      data: >-
                        This will generate a color picker with the label “Header
                        Background”, set to #FFFFFF (white) by default.


                        `@font-your-text-here` — This is the naming convention
                        for a font variable. The style editor will generate this
                        as a dropdown, preloaded with your theme’s predefined
                        fonts. The variable’s value will be preselected.


                        For example:
                    - type: code
                      data: '@font-page-text: "Open Sans",Helvetica,Arial,sans-serif;'
                      config:
                        mode: css
                    - type: text
                      data: >-
                        This will generate a dropdown with the label “Page
                        Text”, and with the “Open Sans” font preselected. The
                        dropdown’s other options will be the predefined list of
                        fonts you’ve provided.


                        `@font-declaration` — This variable will store all the
                        default fonts (and their fallbacks) for the style
                        editor. It will use these fonts in the font dropdown
                        mentioned in the above point.


                        For example:
                    - type: code
                      data: >
                        @font-declaration: '{ "Lato":["Lato", "Arial",
                        "sans-serif"], "Freckle Face":["Freckle Face",
                        "cursive"]}';
                      config:
                        mode: css
                    - type: text
                      data: >-
                        This will populate all font drop-downs with the fonts
                        “Lato” and “Freckle Face,” and if one of them is
                        selected, the fonts for that variable will be set to the
                        values in the corresponding array of fonts. For example,
                        “Lato” will set the fonts to “Lato”, Arial, sans-serif.


                        To use these fonts in the Style Editor, they must be
                        included in the style editor variables file through an
                        import. For the above example, you would include the
                        styles from Google Fonts like so:
                    - type: code
                      data: >
                        @import
                        url(//fonts.googleapis.com/css?family=Lato|Freckle+Face);
                      config:
                        mode: css
                    - type: text
                      data: >
                        `@color-declaration` — This variable will store all the
                        default colors for the style editor. It will list these
                        colours in the color picker’s palette after all the
                        color picker’s defaults.


                        For example:
                    - type: code
                      data: '@color-declaration: ''["#FF7700, #9966CC" ]'';'
                      config:
                        mode: css
                    - type: text
                      data: >
                        This will add a shade of orange and a shade of purple to
                        the end of the list of colors selectable in the color
                        picker.


                        `//! @section: your text here` — You can group variables
                        into sections with headings using this syntax to help
                        your users read and understand your variables more
                        easily.


                        For example:


                        `//! @section: Header`  

                        `@color-header-background: #FFF;`  

                        `//! @endsection`  of


                        This will create a section in the left navigation with
                        the title “Header”, which will house the “Header
                        Background” variable.


                        More information on syntax, and examples, can be found
                        in the comments of the style-editor-variables.less file
                        found in Blueprint.
                    - type: text
                      data: >
                        ### internal-variables.less 


                        This file is for you to store the variables that you may
                        need to use, but don’t want the Style editor to see. For
                        example, you can use it to create a hierarchy within
                        your Less file, so that:


                        *   The user sets a value to @color-store-name;

                        *   in internal-variables.less, @main-accent:
                        @color-store-name;

                        *   in init.less, we set a:hover {color: @main-accent};


                        In this example, the link hover color will be set to
                        whatever the store name color is. We can add as many
                        selectors as we want to this css statement, depending on
                        our design.


                        This way, we can reuse the color that gets set to
                        `@color-store-name` as the color for elements that we
                        may not want to be edited in the Style Editor, but will
                        now carry on the colour of the store name to create
                        consistency within your design.
                    - type: text
                      data: >
                        ### init.less 


                        This is where you initialize the use of the variables.
                        This file contains all the CSS that will be compiled and
                        generated into the theme.css file. For example, the
                        @color-store-name can now be applied to the `#HeaderLogo
                        h1` element by saying:
                    - type: code
                      data: |
                        #HeaderLogo h1 {
                        color: @color-store-name
                        }
                      config:
                        mode: css
                    - type: text
                      data: >+
                        ### theme.less 


                        The file that ultimately gets compiled into `theme.css`.
                        This just uses `@import` to include the other three Less
                        files for compilation. The Style Editor will read this
                        file for instructions on how to compile your styles
                        using Less.


                        Compiling your Less files


                        Once you have finished working on your `.less` files,
                        _don’t forget to compile them!_ If you are using the
                        command line, you should be doing something similar to:

                    - type: code
                      data: |+
                        lessc Styles/less/theme.less > Styles/theme.css 


                      config:
                        mode: html
                    - type: text
                      data: >-
                        This will use the `theme.less` file to generate the
                        `theme.css` file into your theme's `Styles/` folder.


                        If you find that you have to make a change to
                        `theme.css`, please don't forget to replicate this
                        change in `theme.less` (but more preferably, in
                        `init.less`). Otherwise, every time you recompile the
                        less files, this change will be overwritten.


                        Less offers a variety of compilation methods, including
                        applications for both Windows and Mac that you can use
                        if you prefer not to use the command prompt/terminal.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Testing Style Editor with Your Theme 


                        If you'd like to add Style Editor support to your theme,
                        you can enable the Style Editor on just your store.
                        Simply log in to the control panel and place
                        `/index.php?ToDo=viewTemplates&dev=enable` after
                        `/admin`.<br>

                        (For example:
                        <NOBR>`https://store-123abmy.mybigcommerce.com/admin/index.php?ToDo=viewTemplates&dev=enable`</nobr>)


                        This will enable [Developer Mode](#) for your store,
                        which also enables Blueprint and other features for
                        theme developers. You can [use Blueprint](#) as a basis
                        for creating new themes.
                      header:
                        anchor: testing-style-editor-with-theme
              - title: Product Filtering Toolkit
                route:
                  path: /product-filtering-toolkit
                data:
                  blocks:
                    - type: html
                      data: "<h1>Product Filtering Toolkit</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#creating-new-theme-product-filtering\">Creating a New Theme With Product Filtering</a></li>\n\t\t<li><a href=\"#enabling-product-filtering-customized-theme\">Enabling Product Filtering for Your Customized Theme</a></li>\n\t\t<li><a href=\"#implementing-product-filtering-your-theme\">Implementing Product Filtering in Your Theme</a></li>\n    <li><a href=\"#allowing-filtering-on-off\">Allowing For Filtering On/Off</a></li>\n    <li><a href=\"#category-filtering-details\">Category Filtering Details</a></li>\n\t\t</ul>\n</div>"
                    - type: text
                      data: >
                        Product filtering (also known as faceted search) enables
                        shoppers to refine product searches based on multiple
                        attributes like price, size, ratings, etc. For a store
                        owner's view of administering this feature, please see
                        <a
                        href="https://forum.bigcommerce.com/s/article/Product-Filtering-Settings"
                        target="_blank">this KB article</a>. 
                    - type: callout
                      data:
                        type: warning
                        title: Requirements/Restrictions
                        body: >-
                          <ul>

                          <li>

                          Adding product filtering to a theme is recommended for
                          experienced theme developers only. You must have
                          facility with HTML and CSS, and must also familiarize
                          yourself with how BigCommerce themes are structured
                          and operate. </li>

                          <li>

                          Product filtering is a Pro/Enterprise feature. To
                          enable it on an active public store, you must upgrade
                          to a Pro or Enterprise plan.

                          </li>

                          <li>

                          As noted below, we recommend implementing product
                          filtering on a temporary sandbox store. You can create
                          a trial store, and then upload your theme
                          customizations to that store via WebDAV to replicate
                          your local changes.</li>

                          </ul>
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Creating a New Theme with Product Filtering 


                        Product filtering is fully functional in the Blueprint
                        base theme. Once you’ve enabled [Developer
                        Mode](#blueprint-and-developer-mode), you’ll be able to
                        access this base theme and add product filtering to your
                        developer store.
                      header:
                        anchor: creating-new-theme-product-filtering
                    - type: callout
                      data:
                        type: warning
                        title: >-
                          Restricted/Grandfathered Access to Blueprint Base
                          Theme
                        body: >-
                          The Blueprint base theme is now available only to
                          stores that applied it before November 2016. <br><br>


                          As of that date, stores are being offered themes only
                          from BigCommerce's new <a
                          href="https://support.bigcommerce.com/articles/Public/The-Stencil-Theme-Platform"
                          target="_blank">Stencil</a> theme platform. Within a
                          store's control panel, the <NOBR><b>Themes
                          Marketplace</b></nobr> and <NOBR><b>My
                          Themes</b></nobr> pages will show only those Blueprint
                          themes that have been applied to the store and/or
                          purchased before November 2016. <br><br> 


                          For information about developing on the current
                          Stencil platform, please see <a
                          href="https://stencil.bigcommerce.com/docs/"
                          target="_blank">this developer documentation</a>.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Enabling Product Filtering for Your Customized Theme 


                        To enable product filtering, just enable [Developer
                        Mode](#devmode) on your store. This will enable product
                        filtering on your store by default, regardless of
                        whether or not your theme and plan support it.
                      header:
                        anchor: enabling-product-filtering-customized-theme
                    - type: callout
                      data:
                        type: warning
                        title: Start with a Sandbox Store
                        body: >-
                          Depending on the customizations you have made to your
                          theme, enabling Developer Mode could have unexpected
                          results. <NOBR>We recommend</nobr> using a sandbox
                          store (not your main store) when applying these
                          changes for the first time.
                    - type: text
                      data: >+
                        If you are working with a new store, product filtering
                        might already work out-of-the-box for your theme.

                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Implementing Product Filtering in Your Theme 


                        Once you’ve enabled product filtering for your sandbox
                        store, you’ll need to get the most up-to-date Blueprint
                        files and copy them into your own theme. Here is how to
                        do so.
                      header:
                        anchor: implementing-product-filtering-your-theme
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          As noted above, the Blueprint base theme is now
                          available only to stores that applied it before
                          November 2016.
                        title: |2
                           Restricted/Grandfathered Access to Blueprint Base Theme
                    - type: text
                      data: >-
                        1.  Enable [Developer Mode](#devmode) in your sandbox
                        store, if you haven’t already. This will enable the
                        Blueprint theme and the faceted search feature.

                        2.  Unless you’re starting from scratch, back up your
                        theme customizations.

                        3.  Select Blueprint as your store’s theme. 

                        4.  Download the Blueprint theme – don’t worry, you’ll
                        only need certain files for faceted search.

                        5.  Restore your theme from the backups you downloaded
                        in step 2.

                        6.  Upload the following files from Blueprint to your
                        sandbox store:
                           *   `Panels/FacetedSearch.html` – This panel contains the markup for your Faceted Search column. It calls all the panels for each of the searchable facets as well.
                            *   `Panels/FacetedSearchProductGrid.html` - This panel contains the markup for your list of product results when your category lists are set to "grid view".
                            *   `Panels/FacetedSearchProductList.html` - This panel contains the markup for your list of product results when your category lists are set to "list view".
                            *   `Panels/FacetedSearchTemplateCategory.html` – The panel that contains the markup for the Category facet.
                            *   `Panels/FacetedSearchTemplateMultichoice.html` – The panel that contains the markup for any facet containing multiple-choice check boxes.
                            *   `Panels/FacetedSearchTemplateRange.html` – The panel that contains the markup for facets containing ranges.
                            *   `Panels/FacetedSearchTemplateRating.html` – The panel that contains the markup for the Rating facet.
                            *   `Panels/FacetedSearchTemplateShowing.html` – The panel that contains the markup for the list of currently selected filters.
                            *   `Panels/FacetedSearchTemplateSingle.html` – The panel that contains the markup for any facet containing single-choice radio buttons.
                            *   `Panels/Pagination.html` – The panel that contains the markup for your pagination – note that this will not use any existing pagination panels that your theme may have.
                            *   `Styles/faceted-search.css` – This will be included in `FacetedSearch.html`, so you don’t need to add it to your `HTMLHead.html` file.

                        7.  Copy your `brands.html` page and name it
                        `brands_with_facets.html`.

                        8.  Copy your `search.html` page and name it
                        `search_with_facets.html`.

                        9.  Copy your `category.html` page and name it
                        `category_with_facets.html`.

                        10.  Include the required assets on your new facets
                        pages. You can use the facets pages from Blueprint for
                        reference (the assets will be named the same):
                           *   `%%Panel.FacetedSearch%%` – This is the main Faceted Search panel, and will call the rest of the panels it needs accordingly (including required JavaScript and CSS).
                            *   Add the `js-faceted-search-column` class to the container of your Faceted Search panel.
                            *   If you have a responsive theme, you can add the `Refine` button to your page, which toggles the Faceted Search column on or off. By default, this button displays only on mobile:<br>
                            `<button class="js-faceted-search-action btn"> %%LNG_FilterBy%% </button>`
                        11.  If the pages mentioned above don’t exist, you can
                        copy the existing pages from the Blueprint theme. Keep
                        in mind that you’ll need to modify these pages to suit
                        the structure of your theme.
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Allowing For Filtering On/Off 


                        When faceted search is switched on, the following
                        templates will be used:


                        *   Brand pages > `brands_with_facets.html`

                        *   Search page > `search_with_facets.html`

                        *   Category pages > `category_with_facets.html`


                        When switched off:


                        *   Brand pages > `brands.html`

                        *   Search page > `search.html`

                        *   Category pages > `category.html`
                      header:
                        anchor: allowing-filtering-on-off
                    - type: callout
                      data:
                        type: warning
                        title: ' Clone and Rename Templates, Don’t Alter Originals'
                        body: >-
                          Development agencies should not modify the
                          <em>base</em> templates of the
                          <code>brand.html</code>, <code>search.html</code>, or
                          <code>category.html</code> pages to include faceted
                          search. Clients who are not on a Pro or Enterprise
                          plan do not get faceted search, so if you include it
                          on <code>category.html</code>, <code>brand.html</code>
                          or <code>search.html</code> page, your theme will be
                          useless to those clients.
                    - type: text
                      data: >-
                        ## Category Filtering Details 


                        When you turn on product filtering for a store, it will
                        automatically switch all `Category Layout File`s to your
                        new `category_with_facets.html` page. To view product
                        filtering on Category pages, you must ensure that the
                        `Category Layout File` is set to
                        `category_with_facets.html`.


                        You will not see the Category filter on storefront
                        Category pages. This has been hidden for SEO reasons.
                      header:
                        anchor: category-filtering-details
              - title: Template Syntax
                route:
                  path: /blueprint-template-syntax
                data:
                  blocks:
                    - type: html
                      data: "<h1>Template Syntax</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#global-variables-references\">Global-Variables References/a></li>\n\t\t<li><a href=\"#panel-references\">Panel References/a></li>\n\t\t<li><a href=\"#snippet-references\">Snippet References</a></li>\n    <li><a href=\"#referencing-distributed-theme-assets\">Referencing Distributed Theme Assets</a></li>\n    <li><a href=\"#file-includes\">File Includes</a></li>\n</ul>\n</div>"
                    - type: text
                      data: >-
                        Each of the layout, panel, and snippet files in a theme
                        uses variables (also called placeholders) to show
                        external content or content fetched from the database
                        (such as the name of a product).


                        Template variables are enclosed within `%%` markers.
                        These types of variables are available for use in
                        templates: global variables, string variables, panel
                        references, snippet references, and file includes.
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Global-Variables References 



                        Global variables are used to render dynamic content into
                        a template. Global variables are referenced using the
                        following syntax:


                        <pre>%%GLOBAL_[placeholder_name]%%</pre>


                        For example:


                        <pre>%%GLOBAL_ProductName%%</pre>


                        Specific variables' availability depends on the layout
                        template that you're editing. For example, the variable
                        for a product's description is available on the product
                        details page, but not on the category view/product
                        listing page.
                      header:
                        anchor: global-variables-references
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Panel References 


                        Panels are the different blocks used by BigCommerce to
                        build a page. Panels are referenced both inside layout
                        files and inside other panel files.


                        Panels are referenced in templates as follows, where
                        `[panel_name]` is a placeholder for the name of a file
                        in the theme’s Panels directory:


                        <pre>%%Panel.[panel_name]%%</pre>


                        For example:


                        <pre>%%Panel.HomeFeaturedProducts%%</pre>


                        This panel reference will load in the content from the
                        `Panels/HomeFeaturedProducts.html` panel file.
                      header:
                        anchor: panel-references
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Snippet References 


                        Snippets are templates containing HTML, which you can
                        use multiple times on one page – either by using them in
                        different parts of the template, or by including them a
                        loop. For example, a loop might build a list of products
                        on the page, with each product in the list being a
                        repeated version of the same snippet.


                        Snippets are referenced in templates as follows:


                        <pre>%%SNIPPET_[snippet_name]%%</pre>


                        In most cases, this will correspond to a similarly named
                        file in the theme’s Snippets directory. For example:


                        <pre>%%SNIPPET_HomeFeaturedProducts%%</pre>


                        This snippet reference will contain repeated copies of
                        `Snippets/HomeFeaturedProductsItem.html`, one for each
                        featured product to be shown in the list.
                      header:
                        anchor: snippet-references
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Referencing Distributed Theme Assets 


                        After the Blueprint framework was first released,
                        BigCommerce added the ability to reference theme assets
                        that are stored remotely on a CDN (content delivery
                        network). This section provides examples that map
                        first-generation Blueprint syntax to updated syntax for
                        distributed assets.


                        You can use WebDAV to upload your own custom theme
                        assets (JavaScripts, stylesheets, images, fonts, etc).
                        In your HTML, reference these assets that aren’t present
                        in the base theme using the `ASSET` syntax:


                        <pre>%%ASSET_[path_to_asset]%%</pre>


                        This syntax will output an absolute URL like: 


                        <pre>http://cdn-host/templates/__custom/path_to_asset?t=timestamp`</pre>


                        This loads the custom asset from our CDN server, and
                        includes a cache-busting querystring.


                        For example:


                        <pre>%%ASSET_Styles/myownstyle.css%%</pre>


                        ...will be output as:


                        <pre>http://cdn-host/templates/__custom/Styles/myonwstyle.css?t=123</pre>
                      header:
                        anchor: referencing-distributed-theme-assets
                    - type: text
                      data: >
                        #### Syntax Examples 


                        The following tables map earlier to current syntax:


                        ##### Assets in CSS Files 


                        | Previous Syntax | Updated Syntax (CDN) |

                        |-----------------|---------------------|

                        | `url(/template/images/foo.jpg)` |
                        `url(%%ASSET_images/foo.jpg%%)` |

                        | `url(/templates/__custom/images/foo.jpg)` |
                        `url(%%ASSET_images/foo.jpg%%)` |

                        | `url(/template/foo/bar/font.woff)` |
                        `url(%%ASSET_foo/bar/font.woff%%)` |

                        | `url(../images/foo.jpg)` |
                        `url(%%ASSET_images/foo.jpg%%)` |

                        | `url(icons/foo.ico)` |
                        `url(%%ASSET_Styles/icons/foo.ico%%)` |

                        | `url(//mystore.com/template/images/foo.jpg)` |
                        `url(%%ASSET_images/foo.jpg%%)` |


                        ##### Assets in HTML Files 


                        | Previous Syntax | Updated Syntax (CDN) |

                        |---------------|----------------|

                        | `<img src="../images/foo.jpg" />` | `<img
                        src="%%ASSET_images/foo.jpg%%" />` |

                        | `<img src="//mystore.com/template/images/foo.jpg">` |
                        `<img src="%%ASSET_images/foo.jpg%%" />` |

                        | `<link href="/template/Styles/foo.css" />` | `<link
                        href="%%ASSET_Styles/foo.css%%" />` |

                        | `<script src="/template/js/foo.js%%"></script>` |
                        `<script src="%%ASSET_js/foo.js%%"></script>` |


                        ##### Assets Outside of the /template/ Directory 


                        The `ASSET` variable can be used only with files and
                        folders inside the `/template/` directory. To take
                        advantage of a CDN's benefits, we strongly recommend
                        moving your assets to the `/template/` directory.
                        However, if you need to keep assets outside of the
                        `/template/` directory, the best practice is to use
                        _protocol-relative_, absolute or fully qualified, URLs.
                        Here are some examples:


                        ```

                        <img src="//mystore.com/content/images/foo.jpg" />

                        url(//mystore.com/content/images/foo.jpg")

                        <link href="//mystore.com/content/foo.css"
                        rel="stylesheet" type="text/css" />

                        ```
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## File Includes 


                        You can include another file within a template, using
                        file include variables. This practice is extremely
                        useful for external files such as banners or
                        site-network headers.


                        Includes are referenced within template files as
                        follows:


                        <pre>

                        %%Include.http://www.example.com/remote_file.html%%

                        %%Include.https://www.example.com/secure_remote_file.html%%</pre>


                        Notes: Included external links will not follow redirects
                        (http status code 301 or 302). So if a redirect is
                        encountered, it will not include the content.
                      header:
                        anchor: file-includes
              - title: Store-Wide Global Panels
                route:
                  path: /store-wide-global-panels
                data:
                  blocks:
                    - type: html
                      data: |
                        <h1>Store-Wide Global Panels</h1>
                    - type: text
                      data: >-
                        The following panels are available store-wide:


                        | Variable | Description |

                        |-----------------|------------------|

                        | `HTMLHead` | Content shown between the `<head>` tags
                        of each page. This includes code for visitor tracking,
                        RSS feeds, etc. |

                        | `Header` | The header for each page in the store
                        (includes the `TopMenu` and `HeaderSearch` panels) |

                        | `Footer` | The footer for each page in the store. |

                        | `SideCategoryList` | A list of categories shown in the
                        store, to the category depth configured in the control
                        panel. |

                        | `SideNewProducts` | A list of products recently added
                        to the store. |

                        | `SideNewsletterBox` | The newsletter subscription
                        form. |

                        | `SideShopByBrand` | A list of popular brands on the
                        store (based on the number of products in each brand). |

                        | `SideProductRecentlyViewed` | A list of the products
                        recently viewed by the current customer. |

                        | `SideTopSellers` | A list of top selling-products on
                        the store (based purely on the number of times the
                        product has sold on this store). |

                        | `SidePopularProducts` | A list of popular products on
                        the store (by average rating). |

                        | `SideLiveChatServices` | Any live chat service code
                        that has been integrated in to the store. |

                        | `SideCurrencySelector` | The store currency selection
                        box, containing the list of currencies configured on the
                        store. |

                        | `SideCartContents` | A list of items in currently in
                        the customer's cart. |

                        | `TopMenu` | The top navigation menu (`Home`, `My
                        Account`, `Sign In or Create Account`, etc.) |

                        | `PagesMenu` | A list of parent-level pages configured
                        on the store. |

                        | `HeaderSearch` | The search box included at the top of
                        each of the store's pages. |
              - title: Store-Wide Global Variables
                route:
                  path: /store-wide-global-variables
                data:
                  blocks:
                    - type: html
                      data: |
                        <h1>Store-Wide Global Variables</h1>
                    - type: text
                      data: >-
                        The following GLOBAL variables are available from any
                        layout, panel, or snippet in the store, independent of
                        session status.


                        | Variable | Description |

                        | --- | --- |

                        | `%%GLOBAL_AllPricesAreInCurrency%%` | This variable
                        produces a text string that identifies the currency
                        currently active on the store. For example: <NOBR>`All
                        Prices are in USD`</nobr> |

                        | `%%GLOBAL_AlternateClass%%` | . |

                        | `%%GLOBAL_CdnAppPath%%` | The URI of the CDN
                        application. |

                        | `%%GLOBAL_CdnStorePath%%` | The URI to the store's CDN
                        directory. |

                        | `%%GLOBAL_CharacterSet%%` | The character set
                        currently active on the store. For example, UTF-8. |

                        | `%%GLOBAL_CheckoutLink%%` | The URI that initiates a
                        checkout sequence. |

                        | `%%GLOBAL_CurrentCustomerFirstName%%` | The first name
                        of the customer who is currently logged in. If no
                        customer is logged in, returns: `Guest` |

                        | `%%GLOBAL_CurrentCustomerLastName%%` | The last name
                        of the customer who is currently logged in. If no
                        customer is logged in, returns no content. |

                        | `%%GLOBAL_CustomerGroupId%%` | The ID of the customer
                        group for the currently logged-in user or guest. Blank
                        if none. |

                        | `%%GLOBAL_CustomerGroupName%%` | The name of the
                        customer group for the currently logged-in user or
                        guest. Blank if none. |

                        | `%%GLOBAL_Favicon%%` | The URI location of the favicon
                        file. |

                        | `%%GLOBAL_HeaderLogo%%` | The store's logo. This can
                        be either an image file or an HTML-formatted text
                        string. |

                        | `%%GLOBAL_ImageDirectory%%` | The name of the images
                        directory. |

                        | `%%GLOBAL_IMG_PATH%%` | The URI of the directory in
                        which the site's image files reside. |

                        | `%%GLOBAL_jQueryPath%%` | The URI of the minified
                        jQuery library in use. For
                        example:<br>`https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js`
                        |

                        | `%%GLOBAL_jQueryUIPath%%` | The path to the jQuery UI
                        script. For example:<br>
                        `https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.js`
                        |

                        | `%%GLOBAL_LiveChatCodeEnabled%%` | A value
                        representing whether Live Chat is enabled or disabled.
                        For example: `none` |

                        | `%%GLOBAL_LoginOrLogoutText%%` | The HTML code of the
                        string (including links) providing the option to sign
                        into the store or to log out. For example: <NOBR>`Sign
                        in or Create an account`</nobr> |

                        | `%%GLOBAL_LogoText%%` | The text string used for the
                        store logo. |

                        | `%%GLOBAL_MASTER_THEME_PATH%%` | The URI of the
                        __master theme directory. |

                        | `%%GLOBAL_PageLink%%` | The URI of the page. |

                        | `%%GLOBAL_PageName%%` | The name of the page. For
                        example: <NOBR>`RSS Syndication`</nobr> |

                        | `%%GLOBAL_PoweredBy%%` | The string identifying the
                        software used by the store. For example: `Shopping Cart
                        Software by BigCommerce` |

                        | `%%GLOBAL_SHARED_GIFT_THEME_PATH%%` | The CDN URI of
                        the store's gift themes. |

                        | `%%GLOBAL_ShopPath%%` | The store's URI. If the page
                        is protected with TLS/SSL, this will be an HTTPS path. |

                        | `%%GLOBAL_ShopPathNormal%%` | The unencrypted URI of
                        the store, prefixed with HTTP. |

                        | `%%GLOBAL_ShopPathSSL%%` | The encrypted URI of the
                        store, prefixed with HTTPS. |

                        | `%%GLOBAL_ShowCookieWarningMessage%%` | A boolean
                        value that represents whether or not the display of a
                        cookie warning message is enabled or disabled. |

                        | `%%GLOBAL_SiteColor%%` | The current template's active
                        color scheme. |

                        | `%%GLOBAL_SitemapURL_HTML%%` | The URI to the store's
                        site map directory. |

                        | `%%GLOBAL_SocialMedia_Service_Class%%` | The name of
                        the social media class. For example: `#FFFFFF` |

                        | `%%GLOBAL_SocialMedia_Service_Url%%` | The URI to the
                        social media service. |

                        | `%%GLOBAL_SocialMediaService_Name%%` | The name of the
                        social media service. For example: `LinkedIn` |

                        | `%%GLOBAL_StoreLogo%%` | The file name of the store
                        logo image. |

                        | `%%GLOBAL_StoreName%%` | The name of the store. |

                        | `%%GLOBAL_StorePhoneNumber%%` | The phone number of
                        the store. |

                        | `%%GLOBAL_STYLE_PATH%%` | The CDN URI of the active
                        theme's styles directory. |

                        | `%%GLOBAL_SwapFrequency%%` | . |

                        | `%%GLOBAL_TPL_PATH%%` | The CDN URI of the theme. |

                        | `%%GLOBAL_value%%` | The type of value. For example:
                        `Array` |

                        | `%%GLOBAL_Year%%` | The current year. For example:
                        `2015` |
              - title: Global Variables
                route:
                  path: /global-variables
                data:
                  blocks:
                    - type: html
                      data: |
                        <h1>Global Variables</h1>
                    - type: text
                      data: >
                        Blueprint themes use the following GLOBAL variables to
                        pull data from the store's database.


                        While these variables are prefixed with the word GLOBAL,
                        the data's availability actually varies per session,
                        layout, panel, and snippet. For the list of variables
                        truly available from anywhere in the store, regardless
                        of session status, please see [Store-Wide
                        Variables](/themes/#store_wide_variables").


                        The list below is sorted by the number of times that the
                        Blueprint base theme references the variable – with the
                        most frequently referenced variables at the top:
                    - type: text
                      data: >-
                        | Variable | Description |

                        | --- | --- |

                        | `%%GLOBAL_ShopPath%%` | The full URL to the store
                        without a trailing slash. If on an SSL based page, this
                        will be the HTTPS version of the store path. |

                        | `%%GLOBAL_IMG_PATH%%` | . |

                        | `%%GLOBAL_ProductName%%` | . |

                        | `%%GLOBAL_ProductId%%` | . |

                        | `%%GLOBAL_ShopPathNormal%%` | The normal (non SSL)
                        version of the store URL. |

                        | `%%GLOBAL_JSCacheToken%%` | . |

                        | `%%GLOBAL_ProductRating%%` | . |

                        | `%%GLOBAL_CdnAppPath%%` | . |

                        | `%%GLOBAL_ProductPrice%%` | . |

                        | `%%GLOBAL_ProductAddText%%` | . |

                        | `%%GLOBAL_ProductFieldId%%` | . |

                        | `%%GLOBAL_EmailFooter%%` | . |

                        | `%%GLOBAL_ProductLink%%` | . |

                        | `%%GLOBAL_ShopPathSSL%%` | The SSL version of the
                        store URL. |

                        | `%%GLOBAL_OrderId%%` | . |

                        | `%%GLOBAL_ProductThumb%%` | . |

                        | `%%GLOBAL_HideProductRating%%` | . |

                        | `%%GLOBAL_ProductURL%%` | . |

                        | `%%GLOBAL_TPL_PATH%%` | . |

                        | `%%GLOBAL_HideActionAdd%%` | . |

                        | `%%GLOBAL_StoreName%%` | The name of the store. |

                        | `%%GLOBAL_ProductQuantity%%` | . |

                        | `%%GLOBAL_AlternateClass%%` | . |

                        | `%%GLOBAL_CartItemId%%` | . |

                        | `%%GLOBAL_CompareLink%%` | . |

                        | `%%GLOBAL_HideCompareItems%%` | . |

                        | `%%GLOBAL_ProductOptions%%` | . |

                        | `%%GLOBAL_UpperAddressType%%` | . |

                        | `%%GLOBAL_ErrorMessage%%` | . |

                        | `%%GLOBAL_ProductNumber%%` | . |

                        | `%%GLOBAL_HeaderLogo%%` | . |

                        | `%%GLOBAL_GiftCertificateCode%%` | . |

                        | `%%GLOBAL_WishListMessage%%` | . |

                        | `%%GLOBAL_ProductFieldRequired%%` | . |

                        | `%%GLOBAL_FieldRequiredClass%%` | . |

                        | `%%GLOBAL_EmailHeader%%` | . |

                        | `%%GLOBAL_OrderAmount%%` | . |

                        | `%%GLOBAL_GiftCertificateTo%%` | . |

                        | `%%GLOBAL_ShipToBillingName%%` | . |

                        | `%%GLOBAL_SiteColor%%` | The current template’s active
                        color scheme. |

                        | `%%GLOBAL_ProductFieldName%%` | . |

                        | `%%GLOBAL_AddressId%%` | . |

                        | `%%GLOBAL_PageTitle%%` | . |

                        | `%%GLOBAL_CharacterSet%%` | . |

                        | `%%GLOBAL_SearchTrackClass%%` | . |

                        | `%%GLOBAL_ItemId%%` | . |

                        | `%%GLOBAL_ProductTotal%%` | . |

                        | `%%GLOBAL_ProductFieldInputSize%%` | . |

                        | `%%GLOBAL_ProductFieldValue%%` | . |

                        | `%%GLOBAL_AddressType%%` | . |

                        | `%%GLOBAL_HideWishlist%%` | . |

                        | `%%GLOBAL_VideoId%%` | . |

                        | `%%GLOBAL_SHARED_GIFT_THEME_PATH%%` | . |

                        | `%%GLOBAL_GiftCertificateAmount%%` | . |

                        | `%%GLOBAL_GiftCertificateFrom%%` | . |

                        | `%%GLOBAL_GiftCertificateMessage%%` | . |

                        | `%%GLOBAL_GiftCertificateExpiryInfo%%` | . |

                        | `%%GLOBAL_HideShippingOptions%%` | . |

                        | `%%GLOBAL_HideLimitedCreditWarning%%` | . |

                        | `%%GLOBAL_ProductAttributes%%` | . |

                        | `%%GLOBAL_ImageDescription%%` | . |

                        | `%%GLOBAL_HideErrorMessage%%` | . |

                        | `%%GLOBAL_ExtraCategoryClass%%` | . |

                        | `%%GLOBAL_BillingAddress%%` | . |

                        | `%%GLOBAL_ShippingAddress%%` | . |

                        | `%%GLOBAL_OrderDate%%` | . |

                        | `%%GLOBAL_HideReviewCaptcha%%` | . |

                        | `%%GLOBAL_HideReturnAction%%` | . |

                        | `%%GLOBAL_OrderTotal%%` | . |

                        | `%%GLOBAL_NewsTitle%%` | . |

                        | `%%GLOBAL_BrandName%%` | . |

                        | `%%GLOBAL_VideoTitleLong%%` | . |

                        | `%%GLOBAL_ItemClass%%` | . |

                        | `%%GLOBAL_EventDate%%` | . |

                        | `%%GLOBAL_GiftWrappingName%%` | . |

                        | `%%GLOBAL_WishListID%%` | . |

                        | `%%GLOBAL_FormFieldRequiredJS%%` | . |

                        | `%%GLOBAL_HideCreditCardError%%` | . |

                        | `%%GLOBAL_CustomerName%%` | . |

                        | `%%GLOBAL_CustomerEmail%%` | . |

                        | `%%GLOBAL_CustomerGroupId%%` | Contains the group ID
                        for a logged-in customer who is part of a group. Also
                        contains the group ID for a guest where a default group
                        is set for guests. Blank for a logged-in customer who
                        belongs to no group. Also blank for a guest where no
                        default group is set for guests. Globally available
                        across panels and snippets. |

                        | `%%GLOBAL_ReCaptchaAPIKeyPublic%%` | . |

                        | `%%GLOBAL_SearchId%%` | . |

                        | `%%GLOBAL_OrderComments%%` | . |

                        | `%%GLOBAL_AllBrandsLink%%` | . |

                        | `%%GLOBAL_CheckoutLink%%` | . |

                        | `%%GLOBAL_AdditionalCheckoutButtons%%` | . |

                        | `%%GLOBAL_CheckoutShippingTitle%%` | . |

                        | `%%GLOBAL_HideUseStoreCredit%%` | . |

                        | `%%GLOBAL_HideMailingListInvite%%` | . |

                        | `%%GLOBAL_AllPricesAreInCurrency%%` | . |

                        | `%%GLOBAL_HidePurchasingOptions%%` | . |

                        | `%%GLOBAL_jQueryUIPath%%` | . |

                        | `%%GLOBAL_ProductMaxTinyWidth%%` | . |

                        | `%%GLOBAL_ProductMaxTinyHeight%%` | . |

                        | `%%GLOBAL_BrandLink%%` | . |

                        | `%%GLOBAL_OrderProductId%%` | . |

                        | `%%GLOBAL_HideExpectedReleaseDate%%` | . |

                        | `%%GLOBAL_ExpectedReleaseDate%%` | . |

                        | `%%GLOBAL_label%%` | . |

                        | `%%GLOBAL_value%%` | . |

                        | `%%GLOBAL_ShipSuburb%%` | . |

                        | `%%GLOBAL_ShipState%%` | . |

                        | `%%GLOBAL_ShipZip%%` | . |

                        | `%%GLOBAL_ShipCountry%%` | . |

                        | `%%GLOBAL_ProductAvailability%%` | . |

                        | `%%GLOBAL_ProductFieldType%%` | . |

                        | `%%GLOBAL_FileTypes%%` | . |

                        | `%%GLOBAL_TransitTime%%` | . |

                        | `%%GLOBAL_ShippingPrice%%` | . |

                        | `%%GLOBAL_HideGiftWrapping%%` | . |

                        | `%%GLOBAL_ProviderId%%` | . |

                        | `%%GLOBAL_ShippingAddressId%%` | . |

                        | `%%GLOBAL_BaseCompareLink%%` | . |

                        | `%%GLOBAL_GiftWrappingId%%` | . |

                        | `%%GLOBAL_HideSectionPaging%%` | . |

                        | `%%GLOBAL_SectionPagingPrevious%%` | . |

                        | `%%GLOBAL_SectionPagingNext%%` | . |

                        | `%%GLOBAL_SectionPaging%%` | . |

                        | `%%GLOBAL_TrailBrandName%%` | . |

                        | `%%GLOBAL_LoginMessage%%` | . |

                        | `%%GLOBAL_ShippingMethod%%` | . |

                        | `%%GLOBAL_HideCaptcha%%` | . |

                        | `%%GLOBAL_HideOrderComments%%` | . |

                        | `%%GLOBAL_DisableReturnButton%%` | . |

                        | `%%GLOBAL_ShippingProvider%%` | . |

                        | `%%GLOBAL_HideCheckoutButton%%` | . |

                        | `%%GLOBAL_ShippingFormAction%%` | . |

                        | `%%GLOBAL_ShipCustomFields%%` | . |

                        | `%%GLOBAL_ShipToAddressChecked%%` | . |

                        | `%%GLOBAL_ShipAddressButtonText%%` | . |

                        | `%%GLOBAL_ShippingQuotes%%` | . |

                        | `%%GLOBAL_DeliveryDisclaimer%%` | . |

                        | `%%GLOBAL_totals%%` | . |

                        | `%%GLOBAL_HideCartOptions%%` | . |

                        | `%%GLOBAL_CommentsHTML%%` | . |

                        | `%%GLOBAL_AddThisLink%%` | . |

                        | `%%GLOBAL_TinyImageClickJavascript%%` | . |

                        | `%%GLOBAL_FeaturedVideo%%` | . |

                        | `%%GLOBAL_QuickViewProductURL%%` | . |

                        | `%%GLOBAL_ThumbImageURL%%` | . |

                        | `%%GLOBAL_ProductAttributeList%%` | . |

                        | `%%GLOBAL_DisplayAdd%%` | . |

                        | `%%GLOBAL_DisplayAddQty%%` | . |

                        | `%%GLOBAL_HideNormalMessage%%` | . |

                        | `%%GLOBAL_HideSuccessMessage%%` | . |

                        | `%%GLOBAL_WishListName%%` | . |

                        | `%%GLOBAL_DownloadsLink%%` | . |

                        | `%%GLOBAL_HideWrappingOptions%%` | . |

                        | `%%GLOBAL_ReturnId%%` | . |

                        | `%%GLOBAL_ReturnReason%%` | . |

                        | `%%GLOBAL_ReturnAction%%` | . |

                        | `%%GLOBAL_ReturnComments%%` | . |

                        | `%%GLOBAL_ShipFullName%%` | . |

                        | `%%GLOBAL_ShipCompany%%` | . |

                        | `%%GLOBAL_ShipPhone%%` | . |

                        | `%%GLOBAL_RecentPostUrl%%` | . |

                        | `%%GLOBAL_CatTrailName%%` | . |

                        | `%%GLOBAL_HideThumbColumn%%` | . |

                        | `%%GLOBAL_HideGiftMessagePreview%%` | . |

                        | `%%GLOBAL_GiftMessagePreview%%` | . |

                        | `%%GLOBAL_CustomFieldName%%` | . |

                        | `%%GLOBAL_CustomFieldValue%%` | . |

                        | `%%GLOBAL_ShippingQuoteId%%` | . |

                        | `%%GLOBAL_PageLink%%` | . |

                        | `%%GLOBAL_CartProductFields%%` | . |

                        | `%%GLOBAL_PaymentFieldPrefix%%` | . |

                        | `%%GLOBAL_FromURL%%` | . |

                        | `%%GLOBAL_AddressLine%%` | . |

                        | `%%GLOBAL_FeaturedCategoryName%%` | . |

                        | `%%GLOBAL_HideGiftWrapMessage%%` | . |

                        | `%%GLOBAL_PaymentMessage%%` | . |

                        | `%%GLOBAL_TagName%%` | . |

                        | `%%GLOBAL_PaymentMethod%%` | . |

                        | `%%GLOBAL_ProductSku%%` | . |

                        | `%%GLOBAL_ZoomImageMaxWidth%%` | . |

                        | `%%GLOBAL_ZoomImageMaxHeight%%` | . |

                        | `%%GLOBAL_SectionType%%` | . |

                        | `%%GLOBAL_SharingName%%` | . |

                        | `%%GLOBAL_SubBrandLink%%` | . |

                        | `%%GLOBAL_SubCatLink%%` | . |

                        | `%%GLOBAL_Amount%%` | . |

                        | `%%GLOBAL_TransactionType%%` | . |

                        | `%%GLOBAL_DateTime%%` | . |

                        | `%%GLOBAL_AuthorisationCode%%` | . |

                        | `%%GLOBAL_ResponseCode%%` | . |

                        | `%%GLOBAL_ResponseMessage%%` | . |

                        | `%%GLOBAL_MerchantURL%%` | . |

                        | `%%GLOBAL_CardholderName%%` | . |

                        | `%%GLOBAL_ReferenceNumber%%` | . |

                        | `%%GLOBAL_InvoiceNumber%%` | . |

                        | `%%GLOBAL_HideMessagesMenu%%` | . |

                        | `%%GLOBAL_HideReturnRequestsMenu%%` | . |

                        | `%%GLOBAL_ReturnInstructions%%` | . |

                        | `%%GLOBAL_AuthorizeNetHideCVV2%%` | . |

                        | `%%GLOBAL_BlogPageTitle%%` | . |

                        | `%%GLOBAL_CCTypes%%` | . |

                        | `%%GLOBAL_HideLoginMessage%%` | . |

                        | `%%GLOBAL_MessageClass%%` | . |

                        | `%%GLOBAL_EWayHideCardCode%%` | . |

                        | `%%GLOBAL_CreditCardErrorMessage%%` | . |

                        | `%%GLOBAL_CreditCardNum%%` | . |

                        | `%%GLOBAL_CreditCardHideCardCode%%` | . |

                        | `%%GLOBAL_MessageText%%` | . |

                        | `%%GLOBAL_NMIHideCVV2%%` | . |

                        | `%%GLOBAL_STYLE_PATH%%` | . |

                        | `%%GLOBAL_StoreAddressFormatted%%` | The address of
                        the store (as configured on the store settings page) |

                        | `%%GLOBAL_BillingPhone%%` | . |

                        | `%%GLOBAL_ShippingPhone%%` | . |

                        | `%%GLOBAL_HideShippingMethod%%` | . |

                        | `%%GLOBAL_DateShipped%%` | . |

                        | `%%GLOBAL_ProductsTable%%` | . |

                        | `%%GLOBAL_HideComments%%` | . |

                        | `%%GLOBAL_Comments%%` | . |

                        | `%%GLOBAL_PageContent%%` | . |

                        | `%%GLOBAL_HideFullName%%` | . |

                        | `%%GLOBAL_HideCompanyName%%` | . |

                        | `%%GLOBAL_HidePhone%%` | . |

                        | `%%GLOBAL_HideOrderNo%%` | . |

                        | `%%GLOBAL_HideRMANo%%` | . |

                        | `%%GLOBAL_PayflowProHideCVV2%%` | . |

                        | `%%GLOBAL_HideReviewEmail%%` | . |

                        | `%%GLOBAL_ProductReviewPaging%%` | . |

                        | `%%GLOBAL_ProdImageJavascript%%` | . |

                        | `%%GLOBAL_SearchTitle%%` | . |

                        | `%%GLOBAL_HideRelatedSearches%%` | . |

                        | `%%GLOBAL_ShowSearchSuggestion%%` | . |

                        | `%%GLOBAL_SuggestQueryEscaped%%` | . |

                        | `%%GLOBAL_SuggestQuery%%` | . |

                        | `%%GLOBAL_ShippingAddressFormTitle%%` | . |

                        | `%%GLOBAL_HideReturnForm%%` | . |

                        | `%%GLOBAL_OrderStatus%%` | . |

                        | `%%GLOBAL_AKBPath%%` | . |

                        | `%%GLOBAL_AddressFormFieldID%%` | . |

                        | `%%GLOBAL_HideShopByBrandPanel%%` | . |

                        | `%%GLOBAL_ListJS%%` | . |

                        | `%%GLOBAL_CompareOnSubmit%%` | . |

                        | `%%GLOBAL_CategoryProductListing%%` | . |

                        | `%%GLOBAL_HideErrors%%` | . |

                        | `%%GLOBAL_ShipAddressButtonText_JS%%` | . |

                        | `%%GLOBAL_CheckoutShippingIntro%%` | . |

                        | `%%GLOBAL_ItemList%%` | . |

                        | `%%GLOBAL_HideCheckoutError%%` | . |

                        | `%%GLOBAL_CheckoutErrorMsg%%` | . |

                        | `%%GLOBAL_HideCheckoutSuccess%%` | . |

                        | `%%GLOBAL_CheckoutSuccessMsg%%` | . |

                        | `%%GLOBAL_HideUseCoupon%%` | . |

                        | `%%GLOBAL_HidePaymentOptions%%` | . |

                        | `%%GLOBAL_CheckoutStoreCreditWarning%%` | . |

                        | `%%GLOBAL_StoreCredit%%` | . |

                        | `%%GLOBAL_Remaining%%` | . |

                        | `%%GLOBAL_HideRemainingStoreCredit%%` | . |

                        | `%%GLOBAL_RemainingCredit%%` | . |

                        | `%%GLOBAL_HideLimitedCreditPaymentOption%%` | . |

                        | `%%GLOBAL_StoreCreditPaymentProviders%%` | . |

                        | `%%GLOBAL_CheckoutWith%%` | . |

                        | `%%GLOBAL_HideCreditAltOptionList%%` | . |

                        | `%%GLOBAL_CreditAlt%%` | . |

                        | `%%GLOBAL_HidePaymentProviderList%%` | . |

                        | `%%GLOBAL_PaymentProviders%%` | . |

                        | `%%GLOBAL_HideOrderTermsAndConditions%%` | . |

                        | `%%GLOBAL_HideTermsAndConditionsTextarea%%` | . |

                        | `%%GLOBAL_OrderTermsAndConditions%%` | . |

                        | `%%GLOBAL_AgreeTermsAndConditions%%` | . |

                        | `%%GLOBAL_TermsAndConditionsLink%%` | . |

                        | `%%GLOBAL_NewsletterBoxIsTicked%%` | . |

                        | `%%GLOBAL_HideOrderCheckBox%%` | . |

                        | `%%GLOBAL_OrderBoxIsTicked%%` | . |

                        | `%%GLOBAL_PaymentButtonSwitch%%` | . |

                        | `%%GLOBAL_CreateAccountAccountFormFieldID%%` | . |

                        | `%%GLOBAL_StatusMessage%%` | . |

                        | `%%GLOBAL_QuickViewButtonText%%` | . |

                        | `%%GLOBAL_QuickViewButtonColor%%` | . |

                        | `%%GLOBAL_QuickViewGradientColor%%` | . |

                        | `%%GLOBAL_QuickViewTextColor%%` | . |

                        | `%%GLOBAL_FacetedSearchScriptPath%%` | . |

                        | `%%GLOBAL_DebugDetails%%` | . |

                        | `%%GLOBAL_DesignModeHTML%%` | . |

                        | `%%GLOBAL_QueryList%%` | . |

                        | `%%GLOBAL_DesignModeScriptTag%%` | . |

                        | `%%GLOBAL_LiveChatFooterCode%%` | . |

                        | `%%GLOBAL_FooterScripts%%` | . |

                        | `%%GLOBAL_HideForgotPasswordError%%` | . |

                        | `%%GLOBAL_MaintenanceNotice%%` | . |

                        | `%%GLOBAL_CartItems%%` | A textual string representing
                        the number of items in the cart (1 item, 2 items, etc.).
                        |

                        | `%%GLOBAL_HideSectionSeparator%%` | . |

                        | `%%GLOBAL_ProductThumbWidth%%` | . |

                        | `%%GLOBAL_ProductThumbHeight%%` | . |

                        | `%%GLOBAL_HideBrandLink%%` | . |

                        | `%%GLOBAL_HideRating%%` | . |

                        | `%%GLOBAL_Rating%%` | . |

                        | `%%GLOBAL_HidePrice%%` | . |

                        | `%%GLOBAL_RetailPrice%%` | . |

                        | `%%GLOBAL_IncludingExcludingTax%%` | . |

                        | `%%GLOBAL_YouSave%%` | . |

                        | `%%GLOBAL_VideoLength%%` | . |

                        | `%%GLOBAL_VideoDescriptionLong%%` | . |

                        | `%%GLOBAL_CartLink%%` | . |

                        | `%%GLOBAL_ProductOptionRequired%%` | . |

                        | `%%GLOBAL_FastCartButtonJs%%` | . |

                        | `%%GLOBAL_HideProductAttributeList%%` | . |

                        | `%%GLOBAL_AddToCartQty%%` | . |

                        | `%%GLOBAL_HideBulkDiscountLink%%` | . |

                        | `%%GLOBAL_BulkDiscountThickBoxRates%%` | . |

                        | `%%GLOBAL_ItemSoldOut%%` | . |

                        | `%%GLOBAL_OptionMessage%%` | . |

                        | `%%GLOBAL_ShowAddToCartQtyBox%%` | . |

                        | `%%GLOBAL_ProductMinMaxQtyJavascript%%` | . |

                        | `%%GLOBAL_EventDateJavascript%%` | . |

                        | `%%GLOBAL_AgreeChecked%%` | . |

                        | `%%GLOBAL_HideThemeSelect%%` | . |

                        | `%%GLOBAL_GiftCertificateMinimum%%` | . |

                        | `%%GLOBAL_GiftCertificateMaximum%%` | . |

                        | `%%GLOBAL_HideSearchPage%%` | . |

                        | `%%GLOBAL_ProductTabActive%%` | . |

                        | `%%GLOBAL_ProductTabUrl%%` | . |

                        | `%%GLOBAL_ContentTabActive%%` | . |

                        | `%%GLOBAL_ContentTabUrl%%` | . |

                        | `%%GLOBAL_ProductContainerDisplay%%` | . |

                        | `%%GLOBAL_ContentContainerDisplay%%` | . |

                        | `%%GLOBAL_SelectedSearchTab%%` | . |

                        | `%%GLOBAL_HideProductSearchOptions%%` | . |

                        | `%%GLOBAL_HideSearchResultsNoResult%%` | . |

                        | `%%GLOBAL_OriginalSearchQuery%%` | . |

                        | `%%GLOBAL_HideSideProductRecentlyViewedCompare%%` | .
                        |

                        | `%%GLOBAL_HideIfNoSubsection%%` | . |

                        | `%%GLOBAL_HideSuggestiveCartContent%%` | . |

                        | `%%GLOBAL_SuggestedProductListing%%` | . |

                        | `%%GLOBAL_HideAccountOptions%%` | . |

                        | `%%GLOBAL_DownloadLink%%` | . |

                        | `%%GLOBAL_ExpiryInfo%%` | . |

                        | `%%GLOBAL_AccountOrderItemList%%` | . |

                        | `%%GLOBAL_StrikeStart%%` | . |

                        | `%%GLOBAL_StrikeEnd%%` | . |

                        | `%%GLOBAL_Refunded%%` | . |

                        | `%%GLOBAL_HidePaymentInstructions%%` | . |

                        | `%%GLOBAL_ReturnStatus%%` | . |

                        | `%%GLOBAL_ShipAddressLines%%` | . |

                        | `%%GLOBAL_RecentPostTitle%%` | . |

                        | `%%GLOBAL_CatTrailLink%%` | . |

                        | `%%GLOBAL_CouponCode%%` | . |

                        | `%%GLOBAL_CouponDiscount%%` | . |

                        | `%%GLOBAL_GiftCertificateRemaining%%` | . |

                        | `%%GLOBAL_CertificateAmountUsed%%` | . |

                        | `%%GLOBAL_ProductImage%%` | . |

                        | `%%GLOBAL_ProductNameSpan%%` | . |

                        | `%%GLOBAL_ProductExpectedReleaseDate%%` | . |

                        | `%%GLOBAL_GiftCertificateName%%` | . |

                        | `%%GLOBAL_HideCartFileName%%` | . |

                        | `%%GLOBAL_ProductFieldFileValue%%` | . |

                        | `%%GLOBAL_HideDeleteFileLink%%` | . |

                        | `%%GLOBAL_HideFileHelp%%` | . |

                        | `%%GLOBAL_FileSize%%` | . |

                        | `%%GLOBAL_CurrentProductFile%%` | . |

                        | `%%GLOBAL_SelectOptions%%` | . |

                        | `%%GLOBAL_ShipperName%%` | . |

                        | `%%GLOBAL_TaxName%%` | . |

                        | `%%GLOBAL_TaxCost%%` | . |

                        | `%%GLOBAL_PageNumber%%` | . |

                        | `%%GLOBAL_ProductDescription%%` | . |

                        | `%%GLOBAL_AccountEmail%%` | . |

                        | `%%GLOBAL_ShipAddressLine1%%` | . |

                        | `%%GLOBAL_ShipAddressLine2%%` | . |

                        | `%%GLOBAL_HideChooseAddress%%` | . |

                        | `%%GLOBAL_UseAddressTitle%%` | . |

                        | `%%GLOBAL_FlyoutAttributes%%` | . |

                        | `%%GLOBAL_FlyoutChildHtml%%` | . |

                        | `%%GLOBAL_CurrencyName%%` | . |

                        | `%%GLOBAL_AddressFieldId%%` | . |

                        | `%%GLOBAL_PageName%%` | . |

                        | `%%GLOBAL_CurrentProductLink%%` | . |

                        | `%%GLOBAL_InitialZoomImage%%` | . |

                        | `%%GLOBAL_HideBillingEmail%%` | . |

                        | `%%GLOBAL_BillingEmail%%` | . |

                        | `%%GLOBAL_hideInvoiceShippingDetails%%` | . |

                        | `%%GLOBAL_HideShippingEmail%%` | . |

                        | `%%GLOBAL_ShippingEmail%%` | . |

                        | `%%GLOBAL_hideAddressColumn%%` | . |

                        | `%%GLOBAL_HideAttributes%%` | . |

                        | `%%GLOBAL_HideVariationOptions%%` | . |

                        | `%%GLOBAL_HideConfigurableFields%%` | . |

                        | `%%GLOBAL_ProductConfigurableFields%%` | . |

                        | `%%GLOBAL_ProductGiftWrapping%%` | . |

                        | `%%GLOBAL_HideEventDate%%` | . |

                        | `%%GLOBAL_ProductEventDate%%` | . |

                        | `%%GLOBAL_OptionChooseText%%` | . |

                        | `%%GLOBAL_ReviewStart%%` | . |

                        | `%%GLOBAL_ReviewLink%%` | . |

                        | `%%GLOBAL_FontSize%%` | . |

                        | `%%GLOBAL_TagLink%%` | . |

                        | `%%GLOBAL_TagProductCount%%` | . |

                        | `%%GLOBAL_ProductThumbIndex%%` | . |

                        | `%%GLOBAL_VariationName%%` | . |

                        | `%%GLOBAL_VariationNumber%%` | . |

                        | `%%GLOBAL_OptionId%%` | . |

                        | `%%GLOBAL_OptionValue%%` | . |

                        | `%%GLOBAL_NewsURL%%` | . |

                        | `%%GLOBAL_PageURL%%` | . |

                        | `%%GLOBAL_PageSmallContent%%` | . |

                        | `%%GLOBAL_SectionSearchResults%%` | . |

                        | `%%GLOBAL_RSSURL%%` | . |

                        | `%%GLOBAL_HideSplitWrappingOptions%%` | . |

                        | `%%GLOBAL_ShipperId%%` | . |

                        | `%%GLOBAL_CatId%%` | . |

                        | `%%GLOBAL_SocialMedia_Service_Name%%` | . |

                        | `%%GLOBAL_SubBrandName%%` | . |

                        | `%%GLOBAL_SubCatName%%` | . |

                        | `%%GLOBAL_ISOCode%%` | . |

                        | `%%GLOBAL_IssuerName%%` | . |

                        | `%%GLOBAL_IssuerConfirmation%%` | . |

                        | `%%GLOBAL_FirstName%%` | . |

                        | `%%GLOBAL_NewGuestAccountResetLink%%` | . |

                        | `%%GLOBAL_OrderStatusChangedHi%%` | . |

                        | `%%GLOBAL_OrderNumberStatusChangedTo%%` | . |

                        | `%%GLOBAL_DatePlaced%%` | . |

                        | `%%GLOBAL_AC_EmailFooterNote%%` | . |

                        | `%%GLOBAL_ProductUrl%%` | . |

                        | `%%GLOBAL_Contact%%` | . |

                        | `%%GLOBAL_DownloadTitle%%` | . |

                        | `%%GLOBAL_HideReturnInstructions%%` | . |

                        | `%%GLOBAL_HideAuthorizeNetError%%` | . |

                        | `%%GLOBAL_AuthorizeNetErrorMessage%%` | . |

                        | `%%GLOBAL_AuthorizeNetName%%` | . |

                        | `%%GLOBAL_AuthorizeNetNum%%` | . |

                        | `%%GLOBAL_AuthorizeNetMonths%%` | . |

                        | `%%GLOBAL_AuthorizeNetYears%%` | . |

                        | `%%GLOBAL_AuthorizeNetCCV2%%` | . |

                        | `%%GLOBAL_HideCCManualError%%` | . |

                        | `%%GLOBAL_CCErrorMessage%%` | . |

                        | `%%GLOBAL_CCName%%` | . |

                        | `%%GLOBAL_CCNum%%` | . |

                        | `%%GLOBAL_CCCVV2%%` | . |

                        | `%%GLOBAL_CCIssueNo%%` | . |

                        | `%%GLOBAL_CCMonths%%` | . |

                        | `%%GLOBAL_CCYears%%` | . |

                        | `%%GLOBAL_CCIssueDateMonths%%` | . |

                        | `%%GLOBAL_CCIssueDateYears%%` | . |

                        | `%%GLOBAL_HideCheckoutGuest%%` | . |

                        | `%%GLOBAL_HideCheckoutRegistrationRequired%%` | . |

                        | `%%GLOBAL_CustomCheckoutFormNewAccount%%` | . |

                        | `%%GLOBAL_CustomCheckoutFormBillingAddress%%` | . |

                        | `%%GLOBAL_CustomCheckoutFormShippingAddress%%` | . |

                        | `%%GLOBAL_ExpressCheckoutSignedIn%%` | . |

                        | `%%GLOBAL_ExpressCheckoutDigitalOrder%%` | . |

                        | `%%GLOBAL_GoToStep%%` | . |

                        | `%%GLOBAL_CollapsedStepClassAccountDetails%%` | . |

                        | `%%GLOBAL_ExpressCheckoutHideAccountDetails%%` | . |

                        | `%%GLOBAL_ExpressCheckoutStepAccountDetails%%` | . |

                        | `%%GLOBAL_HideGuestCheckoutOptions%%` | . |

                        | `%%GLOBAL_HideRegisteredCheckoutOptions%%` | . |

                        | `%%GLOBAL_CollapsedStepClassBillingAddress%%` | . |

                        | `%%GLOBAL_ExpressCheckoutStepBillingAddress%%` | . |

                        | `%%GLOBAL_CollapsedStepClassShippingAddress%%` | . |

                        | `%%GLOBAL_ExpressCheckoutHideShippingAddress%%` | . |

                        | `%%GLOBAL_ExpressCheckoutStepShippingAddress%%` | . |

                        | `%%GLOBAL_CollapsedStepClassShippingProvider%%` | . |

                        | `%%GLOBAL_ExpressCheckoutHideShippingProviders%%` | .
                        |

                        | `%%GLOBAL_ExpressCheckoutStepShippingProvider%%` | . |

                        | `%%GLOBAL_CollapsedStepClassConfirmation%%` | . |

                        | `%%GLOBAL_ExpressCheckoutStepConfirmation%%` | . |

                        | `%%GLOBAL_CollapsedStepClassPaymentDetails%%` | . |

                        | `%%GLOBAL_ExpressCheckoutHidePaymentDetails%%` | . |

                        | `%%GLOBAL_ExpressCheckoutStepPaymentDetails%%` | . |

                        | `%%GLOBAL_PaymentFormContent%%` | . |

                        | `%%GLOBAL_ContinueLink%%` | . |

                        | `%%GLOBAL_Continue%%` | . |

                        | `%%GLOBAL_BlogName%%` | . |

                        | `%%GLOBAL_ErrorDetails%%` | . |

                        | `%%GLOBAL_HideeSelectPlusDPError%%` | . |

                        | `%%GLOBAL_eSelectPlusDPErrorMessage%%` | . |

                        | `%%GLOBAL_eSelectPlusDPNum%%` | . |

                        | `%%GLOBAL_eSelectPlusDPMonths%%` | . |

                        | `%%GLOBAL_eSelectPlusDPYears%%` | . |

                        | `%%GLOBAL_eSelectPlusDPCCV2%%` | . |

                        | `%%GLOBAL_eSelectPlusDPCardHolderName%%` | . |

                        | `%%GLOBAL_eSelectPlusDPBillStNum%%` | . |

                        | `%%GLOBAL_eSelectPlusDPBillStName%%` | . |

                        | `%%GLOBAL_eSelectPlusDPBillZip%%` | . |

                        | `%%GLOBAL_HideEWayError%%` | . |

                        | `%%GLOBAL_EWayErrorMessage%%` | . |

                        | `%%GLOBAL_EWayName%%` | . |

                        | `%%GLOBAL_EWayMonths%%` | . |

                        | `%%GLOBAL_EWayYears%%` | . |

                        | `%%GLOBAL_EWayCardCode%%` | . |

                        | `%%GLOBAL_CreditCardName%%` | . |

                        | `%%GLOBAL_CreditCardIssueNo%%` | . |

                        | `%%GLOBAL_CreditCardIssueDateMonths%%` | . |

                        | `%%GLOBAL_CreditCardIssueDateYears%%` | . |

                        | `%%GLOBAL_CreditCardMonths%%` | . |

                        | `%%GLOBAL_CreditCardYears%%` | . |

                        | `%%GLOBAL_CreditCardCardCode%%` | . |

                        | `%%GLOBAL_AdditionalPaymentPageContents%%` | . |

                        | `%%GLOBAL_HideIdealError%%` | . |

                        | `%%GLOBAL_IdealErrorMessage%%` | . |

                        | `%%GLOBAL_IdealPaymentForm%%` | . |

                        | `%%GLOBAL_PrintInvoiceStylesheetPath%%` | . |

                        | `%%GLOBAL_PrintableInvoiceList%%` | . |

                        | `%%GLOBAL_PrintableInvoiceScript%%` | . |

                        | `%%GLOBAL_MaintenanceLogo%%` | . |

                        | `%%GLOBAL_MessageTitle%%` | . |

                        | `%%GLOBAL_HideNMIError%%` | . |

                        | `%%GLOBAL_NMIErrorMessage%%` | . |

                        | `%%GLOBAL_NMIName%%` | . |

                        | `%%GLOBAL_NMINum%%` | . |

                        | `%%GLOBAL_NMIMonths%%` | . |

                        | `%%GLOBAL_NMIYears%%` | . |

                        | `%%GLOBAL_NMICCV2%%` | . |

                        | `%%GLOBAL_HideError%%` | . |

                        | `%%GLOBAL_HidePaidOrderConfirmation%%` | . |

                        | `%%GLOBAL_HidePhysicalOrderConfirmation%%` | . |

                        | `%%GLOBAL_PhysicalOrderConfirmation%%` | . |

                        | `%%GLOBAL_HideDigitalOrderConfirmation%%` | . |

                        | `%%GLOBAL_DigitalOrderConfirmation%%` | . |

                        | `%%GLOBAL_HideDigitalOrderDownloadLink%%` | . |

                        | `%%GLOBAL_ViewFullOrderPath%%` | . |

                        | `%%GLOBAL_HideAwaitingPayment%%` | . |

                        | `%%GLOBAL_HideSuccess%%` | . |

                        | `%%GLOBAL_OrderConfirmationDetails%%` | . |

                        | `%%GLOBAL_ContinueShoppingOnStoreName%%` | . |

                        | `%%GLOBAL_ConversionCode%%` | . |

                        | `%%GLOBAL_PackingSlipTitle%%` | . |

                        | `%%GLOBAL_HideBillingPhone%%` | . |

                        | `%%GLOBAL_HideShippingPhone%%` | . |

                        | `%%GLOBAL_HideShippingDate%%` | . |

                        | `%%GLOBAL_HideTrackingNo%%` | . |

                        | `%%GLOBAL_TrackingNo%%` | . |

                        | `%%GLOBAL_HideFormError%%` | . |

                        | `%%GLOBAL_PageId%%` | . |

                        | `%%GLOBAL_ContactName%%` | . |

                        | `%%GLOBAL_ContactEmail%%` | . |

                        | `%%GLOBAL_ContactCompanyName%%` | . |

                        | `%%GLOBAL_ContactPhone%%` | . |

                        | `%%GLOBAL_ContactOrderNo%%` | . |

                        | `%%GLOBAL_ContactRMA%%` | . |

                        | `%%GLOBAL_ContactQuestion%%` | . |

                        | `%%GLOBAL_CaptchaImage%%` | . |

                        | `%%GLOBAL_ARSPanel%%` | . |

                        | `%%GLOBAL_HidePayflowProError%%` | . |

                        | `%%GLOBAL_PayflowProErrorMessage%%` | . |

                        | `%%GLOBAL_PayflowProName%%` | . |

                        | `%%GLOBAL_PayflowProNum%%` | . |

                        | `%%GLOBAL_PayflowProMonths%%` | . |

                        | `%%GLOBAL_PayflowProYears%%` | . |

                        | `%%GLOBAL_PayflowProCCV2%%` | . |

                        | `%%GLOBAL_ProductReviewFlashMessages%%` | . |

                        | `%%GLOBAL_throttleToken%%` | . |

                        | `%%GLOBAL_ReviewRating5%%` | . |

                        | `%%GLOBAL_ReviewRating4%%` | . |

                        | `%%GLOBAL_ReviewRating3%%` | . |

                        | `%%GLOBAL_ReviewRating2%%` | . |

                        | `%%GLOBAL_ReviewRating1%%` | . |

                        | `%%GLOBAL_RevTitle%%` | . |

                        | `%%GLOBAL_RevText%%` | . |

                        | `%%GLOBAL_HideNoReviewsMessage%%` | . |

                        | `%%GLOBAL_NoReviews%%` | . |

                        | `%%GLOBAL_ProductReviewList%%` | . |

                        | `%%GLOBAL_AutoShowReviewForm%%` | . |

                        | `%%GLOBAL_JumpToReviews%%` | . |

                        | `%%GLOBAL_popupCssPath%%` | . |

                        | `%%GLOBAL_jQueryPath%%` | . |

                        | `%%GLOBAL_CurrentImageIndex%%` | . |

                        | `%%GLOBAL_ProductMaxImageHeight%%` | . |

                        | `%%GLOBAL_ProductMaxImageWidth%%` | . |

                        | `%%GLOBAL_VariationImage%%` | . |

                        | `%%GLOBAL_RuleImage%%` | . |

                        | `%%GLOBAL_ProductTinyBoxHeight%%` | . |

                        | `%%GLOBAL_UnsubscribeTitle%%` | . |

                        | `%%GLOBAL_DownloadIntro%%` | . |

                        | `%%GLOBAL_HideMessageSuccess%%` | . |

                        | `%%GLOBAL_HideMessageError%%` | . |

                        | `%%GLOBAL_HideNoOrderMessage%%` | . |

                        | `%%GLOBAL_HideInbox%%` | . |

                        | `%%GLOBAL_HideInboxMessage%%` | . |

                        | `%%GLOBAL_AccountInboxIntro%%` | . |

                        | `%%GLOBAL_ReturnReasonsList%%` | . |

                        | `%%GLOBAL_ReturnActionsList%%` | . |

                        | `%%GLOBAL_HideOrderStatus%%` | . |

                        | `%%GLOBAL_HideSingleShippingAddress%%` | . |

                        | `%%GLOBAL_FlassMessage%%` | . |

                        | `%%GLOBAL_HideItemDetailsHeader%%` | . |

                        | `%%GLOBAL_OrderTotalRows%%` | . |

                        | `%%GLOBAL_ShowOrderActions%%` | . |

                        | `%%GLOBAL_LNG_OrderShipments%%` | . |

                        | `%%GLOBAL_HideOrderStatusList%%` | . |

                        | `%%GLOBAL_HideNoOrderStatusMessage%%` | . |

                        | `%%GLOBAL_HideOrderList%%` | . |

                        | `%%GLOBAL_HideNoOrdersMessage%%` | . |

                        | `%%GLOBAL_HideRecentItemList%%` | . |

                        | `%%GLOBAL_HideNoRecentItemsMessage%%` | . |

                        | `%%GLOBAL_HideNoReturnsMessage%%` | . |

                        | `%%GLOBAL_HideReturnsList%%` | . |

                        | `%%GLOBAL_CheckEmail%%` | . |

                        | `%%GLOBAL_BrandsMessage%%` | . |

                        | `%%GLOBAL_HideBrandProductListing%%` | . |

                        | `%%GLOBAL_BrandProductListing%%` | . |

                        | `%%GLOBAL_HideShoppingCartGrid%%` | . |

                        | `%%GLOBAL_CartItemTotal%%` | . |

                        | `%%GLOBAL_HideGiftWrappingTotal%%` | . |

                        | `%%GLOBAL_GiftWrappingTotal%%` | . |

                        | `%%GLOBAL_HideDiscountAmount%%` | . |

                        | `%%GLOBAL_DiscountAmount%%` | . |

                        | `%%GLOBAL_HideShoppingCartShippingEstimator%%` | . |

                        | `%%GLOBAL_ShippingCountryList%%` | . |

                        | `%%GLOBAL_ShippingHideStateList%%` | . |

                        | `%%GLOBAL_ShippingStateList%%` | . |

                        | `%%GLOBAL_ShippingHideStateBox%%` | . |

                        | `%%GLOBAL_AddressState%%` | . |

                        | `%%GLOBAL_ShippingZip%%` | . |

                        | `%%GLOBAL_HideShoppingCartShippingCost%%` | . |

                        | `%%GLOBAL_ShippingCost%%` | . |

                        | `%%GLOBAL_HideShoppingCartHandlingCost%%` | . |

                        | `%%GLOBAL_HandlingCost%%` | . |

                        | `%%GLOBAL_Taxes%%` | . |

                        | `%%GLOBAL_CartTotal%%` | . |

                        | `%%GLOBAL_InclusiveTaxes%%` | . |

                        | `%%GLOBAL_HideMultipleAddressShipping%%` | . |

                        | `%%GLOBAL_HideMultipleAddressShippingOr%%` | . |

                        | `%%GLOBAL_KeepShoppingLink%%` | . |

                        | `%%GLOBAL_KeepShoppingText%%` | . |

                        | `%%GLOBAL_HideShoppingCartEmptyMessage%%` | . |

                        | `%%GLOBAL_CartCheckoutButtonControlScript%%` | . |

                        | `%%GLOBAL_CartStatusMessage%%` | . |

                        | `%%GLOBAL_CatName%%` | . |

                        | `%%GLOBAL_CatDesc%%` | . |

                        | `%%GLOBAL_DisplayMode%%` | . |

                        | `%%GLOBAL_CompareButton%%` | . |

                        | `%%GLOBAL_HideTitle%%` | . |

                        | `%%GLOBAL_BalanceTitle%%` | . |

                        | `%%GLOBAL_HideGiftCertificateError%%` | . |

                        | `%%GLOBAL_HideIntro%%` | . |

                        | `%%GLOBAL_HideExampleImage%%` | . |

                        | `%%GLOBAL_HideShippingTabs%%` | . |

                        | `%%GLOBAL_ActiveTabSingle%%` | . |

                        | `%%GLOBAL_ActiveTabMultiple%%` | . |

                        | `%%GLOBAL_HideTabSingle%%` | . |

                        | `%%GLOBAL_HideTabMultiple%%` | . |

                        | `%%GLOBAL_CheckoutMultiShippingIntro%%` | . |

                        | `%%GLOBAL_HideShippingProviderList%%` | . |

                        | `%%GLOBAL_HideNoShippingProviders%%` | . |

                        | `%%GLOBAL_ShippingError%%` | . |

                        | `%%GLOBAL_ComparisonHeading%%` | . |

                        | `%%GLOBAL_HideTooManyProductsMessage%%` | . |

                        | `%%GLOBAL_TooManyProductsMessage%%` | . |

                        | `%%GLOBAL_NumCompareItems%%` | . |

                        | `%%GLOBAL_HideConfirmOrderPage%%` | . |

                        | `%%GLOBAL_HideShippingDetails%%` | . |

                        | `%%GLOBAL_CreateAccountHeading%%` | . |

                        | `%%GLOBAL_HideCreateAccountIntroMessage%%` | . |

                        | `%%GLOBAL_HideCreateAccountErrorMessage%%` | . |

                        | `%%GLOBAL_CreateAccountEmailPassword%%` | . |

                        | `%%GLOBAL_CreateAccountDetails%%` | . |

                        | `%%GLOBAL_CreateAccountButtonText%%` | . |

                        | `%%GLOBAL_CreateAccountShippingFormFieldID%%` | . |

                        | `%%GLOBAL_HideEditAccountIntroMessage%%` | . |

                        | `%%GLOBAL_HideEditAccountErrorMessage%%` | . |

                        | `%%GLOBAL_HideEditAccountSuccessMessage%%` | . |

                        | `%%GLOBAL_AccountCurrentEmail%%` | . |

                        | `%%GLOBAL_AccountFirstName%%` | . |

                        | `%%GLOBAL_AccountLastName%%` | . |

                        | `%%GLOBAL_AccountCompanyName%%` | . |

                        | `%%GLOBAL_AccountPhone%%` | . |

                        | `%%GLOBAL_AccountFields%%` | . |

                        | `%%GLOBAL_EditAccountAccountFormFieldID%%` | . |

                        | `%%GLOBAL%%` | . |

                        | `%%GLOBAL_FacetedSearchOptionsJSON%%` | . |

                        | `%%GLOBAL_QuickLinkText%%` | . |

                        | `%%GLOBAL_Year%%` | . |

                        | `%%GLOBAL_PoweredBy%%` | . |

                        | `%%GLOBAL_PinterestJS%%` | . |

                        | `%%GLOBAL_CustomerId%%` | . |

                        | `%%GLOBAL_ForgottenPasswordToken%%` | . |

                        | `%%GLOBAL_CustomerEmailAddress%%` | . |

                        | `%%GLOBAL_RemainingBalance%%` | . |

                        | `%%GLOBAL_AdditionalMetaTags%%` | . |

                        | `%%GLOBAL_HeadFonts%%` | . |

                        | `%%GLOBAL_Favicon%%` | . |

                        | `%%GLOBAL_Stylesheets%%` | . |

                        | `%%GLOBAL_HeadRSSLinks%%` | . |

                        | `%%GLOBAL_TrackingCode%%` | . |

                        | `%%GLOBAL_DesignModeStyleSheet%%` | . |

                        | `%%GLOBAL_HeaderImageStyle%%` | . |

                        | `%%GLOBAL_FastCart%%` | . |

                        | `%%GLOBAL_ShowCookieWarningMessage%%` | . |

                        | `%%GLOBAL_ProductThumbImageWidth%%` | . |

                        | `%%GLOBAL_ProductThumbImageHeight%%` | . |

                        | `%%GLOBAL_AdditionalScriptTags%%` | . |

                        | `%%GLOBAL_RTLStyles%%` | . |

                        | `%%GLOBAL_HideHomeFeaturedProductsPanel%%` | . |

                        | `%%GLOBAL_HideHomeNewProductsPanel%%` | . |

                        | `%%GLOBAL_HideHomeRecentBlogsPanel%%` | . |

                        | `%%GLOBAL_SwapFrequency%%` | . |

                        | `%%GLOBAL_IdealIssuerOptions%%` | . |

                        | `%%GLOBAL_NewAccountHeading%%` | . |

                        | `%%GLOBAL_HideNewCustomerButton%%` | . |

                        | `%%GLOBAL_HideLoginNewAccountIntro%%` | . |

                        | `%%GLOBAL_BlogPathNormal%%` | . |

                        | `%%GLOBAL_BlogTitle%%` | . |

                        | `%%GLOBAL_NewsDate%%` | . |

                        | `%%GLOBAL_NewsContent%%` | . |

                        | `%%GLOBAL_SubscriptionHeading%%` | . |

                        | `%%GLOBAL_Class%%` | . |

                        | `%%GLOBAL_SubscriptionMessage%%` | . |

                        | `%%GLOBAL_ShortName%%` | . |

                        | `%%GLOBAL_PostTitle%%` | . |

                        | `%%GLOBAL_PostAuthor%%` | . |

                        | `%%GLOBAL_PostISO8601DatePublished%%` | . |

                        | `%%GLOBAL_PostDatePublished%%` | . |

                        | `%%GLOBAL_PostBody%%` | . |

                        | `%%GLOBAL_HideBreadCrumbs%%` | . |

                        | `%%GLOBAL_BreadCrumbs%%` | . |

                        | `%%GLOBAL_FindByCategory%%` | . |

                        | `%%GLOBAL_ProductDesc%%` | . |

                        | `%%GLOBAL_productAttributesCssPath%%` | . |

                        | `%%GLOBAL_CurrentProdThumbImage%%` | . |

                        | `%%GLOBAL_ProductMaxZoomWidth%%` | . |

                        | `%%GLOBAL_ProductMaxZoomHeight%%` | . |

                        | `%%GLOBAL_ShowImageZoomer%%` | . |

                        | `%%GLOBAL_ProductDetailFlashMessages%%` | . |

                        | `%%GLOBAL_HideProductThumb%%` | . |

                        | `%%GLOBAL_LightBoxImageJavascript%%` | . |

                        | `%%GLOBAL_HideImageCarousel%%` | . |

                        | `%%GLOBAL_HideMorePicturesLink%%` | . |

                        | `%%GLOBAL_SeeMorePictures%%` | . |

                        | `%%GLOBAL_PinterestButton%%` | . |

                        | `%%GLOBAL_HideReviewLink%%` | . |

                        | `%%GLOBAL_ReviewLinkOnClick%%` | . |

                        | `%%GLOBAL_ReviewLinkText%%` | . |

                        | `%%GLOBAL_FacebookLikeButtonAbove%%` | . |

                        | `%%GLOBAL_FacebookLikeButtonBelow%%` | . |

                        | `%%GLOBAL_NavLinkDisplay%%` | . |

                        | `%%GLOBAL_DisablePrevLink%%` | . |

                        | `%%GLOBAL_DisableNextLink%%` | . |

                        | `%%GLOBAL_TotalImages%%` | . |

                        | `%%GLOBAL_HideCustomFields%%` | . |

                        | `%%GLOBAL_ProductTabsControlScript%%` | . |

                        | `%%GLOBAL_ProductImageMode%%` | . |

                        | `%%GLOBAL_HideSingleVideo%%` | . |

                        | `%%GLOBAL_HideVideoList%%` | . |

                        | `%%GLOBAL_ProductWarranty%%` | . |

                        | `%%GLOBAL_QuickViewShareLinks%%` | . |

                        | `%%GLOBAL_QuickViewFacebookLikeButton%%` | . |

                        | `%%GLOBAL_QuickViewProductName%%` | . |

                        | `%%GLOBAL_QuickViewReviews%%` | . |

                        | `%%GLOBAL_HideRRP%%` | . |

                        | `%%GLOBAL_CertificateTitle%%` | . |

                        | `%%GLOBAL_HideGiftCertificateForm%%` | . |

                        | `%%GLOBAL_CertificateTo%%` | . |

                        | `%%GLOBAL_CertificateToEmail%%` | . |

                        | `%%GLOBAL_CertificateFrom%%` | . |

                        | `%%GLOBAL_CertificateFromEmail%%` | . |

                        | `%%GLOBAL_CertificateMessage%%` | . |

                        | `%%GLOBAL_HideGiftCertificateAmountSelect%%` | . |

                        | `%%GLOBAL_GiftCertificateAmountSelect%%` | . |

                        | `%%GLOBAL_HideGiftCertificateCustomAmount%%` | . |

                        | `%%GLOBAL_CustomCertificateAmount%%` | . |

                        | `%%GLOBAL_GiftCertificateRange%%` | . |

                        | `%%GLOBAL_HideExpiryInfo%%` | . |

                        | `%%GLOBAL_GiftCertificateTerms%%` | . |

                        | `%%GLOBAL_GiftCertificateThemes%%` | . |

                        | `%%GLOBAL_SaveGiftCertificateButton%%` | . |

                        | `%%GLOBAL_GiftCertificatePreviewModalTitle%%` | . |

                        | `%%GLOBAL_CategoryOptions%%` | . |

                        | `%%GLOBAL_SelectedCategoryOptions%%` | . |

                        | `%%GLOBAL_AutoHideSearchForm%%` | . |

                        | `%%GLOBAL_HideAdvancedLink%%` | . |

                        | `%%GLOBAL_HideAdvancedOptions%%` | . |

                        | `%%GLOBAL_FormattedSearchQuery%%` | . |

                        | `%%GLOBAL_BrandNameOptions%%` | . |

                        | `%%GLOBAL_PriceFrom%%` | . |

                        | `%%GLOBAL_PriceTo%%` | . |

                        | `%%GLOBAL_HideSearchResults%%` | . |

                        | `%%GLOBAL_SearchResults%%` | . |

                        | `%%GLOBAL_HideSearchResultsContent%%` | . |

                        | `%%GLOBAL_SearchResultsContent%%` | . |

                        | `%%GLOBAL_HideSearchResultsCategoryAndBrand%%` | . |

                        | `%%GLOBAL_HideSearchResultsCategory%%` | . |

                        | `%%GLOBAL_SearchResultsCategory%%` | . |

                        | `%%GLOBAL_HideSearchResultsBrand%%` | . |

                        | `%%GLOBAL_SearchResultsBrand%%` | . |

                        | `%%GLOBAL_HideSearchResultsProduct%%` | . |

                        | `%%GLOBAL_SearchResultsProduct%%` | . |

                        | `%%GLOBAL_SnippetSearchResultsFeed%%` | . |

                        | `%%GLOBAL_FirstProductId%%` | . |

                        | `%%GLOBAL_SharingData%%` | . |

                        | `%%GLOBAL_HideChooseAnotherToShare%%` | . |

                        | `%%GLOBAL_HideAddShippingAddressIntroMessage%%` | . |

                        | `%%GLOBAL_ShippingAddressFormIntro%%` | . |

                        | `%%GLOBAL_HideAddShippingAddressMessage%%` | . |

                        | `%%GLOBAL_Message%%` | . |

                        | `%%GLOBAL_ShippingAddressFormAction%%` | . |

                        | `%%GLOBAL_ShipId%%` | . |

                        | `%%GLOBAL_NumNewMessages%%` | . |

                        | `%%GLOBAL_NumWishListItems%%` | . |

                        | `%%GLOBAL_HideStoreCredit%%` | . |

                        | `%%GLOBAL_StoreCreditAmount%%` | . |

                        | `%%GLOBAL_HideBrandTagCloudPanel%%` | . |

                        | `%%GLOBAL_HideSideCart%%` | . |

                        | `%%GLOBAL_SideCartItemCount%%` | . |

                        | `%%GLOBAL_SideCategoryListTypeClass%%` | . |

                        | `%%GLOBAL_HideSideCategoryNewProductsPanel%%` | . |

                        | `%%GLOBAL_HideSideCategoryPopularProductsPanel%%` | .
                        |

                        | `%%GLOBAL_HideSideCategoryShopByPricePanel%%` | . |

                        | `%%GLOBAL_HideSideCategoryTopSellersPanel%%` | . |

                        | `%%GLOBAL_SideLiveChatCode%%` | . |

                        | `%%GLOBAL_HideSideNewProductsPanel%%` | . |

                        | `%%GLOBAL_NewsletterBoxControlScript%%` | . |

                        | `%%GLOBAL_HideSidePopularProductsPanel%%` | . |

                        | `%%GLOBAL_WishLists%%` | . |

                        | `%%GLOBAL_AlsoBoughtProductListing%%` | . |

                        | `%%GLOBAL_HideRecentlyViewedProductsPanel%%` | . |

                        | `%%GLOBAL_HideRelatedProductsPanel%%` | . |

                        | `%%GLOBAL_HideSideShopByBrandFullPanel%%` | . |

                        | `%%GLOBAL_HideSubPagesList%%` | . |

                        | `%%GLOBAL_PageLinks%%` | . |

                        | `%%GLOBAL_HideSideTopSellersPanel%%` | . |

                        | `%%GLOBAL_HideIfSubsection%%` | . |

                        | `%%GLOBAL_SitemapLink%%` | . |

                        | `%%GLOBAL_SitemapSubsectionTrail%%` | . |

                        | `%%GLOBAL_ShowNewsFeed%%` | . |

                        | `%%GLOBAL_ShowNewProductsFeed%%` | . |

                        | `%%GLOBAL_ShowPopularProductsFeed%%` | . |

                        | `%%GLOBAL_ShowFeaturedProductsFeed%%` | . |

                        | `%%GLOBAL_ShowSearchFeed%%` | . |

                        | `%%GLOBAL_TaggedProducts%%` | . |

                        | `%%GLOBAL_TagProductListing%%` | . |

                        | `%%GLOBAL_ShowStorePhoneNumber%%` | . |

                        | `%%GLOBAL_StorePhoneNumber%%` | . |

                        | `%%GLOBAL_LiveChatCodeEnabled%%` | . |

                        | `%%GLOBAL_LiveChatCode%%` | . |

                        | `%%GLOBAL_LoginOrLogoutText%%` | . |

                        | `%%GLOBAL_HideWishListAddFrom%%` | . |

                        | `%%GLOBAL_WishListAction%%` | . |

                        | `%%GLOBAL_SelectPublic%%` | . |

                        | `%%GLOBAL_HideWishListItems%%` | . |

                        | `%%GLOBAL_HideShareWishList%%` | . |

                        | `%%GLOBAL_ShareWishListClass%%` | . |

                        | `%%GLOBAL_ShareWishListIntro%%` | . |

                        | `%%GLOBAL_PublicWishListUrl%%` | . |

                        | `%%GLOBAL_HideWishLists%%` | . |

                        | `%%GLOBAL_HideWishListsTable%%` | . |

                        | `%%GLOBAL_DownloadName%%` | . |

                        | `%%GLOBAL_DisplayDownloadLink%%` | . |

                        | `%%GLOBAL_DownloadSize%%` | . |

                        | `%%GLOBAL_DownloadColor%%` | . |

                        | `%%GLOBAL_DisplayDownloadExpired%%` | . |

                        | `%%GLOBAL_DownloadDescription%%` | . |

                        | `%%GLOBAL_MessageSubject%%` | . |

                        | `%%GLOBAL_MessageDate%%` | . |

                        | `%%GLOBAL_Icon%%` | . |

                        | `%%GLOBAL_Sender%%` | . |

                        | `%%GLOBAL_MessageContent%%` | . |

                        | `%%GLOBAL_OrderItemMessage%%` | . |

                        | `%%GLOBAL_ProductQtySelect%%` | . |

                        | `%%GLOBAL_DisableViewButton%%` | . |

                        | `%%GLOBAL_DownloadItemEncrypted%%` | . |

                        | `%%GLOBAL_ItemQty%%` | . |

                        | `%%GLOBAL_ItemName%%` | . |

                        | `%%GLOBAL_ItemShippingRow%%` | . |

                        | `%%GLOBAL_DisableReorder%%` | . |

                        | `%%GLOBAL_Qty%%` | . |

                        | `%%GLOBAL_Link%%` | . |

                        | `%%GLOBAL_Target%%` | . |

                        | `%%GLOBAL_Name%%` | . |

                        | `%%GLOBAL_HideItemMessage%%` | . |

                        | `%%GLOBAL_ReorderMessage%%` | . |

                        | `%%GLOBAL_Price%%` | . |

                        | `%%GLOBAL_ItemShippingRow_AddressLine%%` | . |

                        | `%%GLOBAL_TrackingLink%%` | . |

                        | `%%GLOBAL_OrderInstructions%%` | . |

                        | `%%GLOBAL_ReturnedQuantity%%` | . |

                        | `%%GLOBAL_ReturnedProduct%%` | . |

                        | `%%GLOBAL_ReturnedProductOptions%%` | . |

                        | `%%GLOBAL_DateRequested%%` | . |

                        | `%%GLOBAL_HideReturnComment%%` | . |

                        | `%%GLOBAL_AddThisServiceButtonMeta%%` | . |

                        | `%%GLOBAL_AddThisServiceButtons%%` | . |

                        | `%%GLOBAL_Thumbnail%%` | . |

                        | `%%GLOBAL_RecentPostSummary%%` | . |

                        | `%%GLOBAL_NumProducts%%` | . |

                        | `%%GLOBAL_TagSize%%` | . |

                        | `%%GLOBAL_ChooseBrandFromList%%` | . |

                        | `%%GLOBAL_CouponId%%` | . |

                        | `%%GLOBAL_MASTER_THEME_PATH%%` | . |

                        | `%%GLOBAL_CustomizeProductTitle%%` | . |

                        | `%%GLOBAL_GiftCertificateId%%` | . |

                        | `%%GLOBAL_HideGiftWrappingAdd%%` | . |

                        | `%%GLOBAL_HideGiftWrappingEdit%%` | . |

                        | `%%GLOBAL_CartItemQty%%` | . |

                        | `%%GLOBAL_HideCartItemRemove%%` | . |

                        | `%%GLOBAL_QtySelectStyle%%` | . |

                        | `%%GLOBAL_Quantity1%%` | . |

                        | `%%GLOBAL_Quantity2%%` | . |

                        | `%%GLOBAL_Quantity3%%` | . |

                        | `%%GLOBAL_Quantity4%%` | . |

                        | `%%GLOBAL_Quantity5%%` | . |

                        | `%%GLOBAL_Quantity6%%` | . |

                        | `%%GLOBAL_Quantity7%%` | . |

                        | `%%GLOBAL_Quantity8%%` | . |

                        | `%%GLOBAL_Quantity9%%` | . |

                        | `%%GLOBAL_Quantity10%%` | . |

                        | `%%GLOBAL_Quantity11%%` | . |

                        | `%%GLOBAL_Quantity12%%` | . |

                        | `%%GLOBAL_Quantity13%%` | . |

                        | `%%GLOBAL_Quantity14%%` | . |

                        | `%%GLOBAL_Quantity15%%` | . |

                        | `%%GLOBAL_Quantity16%%` | . |

                        | `%%GLOBAL_Quantity17%%` | . |

                        | `%%GLOBAL_Quantity18%%` | . |

                        | `%%GLOBAL_Quantity19%%` | . |

                        | `%%GLOBAL_Quantity20%%` | . |

                        | `%%GLOBAL_Quantity21%%` | . |

                        | `%%GLOBAL_Quantity22%%` | . |

                        | `%%GLOBAL_Quantity23%%` | . |

                        | `%%GLOBAL_Quantity24%%` | . |

                        | `%%GLOBAL_Quantity25%%` | . |

                        | `%%GLOBAL_Quantity26%%` | . |

                        | `%%GLOBAL_Quantity27%%` | . |

                        | `%%GLOBAL_Quantity28%%` | . |

                        | `%%GLOBAL_Quantity29%%` | . |

                        | `%%GLOBAL_Quantity30%%` | . |

                        | `%%GLOBAL_QtyOptionSelected%%` | . |

                        | `%%GLOBAL_ProductAttributeName%%` | . |

                        | `%%GLOBAL_ProductAttributeValue%%` | . |

                        | `%%GLOBAL_NextLink%%` | . |

                        | `%%GLOBAL_PrevLink%%` | . |

                        | `%%GLOBAL_URL%%` | . |

                        | `%%GLOBAL_HiddenSortField%%` | . |

                        | `%%GLOBAL_SortFeaturedSelected%%` | . |

                        | `%%GLOBAL_SortNewestSelected%%` | . |

                        | `%%GLOBAL_SortBestSellingSelected%%` | . |

                        | `%%GLOBAL_SortAlphaAsc%%` | . |

                        | `%%GLOBAL_SortAlphaDesc%%` | . |

                        | `%%GLOBAL_SortAvgReview%%` | . |

                        | `%%GLOBAL_SortPriceAsc%%` | . |

                        | `%%GLOBAL_SortPriceDesc%%` | . |

                        | `%%GLOBAL_HideCartProductFields%%` | . |

                        | `%%GLOBAL_MailFormatPreferenceOptions%%` | . |

                        | `%%GLOBAL_ProviderChecked%%` | . |

                        | `%%GLOBAL_ProviderType%%` | . |

                        | `%%GLOBAL_ProviderPaymentFormClass%%` | . |

                        | `%%GLOBAL_ProviderName%%` | . |

                        | `%%GLOBAL_HideAddressButton%%` | . |

                        | `%%GLOBAL_CompareWidth%%` | . |

                        | `%%GLOBAL_RemoveCompareLink%%` | . |

                        | `%%GLOBAL_HideComparisonReviewLink%%` | . |

                        | `%%GLOBAL_NumReviews%%` | . |

                        | `%%GLOBAL_ProductSummary%%` | . |

                        | `%%GLOBAL_CustomFields%%` | . |

                        | `%%GLOBAL_ProductBrand%%` | . |

                        | `%%GLOBAL_CompareHeadWidth%%` | . |

                        | `%%GLOBAL_HideProductPrice%%` | . |

                        | `%%GLOBAL_PrivacyCookieNotification%%` | . |

                        | `%%GLOBAL_ProductAttributesJavascript%%` | . |

                        | `%%GLOBAL_DesignModeCurrentTemplate%%` | . |

                        | `%%GLOBAL_DesignModeUpdateUrl%%` | . |

                        | `%%GLOBAL_ShippingQuoteRow%%` | . |

                        | `%%GLOBAL_EventDateNameRequired%%` | . |

                        | `%%GLOBAL_EventDateName%%` | . |

                        | `%%GLOBAL_EventDateLimitations%%` | . |

                        | `%%GLOBAL_EventDateMonthStyle%%` | . |

                        | `%%GLOBAL_OverviewToMonths%%` | . |

                        | `%%GLOBAL_EventDateDayStyle%%` | . |

                        | `%%GLOBAL_OverviewToDays%%` | . |

                        | `%%GLOBAL_EventDateYearStyle%%` | . |

                        | `%%GLOBAL_OverviewToYears%%` | . |

                        | `%%GLOBAL_AddressSelected%%` | . |

                        | `%%GLOBAL_UseExistingAddress%%` | . |

                        | `%%GLOBAL_AddressList%%` | . |

                        | `%%GLOBAL_AddNewAddress%%` | . |

                        | `%%GLOBAL_HideCreateAddress%%` | . |

                        | `%%GLOBAL_CompiledFormFields%%` | . |

                        | `%%GLOBAL_HideSaveAddress%%` | . |

                        | `%%GLOBAL_SaveAddressChecked%%` | . |

                        | `%%GLOBAL_CompiledFormFieldJavascript%%` | . |

                        | `%%GLOBAL_AdjustedTotalCost%%` | . |

                        | `%%GLOBAL_HideButtomPaymentButton%%` | . |

                        | `%%GLOBAL_ExpressCheckoutLoadPaymentForm%%` | . |

                        | `%%GLOBAL_FrameWidth%%` | . |

                        | `%%GLOBAL_FacebookButtonHref%%` | . |

                        | `%%GLOBAL_fastCartProdImg%%` | . |

                        | `%%GLOBAL_fastCartQuantityTxt%%` | . |

                        | `%%GLOBAL_fastCartProdLink%%` | . |

                        | `%%GLOBAL_fastCartQuantity%%` | . |

                        | `%%GLOBAL_fastCartProdTotal%%` | . |

                        | `%%GLOBAL_fastCartSubtotal%%` | . |

                        | `%%GLOBAL_fastCartNumItemsTxt%%` | . |

                        | `%%GLOBAL_FeaturedCategoryTextColourClass%%` | . |

                        | `%%GLOBAL_FeaturedCategoryRootName%%` | . |

                        | `%%GLOBAL_FeaturedCategoryUrl%%` | . |

                        | `%%GLOBAL_FeaturedCategoryImage%%` | . |

                        | `%%GLOBAL_FeaturedCategoryImageStyle%%` | . |

                        | `%%GLOBAL_FlyoutNodeUrl%%` | . |

                        | `%%GLOBAL_FlyoutNodeLabel%%` | . |

                        | `%%GLOBAL_HideWrappingTitle%%` | . |

                        | `%%GLOBAL_ExtraClass%%` | . |

                        | `%%GLOBAL_WrappingOptions%%` | . |

                        | `%%GLOBAL_GiftWrapPreviewLinks%%` | . |

                        | `%%GLOBAL_GiftWrapMessage%%` | . |

                        | `%%GLOBAL_HideWrappingSeparator%%` | . |

                        | `%%GLOBAL_CurrencyID%%` | . |

                        | `%%GLOBAL_CurrencyFlagURL%%` | . |

                        | `%%GLOBAL_CurrencyClass%%` | . |

                        | `%%GLOBAL_CustomerPhone%%` | . |

                        | `%%GLOBAL_TotalCost%%` | . |

                        | `%%GLOBAL_CdnStorePath%%` | . |

                        | `%%GLOBAL_ImageDirectory%%` | The name of the product
                        images directory. |

                        | `%%GLOBAL_StoreLogo%%` | The store logo (image or text
                        logo) |

                        | `%%GLOBAL_LogoText%%` | . |

                        | `%%GLOBAL_MsgBox_Type%%` | . |

                        | `%%GLOBAL_MsgBox_Message%%` | . |

                        | `%%GLOBAL_MobileSiteURL%%` | . |

                        | `%%GLOBAL_ShippingAddressSelect%%` | . |

                        | `%%GLOBAL_HasSubMenuClass%%` | . |

                        | `%%GLOBAL_ActivePageClass%%` | . |

                        | `%%GLOBAL_SubMenu%%` | . |

                        | `%%GLOBAL_SubMenuLinks%%` | . |

                        | `%%GLOBAL_RSSLink%%` | . |

                        | `%%GLOBAL_RSSTitle%%` | . |

                        | `%%GLOBAL_RSSDescription%%` | . |

                        | `%%GLOBAL_sPageLink%%` | . |

                        | `%%GLOBAL_sPageName%%` | . |

                        | `%%GLOBAL_PinterestButtonDescription%%` | . |

                        | `%%GLOBAL_TagUrl%%` | . |

                        | `%%GLOBAL_InvoiceTitle%%` | . |

                        | `%%GLOBAL_invoiceItemClass%%` | . |

                        | `%%GLOBAL_addressColumnRowSpan%%` | . |

                        | `%%GLOBAL_productShippingAddress%%` | . |

                        | `%%GLOBAL_HidePreOrder%%` | . |

                        | `%%GLOBAL_ProductPreOrder%%` | . |

                        | `%%GLOBAL_ProductCost%%` | . |

                        | `%%GLOBAL_ProductTotalCost%%` | . |

                        | `%%GLOBAL_FieldName%%` | . |

                        | `%%GLOBAL_SKUValue%%` | . |

                        | `%%GLOBAL_FieldValue%%` | . |

                        | `%%GLOBAL_classNameAppend%%` | . |

                        | `%%GLOBAL_totalRowColspan%%` | . |

                        | `%%GLOBAL_ProductBinNumber%%` | . |

                        | `%%GLOBAL_AddToCartButtonControlScript%%` | . |

                        | `%%GLOBAL_HideSKU%%` | . |

                        | `%%GLOBAL_SKU%%` | . |

                        | `%%GLOBAL_HideCondition%%` | . |

                        | `%%GLOBAL_ProductCondition%%` | . |

                        | `%%GLOBAL_HideWeight%%` | . |

                        | `%%GLOBAL_ProductWeight%%` | . |

                        | `%%GLOBAL_HideAvailability%%` | . |

                        | `%%GLOBAL_Availability%%` | . |

                        | `%%GLOBAL_HideShipping%%` | . |

                        | `%%GLOBAL_HideMinQty%%` | . |

                        | `%%GLOBAL_MinQty%%` | . |

                        | `%%GLOBAL_HideMaxQty%%` | . |

                        | `%%GLOBAL_MaxQty%%` | . |

                        | `%%GLOBAL_HideCurrentStock%%` | . |

                        | `%%GLOBAL_CurrentStockLabel%%` | . |

                        | `%%GLOBAL_InventoryList%%` | . |

                        | `%%GLOBAL_GiftWrappingAvailable%%` | . |

                        | `%%GLOBAL_ProductBulkDiscountThickBox%%` | . |

                        | `%%GLOBAL_BreadcrumbItems%%` | . |

                        | `%%GLOBAL_BulkDiscountThickBoxTitle%%` | . |

                        | `%%GLOBAL_ReleaseDate%%` | . |

                        | `%%GLOBAL_CheckboxFieldNameLeft%%` | . |

                        | `%%GLOBAL_CheckboxFieldNameRight%%` | . |

                        | `%%GLOBAL_FindByCategoryItems%%` | . |

                        | `%%GLOBAL_ProdImageZoomJavascript%%` | . |

                        | `%%GLOBAL_LightBoxImageList%%` | . |

                        | `%%GLOBAL_ProductTinyBoxWidth%%` | . |

                        | `%%GLOBAL_VisibleImageTotal%%` | . |

                        | `%%GLOBAL_ReviewError%%` | . |

                        | `%%GLOBAL_AlternateReviewClass%%` | . |

                        | `%%GLOBAL_ReviewTitle%%` | . |

                        | `%%GLOBAL_ReviewRating%%` | . |

                        | `%%GLOBAL_ReviewName%%` | . |

                        | `%%GLOBAL_ReviewDate%%` | . |

                        | `%%GLOBAL_ReviewText%%` | . |

                        | `%%GLOBAL_ProductReviews%%` | . |

                        | `%%GLOBAL_PrevRevLink%%` | . |

                        | `%%GLOBAL_ReviewEnd%%` | . |

                        | `%%GLOBAL_ProductNumReviews%%` | . |

                        | `%%GLOBAL_NextRevLink%%` | . |

                        | `%%GLOBAL_TinyImageOverJavascript%%` | . |

                        | `%%GLOBAL_ProductThumbImageURL%%` | . |

                        | `%%GLOBAL_ProductZoomImageURL%%` | . |

                        | `%%GLOBAL_ProductTinyImageURL%%` | . |

                        | `%%GLOBAL_VariationChooseText%%` | . |

                        | `%%GLOBAL_OptionChecked%%` | . |

                        | `%%GLOBAL_BlogLink%%` | . |

                        | `%%GLOBAL_BlogText%%` | . |

                        | `%%GLOBAL_BlogPreview%%` | . |

                        | `%%GLOBAL_RelatedSearchQuery%%` | . |

                        | `%%GLOBAL_RelatedSearchText%%` | . |

                        | `%%GLOBAL_ProductNoImageClassName%%` | . |

                        | `%%GLOBAL_ProductRatingImage%%` | . |

                        | `%%GLOBAL_HideSectionSorting%%` | . |

                        | `%%GLOBAL_SectionSortingOptions%%` | . |

                        | `%%GLOBAL_SectionExtraClass%%` | . |

                        | `%%GLOBAL_SectionResults%%` | . |

                        | `%%GLOBAL_NewsSmallContent%%` | . |

                        | `%%GLOBAL_GiftWrappingTitle%%` | . |

                        | `%%GLOBAL_GiftWrapModalClass%%` | . |

                        | `%%GLOBAL_ShippingData%%` | . |

                        | `%%GLOBAL_HideAddressLine%%` | . |

                        | `%%GLOBAL_HideItemList%%` | . |

                        | `%%GLOBAL_ShippingProviders%%` | . |

                        | `%%GLOBAL_HideHorizontalRule%%` | . |

                        | `%%GLOBAL_PriceLink%%` | . |

                        | `%%GLOBAL_PriceLow%%` | . |

                        | `%%GLOBAL_PriceHigh%%` | . |

                        | `%%GLOBAL_LastChildClass%%` | . |

                        | `%%GLOBAL_CategoryLink%%` | . |

                        | `%%GLOBAL_CategoryName%%` | . |

                        | `%%GLOBAL_SubCategoryList%%` | . |

                        | `%%GLOBAL_CurrencyFlagStyle%%` | . |

                        | `%%GLOBAL_CurrencySwitchLink%%` | . |

                        | `%%GLOBAL_CurrencySelected%%` | . |

                        | `%%GLOBAL_CurrencyFlag%%` | . |

                        | `%%GLOBAL_RootCatName%%` | . |

                        | `%%GLOBAL_RootCatList%%` | . |

                        | `%%GLOBAL_ProductRatingImageDimensions%%` | . |

                        | `%%GLOBAL_SitemapURL_HTML%%` | . |

                        | `%%GLOBAL_ModelType%%` | . |

                        | `%%GLOBAL_ModelHeading%%` | . |

                        | `%%GLOBAL_ModelBody%%` | . |

                        | `%%GLOBAL_ModelHideAllLink%%` | . |

                        | `%%GLOBAL_ModelSubsectionURL%%` | . |

                        | `%%GLOBAL_Slide_Link_Url%%` | . |

                        | `%%GLOBAL_Slide_Heading_Color%%` | . |

                        | `%%GLOBAL_Slide_Heading_Text%%` | . |

                        | `%%GLOBAL_Slide_Text_Color%%` | . |

                        | `%%GLOBAL_Slide_Text_Text%%` | . |

                        | `%%GLOBAL_Slide_Button_Hide%%` | . |

                        | `%%GLOBAL_Slide_Button_Color%%` | . |

                        | `%%GLOBAL_Slide_Button_Text%%` | . |

                        | `%%GLOBAL_Slide_Image_Url%%` | . |

                        | `%%GLOBAL_Slide_Image_AlternateText%%` | . |

                        | `%%GLOBAL_SocialMedia_Service_Url%%` | . |

                        | `%%GLOBAL_UseThemeSettingsClass%%` | . |

                        | `%%GLOBAL_SocialMedia_Service_Class%%` | . |

                        | `%%GLOBAL_SharingActiveTab%%` | . |

                        | `%%GLOBAL_SharingIcon%%` | . |

                        | `%%GLOBAL_SharingDisplay%%` | . |

                        | `%%GLOBAL_SubBrandImage%%` | . |

                        | `%%GLOBAL_SubCatImage%%` | . |

                        | `%%GLOBAL_VideoTitleShort%%` | . |

                        | `%%GLOBAL_VideoDescriptionShort%%` | . |

                        | `%%GLOBAL_NumOfItems%%` | . |

                        | `%%GLOBAL_WishListShared%%` | . |

                        | `%%GLOBAL_ShareWishListLink%%` | . |

                        | `%%GLOBAL_HideRemoveItemButton%%` | . |

                        | `%%GLOBAL_MerchantName%%` | . |

                        | `%%GLOBAL_AC_EmailBody%%` | . |

                        | `%%GLOBAL_AC_UnsubscribeLink%%` | . |

                        | `%%GLOBAL_Email%%` | . |

                        | `%%GLOBAL_Password%%` | . |

                        | `%%GLOBAL_Ebay_Listing_Abort_Email_Message_1%%` | . |

                        | `%%GLOBAL_Ebay_Listing_Abort_Email_Message_2%%` | . |

                        | `%%GLOBAL_Ebay_Listing_Error_Email_Message_1%%` | . |

                        | `%%GLOBAL_Ebay_Listing_Error_Email_Error_Heading%%` |
                        . |

                        | `%%GLOBAL_Ebay_Listing_Error_Email_Error%%` | . |

                        | `%%GLOBAL_Ebay_Listing_Error_Email_Error_Footer%%` | .
                        |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Message_1%%` | . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Message_2%%` | . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Message_3%%` | . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Message_4%%` | . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Errors_Heading%%` | .
                        |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Errors%%` | . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Warnings_Heading%%` |
                        . |

                        | `%%GLOBAL_Ebay_Listing_End_Email_Warnings%%` | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_Abort_Email_Message_1%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_Abort_Email_Message_2%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_Error_Email_Message_1%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_Error_Email_Error_Heading%%`
                        | . |

                        | `%%GLOBAL_EmailIntegration_Export_Error_Email_Error%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_Error_Email_Error_Footer%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_End_Email_Message_1%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_End_Email_Message_2%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_End_Email_Message_3%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_End_Email_Message_4%%`
                        | . |

                        |
                        `%%GLOBAL_EmailIntegration_Export_End_Email_Errors_Heading%%`
                        | . |

                        | `%%GLOBAL_EmailIntegration_Export_End_Email_Errors%%`
                        | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Header%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Error%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Message%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Time%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Details%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Type%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Subscription%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_CommonCauses%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause1_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause1_Detail%%` | .
                        |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause2_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause2_Detail%%` | .
                        |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause3_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause3_Detail%%` | .
                        |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause4_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause4_Detail%%` | .
                        |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause5_Intro%%` | . |

                        | `%%GLOBAL_EmailIntegrationNotice_Cause5_Detail%%` | .
                        |

                        | `%%GLOBAL_EmailIntegrationNotice_Closing%%` | . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_1%%` |
                        . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_2%%` |
                        . |

                        |
                        `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_Lists%%`
                        | . |

                        | `%%GLOBAL_DeletedLists%%` | . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_3%%` |
                        . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_4%%` |
                        . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_1%%` | .
                        |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_2%%` | .
                        |

                        |
                        `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_MergeFields%%`
                        | . |

                        | `%%GLOBAL_MergeFieldsList%%` | . |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_3%%` | .
                        |

                        | `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_4%%` | .
                        |

                        | `%%GLOBAL_EmailMessage%%` | . |

                        | `%%GLOBAL_ToName%%` | . |

                        | `%%GLOBAL_Intro%%` | . |

                        | `%%GLOBAL_NoPaymentTaken%%` | . |

                        | `%%GLOBAL_OrderNumber%%` | . |

                        | `%%GLOBAL_ViewOrderStatusMsg%%` | . |

                        | `%%GLOBAL_PendingPaymentNotice%%` | . |

                        | `%%GLOBAL_PendingPaymentDetails%%` | . |

                        | `%%GLOBAL_OrderCommentBlock%%` | . |

                        | `%%GLOBAL_CartItemColumns%%` | . |

                        | `%%GLOBAL_LowInventoryWarning%%` | . |

                        | `%%GLOBAL_LowInventoryWarningIntro%%` | . |

                        | `%%GLOBAL_LowInventoryWarningProduct%%` | . |

                        | `%%GLOBAL_LowInventoryWarningCurrentStock%%` | . |

                        | `%%GLOBAL_LowInventoryWarningNotice%%` | . |

                        | `%%GLOBAL_TrackingLinkList%%` | . |

                        | `%%GLOBAL_ViewOrderStatusLink%%` | . |

                        | `%%GLOBAL_FormFieldList%%` | . |

                        | `%%GLOBAL_Question%%` | . |

                        | `%%GLOBAL_ProductReviewEmailUnsubscribeLink%%` | . |

                        | `%%GLOBAL_CustomerFirstName%%` | . |

                        | `%%GLOBAL_ReturnReceivedCredit%%` | . |

                        | `%%GLOBAL_AC_EmailIntroText%%` | . |

                        | `%%GLOBAL_ProductThumbnailUrl%%` | . |

                        | `%%GLOBAL_AC_ExistingCustomer%%` | . |

                        | `%%GLOBAL_AC_CustomerName%%` | . |

                        | `%%GLOBAL_AC_CustomerEmail%%` | . |

                        | `%%GLOBAL_AC_CustomerPhone%%` | . |

                        | `%%GLOBAL_AC_CustomerAddress%%` | . |

                        | `%%GLOBAL_AC_ModifiedType%%` | . |

                        | `%%GLOBAL_AC_DateModified%%` | . |

                        | `%%GLOBAL_AC_CartContents%%` | . |

                        | `%%GLOBAL_AC_CouponCode%%` | . |

                        | `%%GLOBAL_AC_CouponCodeText%%` | . |

                        | `%%GLOBAL_FormField%%` | . |

                        | `%%GLOBAL_FormValue%%` | . |

                        | `%%GLOBAL_PaymentGatewayAmount%%` | . |

                        | `%%GLOBAL_NoPaymentTakenModuleInTestMode%%` | . |

                        | `%%GLOBAL_OrderTrackingNo%%` | . |

                        | `%%GLOBAL_TrackURL%%` | . |

                        | `%%GLOBAL_RawProductPrice%%` | Currency, as a unique
                        alphanumeric code. To follow best practices for
                        microdata, use this variable – together with
                        `%%GLOBAL_RawProductPrice%%` – rather than
                        `%%GLOBAL_ProductPrice%%` (which includes a currency
                        token/symbol). |

                        | `%%GLOBAL_SelectedCurrencyCode%% ` | Currency, as a
                        unique alphanumeric code. To follow best practices for
                        microdata, use this variable – together with
                        `%%GLOBAL_RawProductPrice%%` – rather than
                        `%%GLOBAL_ProductPrice%%` (which includes a currency
                        token/symbol). |

                        | `%%GLOBAL_ProductReviewLink%%` | . |

                        | `%%GLOBAL_ProductQty%%` | . |

                        | `%%GLOBAL_ProductCustomFields%%` | You can use the
                        %%GLOBAL_ProductCustomFields%% variable in any template
                        file where you can use %%GLOBAL_ProductPrice%%. (Namely,
                        in template files that render a particular panel's
                        individual items. Examples are:
                        Snippets/CategoryProductsItem.html, for category pages;
                        or Snippets/HomeFeaturedProductsItem.html, for the
                        Featured Products panel.) Once
                        %%GLOBAL_ProductCustomFields%% is added, it will render
                        the entire table of custom fields. To incorporate this
                        variable into faceted search, we recommend adding the
                        following code to Panels/FacetedSearchProductGrid.html:

                        | |Once %%GLOBAL_ProductCustomFields%% is added, it will
                        render the entire table of custom fields. To incorporate
                        this variable into faceted search, we recommend adding
                        the following code to
                        Panels/FacetedSearchProductGrid.html:

                        | |<pre>{{#each product.custom_fields}}

                        | |   {{ id }} : {{ name }} : {{ value }}

                        | |{{/each}} </pre>|
                                
              - title: LNG Variables
                route:
                  path: /lng-variables
                data:
                  blocks:
                    - type: html
                      data: |
                        <h1>LNG Variables</h1>
                    - type: text
                      data: "The Blueprint theme uses the following LNG variables to reference text strings. This list is sorted alphabetically by variable name. \n\nTo make it easier for store owners who might wish to translate, or otherwise modify, their strings: Use these variables instead of hard-coding string values into your theme.\n<br>\n\n<table>\n<thead>\n   <tr>\n       <th class=\"filters-parameter\">Variable</th>\n       <th class=\"variable-description\">Default string value</th>\n   </tr>\n</thead>\n<tbody>\n<TR><TD><CODE>%%LNG_AC_AbandonedCartConvertedHeading%%</code></TD>\n<TD>\"An abandoned cart was converted to an order\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_AbandonedCartNoticeHeading%%</code></TD>\n<TD>\"Abandoned Cart Notice\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CartContentsSubheading%%</code></TD>\n<TD>\"Products In Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_ContactDetailsSubheading%%</code></TD>\n<TD>\"Contact Details\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CouponCodeAfterText%%</code></TD>\n<TD>\" during checkout to receive \"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CouponCodeBeforeText%%</code></TD>\n<TD>\"Enter coupon code \"</td></tr>\n<TR><TD><CODE>%%LNG_AC_EmailUnsubscribe%%</code></TD>\n<TD>\"Unsubscribe\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_EmailUnsubscribeSuffix%%</code></TD>\n<TD>\" from future emails like this\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_RecoveredEmailIntroText%%</code></TD>\n<TD>\"The automated emails we've been sending shoppers who didn't make it all the way through the checkout process have resulted in a new order. The customer's contact details and ordered items are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_RecoveredEmailSubHeading%%</code></TD>\n<TD>\"Congratulations!\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountDetailsDescription%%</code></TD>\n<TD>\"Update your contact details, email address and/or change your password.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterFirstName%%</code></TD>\n<TD>\"Please type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterLastName%%</code></TD>\n<TD>\"Please type in your last name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterPassword%%</code></TD>\n<TD>\"Please type in a password.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterPhoneNumber%%</code></TD>\n<TD>\"Please type in your phone number.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterValidEmail%%</code></TD>\n<TD>\"Please type in a valid email address, such as joe@aol.com\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountInboxIntroNoOrders%%</code></TD>\n<TD>\"Once you place an order you'll have full access to your inbox from this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountNoRecentItems%%</code></TD>\n<TD>\"You haven't looked at any items on our site. When you do, they will appear here.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrdersIntro%%</code></TD>\n<TD>\"Your completed orders with us are shown below. Click 'View Order' to view an orders details.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrdersNone%%</code></TD>\n<TD>\"You don't have any completed orders with us. When you do, they will appear on this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrderStatusIntro%%</code></TD>\n<TD>\"The status of your recent orders is shown below. Click 'View Order' to see complete details.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrderStatusNone%%</code></TD>\n<TD>\"You haven't placed any orders with us. When you do, their status will appear on this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountPasswordsDontMatch%%</code></TD>\n<TD>\"Your passwords don't match.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountRecentItemsIntro%%</code></TD>\n<TD>\"The items you've recently looked at on our site are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountReturnsIntro%%</code></TD>\n<TD>\"To return an item from one of your previous orders, please &lt;a href='account.php?action=view_orders'&gt;click here&lt;/a&gt;.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountReturnsNone%%</code></TD>\n<TD>\"You do not have any outstanding return requests with us at the moment.\"</td></tr>\n<TR><TD><CODE>%%LNG_Action%%</code></TD>\n<TD>\"Action\"</td></tr>\n<TR><TD><CODE>%%LNG_Add%%</code></TD>\n<TD>\"Add\"</td></tr>\n<TR><TD><CODE>%%LNG_AddressBook%%</code></TD>\n<TD>\"Address Book\"</td></tr>\n<TR><TD><CODE>%%LNG_AddressBookDescription%%</code></TD>\n<TD>\"Add, edit and remove shipping and billing destinations from your address book.\"</td></tr>\n<TR><TD><CODE>%%LNG_AddShippingAddress%%</code></TD>\n<TD>\"Add New Address\"</td></tr>\n<TR><TD><CODE>%%LNG_AddToCart1%%</code></TD>\n<TD>\"Click the button below to add the\"</td></tr>\n<TR><td><code>%%LNG_AddToWishList%%</code></TD>\n<TD>\"Add to Wish List\"</td></tr>\n<TR><TD><CODE>%%LNG_AdminMaintenanceNotice%%</code></TD>\n<TD>\"&lt;br /&gt;Only administrators can view the store at the moment. Visit your control panel settings page to disable maintenance mode.&lt;br /&gt;&lt;br /&gt;&lt;a href='?showStore=no'&gt;Click here to see what your visitors will see.&lt;/a&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_AdminMaintenanceNoticeHeader%%</code></TD>\n<TD>\"Your store is down for maintenance.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedExample1%%</code></TD>\n<TD>\"ipod &lt;em&gt;or&lt;/em&gt; creative\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedExample2%%</code></TD>\n<TD>\"music &lt;em&gt;not&lt;/em&gt; creative\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearch%%</code></TD>\n<TD>\"Advanced Search\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearching%%</code></TD>\n<TD>\"Advanced Searching\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingAnd%%</code></TD>\n<TD>\"&lt;em&gt;not&lt;/em&gt; specifies that the term must not be present in the search results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingKeywords%%</code></TD>\n<TD>\"The words 'and', 'or' and 'not' are special keywords used to join words.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingNot%%</code></TD>\n<TD>\"&lt;em&gt;not&lt;/em&gt; specifies that the term must not be present in the search results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingOr%%</code></TD>\n<TD>\"<em>or</em> specifies that either of the terms must be present in the results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingPhrases%%</code></TD>\n<TD>\"If you wish to search for a phrase, enclose it within &lt;em&gt;&quot;double quotes&quot;&lt;/em&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_AlphaAsc%%</code></TD>\n<TD>\"Alphabetical: A to Z\"</td></tr>\n<TR><TD><CODE>%%LNG_AlphaDesc%%</code></TD>\n<TD>\"Alphabetical: Z to A\"</td></tr>\n<TR><TD><CODE>%%LNG_AlreadyHaveAnAccount%%</code></TD>\n<TD>\"I'm A Returning Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_AlreadyHaveAnAccountIntro%%</code></TD>\n<TD>\"To continue, please enter your email address and password that you use for your account.\"</td></tr>\n<TR><TD><CODE>%%LNG_AlsoWantToShipToThisAddress%%</code></TD>\n<TD>\"I also want to ship to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_Amount%%</code></TD>\n<TD>\"Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_Apply%%</code></TD>\n<TD>\"Apply\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorisationCode%%</code></TD>\n<TD>\"Authorisation Code\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardCCV2%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card vertification number. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_AutoSearchSubCats%%</code></TD>\n<TD>\"Automatically search sub categories\"</td></tr>\n<TR><TD><CODE>%%LNG_Availability%%</code></TD>\n<TD>\"Availability\"</td></tr>\n<TR><TD><CODE>%%LNG_AvgCustomerReview%%</code></TD>\n<TD>\"Avg. Customer Review\"</td></tr>\n<TR><TD><CODE>%%LNG_BadContactFormCaptcha%%</code></TD>\n<TD>\"The characters you copied from the image are incorrect. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicExample1%%</code></TD>\n<TD>\"ipod touch\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicExample2%%</code></TD>\n<TD>\"mp3 player\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearching%%</code></TD>\n<TD>\"Basic Searching\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingCommon%%</code></TD>\n<TD>\"Common words such as 'are' and 'is' as well as words below 3 characters are automatically removed from your search terms.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingFields%%</code></TD>\n<TD>\"All search terms are matched against product names, descriptions and the product code.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingMultiple%%</code></TD>\n<TD>\"Multiple search words are supported. Results containing all of your search terms are ranked higher than those which don't.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingShort%%</code></TD>\n<TD>\"Try to keep search terms short and to the point.\"</td></tr>\n<TR><TD><CODE>%%LNG_Bestselling%%</code></TD>\n<TD>\"Bestselling\"</td></tr>\n<TR><TD><CODE>%%LNG_BillAndShipToAddress%%</code></TD>\n<TD>\"Bill & Ship to this Address\"</td></tr>\n<TR><TD><CODE>%%LNG_BillingAddress%%</code></TD>\n<TD>\"Billing Address\"</td></tr>\n<TR><TD><CODE>%%LNG_BillingDetails%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_BillTo%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_BillToThisAddress%%</code></TD>\n<TD>\"Bill to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_Brand%%</code></TD>\n<TD>\"Brand\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandName%%</code></TD>\n<TD>\"Brand Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Brands%%</code></TD>\n<TD>\"Brands\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandsTagCloud%%</code></TD>\n<TD>\"Brands Tag Cloud\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandTagCloudHelp%%</code></TD>\n<TD>\"The &lt;em>brands tag cloud&lt;/em&gt; shows all of the brands available for purchase.&lt;br /&gt;&lt;br /&gt;The bigger the brand appears, the more products it contains.&lt;br /&gt;&lt;br /&gt;Click on a brand below to see all products listed under that brand.&lt;br /&gt;&lt;br />\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountLink%%</code></TD>\n<TD>\"Buy in bulk and save\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountThickBoxIntro%%</code></TD>\n<TD>\"Below are the available bulk discount rates for each individual item when you purchase a certain amount\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountThickBoxIntro%%</code></TD>\n<TD>\"Below are the available bulk discount rates for each individual item when you purchase a certain amount\"</td></tr>\n<TR><TD><CODE>%%LNG_CalculateShipping%%</code></TD>\n<TD>\"Estimate Shipping &amp; Tax\"</td></tr>\n<TR><TD><CODE>%%LNG_CalculateShippingHandling%%</code></TD>\n<TD>\"Estimate Shipping &amp; Tax\"</td></tr>\n<TR><TD><CODE>%%LNG_Calculating%%</code></TD>\n<TD>\"Estimating...\"</td></tr>\n<TR><TD><CODE>%%LNG_Cancel%%</code></TD>\n<TD>\"Cancel\"</td></tr>\n<TR><TD><CODE>%%LNG_CantReorderGiftCertificateAlert%%</code></TD>\n<TD>\"Unfortunately gift certificates can not be reordered. Click on the 'Gift Certificates' link to purchase a new one.\"</td></tr>\n<TR><TD><CODE>%%LNG_CantReorderItems%%</code></TD>\n<TD>\"One or more selected items can\\'t be reordered.\"</td></tr>\n<TR><TD><CODE>%%LNG_CapitalFor%%</code></TD>\n<TD>\"For\"</td></tr>\n<TR><TD><CODE>%%LNG_CaptchaIntro%%</code></TD>\n<TD>\"Please copy the characters from the image into the text field below. Doing this helps us prevent automated submissions.\"</td></tr>\n<TR><TD><CODE>%%LNG_CaptchaVerification%%</code></TD>\n<TD>\"Captcha Check\"</td></tr>\n<TR><TD><CODE>%%LNG_CardholderName%%</code></TD>\n<TD>\"Cardholder Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CartItems%%</code></TD>\n<TD>\"Cart Items\"</td></tr>\n<TR><TD><CODE>%%LNG_CartRemoveConfirm%%</code></TD>\n<TD>\"Are you sure you want to remove this item from your cart?\"</td></tr>\n<TR><TD><CODE>%%LNG_CatalogPriceExTaxLabel%%</code></TD>\n<TD>\" (ex :label)\"</td></tr>\n<TR><TD><CODE>%%LNG_CatalogPriceIncTaxLabel%%</code></TD>\n<TD>\" (inc :label)\"</td></tr>\n<TR><TD><CODE>%%LNG_Categories%%</code></TD>\n<TD>\"Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_CategoryNewProductsFeed%%</code></TD>\n<TD>\"New Products RSS Feed for %s\"</td></tr>\n<TR><TD><CODE>%%LNG_CategoryPopularProductsFeed%%</code></TD>\n<TD>\"Popular Products RSS Feed for %s\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualChooseCardType%%</code></TD>\n<TD>”You forgot to choose a card type.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardCCV2%%</code></TD>\n<TD>”CCV2 Value\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardCVV2Help%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardIssueNo%%</code></TD>\n<TD>”Card Issue No\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardIssueNoHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardNo%%</code></TD>\n<TD>”Credit Card No\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardNoHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardType%%</code></TD>\n<TD>”Card Type\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCardNumber%%</code></TD>\n<TD>”Please enter a valid credit card number containing no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card verification number. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterIssueDetails%%</code></TD>\n<TD>”Please enter a valid issue number or issue date.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualIssueDate%%</code></TD>\n<TD>”Card Issue Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualIssueDateHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPayForOrder%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPaymentIntro%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPleaseChoose%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualTotalAmount%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_CertificateCode%%</code></TD>\n<TD>\"Code\"</td></tr>\n<TR><td><code>%%LNG_CertificateFrom%%</code></TD>\n<TD>\"From\"</td></tr>\n<TR><td><code>%%LNG_CertificateTo%%</code></TD>\n<TD>\"To\"</td></tr>\n<TR><TD><CODE>%%LNG_Change%%</code></TD>\n<TD>\"Change\"</td></tr>\n<TR><TD><CODE>%%LNG_ChangeYourPassword%%</code></TD>\n<TD>\"Change Your Password\"</td></tr>\n<TR><TD><CODE>%%LNG_CharactersRemaining%%</code></TD>\n<TD>\"characters remaining\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckBalance%%</code></TD>\n<TD>\"Check Balance\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckCertificateBalance%%</code></TD>\n<TD>\"Check Remaining Balance\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckingOutAs%%</code></TD>\n<TD>\"Checking Out As\"</td></tr>\n<TR><TD><CODE>%%LNG_Checkout%%</code></TD>\n<TD>\"Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutAsAGuest%%</code></TD>\n<TD>\"Checkout as a guest\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutButtonTitle%%</code></TD>\n<TD>\"Click here to proceed to checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutGuestIntro%%</code></TD>\n<TD>\"Register with us for a faster checkout, to track the status of your order and more. You can also checkout as a guest.\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutUseStoreCredit%%</code></TD>\n<TD>\"Pay using my store credit\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutWithMultipleAddresses%%</code></TD>\n<TD>\"Checkout with multiple addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseAnotherProduct%%</code></TD>\n<TD>\"Choose Another Product\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseGiftWrappingOption%%</code></TD>\n<TD>\"-- Please choose a type of gift wrapping --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseHowToWrapItems%%</code></TD>\n<TD>\"Please choose how you'd like to have this item gift wrapped.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseReturnAction%%</code></TD>\n<TD>\"-- Please Choose an Action (Optional) --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseReturnReason%%</code></TD>\n<TD>\"-- Please Choose a Reason --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingCountry%%</code></TD>\n<TD>\"Please choose your country.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingMethod%%</code></TD>\n<TD>\"Please choose a shipping method.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingProvider%%</code></TD>\n<TD>\"Choose a Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingState%%</code></TD>\n<TD>\"Please choose a state/province.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseYourOptions%%</code></TD>\n<TD>\"Choose Your Options\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickHere%%</code></TD>\n<TD>\"click here\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickHereToTrackYourOrder%%</code></TD>\n<TD>\"Track the status of your order\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToCreateAnAccount%%</code></TD>\n<TD>\"Click here to create a new account.\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToPrintInvoice%%</code></TD>\n<TD>\"Print Invoice\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToViewReturnStatus%%</code></TD>\n<TD>\"Click here to view the status of this return.\"</td></tr>\n<TR><TD><CODE>%%LNG_Close%%</code></TD>\n<TD>\"Close\"</td></tr>\n<TR><TD><CODE>%%LNG_CloseWindow%%</code></TD>\n<TD>\"Close Window\"</td></tr>\n<TR><TD><CODE>%%LNG_CloseWindow%%</code></TD>\n<TD>\"Close Window\"</td></tr>\n<TR><TD><CODE>%%LNG_Code%%</code></TD>\n<TD>\"Code/SKU\"</td></tr>\n<TR><TD><CODE>%%LNG_Comments%%</code></TD>\n<TD>\"Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_CompanyName%%</code></TD>\n<TD>\"Company Name\"</td></tr>\n<TR><td><code>%%LNG_Compare%%</code></TD>\n<TD>\"Compare\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareSelected%%</code></TD>\n<TD>\"Compare Selected\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareSelectMessage%%</code></TD>\n<TD>\"Please choose at least 2 products to compare.\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareTwoProducts%%</code></TD>\n<TD>\"At least 2 products are needed to make a valid comparison.\"</td></tr>\n<TR><TD><CODE>%%LNG_CompletedOrders%%</code></TD>\n<TD>\"Completed Orders\"</td></tr>\n<TR><TD><CODE>%%LNG_CompletedOrdersDescription%%</code></TD>\n<TD>\"See all completed orders you've placed at %s. You can also print invoices from this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_Condition%%</code></TD>\n<TD>\"Condition\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmAddressTypeChange%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmDeleteShippingAddress%%</code></TD>\n<TD>\"Are you sure you want to delete this shipping address?\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmDeleteWishLists%%</code></TD>\n<TD>\"Are you sure you want to delete the selected wish list(s)? This action cannot be undone.\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmRemoveGiftWrapping%%</code></TD>\n<TD>\"Are you sure you want to remove the gift wrapping from this item?\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmYourOrder%%</code></TD>\n<TD>\"Please Review Your Order Before Continuing\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactCompanyName%%</code></TD>\n<TD>\"Company Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactEmail%%</code></TD>\n<TD>\"Email Address\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormDetails%%</code></TD>\n<TD>\"Here are their details\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEmail1%%</code></TD>\n<TD>\"A user has submitted the contact form on your store.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEnterEmail%%</code></TD>\n<TD>\"Please enter a valid email address, such as john@example.com.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEnterQuestion%%</code></TD>\n<TD>\"You forgot to enter your question/comment.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactName%%</code></TD>\n<TD>\"Full Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactOrderNo%%</code></TD>\n<TD>\"Order Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactPageFormSubmitted%%</code></TD>\n<TD>\"'%s' submitted the form from your '%s' page\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactPhone%%</code></TD>\n<TD>\"Phone Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactQuestion%%</code></TD>\n<TD>\"Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactRMANo%%</code></TD>\n<TD>\"RMA Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContainsTheFollowingItems%%</code></TD>\n<TD>\"Contained the Following Items\"</td></tr>\n<TR><td><code>%%LNG_Continue%%</code></TD>\n<TD>\"Continue\"</td></tr>\n<TR><TD><CODE>%%LNG_ContinueRaquo%%</code></TD>\n<TD>\"Continue &raquo;\"</td></tr>\n<TR><TD><CODE>%%LNG_ContinueShopping%%</code></TD>\n<TD>\"Continue Shopping\"</td></tr>\n<TR><TD><CODE>%%LNG_CouldNotShipFollowingItems%%</code></TD>\n<TD>\"The following item(s) could not be shipped to your shipping address:\"</td></tr>\n<TR><TD><CODE>%%LNG_Country%%</code></TD>\n<TD>\"Country\"</td></tr>\n<TR><TD><CODE>%%LNG_Coupon%%</code></TD>\n<TD>\"Coupon\"</td></tr>\n<TR><TD><CODE>%%LNG_CouponCode%%</code></TD>\n<TD>\"Coupon Code\"</td></tr>\n<TR><TD><CODE>%%LNG_CouponCodeIntro%%</code></TD>\n<TD>\"If you have a coupon code, enter it in the box below and click 'Go'.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccount%%</code></TD>\n<TD>\"Create Account\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro1%%</code></TD>\n<TD><b>Checkout:</b> \"Fill in the fields below to create a \"<br><b>Express Checkout:</b> \"Checkout faster\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro2%%</code></TD>\n<TD><b>Checkout:</b> \"account. You'll be able to shop and check out faster on your next visit, check your order status online and optionally receive updates on special offers and events.\"<br><b>Express Checkout:</b> \"Save multiple addresses in your address book\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro3%%</code></TD>\n<TD>\"Access order history and track your orders\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro4%%</code></TD>\n<TD>\"Checkout faster at\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro5%%</code></TD>\n<TD>\"and save multiple addresses in your address book.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntroTitle%%</code></TD>\n<TD>\"Create an account with us and you'll be able to:\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountLoginIntro%%</code></TD>\n<TD>\"&lt;p>Create an account with us and you'll be able to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Check out faster&lt;/li&gt;&lt;li&gt;Save multiple shipping addresses&lt;/li&gt;&lt;li&gt;Access your order history&lt;/li&gt;&lt;li&gt;Track new orders&lt;/li&gt;&lt;li&gt;Save items to your wish list&lt;/li&gt;&lt;/ul&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountPersonalIntro%%</code></TD>\n<TD>\"Enter your email address and password to create your account.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountShippingIntro%%</code></TD>\n<TD>\"Enter the name and address you'd like us to ship your order to.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountThanks%%</code></TD>\n<TD>\"Your Account Has Been Created\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountThanksIntro%%</code></TD>\n<TD>\"Thank you for creating your account at %s. Your account details have been emailed to %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateANewWishList%%</code></TD>\n<TD>\"Create a New Wish List...\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardCode%%</code></TD>\n<TD>”CVV2\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardType%%</code></TD>\n<TD>”Credit Card Type\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardChooseCardType%%</code></TD>\n<TD>”You forgot to choose a card type.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardIssueNo%%</code></TD>\n<TD>”Card Issue No\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardIssueNoHelp%%</code></TD>\n<TD>”The issue number found on the front of your card under 'ISS' or 'ISSUE'&lt;br /&gt;Only required for cards that contain it.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCVV2Help%%</code></TD>\n<TD>\"For Visa/MasterCard/Discover cards, it\\'s the three digit code beside your signature strip on the back of the card. For American Express cards, it\\'s the four digit code above the account number on the front of the card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCardCode%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterIssueNoOrDate%%</code></TD>\n<TD>”Please enter your card issue number or issue date.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardIssueDate%%</code></TD>\n<TD>”Card Issue Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardIssueDateHelp%%</code></TD>\n<TD>”The issue date found on the front of your card.&lt;br /&gt;Only required for cards that contain it.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPleaseChoose%%</code></TD>\n<TD>”-- Please Choose --\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardTotalAmount%%</code></TD>\n<TD>”Total Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditPaymentMethod%%</code></TD>\n<TD>\"Pay the remaining %s via:\"</td></tr>\n<TR><TD><CODE>%%LNG_CurrencyConverter%%</code></TD>\n<TD>\"Currency Converter\"</td></tr>\n<TR><TD><CODE>%%LNG_Currently%%</code></TD>\n<TD>\"Currently\"</td></tr>\n<TR><TD><CODE>%%LNG_CurrentTopSellers%%</code></TD>\n<TD>\"Current Top Sellers\"</td></tr>\n<TR><TD><CODE>%%LNG_CustomersAlsoBought%%</code></TD>\n<TD>\"Customers Also Purchased\"</td></tr>\n<TR><TD><CODE>%%LNG_CustomersWhoLikedThisProductAlsoLiked%%</code></TD>\n<TD>\"Customers Who Liked This Product Also Liked\"</td></tr>\n<TR><TD><CODE>%%LNG_DateAndTime%%</code></TD>\n<TD>\"Date and Time\"</td></tr>\n<TR><TD><CODE>%%LNG_DateOfOrder%%</code></TD>\n<TD>\"Order Date\"</td></tr>\n<TR><TD><CODE>%%LNG_DateRequested%%</code></TD>\n<TD>\"Date Requested\"</td></tr>\n<TR><TD><CODE>%%LNG_DateShipped%%</code></TD>\n<TD>\"Date Shipped\"</td></tr>\n<TR><TD><CODE>%%LNG_Dear%%</code></TD>\n<TD>\"Dear\"</td></tr>\n<TR><TD><CODE>%%LNG_Delete%%</code></TD>\n<TD>\"Delete\"</td></tr>\n<TR><TD><CODE>%%LNG_DeleteProductFieldFileConfirmation%%</code></TD>\n<TD>\"Are you sure you want to delete the uploaded file?\"</td></tr>\n<TR><TD><CODE>%%LNG_DeliveryDisclaimer%%</code></TD>\n<TD>\"*Delivery time is approximate from date of shipment\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeCancel%%</code></TD>\n<TD>\"Cancel\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeChangesSaved%%</code></TD>\n<TD>\"Your design mode changes have been saved successfully.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmDisable%%</code></TD>\n<TD>\"Are you sure you want to disable design mode? Any changes you've made won't be saved.\\n\\nYou can re-enable design mode at any time by logging in to your store's control panel, visiting the 'Store Design' page and clicking the 'Design Mode' tab.\\n\\nClick OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmPanelRemove%%</code></TD>\n<TD>\"Are you sure you want to remove the panel ':panel' from the page? It may still appear on other pages. Click OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmUndo%%</code></TD>\n<TD>\"Are you sure? Any changes you've made wont be saved. Click OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeDisable%%</code></TD>\n<TD>\"Disable\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeLangSaving%%</code></TD>\n<TD>\"Saving...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditLayout%%</code></TD>\n<TD>\"Edit Layout...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditPanel%%</code></TD>\n<TD>\"Edit Panel...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditStylesheet%%</code></TD>\n<TD>\"Edit Stylesheet...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuRemovePanel%%</code></TD>\n<TD>\"Remove Panel\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeRemoveLastPanel%%</code></TD>\n<TD>\"This is the last panel in this column.\\n\\nIf you wish to move this panel please move another panel in to this column first.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeSave%%</code></TD>\n<TD>\"Save\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeToggle%%</code></TD>\n<TD>\"Toggle\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeUndo%%</code></TD>\n<TD>\"Undo\"</td></tr>\n<TR><TD><CODE>%%LNG_DidYouMean%%</code></TD>\n<TD>\"Did you mean\"</td></tr>\n<TR><TD><CODE>%%LNG_Discount%%</code></TD>\n<TD>\"Discount\"</td></tr>\n<TR><TD><CODE>%%LNG_DownloadLink%%</code></TD>\n<TD>\"Download\"</td></tr>\n<TR><TD><CODE>%%LNG_DownloadTheItemsYouOrdered%%</code></TD>\n<TD>\"Download the items you ordered\"</td></tr>\n<TR><TD><CODE>%%LNG_Edit%%</code></TD>\n<TD>\"Edit\"</td></tr>\n<TR><TD><CODE>%%LNG_EditAccountIntro%%</code></TD>\n<TD>\"Make changes to your account details below. Click 'Update My Details' when you're done.\"</td></tr>\n<TR><TD><CODE>%%LNG_Email%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_EmailAddress%%</code></TD>\n<TD>\"Email Address\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptyCartInfo%%</code></TD>\n<TD>\"To add a product to your cart, first browse for it or use the search box and then click its &quot;Add to Cart&quot; button.\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptyHomePage%%</code></TD>\n<TD>\"home page.\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptySmallSearch%%</code></TD>\n<TD>\"You forgot to enter some search keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterCaptchaCode%%</code></TD>\n<TD>\"Please copy the characters from the image into the \\'Captcha Check\\' text box.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterCouponCode%%</code></TD>\n<TD>\"Please enter your coupon code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterGiftCertificateCode%%</code></TD>\n<TD>\"Please enter your gift certificate code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterGiftCertificateValueBetween%%</code></TD>\n<TD>\"Please enter an amount between the minimum and maximum gift certificate value.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterOrderComments%%</code></TD>\n<TD>\"Order Instructions/Comments (Optional)\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterRequiredField%%</code></TD>\n<TD>\"Please enter the required field(s).\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingAddress%%</code></TD>\n<TD>\"Please type in an address.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingCity%%</code></TD>\n<TD>\"Please type in your suburb/city.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingFirstName%%</code></TD>\n<TD>\"Please type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingLastName%%</code></TD>\n<TD>\"Please type in your last name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingPhone%%</code></TD>\n<TD>\"Please enter your phone number.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingZip%%</code></TD>\n<TD>\"Please type in your zip/postcode.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterTheCodeBelow%%</code></TD>\n<TD>\"Enter the code below:\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateCode%%</code></TD>\n<TD>\"Please enter a gift certificate code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateFromEmail%%</code></TD>\n\n<TD>\"Please enter your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateFromName%%</code></TD>\n<TD>\"Please enter your name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateToEmail%%</code></TD>\n<TD>\"Please enter a valid email address for the person you wish to send this gift certificate to.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateToName%%</code></TD>\n<TD>\"Please enter the name of the person you wish to send this gift certificate to.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidFromPrice%%</code></TD>\n<TD>\"Please enter a valid \\'from\\' price containing numbers only.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidGiftCertificateAmount%%</code></TD>\n<TD>\"Please enter a valid amount for this gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidToPrice%%</code></TD>\n<TD>\"Please enter a valid \\'to\\' price containing numbers only.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterWishListName%%</code></TD>\n<TD>\"Please enter a wishlist name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardCCV2%%</code></TD>\n<TD>”Card Security Code\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterPostcode%%</code></TD>\n<TD>”You forgot to enter a zip/postcode.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterStreetName%%</code></TD>\n<TD>”You forgot to enter your street name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterStreetNumber%%</code></TD>\n<TD>”You forgot to enter your street number.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPPaymentIntro%%</code></TD>\n<TD>”Please enter the following information as it appears on your credit card statement and then click the &quot;Pay for Order&quot; button to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPStreetName%%</code></TD>\n<TD>”Street Address\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPZip%%</code></TD>\n<TD>”Zip/Postcode\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCardCode%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCardCode%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutCheckingOutAsGuest%%</code></TD>\n<TD>\"Checking out as a guest\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseBilling%%</code></TD>\n<TD>\"Please select the address you'd like to use as your billing address for this order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseShipper%%</code></TD>\n<TD>\"Please select the shipping method you'd like to use for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseShipping%%</code></TD>\n<TD>\"Please select the address you'd like to use as your shipping address for this order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutCreatingAnAccount%%</code></TD>\n<TD>\"Creating an account\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutFor%%</code></TD>\n<TD>\"for\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutLoadError%%</code></TD>\n<TD>\"There was an error loading this step of the checkout. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutLoading%%</code></TD>\n<TD>\"Loading...\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutSelectShippingProvider%%</code></TD>\n<TD>\"Please choose the shipping method for your order:\"</td></tr>\n<TR><td><code>%%LNG_ExpressCheckoutStep%%</code></TD>\n<TD>\"Step\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepAccountDetails%%</code></TD>\n<TD>\"Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepBillingAccountDetails%%</code></TD>\n<TD>\"Billing &amp; Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepBillingAddress%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepOrderConfirmation%%</code></TD>\n<TD>\"Order Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepPaymentDetails%%</code></TD>\n<TD>\"Payment Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepShippingAddress%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepShippingMethod%%</code></TD>\n<TD>\"Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedItems%%</code></TD>\n<TD>\"Featured Items\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProduct%%</code></TD>\n<TD>\"Featured Product\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProducts%%</code></TD>\n<TD>\"Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProductsFeed%%</code></TD>\n<TD>\"Featured Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_FilterBy%%</code></TD>\n<TD>\"Filter by\"</td></tr>\n<TR><TD><CODE>%%LNG_FindByCategory%%</code></TD>\n<TD>\"Find Similar Products by Category\"</td></tr>\n<TR><TD><CODE>%%LNG_FindProductsByTag%%</code></TD>\n<TD>\"Find Similar Products by Tag\"</td></tr>\n<TR><TD><CODE>%%LNG_FirstName%%</code></TD>\n<TD>\"First Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ForbiddenAccessPage%%</code></TD>\n<TD>\"You Do Not Have Permission To Access This Page\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotPassword%%</code></TD>\n<TD>\"Forgot Password\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotPasswordIntro%%</code></TD>\n<TD>\"Fill in your email below to request a new password. An email will be sent to the address below containing a link to verify your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotYourPassword%%</code></TD>\n<TD>\"Forgot your password?\"</td></tr>\n<TR><TD><CODE>%%LNG_FreeShipping%%</code></TD>\n<TD>\"Free Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_From%%</code></TD>\n<TD>\"From\"</td></tr>\n<TR><TD><CODE>%%LNG_GetNewPasswordIntro%%</code></TD>\n<TD>\"Your password should be at least 6 characters long and will be case sensitive.\"</td></tr>\n<TR><td><code>%%LNG_GiftCertificate%%</code></TD>\n<TD>\"Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateAmount%%</code></TD>\n<TD>\"Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceCode%%</code></TD>\n<TD>\"Gift Certificate Code\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceFor%%</code></TD>\n<TD>\"Gift Certificate Balance for\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceIntro%%</code></TD>\n<TD>\"You can check the balance of a gift certificate by typing the code in to the box below.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateCode%%</code></TD>\n<TD>\"Redeem Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateCodeIntro%%</code></TD>\n<TD>\"To pay for this order using a gift certificate, enter the gift certificate code in the box below and click 'Go'.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailAttached%%</code></TD>\n<TD>\"Your gift certificate is attached to this email.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailedAfterPurchase%%</code></TD>\n<TD>\"This gift certificate will be emailed to the recipient after your order has been paid for.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailInstructions%%</code></TD>\n<TD>\"For instructions on how to redeem your gift certificate please &lt;a href='%s/giftcertificates.php?action=redeem'&gt;click here&lt;/a&gt;.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailWarning%%</code></TD>\n<TD>\"Please download or print a copy of your gift certificate for safe keeping as gift certificates are non-transferable.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailYouHaveReceived%%</code></TD>\n<TD>\"You have received a Gift Certificate for\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateFrom%%</code></TD>\n<TD>\"Your Name\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateFromEmail%%</code></TD>\n<TD>\"Your Email\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateMessage%%</code></TD>\n<TD>\"Your Message\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateMessageTooLong%%</code></TD>\n<TD>\"Please enter a shorter message for your gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateRemaining%%</code></TD>\n<TD>\"remaining\"</td></tr>\n<TR><td><code>%%LNG_GiftCertificates%%</code></TD>\n<TD>\"Gift Certificates\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTerms2%%</code></TD>\n<TD>\"I understand that gift certificates are non-refundable\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTheme%%</code></TD>\n<TD>\"Gift Certificate Theme\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTo%%</code></TD>\n<TD>\"Recipient's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateToEmail%%</code></TD>\n<TD>\"Recipient's Email\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftMessage%%</code></TD>\n<TD>\"Gift Message\"</td></tr>\n<TR><td><code>%%LNG_GiftWrapping%%</code></TD>\n<TD>\"Gift Wrapping\"</td></tr>\n<TR><TD><CODE>%%LNG_GrandTotal%%</code></TD>\n<TD>\"Grand Total\"</td></tr>\n<TR><TD><CODE>%%LNG_Handling%%</code></TD>\n<TD>\"Handling\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_address%%</code></TD>\n<TD>”Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_allbrands%%</code></TD>\n<TD>”View all brands\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_allprices%%</code></TD>\n<TD>”All prices are in\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_billingaddress%%</code></TD>\n<TD>”Billing Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_brands%%</code></TD>\n<TD>”Brands\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_calluson%%</code></TD>\n<TD>”Call us on\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_categories%%</code></TD>\n<TD>”Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_chooseproduct%%</code></TD>\n<TD>”choose another product\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_clicktochangebilling%%</code></TD>\n<TD>”Click Here to Change Billing Details if Required\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_continuetostore%%</code></TD>\n<TD>”Continue to our store\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_customerviewed%%</code></TD>\n<TD>”Customers also viewed\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_date%%</code></TD>\n<TD>”Date\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_downloadedfileexpired%%</code></TD>\n<TD>”This file can no longer be downloaded as it has expired.\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_email%%</code></TD>\n<TD>”Email\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emailbigcommerce%%</code></TD>\n<TD>”with BigCommerce\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emaillaunchstore%%</code></TD>\n<TD>”Launch your own store for free\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emailpowered%%</code></TD>\n<TD>”is powered by BigCommerce\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_existingcustomer%%</code></TD>\n<TD>”Existing Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_giftcertificatecode%%</code></TD>\n<TD>”Gift certificate code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_giftcertificatecoupon%%</code></TD>\n<TD>”Gift Certificate or Coupon Code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_modify%%</code></TD>\n<TD>”Modify\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_name%%</code></TD>\n<TD>”Name\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_nomarketingmails%%</code></TD>\n<TD>”You will no longer receive marketing emails from\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_ok%%</code></TD>\n<TD>”OK\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_or%%</code></TD>\n<TD>”or\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_order%%</code></TD>\n<TD>”Order\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_orderconfirmation%%</code></TD>\n<TD>”Order Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_outofstock%%</code></TD>\n<TD>”Out of Stock\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_payfororder%%</code></TD>\n<TD>”Pay for your order\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_phone%%</code></TD>\n<TD>”Phone\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_proceedcheckout%%</code></TD>\n<TD>”Proceed To Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_productreviews%%</code></TD>\n<TD>”Product Reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_quantity%%</code></TD>\n<TD>”Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_returnitem%%</code></TD>\n<TD>”Return Item(s)\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_returnstore%%</code></TD>\n<TD>”Return to store\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_rrp%%</code></TD>\n<TD>”RRP\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_searchresults%%</code></TD>\n<TD>HC_searchresults\t”Search Results\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_securityquestion%%</code></TD>\n<TD>”Security Question\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_sharediffproduct%%</code></TD>\n<TD>”To share a different product, just select it from those shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_sharethis%%</code></TD>\n<TD>”Share This\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shippingaddress%%</code></TD>\n<TD>”Shipping Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shippingmethod%%</code></TD>\n<TD>”Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shopnow%%</code></TD>\n<TD>”SHOP NOW\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signin%%</code></TD>\n<TD>”Sign In\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signinorcreate%%</code></TD>\n<TD>”Sign in or Create Account\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signupnewsletter%%</code></TD>\n<TD>”Sign up for our newsletter\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_Submit%%</code></TD>\n<TD>\"Submit\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_total%%</code></TD>\n<TD>”Total\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_unsubscribe%%</code></TD>\n<TD>”Unsubscribe from\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_voucherredemptioncode%%</code></TD>\n<TD>”Voucher redemption code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_writereview%%</code></TD>\n<TD>”Write Review\"</td></tr>\n<TR><TD><CODE>%%LNG_HCT_delete%%</code></TD>\n<TD>”Delete\"</td></tr>\n<TR><TD><CODE>%%LNG_HCT_edit%%</code></TD>\n<TD>”Edit\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_addshoppingbag%%</code></TD>\n<TD>”Add to shopping bag\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_apply%%</code></TD>\n<TD>”Apply\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_clearform%%</code></TD>\n<TD>”Clear Form\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_go%%</code></TD>\n<TD>”Go\"</td></tr>\n<TR><TD><CODE>%%LNG_HearFromUsViaEmail%%</code></TD>\n<TD>\"Hear From Us Via Email?\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowToPayForYourOrder%%</code></TD>\n<TD>”Your order was sent to us but requires payment before it can be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowtoPayforYourOrderThanks%%</code></TD>\n<TD>”Here's How To Pay For Your Order\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowtoPayforYourOrderUC%%</code></TD>\n<TD>\"Here's How to Pay for Your Order...\"</td></tr>\n<TR><TD><CODE>%%LNG_Hi%%</code></TD>\n<TD>\"Hi\"</td></tr>\n<TR><TD><CODE>%%LNG_HideSearchForm%%</code></TD>\n<TD>\"Hide Search Form\"</td></tr>\n<TR><td><code>%%LNG_Home%%</code></TD>\n<TD>\"Home\"</td></tr>\n<TR><TD><CODE>%%LNG_HowRateProduct%%</code></TD>\n<TD>\"How do you rate this product?\"</td></tr>\n<TR><TD><CODE>%%LNG_HowWouldYouLikeToPay%%</code></TD>\n<TD>\"How Would You Like to Pay?\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealBank%%</code></TD>\n<TD>\"Bank\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealIssuerNotSelected%%</code></TD>\n<TD>\"Please select your issuer to continue\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealPaymentIntro%%</code></TD>\n<TD>\"Select your bank below and click the &quot;Continue&quot; button to proceed with payment.\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealProcessingError%%</code></TD>\n<TD>\"Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_Image%%</code></TD>\n<TD>\"Image\"</td></tr>\n<TR><TD><CODE>%%LNG_Inbox%%</code></TD>\n<TD>\"Inbox\"</td></tr>\n<TR><TD><CODE>%%LNG_InstructionsForPaymentBelow%%</code></TD>\n<TD>\"Instructions to pay for your order are shown below:\"</td></tr>\n<TR><TD><CODE>%%LNG_InvalidFileTypeJS%%</code></TD>\n<TD>\"The file type of the file you are trying to upload is not allowed for this field.\"</td></tr>\n<TR><TD><CODE>%%LNG_InvalidQuantity%%</code></TD>\n<TD>\"Please enter a valid product quantity.\"</td></tr>\n<TR><TD><CODE>%%LNG_InvoiceNumber%%</code></TD>\n<TD>\"Hi\"</td></tr>\n<TR><TD><CODE>%%LNG_InvoicePendingPaymentText%%</code></TD>\n<TD>\"Your order requires payment before it can be finalized. Details on how to pay are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_IPreferThisEmailFormat%%</code></TD>\n<TD>\"I prefer to receive emails in this format:\"</td></tr>\n<TR><TD><CODE>%%LNG_ISOCode%%</code></TD>\n<TD>\"ISO Code\"</td></tr>\n<TR><TD><CODE>%%LNG_IssuerConfirmation%%</code></TD>\n<TD>\"Issuer Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_IssuerName%%</code></TD>\n<TD>\"Issuer Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Item%%</code></TD>\n<TD>\"Item\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemDetails%%</code></TD>\n<TD>\"Item Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemPrice%%</code></TD>\n<TD>\"Item Price\"</td></tr>\n<TR><TD><CODE>%%LNG_Items%%</code></TD>\n<TD>\"Items\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemsShippedTo%%</code></TD>\n<TD>\"Items shipped to\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemTotal%%</code></TD>\n<TD>\"Item Total\"</td></tr>\n<TR><TD><CODE>%%LNG_JS_BillToThisAddress%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Description%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_OtherDetails%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_OtherProducts%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_ProductVideos%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Reviews%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_SimilarProducts%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_SimilarProductsByCustomerViews%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Tags%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Warranty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JustSentAnEmailConfirmation%%</code></TD>\n<TD>\"We've just sent you an email confirming your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_LastName%%</code></TD>\n<TD>\"Last Name\"</td></tr>\n<TR><TD><CODE>%%LNG_LoadingPleaseWait%%</code></TD>\n<TD>\"Loading... Please wait...\"</td></tr>\n<TR><TD><CODE>%%LNG_Login%%</code></TD>\n<TD>\"Sign in\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginEnterPassword%%</code></TD>\n<TD>\"Please type in your password.\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginEnterValidEmail%%</code></TD>\n<TD>\"Please type in a valid email address, such as joe@aol.com\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginWord%%</code></TD>\n<TD>\"Sign In\"</td></tr>\n<TR><TD><CODE>%%LNG_LowInventoryWarningAdjust%%</code></TD>\n<TD>\"Click here to adjust the inventory level for this product.\"</td></tr>\n<TR><TD><CODE>%%LNG_LowInventoryWarningAll%%</code></TD>\n<TD>\"Click here to view all products with a low inventory level.\"</td></tr>\n<TR><TD><CODE>%%LNG_ManageYourAccount%%</code></TD>\n<TD>\"Manage Your Account\"</td></tr>\n<TR><TD><CODE>%%LNG_MerchantName%%</code></TD>\n<TD>\"Merchant Name\"</td></tr>\n<TR><TD><CODE>%%LNG_MerchantURL%%</code></TD>\n<TD>\"Merchant URL\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageContent%%</code></TD>\n<TD>\"Message\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEmailText1%%</code></TD>\n<TD>\"has sent you a message about your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEmailText2%%</code></TD>\n<TD>\"To view the message and reply, follow the link below:\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEnterContent%%</code></TD>\n<TD>\"Please enter a message.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEnterSubject%%</code></TD>\n<TD>\"Please enter a subject.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageOrder%%</code></TD>\n<TD>\"Order\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSaid%%</code></TD>\n<TD>\"Said\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSendError%%</code></TD>\n<TD>\"Something went wrong when trying to send your message. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSendSuccess%%</code></TD>\n<TD>\"Your message was sent and you will receive a response via email shortly.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSubject%%</code></TD>\n<TD>\"Subject\"</td></tr>\n<TR><TD><CODE>%%LNG_MobileSite%%</code></TD>\n<TD>\"Mobile Site\"</td></tr>\n<TR><TD><CODE>%%LNG_NewCustomerIntro1%%</code></TD>\n<TD>\"If this is your first purchase from\"</td></tr>\n<TR><TD><CODE>%%LNG_NewCustomerIntro2%%</code></TD>\n<TD>\"please click the &quot;Continue.&quot; button to get started.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewestItems%%</code></TD>\n<TD>\"Newest Items\"</td></tr>\n<TR><TD><CODE>%%LNG_NewProducts%%</code></TD>\n<TD>\"New Products\"</td></tr>\n<TR><TD><CODE>%%LNG_NewProductsFeed%%</code></TD>\n<TD>\"New Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterEmail%%</code></TD>\n<TD>\"You forgot to type in your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterFirstName%%</code></TD>\n<TD>\"You forgot to type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterValidEmail%%</code></TD>\n<TD>\"Please enter a valid email address, such as john@example.com.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterSpecialOffersText%%</code></TD>\n<TD>\"I'd like to receive special offers\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterSubscription%%</code></TD>\n<TD>\"Newsletter Subscription\"</td></tr>\n<TR><TD><CODE>%%LNG_Next%%</code></TD>\n<TD>\"Next\"</td></tr>\n<TR><TD><CODE>%%LNG_NextImage%%</code></TD>\n<TD>\"Next\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICardHoldersName%%</code></TD>\n<TD>\"Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardCCV2%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_NMITotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_NoCaptcha%%</code></TD>\n<TD>\"Please enter the code shown.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoItemsInCart%%</code></TD>\n<TD>\"There are no products in your cart.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoPermissionToAccessThisPage%%</code></TD>\n<TD>\"You don't have the necessary permissions to view this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoPreference%%</code></TD>\n<TD>\"No Preference\"</td></tr>\n<TR><TD><CODE>%%LNG_NoProductsInCategory%%</code></TD>\n<TD>\"There are no products in this category.\"</td></tr>\n<TR><TD><CODE>%%LNG_NotAnExistingCustomer%%</code></TD>\n<TD>\"I'm A New Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFound%%</code></TD>\n<TD>\"Not Found\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundError%%</code></TD>\n<TD>\"The page you were looking for appears to have been moved, deleted or does not exist.\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReason1%%</code></TD>\n<TD>\"An outdated link on another site\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReason2%%</code></TD>\n<TD>\"A typo in the address / URL\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReasonTitle%%</code></TD>\n<TD>\"This is most likely due to:\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationAReturnSummaryIsShownBelow%%</code></TD>\n<TD>\"A summary of your return is shown below. To view the status of this return\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationClickHereViewReturn%%</code></TD>\n<TD>\"View details for return #\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationConfirmationForReturn%%</code></TD>\n<TD>\"Confirmation for Return Request for Order ID\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationCustomerDetails%%</code></TD>\n<TD>\"Customer Details\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationNewReturnRequest%%</code></TD>\n<TD>\"New Return Request for Order ID\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationReturnRequestSubmitted%%</code></TD>\n<TD>\"A new return request has been submitted on\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationTheReturnContainsTheFollowingItems%%</code></TD>\n<TD>\"The Return Request Contains the Following Items...\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationYourReturnContainsTheFollowingItems%%</code></TD>\n<TD>\"Your Return Request Contains the Following Items...\"</td></tr>\n<TR><TD><CODE>%%LNG_Of%%</code></TD>\n<TD>\"of\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyFeaturedProducts%%</code></TD>\n<TD>\"Only Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyFreeShipping%%</code></TD>\n<TD>\"Only Free Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyNonFeaturedProducts%%</code></TD>\n<TD>\"Only Non-Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyPaidShipping%%</code></TD>\n<TD>\"Only Paid Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_OnThe%%</code></TD>\n<TD>\"on the\"</td></tr>\n<TR><TD><CODE>%%LNG_Oops%%</code></TD>\n<TD>\"Oops...\"</td></tr>\n<TR><TD><CODE>%%LNG_Optional%%</code></TD>\n<TD>\"Optional\"</td></tr>\n<TR><TD><CODE>%%LNG_Or%%</code></TD>\n<TD>\"or\"</td></tr>\n<TR><TD><CODE>%%LNG_Order%%</code></TD>\n<TD>\"Order\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderAwaitingPayment%%</code></TD>\n<TD>\"Your order was sent to us but is currently awaiting payment. Once we receive the payment for your order, it will be completed. If you've already provided payment details then we will process your order manually and send you an email when it's completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderComments%%</code></TD>\n<TD>\"Order Instructions/Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDate%%</code></TD>\n<TD>\"Order Date\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDetails%%</code></TD>\n<TD>\"Order Details\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDownloads%%</code></TD>\n<TD>\"Files\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderedItemRemovedFromStore%%</code></TD>\n<TD>\"That item was removed from our store and is no longer available for order.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderId%%</code></TD>\n<TD>\"Order #%s\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderIdHash%%</code></TD>\n<TD>\"Order #\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderItems%%</code></TD>\n<TD>\"Order Items\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatus%%</code></TD>\n<TD>\"Order Status\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChanged%%</code></TD>\n<TD>\"Order Status Changed\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedDatePlaced%%</code></TD>\n<TD>\"Date Placed\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedIntro%%</code></TD>\n<TD>\"An order you recently placed on our website has had its status changed.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedOrderTotal%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedPaymentMethod%%</code></TD>\n<TD>\"Payment Method\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderSubtotal%%</code></TD>\n<TD>\"Order Subtotal\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderTotal%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderTrackingNoIs%%</code></TD>\n<TD>\"The tracking number for this order is\"</td></tr>\n<TR><TD><CODE>%%LNG_Other%%</code></TD>\n<TD>\"Other\"</td></tr>\n<TR><TD><CODE>%%LNG_OtherDetails%%</code></TD>\n<TD>\"Other Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Outstanding%%</code></TD>\n<TD>\"outstanding\"</td></tr>\n<TR><TD><CODE>%%LNG_OutstandingOrderTotal%%</code></TD>\n<TD>\"Your outstanding order total:\"</td></tr>\n<TR><td><code>%%LNG_Password%%</code></TD>\n<TD>\"Password\"</td></tr>\n<TR><TD><CODE>%%LNG_PasswordConfirm%%</code></TD>\n<TD>\"Confirm Password\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCardHoldersName%%</code></TD>\n<TD>\"Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardCCV2%%</code></TD>\n<TD>\"Card Security Code\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardNo%%</code></TD>\n<TD>\"Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardNoHelp%%</code></TD>\n<TD>\"Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCardNumber%%</code></TD>\n<TD>\"Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCreditCardMonth%%</code></TD>\n<TD>\"You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCreditCardYear%%</code></TD>\n<TD>\"You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCVV2Number%%</code></TD>\n<TD>\"Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n\n<TR><TD><CODE>%%LNG_PayflowProEnterName%%</code></TD>\n<TD>\"You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProExpirationDate%%</code></TD>\n<TD>\"Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProPayForOrder%%</code></TD>\n<TD>\"Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProPaymentIntro%%</code></TD>\n<TD>\"Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProProcessingError%%</code></TD>\n<TD>\"Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProTotalAmount%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_PayForYourOrderHelp%%</code></TD>\n<TD>\"Once you've provided payment, your order will be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayForYourOrderHelp%%</code></TD>\n<TD>\"Once you've provided payment your order will be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_PaymentMethod%%</code></TD>\n<TD>\"Payment Method\"</td></tr>\n<TR><TD><CODE>%%LNG_PersonalDetails%%</code></TD>\n<TD>\"Personal Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Phone%%</code></TD>\n<TD>\"Phone\"</td></tr>\n<TR><TD><CODE>%%LNG_PhoneNumber%%</code></TD>\n<TD>\"Phone Number\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseAgreeGiftCertificateTerms%%</code></TD>\n<TD>\"Please agree to the gift certificate terms.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseChooseAPaymentMethod%%</code></TD>\n<TD>\"Please choose a payment method.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseChooseShippingProvider%%</code></TD>\n<TD>\"Please choose a shipping method.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseSelectAProduct%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_PopularProducts%%</code></TD>\n<TD>\"Popular Products\"</td></tr>\n<TR><TD><CODE>%%LNG_PopularProductsFeed%%</code></TD>\n<TD>\"Popular Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_PostedBy%%</code></TD>\n<TD>\"Posted by\"</td></tr>\n<TR><TD><CODE>%%LNG_PostedOn%%</code></TD>\n<TD>\"Posted on\"</td></tr>\n<TR><TD><CODE>%%LNG_PrepositionOn%%</code></TD>\n<TD>\"on\"</td></tr>\n<TR><TD><CODE>%%LNG_Preview%%</code></TD>\n<TD>\"Preview\"</td></tr>\n<TR><TD><CODE>%%LNG_Previous%%</code></TD>\n<TD>\"Previous\"</td></tr>\n<TR><TD><CODE>%%LNG_PreviousImage%%</code></TD>\n<TD>\"Previous\"</td></tr>\n<TR><td><code>%%LNG_PreviousPage%%</code></TD>\n<TD>\"Previous Page\"</td></tr>\n<TR><TD><CODE>%%LNG_Price%%</code></TD>\n<TD>\"Price\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceAsc%%</code></TD>\n<TD>\"Price: Low to High\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceDesc%%</code></TD>\n<TD>\"Price: High to Low\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceRange%%</code></TD>\n<TD>\"Price Range\"</td></tr>\n<TR><TD><CODE>%%LNG_ProceedToPayment%%</code></TD>\n<TD>\"Proceed to Payment\"</td></tr>\n<TR><TD><CODE>%%LNG_ProceedToPaymentContinue%%</code></TD>\n<TD>\"Continue\"</td></tr>\n<TR><TD><CODE>%%LNG_ProdBin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProdName%%</code></TD>\n<TD>\"Product Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Product%%</code></TD>\n<TD>\"Product\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductAddToCartLink%%</code></TD>\n<TD>\"Add To Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductChooseOptionLink%%</code></TD>\n<TD>\"Choose Options\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductComparison%%</code></TD>\n<TD>\"Product Comparison\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductComparisonIntro%%</code></TD>\n<TD>\"Your product comparison is shown below. Click a product attribute in the left column to sort by that attribute.\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductDescription%%</code></TD>\n<TD>\"Product Description\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductDetails%%</code></TD>\n<TD>\"Product Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductMaxQty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductMinQty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductPreOrderCartLink%%</code></TD>\n<TD>\"Pre-Order Now\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailHeading%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailInstructions%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailSubheading%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailThanks%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailUnsubscribe%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailUnsubscribeSuffix%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewLinkText%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Products%%</code></TD>\n<TD>\"Products\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductsByCategory%%</code></TD>\n<TD>\"Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductTagCloud%%</code></TD>\n<TD>\"Browse by Tag\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductTagCloudIntro%%</code></TD>\n<TD>\"The product tag cloud shows the different tags (keywords) associated with products. The bigger the tag appears, the more products it contains. Click on a tag to see all products listed under that tag.\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductVideos%%</code></TD>\n<TD>\"Product Videos\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductWarranty%%</code></TD>\n<TD>\"Warranty Information\"</td></tr>\n<TR><TD><CODE>%%LNG_PublishedBy%%</code></TD>\n<TD>\"Posted by\"</td></tr>\n<TR><TD><CODE>%%LNG_PurchaseGiftCertificate%%</code></TD>\n<TD>\"Purchase a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_PurchaseGiftCertificates%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_Qty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Quantity%%</code></TD>\n<TD>\"Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_QuantityFull%%</code></TD>\n<TD>\"Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_QuestionMark%%</code></TD>\n<TD>\"?\"</td></tr>\n<TR><TD><CODE>%%LNG_QuickViewBulkDiscountsLabel%%</code></TD>\n<TD>\"Bulk Discounts\"</td></tr>\n<TR><TD><CODE>%%LNG_QuickViewViewDetailsText%%</code></TD>\n<TD>\"View Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate1Star%%</code></TD>\n<TD>\"1 star (worst)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate2Stars%%</code></TD>\n<TD>\"2 stars\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate3Stars%%</code></TD>\n<TD>\"3 stars (average)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate4Stars%%</code></TD>\n<TD>\"4 stars\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate5Stars%%</code></TD>\n<TD>\"5 stars (best)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rating%%</code></TD>\n<TD>\"Rating\"</td></tr>\n<TR><TD><CODE>%%LNG_ReadMoreLink%%</code></TD>\n<TD>\"Read More &raquo;\"</td></tr>\n<TR><TD><CODE>%%LNG_ReadReviews%%</code></TD>\n<TD>\"Read Reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentBlogsFeed%%</code></TD>\n<TD>\"Recent News RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentlySubmittedReturnRequest%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_RecentlyViewedItems%%</code></TD>\n<TD>\"Your Recent Items\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentlyViewedItemsDescription%%</code></TD>\n<TD>\"See a list of items you've recently viewed at %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentNews%%</code></TD>\n<TD>\"Recent Updates\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentPosts%%</code></TD>\n<TD>\"Recent Posts\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemAGiftCertificate%%</code></TD>\n<TD>\"Redeem a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate%%</code></TD>\n<TD>\"Redeem a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate1%%</code></TD>\n<TD>\"You need your unique gift certificate code, which is part of the gift certificate that was emailed to you as an attachment. It will look something like Z50-Y6K-COS-402.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate2%%</code></TD>\n<TD>\"Browse the store and add items to your cart as you normally would.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate3%%</code></TD>\n<TD>\"Click the '&lt;a href='cart.php'&gt;View Cart&lt;/a&gt;' link to view the contents of your shopping cart.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate4%%</code></TD>\n<TD>\"Type your gift certificate code in to the 'Redeem Gift Certificate' box and click 'Go'.\"</td></tr>\n<TR><td><code>%%LNG_RedeemGiftCertificateAt%%</code></TD>\n<TD>\"Redeem your gift certificate at\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificateIntro%%</code></TD>\n<TD>\"To redeem a gift certificate at %s, follow the simple steps below.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReferenceNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_RegisterAnAccount%%</code></TD>\n<TD>\"Register an account\"</td></tr>\n<TR><TD><CODE>%%LNG_RelatedProducts%%</code></TD>\n<TD>\"Related Products\"</td></tr>\n<TR><TD><CODE>%%LNG_RelatedSearches%%</code></TD>\n<TD>\"Related Searches\"</td></tr>\n<TR><TD><CODE>%%LNG_RemainingStoreCredit%%</code></TD>\n<TD>\"Remaining store credit:\"</td></tr>\n<TR><TD><CODE>%%LNG_Remove%%</code></TD>\n<TD>\"Remove\"</td></tr>\n<TR><TD><CODE>%%LNG_RemoveFromWishList%%</code></TD>\n<TD>\"Remove Item\"</td></tr>\n<TR><TD><CODE>%%LNG_Reorder%%</code></TD>\n<TD>\"Reorder\"</td></tr>\n<TR><TD><CODE>%%LNG_ReplyToYourOrderMessage%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ResponseCode%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ResponseMessage%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Return%%</code></TD>\n<TD>\"Return\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnAction%%</code></TD>\n<TD>\"Return Action\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnComments%%</code></TD>\n<TD>\"Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnedItem%%</code></TD>\n<TD>\"Returned Item\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnInstructions%%</code></TD>\n<TD>\"Return Instructions\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnItems%%</code></TD>\n<TD>\"Return Items\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnOrderItems%%</code></TD>\n<TD>\"Return Item(s)\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnQty%%</code></TD>\n<TD>\"Qty. to Return\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnReason%%</code></TD>\n<TD>\"Return Reason\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequests%%</code></TD>\n<TD>\"Return Requests\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequestsDescription%%</code></TD>\n<TD>\"View any outstanding return requests you've made for products you ordered from %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequestSubmitted%%</code></TD>\n<TD>\"Your return request has been submitted successfully.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnStatusChangedTo%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ReturnSubmittedInfo%%</code></TD>\n<TD>\"Your return request was submitted to %s for processing. When it has been processed you will receive an email with more details.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnToHomepage%%</code></TD>\n<TD>\"Return to the home page\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEmailHint%%</code></TD>\n<TD>\"We promise to never spam you, and just use your email address to identify you as a valid customer.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEnterYourEmail%%</code></TD>\n<TD>\"Your email:\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEnterYourName%%</code></TD>\n<TD>\"Enter your name: (optional)\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoEmail%%</code></TD>\n<TD>\"Please enter your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoRating%%</code></TD>\n<TD>\"Please select a rating.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoText%%</code></TD>\n<TD>\"Please enter some text for your review.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoTitle%%</code></TD>\n<TD>\"Please enter a title for your review.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewTheContentsOfYourOrder%%</code></TD>\n<TD>\"Please review the contents of your order below and then choose how you'd like to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_SaleProducts%%</code></TD>\n<TD>\"Products On Sale\"</td></tr>\n<TR><TD><CODE>%%LNG_Save%%</code></TD>\n<TD>\"Save\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveAddress%%</code></TD>\n<TD>\"Save Address\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveAddressInAddressBook%%</code></TD>\n<TD>\"Save this address in my address book\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveMyReview%%</code></TD>\n<TD>\"Save My Review\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveWishList%%</code></TD>\n<TD>\"Save Wish List\"</td></tr>\n<TR><TD><CODE>%%LNG_Search%%</code></TD>\n<TD>\"Search\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchByPrice%%</code></TD>\n<TD>\"Search by Price\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchBySetting%%</code></TD>\n<TD>\"Search by Setting\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchDidNotMatchContent%%</code></TD>\n<TD>\"did not match any news or information.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchDidNotMatchProduct%%</code></TD>\n<TD>\"did not match any products.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchedForBrands%%</code></TD>\n<TD>\"Did you mean to browse one of the following brands instead?\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchedForCategories%%</code></TD>\n<TD>\"Did you mean to browse one of the following categories instead?\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchExamples%%</code></TD>\n<TD>\"Examples:\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFeed%%</code></TD>\n<TD>\"View Results as RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters%%</code></TD>\n<TD>\"Search Filters\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters1%%</code></TD>\n<TD>\"Search filters allow you to specify custom conditions in your search terms. It's similar to performing an advanced search however you do not have to visit the advanced search page first.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters2%%</code></TD>\n<TD>\"Search filters should be appended to the end of your search terms. Multiple search filters can be separated by a space.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters3%%</code></TD>\n<TD>\"Supported search filters are listed below.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersFeatured%%</code></TD>\n<TD>\"Return featured products only.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersFreeShipping%%</code></TD>\n<TD>\"Return products with free shipping.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersInStock%%</code></TD>\n<TD>\"Return products that are currently in stock.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersPrice%%</code></TD>\n<TD>\"Allows search results to be filtered by price.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersRating%%</code></TD>\n<TD>\"Allows search results to be filtered by rating.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchKeyword%%</code></TD>\n<TD>\"Search Keyword\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchResultsTabContent%%</code></TD>\n<TD>\"News &amp; Information\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchResultsTabProduct%%</code></TD>\n<TD>\"Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion1%%</code></TD>\n<TD>\"Make sure all words are spelled correctly.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion2%%</code></TD>\n<TD>\"Try different keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion3%%</code></TD>\n<TD>\"Try more general keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestions%%</code></TD>\n<TD>\"Suggestions\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTips%%</code></TD>\n<TD>\"Search Tips\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTypeNewsItem%%</code></TD>\n<TD>\"News Item\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTypeWebPage%%</code></TD>\n<TD>\"Web Page\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchYourSearch%%</code></TD>\n<TD>\" Your search for\"</td></tr>\n<TR><TD><CODE>%%LNG_SecureCheckout%%</code></TD>\n<TD>\"Secure Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_SeeAllBrands%%</code></TD>\n<TD>\"See all brands\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectAWishListToDelete%%</code></TD>\n<TD>\"Please choose at least one wish list to delete.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectItemsToReorder%%</code></TD>\n<TD>\"Please select one or more items to reorder.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectItemsToReturn%%</code></TD>\n<TD>\"Which items do you want to return?\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectOneMoreItemsReturn%%</code></TD>\n<TD>\"Please select one or more items to return.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectReturnReason%%</code></TD>\n<TD>\"Please enter the reason you are returning these item(s).\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectValidGiftCertificateAmount%%</code></TD>\n<TD>\"Please choose a valid amount for this gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectValidGiftCertificateTheme%%</code></TD>\n<TD>\"Please select a theme for your gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_SendAMessage%%</code></TD>\n<TD>\"Send a Message\"</td></tr>\n<TR><TD><CODE>%%LNG_SendForm%%</code></TD>\n<TD>\"Send Form\"</td></tr>\n<TR><TD><CODE>%%LNG_SendMessage%%</code></TD>\n<TD>\"Send Message\"</td></tr>\n<TR><TD><CODE>%%LNG_Shared%%</code></TD>\n<TD>\"Shared\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipAllItemsToDifferentAddresses%%</code></TD>\n<TD>\"Ship items to different addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipAllItemsToOneAddress%%</code></TD>\n<TD>\"Ship all items to the same address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipmentOrderDate%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShipmentTrackingNumbersLinks%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShippedItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShippedTo%%</code></TD>\n<TD>\"Shipped to\"</td></tr>    \n<TR><TD><CODE>%%LNG_Shipping%%</code></TD>\n<TD>\"Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingAddress%%</code></TD>\n<TD>\"Shipping Address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingDetails%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingMethod%%</code></TD>\n<TD>\"Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingMethodCombined%%</code></TD>\n<TD>\"Multiple Shipping Methods\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingProvider%%</code></TD>\n<TD>\"Choose a Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipTo%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipToTheseAddresses%%</code></TD>\n<TD>\"Ship to These Addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipToThisAddress%%</code></TD>\n<TD>\"Ship to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShopByPrice%%</code></TD>\n<TD>\"Shop by Price\"</td></tr>\n<TR><TD><CODE>%%LNG_ShowingReviews%%</code></TD>\n<TD>\"Showing reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_ShowSearchForm%%</code></TD>\n<TD>\"Show Search Form\"</td></tr>\n<TR><TD><CODE>%%LNG_SideCartTotalCost%%</code></TD>\n<TD>\"Your sub total is <strong>%s</strong>.\"</td></tr>\n<TR><TD><CODE>%%LNG_Sitemap%%</code></TD>\n<TD>\"Sitemap\"</td></tr>\n<TR><TD><CODE>%%LNG_SitemapIntroduction%%</code></TD>\n<TD>\"A sitemap lists all pages available on a website. The sitemap for web pages on %%GLOBAL_StoreName%% is shown below:\"</td></tr>\n<TR><TD><CODE>%%LNG_SitemapSeeAll%%</code></TD>\n<TD>\"See All\"</td></tr>\n<TR><TD><CODE>%%LNG_Size%%</code></TD>\n<TD>\"Maximum Size\"</td></tr>\n<TR><TD><CODE>%%LNG_SKU%%</code></TD>\n<TD>\"SKU\"</td></tr>\n<TR><TD><CODE>%%LNG_SomethingWentWrong%%</code></TD>\n<TD>\"Something Went Wrong...\"</td></tr>\n<TR><TD><CODE>%%LNG_SortBy%%</code></TD>\n<TD>\"Sort by\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductBrand%%</code></TD>\n<TD>\"Sort products by brand\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductName%%</code></TD>\n<TD>\"Sort products by name\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductPrice%%</code></TD>\n<TD>\"Sort products by price\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductRating%%</code></TD>\n<TD>\"Sort products by average rating\"</td></tr>\n<TR><TD><CODE>%%LNG_StateProvince%%</code></TD>\n<TD>\"State/Province\"</td></tr>\n<TR><TD><CODE>%%LNG_StatusOfReturnChanged%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_StoreCredit%%</code></TD>\n<TD>\"Store Credit\"</td></tr>\n<TR><TD><CODE>%%LNG_StoreCreditBalance%%</code></TD>\n<TD>\"Your store credit balance:\"</td></tr>\n<TR><TD><CODE>%%LNG_SubmitNewReturn%%</code></TD>\n<TD>\"Return Item(s) from Order #%s\"</td></tr>\n<TR><TD><CODE>%%LNG_SubmitReturn%%</code></TD>\n<TD>\"Submit Return Request\"</td></tr>\n<TR><TD><CODE>%%LNG_Subtotal%%</code></TD>\n<TD>\"Subtotal\"</td></tr>\n<TR><TD><CODE>%%LNG_SuggestiveCartIntro%%</code></TD>\n<TD>\"We found some products that you might also be interested in.\"</td></tr>\n<TR><TD><CODE>%%LNG_Summary%%</code></TD>\n<TD>\"Summary\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProducts%%</code></TD>\n<TD>\"Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsAtom%%</code></TD>\n<TD>\"Latest %s Featured Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsIntro%%</code></TD>\n<TD>\"The featured products feed contains the latest %s featured products.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsRSS%%</code></TD>\n<TD>\"Latest %s Featured Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateIntro%%</code></TD>\n<TD>\"RSS feeds are used for syndicating regularly changing content on a web site, including this one. You can open an RSS feed using an &lt;a href='http://en.wikipedia.org/wiki/Aggregator'&gt;RSS reader&lt;/a&gt; and use it to see if there is any new content on this site or you can set up a server-side script to parse the feed and display it on your web site.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProducts%%</code></TD>\n<TD>\"New Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsAtom%%</code></TD>\n<TD>\"Latest %s New Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsIntro%%</code></TD>\n<TD>\"The latest products feed contains the latest %s products added to %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsRSS%%</code></TD>\n<TD>\"Latest %s New Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNews%%</code></TD>\n<TD>\"Recent News\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsAtom%%</code></TD>\n<TD>\"Latest %s News items (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsIntro%%</code></TD>\n<TD>\"The recent news feed contains the latest %s news items published on %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsRSS%%</code></TD>\n<TD>\"Latest %s New Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProducts%%</code></TD>\n<TD>\"Popular Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsAtom%%</code></TD>\n<TD>\"Latest %s Popular Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsIntro%%</code></TD>\n<TD>\"The popular products feed contains the top %s most popular products on %s as rated by users.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsRSS%%</code></TD>\n<TD>\"Latest %s Popular Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearches%%</code></TD>\n<TD>\"Product Searches\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearchesIntro%%</code></TD>\n<TD>\"Product search feeds allow you to save your custom product searches as syndication feed that will always update when there are new results.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearchesIntro2%%</code></TD>\n<TD>\"To create a product search feed, perform a standard search on %s and at the bottom of the page click on one of the syndication options.\"</td></tr>\n<TR><TD><CODE>%%LNG_TermsAndConditions%%</code></TD>\n<TD>\"Terms And Conditions\"</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringAt%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringAtIntro%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailLogin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailLogin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForYourOrder%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThisIsAnAutomatedMessage%%</code></TD>\n<TD>\"*** This is an automated message, please do not reply ***\"</td></tr>\n<TR><TD><CODE>%%LNG_ThisOrderIsMarkedAs%%</code></TD>\n<TD>\"This order is marked as\"</td></tr>\n<TR><TD><CODE>%%LNG_TickArgeeTermsAndConditions%%</code></TD>\n<TD>\"Please agree to the terms and conditions by ticking the check box to place your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_To%%</code></TD>\n<TD>\"to\"</td></tr>\n<TR><TD><CODE>%%LNG_Total%%</code></TD>\n<TD>\"Total\"</td></tr>\n<TR><TD><CODE>%%LNG_ToYourWishList%%</code></TD>\n<TD>\"to your wish list.\"</td></tr>\n<TR><TD><CODE>%%LNG_TrackingLink%%</code></TD>\n<TD>\"Tracking Link\"</td></tr>\n<TR><TD><CODE>%%LNG_TrackingNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_TransactionType%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_TryAgain%%</code></TD>\n<TD>\"Try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_Type%%</code></TD>\n<TD>\"Type\"</td></tr>\n<TR><TD><CODE>%%LNG_units%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Update%%</code></TD>\n<TD>\"Update\"</td></tr>\n<TR><TD><CODE>%%LNG_UpdateMyDetails%%</code></TD>\n<TD>\"Update My Details\"</td></tr>\n<TR><TD><CODE>%%LNG_UpdateShippingCost%%</code></TD>\n<TD>\"Update Shipping Cost\"</td></tr>\n<TR><TD><CODE>%%LNG_ValutecNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_VariationSoldOutMessage%%</code></TD>\n<TD>\"The selected product combination is currently unavailable.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewCart%%</code></TD>\n<TD>\"View Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewEditCart%%</code></TD>\n<TD>\"View or edit your cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewMessages%%</code></TD>\n<TD>\"View Messages\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewMessagesDescription%%</code></TD>\n<TD>\"You can receive and send messages to %s about your order. When a message is sent regarding one of your orders, you will receive an email notification.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewOrder%%</code></TD>\n<TD>\"View Order Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewOrderStatusDescription%%</code></TD>\n<TD>\"See the status of every order you've placed at %s, including whether it has been shipped, and if so an optional tracking number.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewYourOrderStatus%%</code></TD>\n<TD>\"View Order Status\"</td></tr>\n<TR><TD><CODE>%%LNG_Weight%%</code></TD>\n<TD>\"Weight\"</td></tr>\n<TR><td><code>%%LNG_WhatsThis%%</code></TD>\n<TD>\"What's This?\"</td></tr>\n<TR><TD><CODE>%%LNG_WhyReturningItems%%</code></TD>\n<TD>\"Why are you returning these items?\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListCancel%%</code></TD>\n<TD>\"Are you sure you want to cancel? Any unsaved changes will be lost.\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListDelete%%</code></TD>\n<TD>\"Delete Selected\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListName%%</code></TD>\n<TD>\"Wish List Name\"</td></tr>\n<TR><TD><CODE>%%LNG_WishLists%%</code></TD>\n<TD>\"Wish Lists\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListsDescription%%</code></TD>\n<TD>\"See a list of items in your wish list and optionally add each item to your shopping cart for purchase.\"</td></tr>\n<TR><TD><CODE>%%LNG_WouldLikeToReceiveNewsletter%%</code></TD>\n<TD>\"I'd like to receive your newsletter\"</td></tr>\n<TR><TD><CODE>%%LNG_WrapItemsDifferently%%</code></TD>\n<TD>\"I'd like to gift wrap each item separately\"</td></tr>\n<TR><TD><CODE>%%LNG_WrapItemsTheSame%%</code></TD>\n<TD>\"I'd like to wrap each of this item using the same wrapping options\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteAHeadline%%</code></TD>\n<TD>\"Write a headline for your review here:\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteYourOwnReview%%</code></TD>\n<TD>\"Write Your Own Review\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteYourReview%%</code></TD>\n<TD>\"Write your review here:\"</td></tr>\n<TR><TD><CODE>%%LNG_xOn%%</code></TD>\n<TD>\"on\"</td></tr>\n<TR><TD><CODE>%%LNG_YesShareWishList%%</code></TD>\n<TD>\"I want to be able to share this wish list\"</td></tr>\n<TR><TD><CODE>%%LNG_YouMayAlsoLike%%</code></TD>\n<TD>\"You May Also Like...\"</td></tr>\n<TR><td><code>%%LNG_YourAccount%%</code></TD>\n<TD>\"My Account\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAccountDetails%%</code></TD>\n<TD>\"Your Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAccountHelpIntro%%</code></TD>\n<TD>\"From this page you can view your orders, update your account details and more. Choose an option from the menu on the right or learn more about each option below:\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAddressBook%%</code></TD>\n<TD>\"Your Address Book\"</td></tr>\n<TR><TD><CODE>%%LNG_YourCartContains%%</code></TD>\n<TD>\"Your cart contains\"</td></tr>\n<TR><TD><CODE>%%LNG_YourComments%%</code></TD>\n<TD>\"Your Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_YouRecentlyViewed%%</code></TD>\n<TD>\"You Recently Viewed...\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrder%%</code></TD>\n<TD>\"Your Order\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingDownloadableItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingItems2%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderDetailsBelow%%</code></TD>\n<TD>\"Your order details are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderIDIs%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrders%%</code></TD>\n<TD>\"Your Completed Orders\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderTotal%%</code></TD>\n<TD>\"Your order total cost:\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderTotalIs%%</code></TD>\n<TD>\"The outstanding balance of your order is\"</td></tr>\n<TR><TD><CODE>%%LNG_YourReturns%%</code></TD>\n<TD>\"Your Return Requests\"</td></tr>\n<TR><TD><CODE>%%LNG_YourShoppingCart%%</code></TD>\n<TD>\"Your Shopping Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ZipPostcode%%</code></TD>\n<TD>\"Zip/Postcode\"</td></tr>\n</tbody>\n</table>"
              - title: Email Templates
                route:
                  path: /blueprint-email-templates
                data:
                  blocks:
                    - type: html
                      data: "<h1>Email Templates</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#gift-certificate-email-template\">Gift Certificate Email Template</a></li>\n\t\t<li><a href=\"#abandoned-cart-email-template\">Abandoned Cart Email Template</a></li>\n    <li><a href=\"#invoice-email-template\">Invoice Email Template</a></li>\n    <li><a href=\"#order-status-email-template\">Order Status Email Template</a></li>\n    <li><a href=\"#return-confirmation-email-template\">Return Confirmation Email Template</a></li>\n\t\t</ul>\n</div>"
                    - type: text
                      data: >+
                        The following variables are available within individual
                        BigCommerce email template:

                    - type: text
                      data: |-
                        ## Gift Certificate Email Template 

                        Sent to the recipient of a gift certificate.

                        ### Available Variables 
                        |||
                        |---|---|
                        | %%LNG_GiftCertificateEmailYouHaveReceived%%
                        | %%GLOBAL_StoreName%%
                        | %%LNG_Dear%%
                        | %%GLOBAL_ToName%%
                        | %%GLOBAL_Intro%%
                        | %%GLOBAL_ExpiryInfo%%
                        | %%LNG_GiftCertificateEmailInstructions%%
                        | %%LNG_GiftCertificateEmailAttached%%
                        | %%LNG_GiftCertificateEmailWarning%%
                        | %%GLOBAL_EmailFooter%%
                      header:
                        anchor: gift-certificate-email-template
                    - type: text
                      data: '---'
                    - type: text
                      data: |-
                        ## Abandoned Cart Email Template 

                        Sent when a customer abandons a shopping cart.

                        ### Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AC_EmailBody%%
                        | %%GLOBAL_EmailFooter%%
                        | %%GLOBAL_AC_UnsubscribeLink%%
                        | %%LNG_AC_EmailUnsubscribe%%
                        | %%LNG_AC_EmailUnsubscribeSuffix%%
                      header:
                        anchor: abandoned-cart-email-template
                    - type: text
                      data: '---'
                    - type: text
                      data: |
                        ## Invoice Email Template 

                        Sent when a customer places an order.

                        ### Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_NoPaymentTaken%%
                        | %%LNG_ThanksForYourOrder%%
                        | %%GLOBAL_IMG_PATH%%
                        | %%LNG_YourOrderIDIs%%
                        | %%GLOBAL_OrderNumber%%
                        | %%GLOBAL_ViewOrderStatusMsg%%
                        | %%GLOBAL_PendingPaymentNotice%%
                        | %%LNG_ShippingAddress%%
                        | %%GLOBAL_ShippingAddress%%</div>
                        | %%GLOBAL_HideShippingEmail%%"
                        | %%LNG_Email%%
                        | %%GLOBAL_ShippingEmail%%
                        | %%LNG_BillingAddress%%
                        | %%GLOBAL_BillingAddress%%
                        | %%GLOBAL_HideBillingEmail%%
                        | %%LNG_Email%%
                        | %%GLOBAL_BillingEmail%%
                        | %%GLOBAL_PendingPaymentDetails%%
                        | %%GLOBAL_OrderCommentBlock%%
                        | %%LNG_YourOrderContainsTheFollowingItems%%
                        | %%GLOBAL_CartItemColumns%%
                        | %%SNIPPET_CartItems%%
                        | %%SNIPPET_TotalRows%%
                        | %%SNIPPET_PaymentMethod%%
                        | %%GLOBAL_EmailFooter%%
                        | %%GLOBAL_ProductThumbImageURL%%
                      header:
                        anchor: invoice-email-template
                    - type: text
                      data: '---'
                    - type: text
                      data: |-
                        ## Order Status Email Template 

                        Sent when an order's status is changed.

                        ### Available Variables 
                        |||
                        |---|---|
                        | %%LNG_OrderStatusChanged%% |
                        | %%GLOBAL_OrderStatusChangedHi%% |
                        | %%LNG_OrderStatusChangedIntro%% |
                        | %%GLOBAL_OrderNumberStatusChangedTo%% |
                        | %%LNG_OrderDetails%% |
                        | %%LNG_OrderStatusChangedOrderTotal%% |
                        | %%GLOBAL_OrderTotal%% |
                        | %%LNG_OrderStatusChangedDatePlaced%% |
                        | %%GLOBAL_DatePlaced%% |
                        | %%LNG_OrderStatusChangedPaymentMethod%% |
                        | %%GLOBAL_PaymentMethod%% |
                        | %%LNG_ShipmentTrackingNumbersLinks%% |
                        | %%GLOBAL_TrackingLinkList%% |
                        | %%GLOBAL_ViewOrderStatusLink%% |
                        | %%GLOBAL_EmailFooter%% |
                      header:
                        anchor: order-status-email-template
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Return Confirmation Email Template 


                        Sent when a customer submits a return request.


                        ### Available Variables 

                        |||

                        |---|---|

                        | %%LNG_NotificationConfirmationForReturn%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%LNG_NotificationAReturnSummaryIsShownBelow%% |

                        | %%GLOBAL_ShopPath%% |

                        | %%LNG_ClickHere%% |

                        | %%LNG_ReturnReason%% |

                        | %%GLOBAL_ReturnReason%% |

                        | %%GLOBAL_HideReturnAction%% |

                        | %%LNG_ReturnAction%% |

                        | %%GLOBAL_ReturnAction%% |

                        | %%LNG_YourComments%% |

                        | %%GLOBAL_ReturnComments%% |

                        |
                        %%LNG_NotificationYourReturnContainsTheFollowingItems%%
                        |

                        | %%LNG_ReturnItems%% |

                        | %%LNG_Qty%% |

                        | %%SNIPPET_ReturnItems%% |

                        | %%GLOBAL_EmailFooter%% |
                      header:
                        anchor: return-confirmation-email-template
              - title: Checkout Styling
                route:
                  path: /checkout-styling
                data:
                  blocks:
                    - type: html
                      data: "<h1>Checkout Styling</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#customization-options-restrictions\">Customization Options/Restrictions</a></li>\n\t\t<li><a href=\"#configuring-desktop-viewport\">Configuring the Desktop Viewport</a></li>\n    <li><a href=\"#deploying-custom-css\">Deploying Custom CSS</a></li>\n    <li><a href=\"#classes-provided\">Classes Provided</a></li>\n    <li><a href=\"#css-skeleton\">CSS Skeleton</a></li>\n\t\t</ul>\n</div>"
                    - type: text
                      data: >-
                        To support stores that enable BigCommerce's Optimized
                        One-Page Checkout feature, you can customize the
                        Optimized Checkout page's styling within your theme. You
                        do this by adding custom CSS to the
                        `optimized-checkout-webdav.css` template file that we
                        provide. You can download the template as a <a
                        href="/assets/optimized-checkout-webdav.css.zip">.zip
                        file here</a>, or copy the CSS [below](#css-skeleton).
                    - type: callout
                      data:
                        type: success
                        body: >-
                          Although you will see references to "Stencil"
                          functions throughout this template file's CSS, this
                          version of the CSS is designed to be fully compatible
                          with Blueprint themes.
                        title: Function Names
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Customization Options/Restrictions 


                        As a theme developer, you are free to change classes'
                        contents – but do not nest elements, nor change any
                        class names. 


                        The structure and class naming are reserved because each
                        class here maps to multiple Optimized Checkout elements.
                        So renaming would break updates available in future
                        Optimized Checkout enhancements.
                      header:
                        anchor: customization-options-restrictions
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Configuring the Desktop Viewport 


                        Within the CSS file, to set up Optimized Checkout's
                        responsive features, you should configure the following
                        breakpoint to define your preferred desktop viewport
                        size:
                      header:
                        anchor: configuring-desktop-viewport
                    - type: code
                      data: >-

                        // TODO:

                        // Configure media query to be 'desktop' breakpoint size

                        //
                        -----------------------------------------------------------------------------

                        @media (min-width: 801px) {
                            text-align: stencilString("optimizedCheckout-logo-position");
                        }
                      config:
                        mode: css
                    - type: text
                      data: >
                        For other customization options, please see the class
                        descriptions [below](#classes-provided).
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Deploying Custom CSS 


                        To deploy your custom CSS to a BigCommerce store, you
                        will need to upload your `optimized-checkout-webdav.css`
                        file (once customized) via WebDAV. 


                        For a general overview of the process, please see [this
                        support
                        article](https://support.bigcommerce.com/articles/Public/Accessing-and-Customizing-Template-Files/).
                        Place your customized `optimized-checkout-webdav.css`
                        file directly within WebDAV's `/content/` folder.


                        For details on interacting with WebDAV, please see [this
                        article](https://support.bigcommerce.com/articles/Public/Connecting-to-WebDav).
                      header:
                        anchor: deploying-custom-css
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Classes Provided 


                        Below is a summary of the classes provided in the
                        template CSS, with corresponding page elements that they
                        style. (These class names and mappings are subject to
                        change, so please see the inline comments embedded in
                        the file itself.)
                      header:
                        anchor: classes-provided
                    - type: text
                      data: >-
                        | Class | Styles This Optimized One-Page Checkout
                        Element: |

                        |---|---|

                        | .optimizedCheckout-header | Page header. |

                        | .optimizedCheckout-headingPrimary | Top-level
                        headings. |

                        | .optimizedCheckout-headingSecondary | Certain
                        lower-level elements, such as descriptions of cart
                        items. |

                        | .optimizedCheckout-overlay | Shipping Method box. |

                        | .optimizedCheckout-contentPrimary | Body text in the
                        desktop `Order Summary`/`Order Confirmation` (cart
                        contents); drop-down-list items; and text that
                        summarizes completed steps. |

                        | .optimizedCheckout-contentSecondary | Text labels on
                        check boxes, and lower-level text in the desktop Order
                        Summary. |

                        | .optimizedCheckout-button--primary | `CONTINUE` button
                        and final `PAY` button. |

                        | .optimizedCheckout-button--secondary | `Edit` buttons.

                        | .optimizedCheckout-orderSummary | Colors in the `Order
                        Summary` mobile drawer/modal.

                        | .optimizedCheckout-step | Large step-number indicators
                        on the page's left side. |

                        | .optimizedCheckout-form-label | Styles form fields
                        like `Email Address` – the field's text-label color. | 

                        | .optimizedCheckout-form-input | Styles form fields
                        like `Email Address` – the entry box's background and
                        border colors. |
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## CSS Skeleton 


                        You can copy and modify the template
                        `optimized-checkout-webdav.css` file's current contents
                        directly from this documentation, below: 
                      header:
                        anchor: css-skeleton
                    - type: code
                      data: >-
                        /* 

                        //
                        =============================================================================

                        // Stencil Checkout - Customize the Optimized
                        Single-Page Checkout experience

                        //
                        =============================================================================

                        */


                        /*

                        //
                        =============================================================================

                        //

                        // IMPORTANT DISCLAIMER

                        // Please do not nest elements within class selectors,
                        and do not use class selectors other than those given
                        below.

                        // Future support is guaranteed only if class selectors'
                        structure and naming are left unchanged.

                        //

                        //
                        =============================================================================

                        */



                        /*

                        // Header Section

                        // Background, Logo Position

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-header {
                            background-color: stencilColor("optimizedCheckout-header-backgroundColor");
                            background-image: url(stencilImage('optimizedCheckout-backgroundImage', 'optimizedCheckout-backgroundImage-size'));
                            background-size: cover;
                        }


                        /*

                        // TODO:

                        // Configure media query to be 'desktop' breakpoint size

                        //
                        -----------------------------------------------------------------------------

                        */


                        @media (min-width: 801px) {
                            .optimizedCheckout-header {
                                text-align: stencilString("optimizedCheckout-logo-position");
                            }
                        }


                        /*

                        // Primary and Secondary Headings

                        // Text Color & Typography

                        //

                        // .optimizedCheckout-headingPrimary styles top-level
                        headings.

                        //

                        // .optimizedCheckout-headingSecondary styles certain
                        lower-level elements, such as descriptions of cart
                        items.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-headingPrimary {
                            color: stencilColor("optimizedCheckout-headingPrimary-color");
                            font-family: stencilFontFamily("optimizedCheckout-headingPrimary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-headingPrimary-font");
                        }


                        .optimizedCheckout-headingSecondary {
                            color: stencilColor("optimizedCheckout-headingSecondary-color");
                            font-family: stencilFontFamily("optimizedCheckout-headingSecondary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-headingSecondary-font");
                        }


                        /*

                        // Body

                        // Background & Shipping Method Overlay

                        //
                        -----------------------------------------------------------------------------

                        */


                        body {
                            background-color: stencilColor("optimizedCheckout-body-backgroundColor");
                        }


                        .optimizedCheckout-overlay {
                            background-color: stencilColor("optimizedCheckout-body-backgroundColor");
                        }


                        /*

                        // Primary & Secondary Content

                        // Text Color & Typography

                        //

                        // .optimizedCheckout-contentPrimary styles body text in
                        the Order Summary/Order Confirmation; 

                        // drop-down-list items; and text summarizing completed
                        steps.

                        //

                        // .optimizedCheckout-contentSecondary styles check
                        boxes' text labels, 

                        // and lower-level text in the Order Summary.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-contentPrimary {
                            color: stencilColor("optimizedCheckout-contentPrimary-color");
                            font-family: stencilFontFamily("optimizedCheckout-contentPrimary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-contentPrimary-font");
                        }


                        .optimizedCheckout-contentSecondary {
                            color: stencilColor("optimizedCheckout-contentSecondary-color");
                            font-family: stencilFontFamily("optimizedCheckout-contentSecondary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-contentSecondary-font");
                        }


                        /*

                        // Primary Button

                        // Background & Border & Text Color & Typography

                        //

                        // Styles the CONTINUE button for each step, & the final
                        confirmation button.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-buttonPrimary {
                            background-color: stencilColor("optimizedCheckout-buttonPrimary-backgroundColor");
                            border-color: stencilColor("optimizedCheckout-buttonPrimary-borderColor");
                            color: stencilColor("optimizedCheckout-buttonPrimary-color");
                            font-family: stencilFontFamily("optimizedCheckout-buttonPrimary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-buttonPrimary-font");
                        }


                        .optimizedCheckout-buttonPrimary:focus,

                        .optimizedCheckout-buttonPrimary:hover {
                            background-color: stencilColor("optimizedCheckout-buttonPrimary-backgroundColorHover");
                            border-color: stencilColor("optimizedCheckout-buttonPrimary-borderColorHover");
                            color: stencilColor("optimizedCheckout-buttonPrimary-colorHover");
                        }


                        .optimizedCheckout-buttonPrimary:active {
                            background-color: stencilColor("optimizedCheckout-buttonPrimary-backgroundColorActive");
                            border-color: stencilColor("optimizedCheckout-buttonPrimary-borderColorActive");
                            color: stencilColor("optimizedCheckout-buttonPrimary-colorActive");
                        }


                        /*

                        // Secondary Button

                        // Background & Border & Text Color & Typography

                        //

                        // Styles the EDIT button for each step.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-buttonSecondary {
                            background-color: stencilColor("optimizedCheckout-buttonSecondary-backgroundColor");
                            border-color: stencilColor("optimizedCheckout-buttonSecondary-borderColor");
                            color: stencilColor("optimizedCheckout-buttonSecondary-color");
                            font-family: stencilFontFamily("optimizedCheckout-buttonSecondary-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-buttonSecondary-font");
                        }


                        /*

                        // Links

                        // Text Color & Typography

                        //
                        -----------------------------------------------------------------------------

                        */


                        a {
                            color: stencilColor("optimizedCheckout-link-color");
                            font-family: stencilFontFamily("optimizedCheckout-link-font"), Arial, Helvetica, sans-serif;
                            font-weight: stencilFontWeight("optimizedCheckout-link-font");
                        }


                        /*

                        // Order Summary (Mobile Drawer & Modal)

                        // Background

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-orderSummary {
                            background-color: stencilColor("optimizedCheckout-orderSummary-backgroundColor");
                        }


                        /*

                        // Checkout Steps

                        // Background & Text Color

                        //

                        // Styles the large step-number indicators on the page's
                        left side.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-step {
                            background-color: stencilColor("optimizedCheckout-step-backgroundColor");
                        }


                        .optimizedCheckout-step::before {
                            color: stencilColor("optimizedCheckout-step-text");
                        }


                        .optimizedCheckout-step svg {
                            fill: stencilColor("optimizedCheckout-step-text");
                        }


                        /*

                        // Form Labels

                        // Text Color

                        //

                        // Styles text labels on form fields.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-form-label {
                            color: stencilColor("optimizedCheckout-form-text");
                        }


                        /*

                        // Form Input

                        // Background & Border Color

                        //

                        // Styles form fields.

                        //
                        -----------------------------------------------------------------------------

                        */


                        .optimizedCheckout-form-input {
                            background-color: stencilString("optimizedCheckout-formField-backgroundColor");
                            border-color: stencilColor("optimizedCheckout-formField-borderColor");
                        }
                      config:
                        mode: css
        - title: Blueprint Reference
          route:
            path: /blueprint-reference
          data:
            children:
              - title: Layouts
                route:
                  path: /blueprint-layouts
                data:
                  blocks:
                    - type: text
                      data: >-
                        # 403 Layout 


                        `403.html`


                        Shown when a customer does not have the permissions
                        necessary to view a particular category, product or web
                        page.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 


                        |||

                        |---|---|

                        | %%GLOBAL_Contact%% |


                        # 404 Layout 


                        `404.html`


                        Shown when a customer accesses an invalid URL (such as
                        an old removed product) or there is a typo in the URL
                        they’re viewing.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Account Addressbook Layout 


                        `account_addressbook.html`


                        A list of shipping addresses (found under the My Account
                        > Address Book menu) that the customer currently has as
                        well as edit/remove links.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.ChooseShippingAddress%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Downloaditem Layout 


                        `account_downloaditem.html`


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountDownloadItemsBreadcrumb%% |

                        | %%Panel.AccountDownloadItems%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_DownloadTitle%% |


                        # Account Inbox Layout 


                        `account_inbox.html`


                        The list of order messages the customer has associated
                        with any of their past orders and the “new order
                        message” form for submitting a new order message.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountInbox%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account New Return Layout 


                        `account_new_return.html`


                        The new return request/submission page.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountNewReturnBreadcrumb%% |

                        | %%Panel.AccountNewReturnProducts%% |

                        | %%Panel.AccountNewReturnInfo%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_HideErrorMessage%% |

                        | %%GLOBAL_ErrorMessage%% |


                        # Account Order Layout 


                        `account_order.html`


                        Shown when a customer is viewing the details of a past
                        order they’ve placed on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountOrder%% |

                        | %%Panel.AccountOrderLinks%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Orders Layout 


                        `account_orders.html`


                        A list of previously completed orders placed on the
                        store by the customer.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountOrders%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Orderstatus Layout 


                        `account_orderstatus.html`


                        A list of currently pending orders placed on the store
                        by the customer.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountOrderStatus%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Recentitems Layout 


                        `account_recentitems.html`


                        A list of products recently viewed on the store by the
                        customer.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountRecentItems%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Returns Layout 


                        `account_returns.html`


                        A list of previously submitted returns requests by the
                        customer.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountReturns%% |

                        | %%Panel.AccountReturns%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        # Account Saved Return Layout 


                        `account_saved_return.html`


                        Shown after a customer successfully submits a new
                        returns request on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideReturnInstructions%% |

                        | %%GLOBAL_ReturnInstructions%% |


                        # Account Layout 


                        `account.html`


                        The “My Account” welcome page with an explanation on
                        each of the sections available for the customer.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.SideAccountStoreCredit%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideMessagesMenu%% |

                        | %%GLOBAL_HideReturnRequestsMenu%% |

                        | %%GLOBAL_HideWishlist%% |


                        # Createaccount Layout 


                        `createaccount.html`


                        The account creation/signup form where customers can
                        create an account on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.CreateAccountBreadcrumb%% |

                        | %%Panel.CreateAccountForm%% |

                        | %%Panel.Footer%% |


                        # Createaccount Thanks Layout 


                        `createaccount_thanks.html`


                        A thank you page shown after the customer has
                        successfully registered an account on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_Continue%% |

                        | %%GLOBAL_ContinueLink%% |


                        # Editaccount Layout 


                        `editaccount.html`


                        Shown in the “My Account” section of the store when a
                        customer chooses to edit their account.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.EditAccountBreadcrumb%% |

                        | %%Panel.EditAccountForm%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Bottom Layout 

                        `bottom.html`

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Brands Layout 


                        `brands.html`


                        A list of products in a particular brand, or if no brand
                        is specified, a list of brands configured in the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.BrandBreadcrumb%% |

                        | %%Panel.BrandContent%% |

                        | %%Panel.SideBrandTagCloud%% |

                        | %%Panel.SideShopByBrandFull%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Cart Layout 


                        `cart.html`


                        The “View Cart” page showing the contents of the current
                        customers cart.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.CartBreadcrumb%% |

                        | %%Panel.CartHeader%% |

                        | %%Panel.CartStatusMessage%% |

                        | %%Panel.CartContent%% |

                        | %%Panel.SuggestiveCartContent%% |

                        | %%Panel.SideCouponCodeBox%% |

                        | %%Panel.SideGiftCertificateCodeBox%% |

                        | %%Panel.SideProductRecentlyViewed%% |

                        | %%Panel.SideTopSellers%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |
                    - type: text
                      data: >-
                        # Category Layout 


                        `category.html`


                        A list of products or sub categories that exist within a
                        particular category.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideCategoryShopByPrice%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SideLiveChatServices%% |

                        | %%Panel.CategoryBreadcrumb%% |

                        | %%Panel.CategoryHeading%% |

                        | %%Panel.CategoryPagingTop%% |

                        | %%Panel.CategoryContent%% |

                        | %%Panel.CategoryPagingBottom%% |

                        | %%Panel.SideCategoryTopSellers%% |

                        | %%Panel.SideCategoryPopularProducts%% |

                        | %%Panel.SideCategoryNewProducts%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ExtraCategoryClass%% |

                        | %%GLOBAL_HideRightColumn%% |
                    - type: text
                      data: >-
                        # Checkout Address Layout 


                        `checkout_address.html`


                        The billing/shipping address form shown as the second
                        step of the checkout process.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.ChooseBillingAddress%% |

                        | %%Panel.ChooseShippingAddress%% |

                        | %%Panel.CheckoutNewAddressForm%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |


                        # Checkout Confirm Layout 


                        `checkout_confirm.html`


                        The order confirmation page (last page of the multi-page
                        checkout) showing a summary of the order.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.ConfirmOrder%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |


                        # Checkout Express Layout 


                        `checkout_express.html`


                        The express single-page checkout.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_LoginMessage%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_CollapsedStepClassBillingAddress%% |

                        | %%GLOBAL_ExpressCheckoutStepBillingAddress%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_CollapsedStepClassShippingAddress%% |

                        | %%GLOBAL_ExpressCheckoutHideShippingAddress%% |

                        | %%GLOBAL_ExpressCheckoutStepShippingAddress%% |

                        | %%GLOBAL_CollapsedStepClassShippingProvider%% |

                        | %%GLOBAL_ExpressCheckoutHideShippingProviders%% |

                        | %%GLOBAL_ExpressCheckoutStepShippingProvider%% |

                        | %%GLOBAL_CollapsedStepClassConfirmation%% |

                        | %%GLOBAL_ExpressCheckoutStepConfirmation%% |

                        | %%GLOBAL_CollapsedStepClassPaymentDetails%% |

                        | %%GLOBAL_ExpressCheckoutHidePaymentDetails%% |

                        | %%GLOBAL_ExpressCheckoutStepPaymentDetails%% |

                        | %%GLOBAL_CustomCheckoutFormNewAccount%% |

                        | %%GLOBAL_CustomCheckoutFormBillingAddress%% |

                        | %%GLOBAL_CustomCheckoutFormShippingAddress%% |

                        | %%GLOBAL_ExpressCheckoutSignedIn%% |

                        | %%GLOBAL_ExpressCheckoutDigitalOrder%% |

                        | %%GLOBAL_GoToStep%% |

                        | %%GLOBAL_FormFieldRequiredJS%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_CollapsedStepClassAccountDetails%% |

                        | %%GLOBAL_ExpressCheckoutHideAccountDetails%% |

                        | %%GLOBAL_ExpressCheckoutStepAccountDetails%% |

                        | %%GLOBAL_HideGuestCheckoutOptions%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_HideRegisteredCheckoutOptions%% |

                        | %%GLOBAL_IMG_PATH%% |


                        # Checkout Payment Layout 


                        `checkout_payment.html`


                        The payment details collection form shown in the
                        multi-page checkout. This page will be shown if the
                        selected payment method has an additional form (such as
                        one for requesting credit card details)


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_PaymentFormContent%% |


                        # Checkout Shipper Layout 


                        `checkout_shipper.html`


                        The shipping provider selection page shown for the
                        multi-page checkout.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.ChooseShippingProvider%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |


                        # Checkout Layout 


                        `checkout.html`


                        The first page of the standard multi-page checkout shown
                        for guests asking them to either login, create an
                        account or checkout as a guest.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCheckoutGuest%% |

                        | %%GLOBAL_HideCheckoutRegistrationRequired%% |

                        | %%GLOBAL_HideLoginMessage%% |

                        | %%GLOBAL_MessageClass%% |

                        | %%GLOBAL_LoginMessage%% |
                    - type: text
                      data: >-
                        # Compare Layout 


                        `compare.html`


                        Shown when a customer chooses to compare one or more
                        products with each other.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.CompareBreadcrumb%% |

                        | %%Panel.CompareContent%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Default Layout 

                        `default.html`

                        The default index page of the store.

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SidePopularVendors%% |
                        | %%Panel.SideShopByBrand%% |
                        | %%Panel.SideNewsletterBox%% |
                        | %%Panel.SideLiveChatServices%% |
                        | %%Panel.HomeFeaturedProducts%% |
                        | %%Panel.HomeNewProducts%% |
                        | %%Panel.HomeRecentBlogs%% |
                        | %%Panel.SideCartContents%% |
                        | %%Panel.SideTopSellers%% |
                        | %%Panel.SideNewProducts%% |
                        | %%Panel.SidePopularProducts%% |
                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Error Layout 


                        `error.html`


                        A generic page that can be shown whenever there is an
                        error message on the store and no additional content on
                        the page needs to be shown.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ErrorMessage%% |

                        | %%GLOBAL_ErrorDetails%% |
                    - type: text
                      data: >-
                        # Giftcertificates Balance Layout 


                        `giftcertificates_balance.html`


                        Allows customers to check the remaining balance (and
                        shows the remaining balance) of a gift certificate.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.GiftCertificatesMenu%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.GiftCertificateBalanceRemaining%% |

                        | %%Panel.CheckGiftCertificateBalance%% |

                        | %%Panel.Footer%% |


                        # Giftcertificates Redeem Layout 


                        `giftcertificates_redeem.html`


                        The page shown containing instructions on how to redeem
                        a gift certificate during the checkout process.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.GiftCertificatesMenu%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.RedeemGiftCertificate%% |

                        | %%Panel.Footer%% |


                        # Giftcertificates Layout 


                        `giftcertificates.html`


                        Shown when a customer clicks the “Gift Certificates”
                        link on the top menu of the store. Displays how to
                        purchase/use a gift certificate.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.GiftCertificatesMenu%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.PurchaseGiftCertificate%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Ideal Layout 

                        `ideal.html`

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideIdealError%% |
                        | %%GLOBAL_IdealErrorMessage%% |
                        | %%GLOBAL_IdealPaymentForm%% |
                    - type: text
                      data: >-
                        # Invoice Print Layout 


                        `invoice_print.html`


                        A printable invoice for an order that a customer can
                        print from the front end of the store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_PrintableInvoiceScript%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_PrintInvoiceStylesheetPath%% |

                        | %%GLOBAL_PrintableInvoiceList%% |
                    - type: text
                      data: |-
                        # Login Layout 

                        `login.html`

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SideNewProducts%% |
                        | %%Panel.SideNewsletterBox%% |
                        | %%Panel.LoginBreadcrumb%% |
                        | %%Panel.LoginForm%% |
                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Maintenance Layout 

                        `maintenance.html`

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_MessageText%% |
                    - type: text
                      data: >-
                        # Message Layout 


                        `message.html`


                        Shown when a page simply needs to show a particular
                        message to the user.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_MessageTitle%% |

                        | %%GLOBAL_MessageText%% |
                    - type: text
                      data: >-
                        # News Layout 


                        `news.html`


                        The page that shows an individual news item on the
                        store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.NewsBreadcrumb%% |

                        | %%Panel.NewsContent%% |

                        | %%Panel.NewsComments%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Newsletter Subscribe Layout 


                        `newsletter_subscribe.html`


                        The thank you page shown after a visitor subscribes to
                        the store newsletter.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SidePopularProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.NewsletterBreadcrumb%% |

                        | %%Panel.NewsletterContent%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Order Layout 


                        `order.html`


                        The “Thank you for your order” page shown after an order
                        is successfully placed on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SideTopSellers%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CustomerName%% |

                        | %%GLOBAL_HideError%% |

                        | %%GLOBAL_ErrorMessage%% |

                        | %%GLOBAL_HidePaidOrderConfirmation%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_HidePhysicalOrderConfirmation%% |

                        | %%GLOBAL_PhysicalOrderConfirmation%% |

                        | %%GLOBAL_HideDigitalOrderConfirmation%% |

                        | %%GLOBAL_DigitalOrderConfirmation%% |

                        | %%GLOBAL_HideDigitalOrderDownloadLink%% |

                        | %%GLOBAL_HideAwaitingPayment%% |

                        | %%GLOBAL_HideSuccess%% |

                        | %%GLOBAL_OrderConfirmationDetails%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_ContinueShoppingOnStoreName%% |

                        | %%GLOBAL_ConversionCode%% |
                    - type: text
                      data: |-
                        # Packing Slip Print Layout 

                        `packing_slip_print.html`

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_BillingAddress%% |
                        | %%GLOBAL_CustomerEmail%% |
                        | %%GLOBAL_HideBillingPhone%% |
                        | %%GLOBAL_STYLE_PATH%% |
                        | %%GLOBAL_BillingPhone%% |
                        | %%GLOBAL_ShippingAddress%% |
                        | %%GLOBAL_HideShippingPhone%% |
                        | %%GLOBAL_ShippingPhone%% |
                        | %%GLOBAL_OrderId%% |
                        | %%GLOBAL_HeaderLogo%% |
                        | %%GLOBAL_OrderDate%% |
                        | %%GLOBAL_HideShippingMethod%% |
                        | %%GLOBAL_ShippingMethod%% |
                        | %%GLOBAL_HideShippingDate%% |
                        | %%GLOBAL_DateShipped%% |
                        | %%GLOBAL_HideTrackingNo%% |
                        | %%GLOBAL_TrackingNo%% |
                        | %%GLOBAL_ProductsTable%% |
                        | %%GLOBAL_HideComments%% |
                        | %%GLOBAL_Comments%% |
                        | %%GLOBAL_PackingSlipTitle%% |
                    - type: text
                      data: >-
                        # Page Layout 


                        `page.html`


                        The layout file shown when viewing a web page created on
                        the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideSubPageList%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SidePopularVendors%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SideLiveChatServices%% |

                        | %%Panel.PageBreadcrumb%% |

                        | %%Panel.PageContent%% |

                        | %%Panel.PageComments%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Forgotpassword Layout 


                        `forgotpassword.html`


                        The page shown when a customer clicks the “Forgot your
                        password?” link on the login page. Used to reset their
                        account password.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.ForgotPasswordBreadcrumb%% |

                        | %%Panel.ForgotPasswordForm%% |

                        | %%Panel.Footer%% |


                        # Getnewpassword Layout 


                        `getnewpassword.html`


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.GetNewPasswordBreadcrumb%% |

                        | %%Panel.GetNewPasswordForm%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Authorizenet Layout 


                        `authorizenet.html`


                        The Authorize.net payment module form. This form is
                        included on both the multistep and express checkout
                        pages.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.AuthorizeNetPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_AuthorizeNetName%% |

                        | %%GLOBAL_AuthorizeNetNum%% |

                        | %%GLOBAL_AuthorizeNetMonths%% |

                        | %%GLOBAL_AuthorizeNetYears%% |

                        | %%GLOBAL_AuthorizeNetHideCVV2%% |

                        | %%GLOBAL_AuthorizeNetHideCVV2%% |

                        | %%GLOBAL_AuthorizeNetCCV2%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_HideAuthorizeNetError%% |

                        | %%GLOBAL_AuthorizeNetErrorMessage%% |


                        # Ccmanual Layout 


                        `ccmanual.html`


                        The credit card (manual) payment method credit card
                        details form.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.CCManualPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CCName%% |

                        | %%GLOBAL_CCTypes%% |

                        | %%GLOBAL_CCNum%% |

                        | %%GLOBAL_CCCVV2%% |

                        | %%GLOBAL_CCIssueNo%% |

                        | %%GLOBAL_CCMonths%% |

                        | %%GLOBAL_CCYears%% |

                        | %%GLOBAL_HideCCManualError%% |

                        | %%GLOBAL_CCIssueDateMonths%% |

                        | %%GLOBAL_CCIssueDateYears%% |

                        | %%GLOBAL_CCErrorMessage%% |

                        | %%GLOBAL_OrderAmount%% |


                        # Eselectplusdp Layout 


                        `eselectplusdp.html`


                        The payment details collection form for the eSelect
                        DirectPost payment module.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.eSelectPlusDPPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_eSelectPlusDPNum%% |

                        | %%GLOBAL_eSelectPlusDPMonths%% |

                        | %%GLOBAL_eSelectPlusDPYears%% |

                        | %%GLOBAL_eSelectPlusDPCCV2%% |

                        | %%GLOBAL_eSelectPlusDPCardHolderName%% |

                        | %%GLOBAL_eSelectPlusDPBillStNum%% |

                        | %%GLOBAL_eSelectPlusDPBillStName%% |

                        | %%GLOBAL_eSelectPlusDPBillZip%% |

                        | %%GLOBAL_HideeSelectPlusDPError%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_eSelectPlusDPErrorMessage%% |


                        # Eway Layout


                        `eway.html`


                        Shown when a customer chooses to pay via eWay when
                        making a purchase on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.EWayPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_EWayName%% |

                        | %%GLOBAL_EWayMonths%% |

                        | %%GLOBAL_EWayYears%% |

                        | %%GLOBAL_EWayHideCardCode%% |

                        | %%GLOBAL_EWayHideCardCode%% |

                        | %%GLOBAL_EWayCardCode%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_HideEWayError%% |

                        | %%GLOBAL_EWayErrorMessage%% |


                        # Genericcreditcard Layout 


                        `genericcreditcard.html`


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.GenericCreditCardPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCreditCardError%% |

                        | %%GLOBAL_CCTypes%% |

                        | %%GLOBAL_CreditCardName%% |

                        | %%GLOBAL_CreditCardNum%% |

                        | %%GLOBAL_CreditCardIssueNo%% |

                        | %%GLOBAL_CreditCardIssueDateMonths%% |

                        | %%GLOBAL_CreditCardIssueDateYears%% |

                        | %%GLOBAL_HideCreditCardError%% |

                        | %%GLOBAL_CreditCardMonths%% |

                        | %%GLOBAL_CreditCardYears%% |

                        | %%GLOBAL_CreditCardHideCardCode%% |

                        | %%GLOBAL_CreditCardHideCardCode%% |

                        | %%GLOBAL_CreditCardCardCode%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_CreditCardErrorMessage%% |

                        | %%GLOBAL_AdditionalPaymentPageContents%% |


                        # NMI Layout 


                        `nmi.html`


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.NMIPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_NMIName%% |

                        | %%GLOBAL_NMINum%% |

                        | %%GLOBAL_NMIMonths%% |

                        | %%GLOBAL_NMIYears%% |

                        | %%GLOBAL_NMIHideCVV2%% |

                        | %%GLOBAL_NMIHideCVV2%% |

                        | %%GLOBAL_NMICCV2%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_HideNMIError%% |

                        | %%GLOBAL_NMIErrorMessage%% |


                        # PayflowPro Layout 


                        `payflowpro.html`


                        The payment details (credit card entry) form shown when
                        a customer chooses to pay via PayPal PayFlow Pro.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.PayflowProPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_PayflowProName%% |

                        | %%GLOBAL_PayflowProNum%% |

                        | %%GLOBAL_PayflowProMonths%% |

                        | %%GLOBAL_PayflowProYears%% |

                        | %%GLOBAL_PayflowProHideCVV2%% |

                        | %%GLOBAL_PayflowProHideCVV2%% |

                        | %%GLOBAL_PayflowProCCV2%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_HidePayflowProError%% |

                        | %%GLOBAL_PayflowProErrorMessage%% |


                        # Valuteccard Layout 


                        `valuteccard.html`


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.ValutecCardPaymentJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCreditCardError%% |

                        | %%GLOBAL_CreditCardNum%% |

                        | %%GLOBAL_OrderAmount%% |

                        | %%GLOBAL_HideCreditCardError%% |

                        | %%GLOBAL_CreditCardErrorMessage%% |
                    - type: text
                      data: |-
                        # Product Layout

                        `product.html`

                        ## Available Panels
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SideNewProducts%% |
                        | %%Panel.SideNewsletterBox%% |
                        | %%Panel.SideLiveChatServices%% |
                        | %%Panel.ProductBreadcrumb%% |
                        | %%Panel.ProductDetails%% |
                        | %%Panel.ProductTabs%% |
                        | %%Panel.ProductDescription%% |
                        | %%Panel.ProductVideos%% |
                        | %%Panel.ProductWarranty%% |
                        | %%Panel.ProductOtherDetails%% |
                        | %%Panel.SimilarProductsByTag%% |
                        | %%Panel.ProductByCategory%% |
                        | %%Panel.ProductVendorsOtherProducts%% |
                        | %%Panel.ProductReviews%% |
                        | %%Panel.SimilarProductsByCustomerViews%% |
                        | %%Panel.SideCurrencySelector%% |
                        | %%Panel.SideProductAddToWishList%% |
                        | %%Panel.SideProductRelated%% |
                        | %%Panel.SideProductRecentlyViewed%% |
                        | %%Panel.Footer%% |

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |

                        # Product Comments Layout

                        `product_comments.html`

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_HideSectionSeparator%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_throttleToken%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_ReviewRating5%% |
                        | %%GLOBAL_ReviewRating4%% |
                        | %%GLOBAL_ReviewRating3%% |
                        | %%GLOBAL_ReviewRating2%% |
                        | %%GLOBAL_ReviewRating1%% |
                        | %%GLOBAL_RevTitle%% |
                        | %%GLOBAL_RevText%% |
                        | %%GLOBAL_HideReviewEmail%% |
                        | %%GLOBAL_CustomerEmail%% |
                        | %%GLOBAL_HideReviewEmail%% |
                        | %%GLOBAL_CustomerName%% |
                        | %%GLOBAL_HideReviewCaptcha%% |
                        | %%GLOBAL_HideReviewCaptcha%% |
                        | %%GLOBAL_ProductReviewFlashMessages%% |
                        | %%GLOBAL_ReCaptchaAPIKeyPublic%% |
                        | %%GLOBAL_ReCaptchaAPIKeyPublic%% |
                        | %%GLOBAL_HideNoReviewsMessage%% |
                        | %%GLOBAL_NoReviews%% |
                        | %%GLOBAL_ProductReviewPaging%% |
                        | %%GLOBAL_ProductReviewList%% |
                        | %%GLOBAL_ProductReviewPaging%% |
                        | %%GLOBAL_HideReviewCaptcha%% |
                        | %%GLOBAL_AutoShowReviewForm%% |
                        | %%GLOBAL_JumpToReviews%% |

                        # Product Video Layout

                        `product_video.html`

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_VideoId%% |
                        | %%GLOBAL_STYLE_PATH%% |
                        | %%GLOBAL_VideoId%% |

                        #  Productimage Layout

                        `productimage.html`

                        The popup window used to display product images.

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.ProductImagePopup%% |

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CurrentImageIndex%% |
                        | %%GLOBAL_ProductMaxImageHeight%% |
                        | %%GLOBAL_ProductMaxImageWidth%% |
                        | %%GLOBAL_VariationImage%% |
                        | %%GLOBAL_RuleImage%% |
                        | %%GLOBAL_ProdImageJavascript%% |
                        | %%GLOBAL_popupCssPath%% |
                        | %%GLOBAL_jQueryPath%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                    - type: text
                      data: >-
                        # Search Layout 


                        `search.html`


                        The page that either shows the form to search for
                        products or product search results if a search is
                        currently being performed.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SearchPageHeader%% |

                        | %%Panel.SearchPage%% |

                        | %%Panel.Footer%% |


                        # Search Tips Layout 


                        `search_tips.html`


                        The page that shows tips and tricks for using the
                        product search.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideShopByBrand%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.SearchTips%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: >-
                        # Shippingaddressform Layout 


                        `shippingaddressform.html`


                        Shown when a customer wishes to edit a shipping/billing
                        address in their address book from the “My Account”
                        section.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.AccountBreadcrumb%% |

                        | %%Panel.ShippingAddressForm%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Sitemap Layout 

                        `sitemap.html`

                        ### Available Panels 
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SideShopByBrand%% |
                        | %%Panel.SideNewsletterBox%% |
                        | %%Panel.SitemapBreadcrumb%% |
                        | %%Panel.SitemapContent%% |
                        | %%Panel.SideBrandTagCloud%% |
                        | %%Panel.SideShopByBrandFull%% |
                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Tags Layout 

                        `tags.html`

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SideShopByBrand%% |
                        | %%Panel.SideNewsletterBox%% |
                        | %%Panel.SideLiveChatServices%% |
                        | %%Panel.Breadcrumb%% |
                        | %%Panel.ProductTagCloud%% |
                        | %%Panel.TagProducts%% |
                        | %%Panel.Footer%% |
                    - type: text
                      data: |-
                        # Top Layout 

                        `top.html`

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%Panel.HTMLHead%% |
                        | %%Panel.Header%% |
                        | %%Panel.WrapperBanner%% |
                        | %%Panel.SideCategoryList%% |
                        | %%Panel.SideShopByBrand%% |
                        | %%Panel.SideNewsletterBox%% |
                    - type: text
                      data: |-
                        # Unsubscribe Layout

                        `unsubscribe.html`

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_UnsubscribeTitle%% |
                    - type: text
                      data: >-
                        # Wishlist Layout 


                        `wishlist.html`


                        The page shown when any action related to wishlists
                        (adding items, managing wishlists etc) is shown.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.HTMLHead%% |

                        | %%Panel.Header%% |

                        | %%Panel.WrapperBanner%% |

                        | %%Panel.SideCategoryList%% |

                        | %%Panel.SideNewProducts%% |

                        | %%Panel.SideNewsletterBox%% |

                        | %%Panel.WishListItems%% |

                        | %%Panel.WishLists%% |

                        | %%Panel.WishListAddForm%% |

                        | %%Panel.SideAccountMenu%% |

                        | %%Panel.SidePopularProducts%% |

                        | %%Panel.Footer%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideRightMenu%% |
              - title: Panels
                route:
                  path: /blueprint-panels
                data:
                  blocks:
                    - type: text
                      data: >-
                        # AccountDownloadItemsBreadcrumb Panel 


                        The breadcrumb navigation shown when downloading digital
                        items from an order.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_OrderId%% |


                        # AccountDownloadItems Panel 


                        The list of downloadable items in a digital order.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_DownloadIntro%% |


                        # AccountInbox Panel 


                        A list of order messages in the customer’s account. Also
                        includes the form to send a message relating to a past
                        order placed on the store.


                        ##  Available Panels

                        |||

                        |---|---|

                        | AccountInbox |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideNoOrderMessage%% |

                        | %%GLOBAL_HideInbox%% |

                        | %%GLOBAL_HideInboxMessage%% |

                        | %%GLOBAL_AccountInboxIntro%% |

                        | %%GLOBAL_HideMessageSuccess%% |

                        | %%GLOBAL_HideMessageError%% |


                        # AccountNewReturnBreadcrumb Panel 


                        The breadcrumb navigation menu.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_OrderId%% |


                        # AccountNewReturnInfo Panel 


                        Form for entering details about the new return request
                        such as the reason, action and comments.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ReturnReasonsList%% |

                        | %%GLOBAL_HideReturnAction%% |

                        | %%GLOBAL_HideReturnAction%% |

                        | %%GLOBAL_ReturnActionsList%% |

                        | %%GLOBAL_HideReturnForm%% |


                        # AccountNewReturnProducts Panel 


                        A table of products in the particular order including
                        choices to select the quantity of each item to return.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideReturnForm%% |


                        # AccountOrderLinks Panel 


                        Links shown on the right to submit a return request for
                        this order or print a copy of the invoice for this
                        order.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ShowOrderActions%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_DisableReturnButton%% |

                        | %%GLOBAL_OrderId%% |


                        #  AccountOrderShipments Panel


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_LNG_OrderShipments%% |


                        # AccountOrderStatus Panel 


                        The list of pending orders placed on the store by the
                        customer.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideNoOrderStatusMessage%% |

                        | %%GLOBAL_HideOrderStatusList%% |


                        # AccountOrder Panel 


                        The details of the order (billing and shipping address
                        as well as the products purchased)


                        ##  Available Panels

                        |||

                        |---|---|

                        | AccountOrder |

                        | AccountOrder |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_OrderStatus%% |

                        | %%GLOBAL_OrderDate%% |

                        | %%GLOBAL_OrderTotal%% |

                        | %%GLOBAL_BillingAddress%% |

                        | %%GLOBAL_HideSingleShippingAddress%% |

                        | %%GLOBAL_ShippingAddress%% |

                        | %%GLOBAL_FlassMessage%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_HideItemDetailsHeader%% |

                        | %%GLOBAL_OrderTotalRows%% |

                        | %%GLOBAL_OrderId%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_HideOrderComments%% |

                        | %%GLOBAL_OrderComments%% |

                        | %%GLOBAL_HideOrderStatus%% |


                        # AccountOrders Panel 


                        The list of previously placed orders on the store by the
                        customer.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideNoOrdersMessage%% |

                        | %%GLOBAL_HideOrderList%% |


                        # AccountRecentItems Panel 


                        The list of items that the customer has recently viewed
                        on the store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CompareLink%% |

                        | %%GLOBAL_HideCompareItems%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_HideNoRecentItemsMessage%% |

                        | %%GLOBAL_HideRecentItemList%% |


                        # AccountReturns Panel 


                        The list of submitted returns requests.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideReturnsList%% |

                        | %%GLOBAL_HideNoReturnsMessage%% |
                    - type: text
                      data: >-
                        # BrandBreadcrumb Panel 


                        The breadcrumb navigation menu.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_AllBrandsLink%% |

                        | %%GLOBAL_TrailBrandName%% |


                        # BrandContent Panel 


                        The contents of the brands page. Either the products in
                        a particular brand or a list of brands in the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | BrandContent |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CompareLink%% |

                        | %%GLOBAL_HideCompareItems%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_TrailBrandName%% |


                        # BrandProductListing Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_BrandsMessage%% |

                        | %%GLOBAL_HideBrandProductListing%% |

                        | %%GLOBAL_BrandProductListing%% |
                    - type: text
                      data: >-
                        # CartContent Panel 


                        The contents of the customers shopping cart and the
                        bottom “Proceed to Checkout” button.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCheckoutButton%% |

                        | %%GLOBAL_CheckoutLink%% |

                        | %%GLOBAL_OptimizerLinkFunction%% |

                        | %%GLOBAL_CartCheckoutButtonOptimizerScriptTag%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_CartCheckoutButtonOptimizerNoScriptTag%% |

                        | %%GLOBAL_HideMultipleAddressShipping%% |

                        | %%GLOBAL_HideMultipleAddressShippingOr%% |

                        | %%GLOBAL_AdditionalCheckoutButtons%% |

                        | %%GLOBAL_KeepShoppingLink%% |

                        | %%GLOBAL_KeepShoppingText%% |

                        | %%GLOBAL_HideShoppingCartEmptyMessage%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_HideShoppingCartGrid%% |

                        | %%GLOBAL_CartItemTotal%% |

                        | %%GLOBAL_HideGiftWrappingTotal%% |

                        | %%GLOBAL_GiftWrappingTotal%% |

                        | %%GLOBAL_HideDiscountAmount%% |

                        | %%GLOBAL_DiscountAmount%% |

                        | %%GLOBAL_HideShoppingCartShippingEstimator%% |

                        | %%GLOBAL_ShippingCountryList%% |

                        | %%GLOBAL_ShippingHideStateList%% |

                        | %%GLOBAL_ShippingStateList%% |

                        | %%GLOBAL_AddressState%% |

                        | %%GLOBAL_ShippingHideStateBox%% |

                        | %%GLOBAL_ShippingZip%% |

                        | %%GLOBAL_HideShoppingCartShippingCost%% |

                        | %%GLOBAL_ShippingProvider%% |

                        | %%GLOBAL_ShippingCost%% |

                        | %%GLOBAL_HideShoppingCartHandlingCost%% |

                        | %%GLOBAL_HandlingCost%% |

                        | %%GLOBAL_Taxes%% |

                        | %%GLOBAL_CartTotal%% |

                        | %%GLOBAL_InclusiveTaxes%% |

                        | %%GLOBAL_HideCartQuantityTextBox%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |


                        # CartHeader Panel 


                        The header of the cart contents page with the title and
                        the top “Proceed to Checkout” button.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_CartCheckoutButtonOptimizerNoScriptTag%% |

                        | %%GLOBAL_AdditionalCheckoutButtons%% |

                        | %%GLOBAL_OptimizerLinkScript%% |

                        | %%GLOBAL_CartCheckoutButtonControlScript%% |

                        | %%GLOBAL_HideCheckoutButton%% |

                        | %%GLOBAL_CheckoutLink%% |

                        | %%GLOBAL_OptimizerLinkFunction%% |

                        | %%GLOBAL_CartCheckoutButtonOptimizerScriptTag%% |


                        # CartStatusMessage Panel 


                        If an alternate status message is to be shown, the
                        status message.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CartStatusMessage%% |


                        # SuggestiveCartContent Panel 


                        Displays recommended products after a product was added
                        to the cart. This includes products that customers who
                        purchased this product have also purchased, related
                        products and popular products.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSuggestiveCartContent%% |

                        | %%GLOBAL_SuggestedProductListing%% |
                    - type: text
                      data: >-
                        # CategoryContent Panel 


                        The list of products in the category being viewed on the
                        store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CompareButtonTop%% |

                        | %%GLOBAL_DisplayMode%% |

                        | %%GLOBAL_CategoryProductListing%% |

                        | %%GLOBAL_CompareButton%% |

                        | %%GLOBAL_CompareLink%% |

                        | %%GLOBAL_CategoryContentFlashMessages%% |

                        | %%GLOBAL_ListJS%% |

                        | %%GLOBAL_CompareLink%% |

                        | %%GLOBAL_CompareOnSubmit%% |


                        # CategoryHeading Panel 


                        The heading (category name) as well as the “sort” box
                        for a particular category view.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CatDesc%% |

                        | %%GLOBAL_CategoryDescriptionOptimizerNoScriptTag%% |

                        | %%GLOBAL_CategoryNameOptimizerScriptTag%% |

                        | %%GLOBAL_CatName%% |

                        | %%GLOBAL_CategoryNameOptimizerNoScriptTag%% |

                        | %%GLOBAL_CategoryDescriptionOptimizerScriptTag%% |


                        # CategoryProductListing Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CategoryProductListing%% |
                    - type: text
                      data: >-
                        # CheckGiftCertificateBalance Panel 


                        Displays the form asking for the gift certificate code
                        to check the balance of.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideExampleImage%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_BalanceTitle%% |

                        | %%GLOBAL_HideTitle%% |

                        | %%GLOBAL_HideGiftCertificateError%% |

                        | %%GLOBAL_ErrorMessage%% |

                        | %%GLOBAL_HideIntro%% |
                    - type: text
                      data: |-
                        # ChooseBillingAddress Panel 

                        ## Available Panels 
                        |||
                        |---|---|
                        | ChooseBillingAddress |

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CheckoutShippingTitle%% |
                        | %%GLOBAL_CheckoutShippingIntro%% |
                    - type: text
                      data: >-
                        # ChooseShippingAddress Panel 


                        If the customer is logged in, this panel is shown
                        containing the list of shipping addresses in their
                        address book.


                        ## Available Panels 

                        |||

                        |---|---|

                        | ChooseShippingAddress |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideTabSingle%% |

                        | %%GLOBAL_CheckoutShippingIntro%% |

                        | %%GLOBAL_HideTabMultiple%% |

                        | %%GLOBAL_CheckoutMultiShippingIntro%% |

                        | %%GLOBAL_CheckoutShippingTitle%% |

                        | %%GLOBAL_HideShippingTabs%% |

                        | %%GLOBAL_ActiveTabSingle%% |

                        | %%GLOBAL_ActiveTabMultiple%% |
                    - type: text
                      data: |-
                        # CompareContent Panel 

                        The table showing the products being compared.

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_NumCompareItems%% |
                        | %%GLOBAL_ComparisonHeading%% |
                        | %%GLOBAL_HideTooManyProductsMessage%% |
                        | %%GLOBAL_TooManyProductsMessage%% |
                    - type: text
                      data: >-
                        # ConfirmOrder Panel 


                        The order confirmation and payment method selection
                        form.


                        ## Available Panels 

                        |||

                        |---|---|

                        | ConfirmOrder |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CreditAlt%% |

                        | %%GLOBAL_HidePaymentProviderList%% |

                        | %%GLOBAL_PaymentProviders%% |

                        | %%GLOBAL_HideOrderComments%% |

                        | %%GLOBAL_OrderComments%% |

                        | %%GLOBAL_HideOrderTermsAndConditions%% |

                        | %%GLOBAL_HideTermsAndConditionsTextarea%% |

                        | %%GLOBAL_OrderTermsAndConditions%% |

                        | %%GLOBAL_AgreeTermsAndConditions%% |

                        | %%GLOBAL_TermsAndConditionsLink%% |

                        | %%GLOBAL_HideCheckoutError%% |

                        | %%GLOBAL_HideMailingListInvite%% |

                        | %%GLOBAL_HideMailingListInvite%% |

                        | %%GLOBAL_NewsletterBoxIsTicked%% |

                        | %%GLOBAL_HideOrderCheckBox%% |

                        | %%GLOBAL_OrderBoxIsTicked%% |

                        | %%GLOBAL_CheckoutErrorMsg%% |

                        | %%GLOBAL_HideButtomPaymentButton%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_PaymentButtonSwitch%% |

                        | %%GLOBAL_HideCheckoutSuccess%% |

                        | %%GLOBAL_CheckoutSuccessMsg%% |

                        | %%GLOBAL_HideConfirmOrderPage%% |

                        | %%GLOBAL_BillingAddress%% |

                        | %%GLOBAL_HideShippingDetails%% |

                        | %%GLOBAL_ShippingAddress%% |

                        | %%GLOBAL_totals%% |

                        | %%GLOBAL_HideUseCoupon%% |

                        | %%GLOBAL_RedeemTitle%% |

                        | %%GLOBAL_RedeemIntro%% |

                        | %%GLOBAL_HidePaymentOptions%% |

                        | %%GLOBAL_HideUseStoreCredit%% |

                        | %%GLOBAL_HideTopPaymentButton%% |

                        | %%GLOBAL_HideUseStoreCredit%% |

                        | %%GLOBAL_CheckoutStoreCreditWarning%% |

                        | %%GLOBAL_HideLimitedCreditWarning%% |

                        | %%GLOBAL_StoreCredit%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_HideLimitedCreditWarning%% |

                        | %%GLOBAL_Remaining%% |

                        | %%GLOBAL_HideRemainingStoreCredit%% |

                        | %%GLOBAL_RemainingCredit%% |

                        | %%GLOBAL_HideLimitedCreditPaymentOption%% |

                        | %%GLOBAL_HideLimitedCreditWarning%% |

                        | %%GLOBAL_StoreCreditPaymentProviders%% |

                        | %%GLOBAL_CheckoutWith%% |

                        | %%GLOBAL_HideCreditAltOptionList%% |
                    - type: text
                      data: |-
                        # Footer Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_DesignModeHTML%% |
                        | %%GLOBAL_QueryList%% |
                        | %%GLOBAL_DesignModeScriptTag%% |
                        | %%GLOBAL_LiveChatFooterCode%% |
                        | %%GLOBAL_OptimizerTrackingScript%% |
                        | %%GLOBAL_OptimizerConversionScript%% |
                        | %%GLOBAL_OptimizerSetCookieScript%% |
                        | %%GLOBAL_FooterScripts%% |
                        | %%GLOBAL_DebugDetails%% |
                        | %%GLOBAL_AllPricesAreInCurrency%% |
                        | %%GLOBAL_Year%% |
                        | %%GLOBAL_MobileSiteLink%% |
                        | %%GLOBAL_PoweredBy%% |
                    - type: text
                      data: >-
                        # Page Contact Form Layout 


                        page_contact_form.html


                        The form shown when a web page is configured as a
                        “Contact Form” allowing users to submit a
                        question/message to the store owner.


                        ## Available Panels 

                        |||

                        |---|---|

                        | %%Panel.ContactFormJavaScript%% |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideFullName%% |

                        | %%GLOBAL_ContactName%% |

                        | %%GLOBAL_HideFullName%% |

                        | %%GLOBAL_ContactEmail%% |

                        | %%GLOBAL_HideCompanyName%% |

                        | %%GLOBAL_ContactCompanyName%% |

                        | %%GLOBAL_HideCompanyName%% |

                        | %%GLOBAL_HidePhone%% |

                        | %%GLOBAL_ContactPhone%% |

                        | %%GLOBAL_HidePhone%% |

                        | %%GLOBAL_HideOrderNo%% |

                        | %%GLOBAL_ContactOrderNo%% |

                        | %%GLOBAL_HideOrderNo%% |

                        | %%GLOBAL_HideRMANo%% |

                        | %%GLOBAL_ContactRMA%% |

                        | %%GLOBAL_HideRMANo%% |

                        | %%GLOBAL_ContactQuestion%% |

                        | %%GLOBAL_HideFormError%% |

                        | %%GLOBAL_HideCaptcha%% |

                        | %%GLOBAL_HideCaptcha%% |

                        | %%GLOBAL_CaptchaImage%% |

                        | %%GLOBAL_ARSPanel%% |

                        | %%GLOBAL_PageId%% |


                        # CheckoutNewAddressForm Panel 


                        If the customer is not logged in and checking out as a
                        guest this panel is shown containing the fields to enter
                        their billing/shipping address.


                        ## Available Panels 

                        |||

                        |---|---|

                        | CheckoutNewAddressForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ShipCustomFields%% |

                        | %%GLOBAL_HideShippingOptions%% |

                        | %%GLOBAL_HideShippingOptions%% |

                        | %%GLOBAL_ShipToAddressChecked%% |

                        | %%GLOBAL_ShipToBillingName%% |

                        | %%GLOBAL_ShipAddressButtonText%% |

                        | %%GLOBAL_CheckoutShippingTitle%% |

                        | %%GLOBAL_ShipAddressButtonText_JS%% |

                        | %%GLOBAL_HideErrors%% |

                        | %%GLOBAL_ErrorMessage%% |

                        | %%GLOBAL_ShippingFormAction%% |


                        # CreateAccountForm Panel 


                        A form containing the fields necessary to create a
                        customer account on the store.


                        ## Available Panels 

                        |||

                        |---|---|

                        | CreateAccountForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCreateAccountErrorMessage%% |

                        | %%GLOBAL_ErrorMessage%% |

                        | %%GLOBAL_CreateAccountEmailPassword%% |

                        | %%GLOBAL_CreateAccountDetails%% |

                        | %%GLOBAL_HideReviewCaptcha%% |

                        | %%GLOBAL_HideReviewCaptcha%% |

                        | %%GLOBAL_ReCaptchaAPIKeyPublic%% |

                        | %%GLOBAL_ReCaptchaAPIKeyPublic%% |

                        | %%GLOBAL_CreateAccountButtonText%% |

                        | %%GLOBAL_CreateAccountHeading%% |

                        | %%GLOBAL_HideCreateAccountIntroMessage%% |


                        # EditAccountForm Panel 


                        Form shown allowing the customer to change the details
                        (email address, password, name etc) of their registered
                        account.


                        ## Available Panels 

                        |||

                        |---|---|

                        | EditAccountForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideEditAccountSuccessMessage%% |

                        | %%GLOBAL_StatusMessage%% |

                        | %%GLOBAL_AccountCurrentEmail%% |

                        | %%GLOBAL_AccountFirstName%% |

                        | %%GLOBAL_AccountLastName%% |

                        | %%GLOBAL_AccountCompanyName%% |

                        | %%GLOBAL_AccountPhone%% |

                        | %%GLOBAL_AccountFields%% |

                        | %%GLOBAL_HideEditAccountIntroMessage%% |

                        | %%GLOBAL_HideEditAccountErrorMessage%% |

                        | %%GLOBAL_StatusMessage%% |


                        # ForgotPasswordForm Panel 


                        The form shown for the customer to enter their email
                        address to have their password reset.


                        ## Available Panels 

                        |||

                        |---|---|

                        | ForgotPasswordForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideForgotPasswordError%% |

                        | %%GLOBAL_ErrorMessage%% |


                        # GetNewPasswordForm Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CustomerId%% |

                        | %%GLOBAL_ForgottenPasswordToken%% |

                        | %%GLOBAL_CustomerEmailAddress%% |

                        | %%GLOBAL_HideForgotPasswordError%% |

                        | %%GLOBAL_ErrorMessage%% |


                        # IdealPaymentForm Panel 


                        ## Available Panels 

                        |||

                        |---|---|

                        | IdealPaymentForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IdealIssuerOptions%% |


                        # LoginForm Panel 


                        The “Create an Account” and “Sign in to Your Account”
                        options shown on the login page.


                        ## Available Panels 

                        |||

                        |---|---|

                        | LoginForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideLoginNewAccountIntro%% |

                        | %%GLOBAL_ExistingUserHeading%% |

                        | %%GLOBAL_HideLoginMessage%% |

                        | %%GLOBAL_MessageClass%% |

                        | %%GLOBAL_LoginMessage%% |

                        | %%GLOBAL_NewAccountHeading%% |

                        | %%GLOBAL_HideNewCustomerButton%% |


                        # ShippingAddressForm Panel 


                        The form containing the fields for either editing or
                        adding a shipping/billing address to the customer
                        address book.


                        ## Available Panels 

                        |||

                        |---|---|

                        | ShippingAddressForm |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ShippingAddressFormAction%% |

                        | %%GLOBAL_ShipId%% |

                        | %%GLOBAL_ShipCustomFields%% |

                        | %%GLOBAL_ShippingAddressFormTitle%% |

                        | %%GLOBAL_HideAddShippingAddressIntroMessage%% |

                        | %%GLOBAL_ShippingAddressFormIntro%% |

                        | %%GLOBAL_HideAddShippingAddressMessage%% |

                        | %%GLOBAL_Message%% |


                        # CartEditProductFieldsForm Snippet 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_jQueryUIPath%% |

                        | %%GLOBAL_MASTER_THEME_PATH%% |

                        | %%GLOBAL_CustomizeProductTitle%% |

                        | %%GLOBAL_ItemId%% |

                        | %%SNIPPET_ProductFieldsList%% |

                        | %%GLOBAL_ProductAttributeList%% |

                        | %%LNG_Cancel%% |

                        | %%LNG_Save%% |

                        | %%LNG_EnterRequiredField%% |

                        | %%LNG_InvalidFileTypeJS%% |

                        | %%LNG_DeleteProductFieldFileConfirmation%% |


                        # ListCheckForm Snippet 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%LNG_InvoicePendingPaymentText%% |

                        | %%GLOBAL_JSCacheToken%% |
                    - type: text
                      data: >-
                        # GiftCertificateBalanceRemaining Panel 


                        Shown after a customer enters their gift certificate
                        code and displays the remaining balance and expiry date.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_GiftCertificateCode%% |

                        | %%GLOBAL_RemainingBalance%% |
                    - type: text
                      data: |-
                        # HeaderSearch Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_OriginalSearchQuery%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |

                        # Header Panel 

                        ## Available Panels 
                        |||
                        |---|---|
                        | Header |

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_MaintenanceNotice%% |
                        | %%GLOBAL_HeaderLogo%% |

                        # HtmlHead Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HeadFonts%% |
                        | %%GLOBAL_Favicon%% |
                        | %%GLOBAL_OptimizerControlScript%% |
                        | %%GLOBAL_Stylesheets%% |
                        | %%GLOBAL_HeadRSSLinks%% |
                        | %%GLOBAL_TrackingCode%% |
                        | %%GLOBAL_DesignModeStyleSheet%% |
                        | %%GLOBAL_HeaderImageStyle%% |
                        | %%GLOBAL_jQueryPath%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_FastCart%% |
                        | %%GLOBAL_ProductThumbImageWidth%% |
                        | %%GLOBAL_ProductThumbImageHeight%% |
                        | %%GLOBAL_AdditionalScriptTags%% |
                        | %%GLOBAL_QuickSearchJS%% |
                        | %%GLOBAL_RTLStyles%% |
                        | %%GLOBAL_CharacterSet%% |
                        | %%GLOBAL_AdditionalMetaTags%% |
                    - type: text
                      data: >-
                        # HomeFeaturedProducts Panel 


                        A list of store-wide featured products (products marked
                        as featured in the control panel)


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideHomeFeaturedProductsPanel%% |


                        # HomeNewProducts Panel 


                        A list of store-wide new products (based on the date
                        they were added to the store)


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideHomeNewProductsPanel%% |


                        # HomeRecentBlogs Panel 


                        A list of products that are on sale (those that have a
                        sale price configured that’s less than the normal price
                        of the product)


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideHomeRecentBlogsPanel%% |


                        # HomeSlideShow Panel 


                        ## Available Panels 

                        |||

                        |---|---|

                        | HomeSlideShow |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_SwapFrequency%% |
                    - type: text
                      data: |-
                        # AddShippingAddressJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AddressFormFieldID%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_FormFieldRequiredJS%% |
                        | %%GLOBAL_CheckEmail%% |
                        | %%GLOBAL_AddressFormFieldID%% |

                        # ChooseCheckoutProviderJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |

                        # ContactFormJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideCaptcha%% |

                        # CreateAccountJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_CreateAccountAccountFormFieldID%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_FormFieldRequiredJS%% |
                        | %%GLOBAL_CreateAccountAccountFormFieldID%% |
                        | %%GLOBAL_CreateAccountShippingFormFieldID%% |

                        # EditAccountJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_EditAccountAccountFormFieldID%% |
                        | %%GLOBAL_FormFieldRequiredJS%% |

                        # HomeSlideShowJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |

                        # SearchJavaScript Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SearchId%% |
                        | %%GLOBAL_SelectedCategoryOptions%% |
                        | %%GLOBAL_AutoHideSearchForm%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_CategoryOptions%% |
                    - type: text
                      data: >-
                        # NewsBreadcrumb Panel 


                        The breadcrumb navigation menu.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_NewsTitle%% |


                        # NewsComments Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CommentsHTML%% |


                        # NewsContent Panel 


                        Used to display an individual news item on the news
                        page.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_NewsTitle%% |

                        | %%GLOBAL_NewsDate%% |

                        | %%GLOBAL_NewsContent%% |
                    - type: text
                      data: >
                        # PageComments Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CommentsHTML%% |


                        # PageContent Panel 


                        Displays the title and the content of the web page
                        currently being viewed.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_PageNameOptimizerScriptTag%% |

                        | %%GLOBAL_PageTitle%% |

                        | %%GLOBAL_PageNameOptimizerNoScriptTag%% |

                        | %%GLOBAL_PageDescriptionOptimizerScriptTag%% |

                        | %%GLOBAL_PageContent%% |

                        | %%GLOBAL_PageDescriptionOptimizerNoScriptTag%% |


                        # PagesMenu Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ActivePageHomeClass%% |
                    - type: text
                      data: >-
                        # ProductBreadcrumb Panel 


                        The breadcrumb navigation menu.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideBreadCrumbs%% |

                        | %%GLOBAL_BreadCrumbs%% |


                        # ProductByCategory Panel 


                        Shows a list of categories related to the product
                        currently being viewed.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_FindByCategory%% |

                        | %%GLOBAL_HideSectionSeparator%% |


                        # ProductDescription Panel 


                        Contains the description of the product currently being
                        viewed.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ProductDescriptionOptimizerScriptTag%% |

                        | %%GLOBAL_ProductDesc%% |

                        | %%GLOBAL_ProductDescriptionOptimizerNoScriptTag%% |

                        | %%GLOBAL_HideSectionSeparator%% |


                        # ProductDetails Panel 


                        Contains the details (price, brand, shipping
                        information, product image and product name) to be shown
                        on the product view page.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ProductCondition%% |

                        | %%GLOBAL_HideWeight%% |

                        | %%GLOBAL_ProductWeight%% |

                        | %%GLOBAL_HideRating%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_Rating%% |

                        | %%GLOBAL_HideReviewLink%% |

                        | %%GLOBAL_ReviewLinkOnClick%% |

                        | %%GLOBAL_ReviewLinkText%% |

                        | %%GLOBAL_HideAvailability%% |

                        | %%GLOBAL_Availability%% |

                        | %%GLOBAL_CurrentProdThumbImage%% |

                        | %%GLOBAL_HideShipping%% |

                        | %%GLOBAL_ShippingPrice%% |

                        | %%GLOBAL_HideMinQty%% |

                        | %%GLOBAL_MinQty%% |

                        | %%GLOBAL_HideMaxQty%% |

                        | %%GLOBAL_MaxQty%% |

                        | %%GLOBAL_ProductThumbWidth%% |

                        | %%GLOBAL_HideCurrentStock%% |

                        | %%GLOBAL_CurrentStockLabel%% |

                        | %%GLOBAL_InventoryList%% |

                        | %%GLOBAL_ProductThumbHeight%% |

                        | %%GLOBAL_HideGiftWrapMessage%% |

                        | %%GLOBAL_GiftWrappingAvailable%% |

                        | %%GLOBAL_ProductMaxZoomWidth%% |

                        | %%GLOBAL_FacebookLikeButtonBelow%% |

                        | %%GLOBAL_ProductMaxZoomHeight%% |

                        | %%GLOBAL_ProductMaxTinyWidth%% |

                        | %%GLOBAL_ProductMaxTinyHeight%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_ProdImageJavascript%% |

                        | %%GLOBAL_ShowImageZoomer%% |

                        | %%GLOBAL_ProductDetailFlashMessages%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_productAttributesCssPath%% |

                        | %%GLOBAL_ProductNameOptimizerScriptTag%% |

                        | %%GLOBAL_ProductName%% |

                        | %%GLOBAL_ProductNameOptimizerNoScriptTag%% |

                        | %%GLOBAL_AddThisLink%% |

                        | %%GLOBAL_HideProductThumb%% |

                        | %%GLOBAL_LightBoxImageJavascript%% |

                        | %%GLOBAL_jQueryUIPath%% |

                        | %%GLOBAL_HideImageCarousel%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_HideMorePicturesLink%% |

                        | %%GLOBAL_SeeMorePictures%% |

                        | %%GLOBAL_TinyImageClickJavascript%% |

                        | %%GLOBAL_PinterestButton%% |

                        | %%GLOBAL_FacebookLikeButtonAbove%% |

                        | %%GLOBAL_HideRRP%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_RetailPrice%% |

                        | %%GLOBAL_HidePrice%% |

                        | %%GLOBAL_PriceLabel%% |

                        | %%GLOBAL_ProductPrice%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_JSCacheToken%% |

                        | %%GLOBAL_IncludingExcludingTax%% |

                        | %%GLOBAL_YouSave%% |

                        | %%GLOBAL_HideSKU%% |

                        | %%GLOBAL_SKU%% |

                        | %%GLOBAL_HideVendorDetails%% |

                        | %%GLOBAL_VendorName%% |

                        | %%GLOBAL_HideBrandLink%% |

                        | %%GLOBAL_BrandLink%% |

                        | %%GLOBAL_BrandName%% |

                        | %%GLOBAL_HideCondition%% |


                        # ProductImagePopup Panel 


                        Shows an individual product image in the product image
                        popup and the buttons to navigate between the product
                        images.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_ProductName%% |

                        | %%GLOBAL_NavLinkDisplay%% |

                        | %%GLOBAL_DisablePrevLink%% |

                        | %%GLOBAL_DisableNextLink%% |

                        | %%GLOBAL_TotalImages%% |


                        # ProductOtherDetails Panel 


                        Displays the custom fields configured for the product
                        being shown.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideCustomFields%% |


                        # ProductReviews Panel 


                        A list of product reviews for this particular product as
                        well as the form for posting a new review for this
                        product.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_CommentsHTML%% |


                        # ProductTabs Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ProductTabsOptimizerScriptTag%% |

                        | %%GLOBAL_ProductTabsControlScript%% |

                        | %%GLOBAL_ProductTabsOptimizerNoScriptTag%% |


                        # ProductVideos Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_FeaturedVideo%% |

                        | %%GLOBAL_FeaturedVideo%% |

                        | %%GLOBAL_HideSingleVideo%% |

                        | %%GLOBAL_VideoLength%% |

                        | %%GLOBAL_VideoTitleLong%% |

                        | %%GLOBAL_VideoDescriptionLong%% |

                        | %%GLOBAL_HideVideoList%% |

                        | %%GLOBAL_FeaturedVideo%% |

                        | %%GLOBAL_HideSectionSeparator%% |

                        | %%GLOBAL_ProductImageMode%% |


                        # ProductWarranty Panel 


                        If the product has any warranty text/information set, it
                        will be shown in this panel.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_ProductWarranty%% |

                        | %%GLOBAL_HideSectionSeparator%% |
                    - type: text
                      data: >-
                        # PurchaseGiftCertificate Panel 


                        Displays the form used to make the purchase of a gift
                        certificate from the store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideGiftCertificateForm%% |

                        | %%GLOBAL_GiftCertificateMinimum%% |

                        | %%GLOBAL_CartItemId%% |

                        | %%GLOBAL_GiftCertificateMaximum%% |

                        | %%GLOBAL_CertificateTo%% |

                        | %%GLOBAL_GiftCertificatePreviewModalTitle%% |

                        | %%GLOBAL_CertificateToEmail%% |

                        | %%GLOBAL_CertificateFrom%% |

                        | %%GLOBAL_CertificateFromEmail%% |

                        | %%GLOBAL_CertificateTitle%% |

                        | %%GLOBAL_CertificateMessage%% |

                        | %%GLOBAL_HideGiftCertificateAmountSelect%% |

                        | %%GLOBAL_GiftCertificateAmountSelect%% |

                        | %%GLOBAL_HideGiftCertificateCustomAmount%% |

                        | %%GLOBAL_CustomCertificateAmount%% |

                        | %%GLOBAL_GiftCertificateRange%% |

                        | %%GLOBAL_HideExpiryInfo%% |

                        | %%GLOBAL_AgreeChecked%% |

                        | %%GLOBAL_GiftCertificateTerms%% |

                        | %%GLOBAL_AgreeChecked%% |

                        | %%GLOBAL_HideThemeSelect%% |

                        | %%GLOBAL_HideThemeSelect%% |

                        | %%GLOBAL_GiftCertificateThemes%% |

                        | %%GLOBAL_SaveGiftCertificateButton%% |

                        | %%GLOBAL_HideErrorMessage%% |

                        | %%GLOBAL_ErrorMessage%% |
                    - type: text
                      data: |-
                        # QuickViewContent Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductWeight%% |
                        | %%GLOBAL_HideAvailability%% |
                        | %%GLOBAL_Availability%% |
                        | %%GLOBAL_QuickViewShareLinks%% |
                        | %%GLOBAL_HideShipping%% |
                        | %%GLOBAL_ShippingPrice%% |
                        | %%GLOBAL_HideMinQty%% |
                        | %%GLOBAL_MinQty%% |
                        | %%GLOBAL_HideMaxQty%% |
                        | %%GLOBAL_MaxQty%% |
                        | %%GLOBAL_HideCurrentStock%% |
                        | %%GLOBAL_CurrentStockLabel%% |
                        | %%GLOBAL_InventoryList%% |
                        | %%GLOBAL_HideGiftWrapMessage%% |
                        | %%GLOBAL_GiftWrappingAvailable%% |
                        | %%GLOBAL_HideRating%% |
                        | %%GLOBAL_HideProductAttributeList%% |
                        | %%GLOBAL_ProductAttributeList%% |
                        | %%GLOBAL_DisplayAdd%% |
                        | %%GLOBAL_DisplayAddQty%% |
                        | %%GLOBAL_DisplayAddQty%% |
                        | %%GLOBAL_AddToCartQty%% |
                        | %%GLOBAL_QuickViewRating%% |
                        | %%GLOBAL_HideBulkDiscountLink%% |
                        | %%GLOBAL_BulkDiscountThickBoxRates%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_DisplayAdd%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_DisplayAdd%% |
                        | %%GLOBAL_QuickViewProductURL%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_ItemSoldOut%% |
                        | %%GLOBAL_QuickViewProductName%% |
                        | %%GLOBAL_OptionMessage%% |
                        | %%GLOBAL_QuickViewProductURL%% |
                        | %%GLOBAL_QuickViewReviews%% |
                        | %%GLOBAL_ShowAddToCartQtyBox%% |
                        | %%GLOBAL_ProductMinMaxQtyJavascript%% |
                        | %%GLOBAL_EventDateJavascript%% |
                        | %%GLOBAL_QuickViewProductURL%% |
                        | %%GLOBAL_ThumbImageURL%% |
                        | %%GLOBAL_QuickViewProductDescription%% |
                        | %%GLOBAL_CartLink%% |
                        | %%GLOBAL_FastCartButtonJs%% |
                        | %%GLOBAL_ProductOptionRequired%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_HideRRP%% |
                        | %%GLOBAL_RetailPrice%% |
                        | %%GLOBAL_HidePrice%% |
                        | %%GLOBAL_PriceLabel%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_IncludingExcludingTax%% |
                        | %%GLOBAL_YouSave%% |
                        | %%GLOBAL_HideSKU%% |
                        | %%GLOBAL_QuickViewFacebookLikeButton%% |
                        | %%GLOBAL_SKU%% |
                        | %%GLOBAL_HideVendorDetails%% |
                        | %%GLOBAL_VendorName%% |
                        | %%GLOBAL_QuickViewShareLinksLabel%% |
                        | %%GLOBAL_HideBrandLink%% |
                        | %%GLOBAL_BrandLink%% |
                        | %%GLOBAL_BrandName%% |
                        | %%GLOBAL_HideCondition%% |
                        | %%GLOBAL_ProductCondition%% |
                        | %%GLOBAL_HideWeight%% |
                    - type: text
                      data: >-
                        # SearchPageHeader Panel


                        The header containing the search form and breadcrumb
                        navigation menu.


                        ## Available Panels

                        |||

                        |---|---|

                        | SearchPageHeader |


                        ## Available Variables

                        |||

                        |---|---|

                        | %%GLOBAL_HideAdvancedOptions%% |

                        | %%GLOBAL_FormattedSearchQuery%% |

                        | %%GLOBAL_BrandNameOptions%% |

                        | %%GLOBAL_HideAdvancedLink%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_HideProductSearchOptions%% |

                        | %%GLOBAL_HideProductSearchOptions%% |

                        | %%GLOBAL_PriceFrom%% |

                        | %%GLOBAL_PriceTo%% |

                        | %%GLOBAL_HideProductSearchOptions%% |

                        | %%GLOBAL_HideProductSearchOptions%% |

                        | %%GLOBAL_CdnAppPath%% |

                        | %%GLOBAL_SearchTitle%% |

                        | %%GLOBAL_HideRelatedSearches%% |

                        | %%GLOBAL_ShowSearchSuggestion%% |

                        | %%GLOBAL_SearchId%% |

                        | %%GLOBAL_SuggestQuery%% |

                        | %%GLOBAL_SuggestQueryEscaped%% |


                        # SearchPageProducts Panel


                        ## Available Variables

                        |||

                        |---|---|

                        | %%GLOBAL_HideSearchResults%% |

                        | %%GLOBAL_SearchResults%% |


                        # SearchPage Panel


                        If a search is being performed, this panel will be shown
                        containing any results matching the search terms.


                        ## Available Panels

                        |||

                        |---|---|

                        | SearchPage |


                        ## Available Variables

                        |||

                        |---|---|

                        | %%GLOBAL_ContentContainerDisplay%% |

                        | %%GLOBAL_HideSearchPage%% |

                        | %%GLOBAL_SelectedSearchTab%% |

                        | %%GLOBAL_ProductTabActive%% |

                        | %%GLOBAL_ProductTabUrl%% |

                        | %%GLOBAL_ContentTabActive%% |

                        | %%GLOBAL_ContentTabUrl%% |

                        | %%GLOBAL_ProductContainerDisplay%% |


                        # SearchTabContents Panel


                        ## Available Variables

                        |||

                        |---|---|

                        | %%GLOBAL_HideSearchResultsContent%% |

                        | %%GLOBAL_SearchResultsContent%% |

                        | %%GLOBAL_HideSearchResultsNoResult%% |

                        | %%GLOBAL_OriginalSearchQuery%% |


                        # SearchTabProducts Panel


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSearchResultsProduct%% |

                        | %%GLOBAL_SearchResultsProduct%% |

                        | %%GLOBAL_SnippetSearchResultsFeed%% |

                        | %%GLOBAL_HideSearchResultsNoResult%% |

                        | %%GLOBAL_OriginalSearchQuery%% |

                        | %%GLOBAL_HideSearchResultsCategoryAndBrand%% |

                        | %%GLOBAL_HideSearchResultsCategory%% |

                        | %%GLOBAL_SearchResultsCategory%% |

                        | %%GLOBAL_HideSearchResultsBrand%% |

                        | %%GLOBAL_SearchResultsBrand%% |
                    - type: text
                      data: |-
                        # ShareProductById Panel 

                        ## Available Panels 
                        |||
                        |---|---|
                        | ShareProductById |

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideChooseAnotherToShare%% |
                        | %%GLOBAL_FirstProductId%% |
                        | %%GLOBAL_SharingData%% |
                    - type: text
                      data: |-
                        # ShareProductChoices Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                    - type: text
                      data: >
                        # SideAccountMenu Panel 


                        The list of links/options available in the “My Account”
                        section of the store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideWishlist%% |

                        | %%GLOBAL_NumWishListItems%% |

                        | %%GLOBAL_HideMessagesMenu%% |

                        | %%GLOBAL_NumNewMessages%% |

                        | %%GLOBAL_HideReturnRequestsMenu%% |


                        # SideAccountStoreCredit Panel 


                        If the customer has store credit, shows the amount of
                        store credit their account contains


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideStoreCredit%% |

                        | %%GLOBAL_StoreCreditAmount%% |


                        # SideBrandTagCloud Panel 


                        A tag cloud showing the popularity/density of brand
                        names on the store.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideBrandTagCloudPanel%% |


                        # SideCartContents Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_AdditionalCheckoutButtons%% |

                        | %%GLOBAL_HideCartOptions%% |

                        | %%GLOBAL_HidePurchasingOptions%% |

                        | %%GLOBAL_HideSideCart%% |

                        | %%GLOBAL_SideCartItemCount%% |


                        # SideCategoryList Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_SideCategoryListTypeClass%% |


                        # SideCategoryNewProducts Panel 


                        A list of new products in the category currently being
                        viewed.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideCategoryNewProductsPanel%% |


                        # SideCategoryPopularProducts Panel 


                        List of the popular products (based on the
                        ratings/reviews) for a particular category.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideCategoryPopularProductsPanel%% |


                        # SideCategoryShopByPrice Panel 


                        The price point options for browsing items between
                        different price ranges in the current category.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideCategoryShopByPricePanel%% |


                        # SideCategoryTopSellers Panel 


                        The list of top selling products (based on the number
                        sold) for a particular category.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideCategoryTopSellersPanel%% |


                        # SideCouponCodeBox Panel 


                        The coupon code entry box shown on the side of the cart
                        page.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |


                        # SideGiftCertificateCodeBox Panel 


                        The gift certificate code entry box shown on the side of
                        the cart page.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |


                        # SideLiveChatServices Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_SideLiveChatCode%% |


                        # SideNewProducts Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideNewProductsPanel%% |


                        # SideNewsletterBox Panel 


                        ## Available Panels 

                        |||

                        |---|---|

                        | SideNewsletterBox |


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_NewsletterButtonOptimizerScriptTag%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_NewsletterBoxOptimizerNoScriptTag%% |

                        | %%GLOBAL_NewsletterBoxControlScript%% |

                        | %%GLOBAL_NewsletterHeaderOptimizerScriptTag%% |

                        | %%GLOBAL_NewsletterBoxOptimizerNoScriptTag%% |

                        #  SidePopularProducts Panel


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSidePopularProductsPanel%% |

                        | %%SNIPPET_SidePopularProductsFeed%% |

                        | %%LNG_PopularProducts%% |

                        | %%SNIPPET_SidePopularProducts%% |


                        # SideProductAddToWishList Panel 


                        The button to add this product to the customer’s
                        wishlist.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_HidePurchasingOptions%% |

                        | %%GLOBAL_HideWishlist%% |

                        | %%GLOBAL_ProductId%% |

                        | %%GLOBAL_ProductName%% |

                        | %%GLOBAL_WishLists%% |


                        # SideProductAlsoBought Panel 


                        Shows a list of products that customers have purchased
                        who have also purchased the product being shown.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_AlsoBoughtProductListing%% |


                        # SideProductRecentlyViewed Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideProductRecentlyViewedCompare%% |

                        | %%GLOBAL_IMG_PATH%% |

                        | %%GLOBAL_SiteColor%% |

                        | %%GLOBAL_HideRecentlyViewedProductsPanel%% |

                        | %%GLOBAL_CompareLink%% |


                        # SideProductRelated Panel 


                        A list of products related to this product (either
                        automatically fetched or manually configured)


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideRelatedProductsPanel%% |


                        # SideShopByBrandFull Panel 


                        A complete list of brand names on the store ordered
                        alphabetically.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideShopByBrandFullPanel%% |


                        # SideShopByBrand Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideShopByBrandPanel%% |


                        # SideTopSellers Panel 


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideSideTopSellersPanel%% |
                    - type: text
                      data: |-
                        # SimilarProductsByTag Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideSectionSeparator%% |
                    - type: text
                      data: |-
                        # SitemapBreadcrumb Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideIfSubsection%% |
                        | %%GLOBAL_HideIfNoSubsection%% |
                        | %%GLOBAL_SitemapLink%% |
                        | %%GLOBAL_HideIfNoSubsection%% |
                        | %%GLOBAL_SitemapSubsectionTrail%% |
                    - type: text
                      data: |-
                        # Syndicate Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShowNewProductsFeed%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ShowPopularProductsFeed%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ShowFeaturedProductsFeed%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ShowSearchFeed%% |
                        | %%GLOBAL_ShowNewsFeed%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_IMG_PATH%% |
                    - type: text
                      data: |-
                        # TagProducts Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CompareLink%% |
                        | %%GLOBAL_TagProductListing%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_TaggedProducts%% |
                    - type: text
                      data: |-
                        # TopMenu Panel 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideWishlist%% |
                        | %%GLOBAL_HideCartOptions%% |
                        | %%GLOBAL_HideAccountOptions%% |
                        | %%GLOBAL_LoginOrLogoutText%% |
                        | %%GLOBAL_OptimizerLinkScript%% |
                        | %%GLOBAL_HidePurchasingOptions%% |
                        | %%GLOBAL_LiveChatCodeEnabled%% |
                        | %%GLOBAL_LiveChatCode%% |
                        | %%GLOBAL_HideAccountOptions%% |
                        | %%GLOBAL_HideAccountOptions%% |
                    - type: text
                      data: >-
                        # WishListAddForm Panel 


                        The form that allows creation of a wishlist.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_PageTitle%% |

                        | %%GLOBAL_HideNormalMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideErrorMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideWishListAddFrom%% |

                        | %%GLOBAL_HideSuccessMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_WishListAction%% |

                        | %%GLOBAL_WishListName%% |

                        | %%GLOBAL_SelectPublic%% |

                        | %%GLOBAL_PageTitle%% |


                        # WishListItems Panel 


                        Used when displaying the contents of a particular
                        wishlist.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_WishListName%% |

                        | %%GLOBAL_HideNormalMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideErrorMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideWishListItems%% |

                        | %%GLOBAL_HideSuccessMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideShareWishList%% |

                        | %%GLOBAL_ShareWishListClass%% |

                        | %%GLOBAL_PublicWishListUrl%% |

                        | %%GLOBAL_ShareWishListIntro%% |

                        | %%GLOBAL_WishListName%% |


                        # WishLists Panel 


                        Shown whenever a list of wishlists the customer has is
                        to be displayed.


                        ## Available Variables 

                        |||

                        |---|---|

                        | %%GLOBAL_HideNormalMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideErrorMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideSuccessMessage%% |

                        | %%GLOBAL_WishListMessage%% |

                        | %%GLOBAL_HideWishLists%% |

                        | %%GLOBAL_HideWishListsTable%% |
              - title: Snippets
                route:
                  path: /blueprint-snippets
                data:
                  blocks:
                    - type: text
                      data: |-
                        # AccountDownloadItemList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_DownloadName%% |
                        | %%GLOBAL_DisplayDownloadLink%% |
                        | %%GLOBAL_DownloadLink%% |
                        | %%GLOBAL_DownloadSize%% |
                        | %%GLOBAL_DownloadColor%% |
                        | %%GLOBAL_DisplayDownloadExpired%% |
                        | %%GLOBAL_ExpiryInfo%% |
                        | %%GLOBAL_DownloadDescription%% |

                        # AccountInboxMessage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_MessageSubject%% |
                        | %%GLOBAL_MessageDate%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_Icon%% |
                        | %%GLOBAL_Sender%% |
                        | %%LNG_MessageSaid%% |
                        | %%GLOBAL_MessageContent%% |

                        # AccountInboxOrderItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_OrderItemMessage%% |
                        | %%GLOBAL_OrderId%% |

                        # AccountNewReturnItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ItemClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_ItemClass%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_OrderProductId%% |
                        | %%GLOBAL_ProductQtySelect%% |

                        # AccountOrderItemDownloadLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPathSSL%% |
                        | %%GLOBAL_DownloadItemEncrypted%% |

                        # AccountOrderItemList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_StrikeStart%% |
                        | %%GLOBAL_ItemQty%% |
                        | %%GLOBAL_ItemName%% |
                        | %%GLOBAL_StrikeEnd%% |
                        | %%GLOBAL_Refunded%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_DownloadLink%% |
                        | %%GLOBAL_HideExpectedReleaseDate%% |
                        | %%GLOBAL_ExpectedReleaseDate%% |

                        # AccountOrderItemRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ItemShippingRow%% |
                        | %%GLOBAL_ItemClass%% |
                        | %%GLOBAL_OrderProductId%% |
                        | %%GLOBAL_DisableReorder%% |
                        | %%GLOBAL_StrikeStart%% |
                        | %%GLOBAL_Qty%% |
                        | %%GLOBAL_Link%% |
                        | %%GLOBAL_Target%% |
                        | %%GLOBAL_Name%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_EventDate%% |
                        | %%GLOBAL_StrikeEnd%% |
                        | %%GLOBAL_Refunded%% |
                        | %%GLOBAL_DownloadsLink%% |
                        | %%GLOBAL_HideWrappingOptions%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingName%% |
                        | %%GLOBAL_HideItemMessage%% |
                        | %%GLOBAL_ReorderMessage%% |
                        | %%GLOBAL_HideExpectedReleaseDate%% |
                        | %%GLOBAL_ExpectedReleaseDate%% |
                        | %%GLOBAL_ItemClass%% |
                        | %%GLOBAL_Price%% |

                        # AccountOrderItemShippingRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_ItemsShippedTo%% |
                        | %%GLOBAL_ItemShippingRow_AddressLine%% |
                        | %%LNG_Price%% |

                        # AccountOrderItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_OrderId%% |
                        | %%LNG_HC_returnitem%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%LNG_ViewOrder%% |
                        | %%GLOBAL_DisableViewButton%% |
                        | %%GLOBAL_DisableReturnButton%% |
                        | %%LNG_ReturnOrderItems%% |
                        | %%LNG_Order%% |
                        | %%LNG_OrderDate%% |
                        | %%GLOBAL_OrderDate%% |
                        | %%LNG_YourOrderContainsTheFollowingItems2%% |
                        | %%GLOBAL_AccountOrderItemList%% |

                        # AccountOrderShipmentRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_DateShipped%% |
                        | %%GLOBAL_ShippingProvider%% |
                        | %%GLOBAL_HideShippingMethod%% |
                        | %%GLOBAL_ShippingMethod%% |
                        | %%GLOBAL_TrackingLink%% |

                        # AccountOrderStatusItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_OrderId%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%LNG_ViewOrder%% |
                        | %%LNG_Reorder%% |
                        | %%LNG_Order%% |
                        | %%LNG_OrderDate%% |
                        | %%GLOBAL_OrderDate%% |
                        | %%LNG_ThisOrderIsMarkedAs%% |
                        | %%GLOBAL_OrderStatus%% |
                        | %%GLOBAL_HidePaymentInstructions%% |
                        | %%LNG_YourOrderTotalIs%% |
                        | %%GLOBAL_OrderTotal%% |
                        | %%LNG_HeresHowToPayForYourOrder%% |
                        | %%GLOBAL_OrderInstructions%% |
                        | %%LNG_YourOrderContainsTheFollowingItems2%% |
                        | %%GLOBAL_AccountOrderItemList%% |

                        # AccountOrderTotalRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_label%% |
                        | %%GLOBAL_value%% |  

                        # AccountRecentlyViewedProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%GLOBAL_ProductId%% |
                        | %%LNG_Compare%% |

                        # AccountReturnItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_Return%% |
                        | %%GLOBAL_ReturnId%% |
                        | %%GLOBAL_ReturnStatus%% |
                        | %%LNG_ReturnedItem%% |
                        | %%GLOBAL_ReturnedQuantity%% |
                        | %%GLOBAL_ReturnedProduct%% |
                        | %%GLOBAL_ReturnedProductOptions%% |
                        | %%LNG_DateRequested%% |
                        | %%GLOBAL_DateRequested%% |
                        | %%LNG_ReturnReason%% |
                        | %%GLOBAL_ReturnReason%% |
                        | %%GLOBAL_HideReturnAction%% |
                        | %%LNG_ReturnAction%% |
                        | %%GLOBAL_ReturnAction%% |
                        | %%GLOBAL_HideReturnComment%% |
                        | %%LNG_YourComments%% |
                        | %%GLOBAL_ReturnComments%% |
                    - type: text
                      data: |-
                        # AddThisLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AddThisServiceButtonMeta%% |
                        | %%GLOBAL_AddThisServiceButtons%% |
                    - type: text
                      data: |-
                        # AddressLabel Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShipFullName%% |
                        | %%GLOBAL_ShipCompany%% |
                        | %%GLOBAL_ShipAddressLines%% |
                        | %%GLOBAL_ShipSuburb%% |
                        | %%GLOBAL_ShipState%% |
                        | %%GLOBAL_ShipZip%% |
                        | %%GLOBAL_ShipCountry%% |
                        | %%GLOBAL_ShipPhone%% |  
                    - type: text
                      data: |-
                        # BlogRecentPostsContentItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_Thumbnail%% |
                        | %%GLOBAL_RecentPostUrl%% |
                        | %%GLOBAL_RecentPostTitle%% |
                        | %%GLOBAL_RecentPostSummary%% |
                        | %%LNG_ReadMoreLink%% |
                    - type: text
                      data: |-
                        # BlogRecentPostsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_RecentPostUrl%% |
                        | %%GLOBAL_RecentPostTitle%% |
                    - type: text
                      data: |-
                        # BrandCloudItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_BrandName%% |
                        | %%GLOBAL_NumProducts%% |
                        | %%LNG_Products%% |
                        | %%GLOBAL_TagSize%%% |
                        | %%GLOBAL_BrandLink%% |

                        # BrandMainPageMessage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ChooseBrandFromList%% |

                        # BrandProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_Compare%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |
                    - type: text
                      data: |-
                        # BreadcrumbItemCurrent Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CatTrailName%% |
                    - type: text
                      data: |-
                        # BreadcrumbItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CatTrailLink%% |
                        | %%GLOBAL_CatTrailName%% |
                    - type: text
                      data: |-
                        # CartCoupon Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_Coupon%% |
                        | %%GLOBAL_CouponCode%% |
                        | %%GLOBAL_CouponId%% |
                        | %%LNG_Remove%% |
                        | %%GLOBAL_CouponDiscount%% |

                        # CartGiftCertificate Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_GiftCertificate%% |
                        | %%GLOBAL_GiftCertificateCode%% |
                        | %%GLOBAL_GiftCertificateRemaining%% |
                        | %%LNG_GiftCertificateRemaining%% |
                        | %%GLOBAL_GiftCertificateId%% |
                        | %%LNG_Remove%% |
                        | %%GLOBAL_CertificateAmountUsed%% |

                        # CartItemGiftCertificate Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideThumbColumn%% |
                        | %%GLOBAL_ProductNameSpan%% |
                        | %%GLOBAL_GiftCertificateName%% |
                        | %%GLOBAL_CartItemId%% |
                        | %%LNG_Edit%% |
                        | %%LNG_CapitalFor%% |
                        | %%GLOBAL_GiftCertificateTo%% |
                        | %%GLOBAL_CartItemId%% |
                        | %%LNG_Remove%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductTotal%% |

                        # CartItemQtySelect Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CartItemId%% |
                        | %%GLOBAL_QtySelectStyle%% |
                        | %%GLOBAL_Quantity1%% |
                        | %%GLOBAL_Quantity2%% |
                        | %%GLOBAL_Quantity3%% |
                        | %%GLOBAL_Quantity4%% |
                        | %%GLOBAL_Quantity5%% |
                        | %%GLOBAL_Quantity6%% |
                        | %%GLOBAL_Quantity7%% |
                        | %%GLOBAL_Quantity8%% |
                        | %%GLOBAL_Quantity9%% |
                        | %%GLOBAL_Quantity10%% |
                        | %%GLOBAL_Quantity11%% |
                        | %%GLOBAL_Quantity12%% |
                        | %%GLOBAL_Quantity13%% |
                        | %%GLOBAL_Quantity14%% |
                        | %%GLOBAL_Quantity15%% |
                        | %%GLOBAL_Quantity16%% |
                        | %%GLOBAL_Quantity17%% |
                        | %%GLOBAL_Quantity18%% |
                        | %%GLOBAL_Quantity19%% |
                        | %%GLOBAL_Quantity20%% |
                        | %%GLOBAL_Quantity21%% |
                        | %%GLOBAL_Quantity22%% |
                        | %%GLOBAL_Quantity23%% |
                        | %%GLOBAL_Quantity24%% |
                        | %%GLOBAL_Quantity25%% |
                        | %%GLOBAL_Quantity26%% |
                        | %%GLOBAL_Quantity27%% |
                        | %%GLOBAL_Quantity28%% |
                        | %%GLOBAL_Quantity29%% |
                        | %%GLOBAL_Quantity30%% |
                        | %%GLOBAL_QtyOptionSelected%% |

                        # CartItemQtyText Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CartItemId%% |
                        | %%GLOBAL_ProductQuantity%% |

                        # CartItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideThumbColumn%% |
                        | %%GLOBAL_ProductImage%% |
                        | %%GLOBAL_ProductNameSpan%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_ProductAvailability%% |
                        | %%GLOBAL_HideExpectedReleaseDate%% |
                        | %%GLOBAL_ProductExpectedReleaseDate%% |
                        | %%GLOBAL_EventDate%% |
                        | %%GLOBAL_HideWrappingOptions%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingName%% |
                        | %%GLOBAL_CartItemId%% |
                        | %%GLOBAL_HideGiftWrappingAdd%% |
                        | %%LNG_Add%% |
                        | %%GLOBAL_HideGiftWrappingEdit%% |
                        | %%LNG_Change%% |
                        | %%LNG_Remove%% |
                        | %%GLOBAL_HideGiftMessagePreview%% |
                        | %%LNG_GiftMessage%% |
                        | %%GLOBAL_GiftMessagePreview%% |
                        | %%GLOBAL_CartItemQty%% |
                        | %%GLOBAL_HideCartItemRemove%% |
                        | %%GLOBAL_CartItemId%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductTotal%% |

                        # CartProductAttribute Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductAttributeName%% |
                        | %%GLOBAL_ProductAttributeValue%% |

                        # CartProductAttributesList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductAttributes%% |
                        | %%GLOBAL_CartItemId%% |
                        | %%LNG_Change%% |

                        # CartProductFieldCheckbox Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_ProductFieldType%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldValue%% |

                        # CartProductFieldFile Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_ProductFieldValue%% |
                        | %%GLOBAL_HideCartFileName%% |
                        | %%LNG_Currently%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_ItemId%% |
                        | %%GLOBAL_ProductFieldFileValue%% |
                        | %%GLOBAL_HideDeleteFileLink%% |
                        | %%LNG_Delete%% |
                        | %%GLOBAL_HideFileHelp%% |
                        | %%LNG_Size%% |
                        | %%GLOBAL_FileSize%% |
                        | %%LNG_Type%% |
                        | %%GLOBAL_FileTypes%% |
                        | %%GLOBAL_CurrentProductFile%% |

                        # CartProductFieldInput Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_ProductFieldType%% |
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_ProductFieldValue%% |

                        # CartProductFieldSelect Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_SelectOptions%% |

                        # CartProductFieldTextarea Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldValue%% |

                        # CartProductFields Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_CustomFieldName%% |
                        | %%GLOBAL_CustomFieldValue%% |

                        # CartShippingQuoteRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShippingQuoteId%% |
                        | %%GLOBAL_ShipperName%% |
                        | %%GLOBAL_TransitTime%% |
                        | %%GLOBAL_ShippingPrice%% |

                        # CartShippingTransitTime Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_TransitTime%% |

                        # CartTotalTaxRow Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_TaxName%% |
                        | %%GLOBAL_TaxCost%% |
                    - type: text
                      data: |-
                        # CategoryPagingItemCurrent Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PageNumber%% |

                        # CategoryPagingItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PageLink%% |
                        | %%GLOBAL_PageNumber%% |

                        # CategoryPagingNext Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_NextLink%% |
                        | %%LNG_Next%% |  

                        # CategoryPagingPrevious Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PrevLink%% |
                        | %%LNG_Previous%% |

                        # CategoryPaging Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%SNIPPET_CategoryPagingPrevious%% |
                        | %%SNIPPET_CategoryPagingNext%% |
                        | %%LNG_Pages%% |
                        | %%SNIPPET_PagingData%% |

                        # CategoryProductsItemList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_AddToCartQty%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_ProductDescription%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_Compare%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # CategoryProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_Compare%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # CategorySortBox Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_URL%% |
                        | %%GLOBAL_HiddenSortField%% |
                        | %%LNG_SortBy%% |
                        | %%GLOBAL_SortFeaturedSelected%% |
                        | %%LNG_FeaturedItems%% |
                        | %%GLOBAL_SortNewestSelected%% |
                        | %%LNG_NewestItems%% |
                        | %%GLOBAL_SortBestSellingSelected%% |
                        | %%LNG_Bestselling%% |
                        | %%GLOBAL_SortAlphaAsc%% |
                        | %%LNG_AlphaAsc%% |
                        | %%GLOBAL_SortAlphaDesc%% |
                        | %%LNG_AlphaDesc%% |
                        | %%GLOBAL_SortAvgReview%% |
                        | %%LNG_AvgCustomerReview%% |
                        | %%GLOBAL_SortPriceAsc%% |
                        | %%LNG_PriceAsc%% |
                        | %%GLOBAL_SortPriceDesc%% |
                        | %%LNG_PriceDesc%% |
                    - type: text
                      data: |-
                        # CheckoutBillingAddressFields Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_EmailAddress%% |
                        | %%GLOBAL_AccountEmail%% |

                        # CheckoutCartItemGiftCertificate Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_GiftCertificateName%% |
                        | %%LNG_CapitalFor%% |
                        | %%GLOBAL_GiftCertificateTo%% |
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductTotal%% |

                        # CheckoutCartItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_EventDate%% |
                        | %%GLOBAL_ProductAvailability%% |
                        | %%GLOBAL_HideExpectedReleaseDate%% |
                        | %%GLOBAL_ProductExpectedReleaseDate%% |
                        | %%GLOBAL_HideGiftWrapping%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingName%% |
                        | %%GLOBAL_HideGiftMessagePreview%% |
                        | %%LNG_GiftMessage%% |
                        | %%GLOBAL_GiftMessagePreview%% |
                        | %%GLOBAL_HideCartProductFields%% |
                        | %%GLOBAL_CartProductFields%% |
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductTotal%% |

                        # CheckoutCartTotal Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_label%% |
                        | %%GLOBAL_value%% |

                        # CheckoutMailFormatPreference Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_IPreferThisEmailFormat%% |
                        | %%GLOBAL_MailFormatPreferenceOptions%% |

                        # CheckoutProviderOption Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PaymentFieldPrefix%% |
                        | %%GLOBAL_ProviderId%% |
                        | %%GLOBAL_ProviderChecked%% |
                        | %%GLOBAL_ProviderType%% |
                        | %%GLOBAL_ProviderPaymentFormClass%% |
                        | %%GLOBAL_ProviderName%% |

                        # CheckoutShippingAddressItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShipFullName%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_ShippingAddressId%% |
                        | %%GLOBAL_FromURL%% |
                        | %%LNG_HCT_edit%% |
                        | %%LNG_Edit%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%LNG_HCT_delete%% |
                        | %%LNG_Delete%% |
                        | %%GLOBAL_ShipCompany%% |
                        | %%GLOBAL_ShipAddressLine1%% |
                        | %%GLOBAL_ShipAddressLine2%% |
                        | %%GLOBAL_ShipSuburb%% |
                        | %%GLOBAL_ShipState%% |
                        | %%GLOBAL_ShipZip%% |
                        | %%GLOBAL_ShipCountry%% |
                        | %%GLOBAL_ShipPhone%% |
                        | %%GLOBAL_HideAddressButton%% |
                        | %%GLOBAL_ShippingFormAction%% |
                        | %%GLOBAL_ShipAddressButtonText%% |

                        # CheckoutTaxLine Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_TaxName%% |
                        | %%GLOBAL_TaxCost%% |
                    - type: text
                      data: |-
                        # CompareButtonList Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_CompareSelected%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_HideAddButton%% |

                        # CompareButton Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_CompareSelected%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |

                        # CompareProductCustomField Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CustomFieldName%% |
                        | %%GLOBAL_CustomFieldValue%% |

                        # CompareProductTd1 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_CompareWidth%% |
                        | %%GLOBAL_RemoveCompareLink%% |
                        | %%LNG_Remove%% |

                        # CompareProductTd2 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |

                        # CompareProductTd3 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductThumb%% |

                        #  CompareProductTd4 Snippet

                        ##  Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductPrice%% |

                        # CompareProductTd5 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductAvailability%% |

                        # CompareProductTd6 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideComparisonReviewLink%% |
                        | %%GLOBAL_NumReviews%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%LNG_ReadReviews%% |

                        # CompareProductTd7 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductSummary%% |

                        # CompareProductTd8 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_CustomFields%% |

                        # CompareProductTd9 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductBrand%% |

                        # CompareProductTr1 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CompareHeadWidth%% |
                        | %%LNG_ProductDetails%% |
                        | %%SNIPPET_TD1%% |

                        # CompareProductTr2 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_BaseCompareLink%% |
                        | %%LNG_SortByProductName%% |
                        | %%LNG_Product%% |
                        | %%SNIPPET_TD2%% |

                        # CompareProductTr3 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%LNG_Image%% |
                        | %%SNIPPET_TD3%% |

                        # CompareProductTr4 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_HideProductPrice%% |
                        | %%GLOBAL_BaseCompareLink%% |
                        | %%LNG_SortByProductPrice%% |
                        | %%LNG_Price%% |
                        | %%SNIPPET_TD4%% |

                        # CompareProductTr5 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%LNG_Availability%% |
                        | %%SNIPPET_TD5%% |

                        # CompareProductTr6 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_BaseCompareLink%% |
                        | %%LNG_SortByProductRating%% |
                        | %%LNG_Rating%% |
                        | %%SNIPPET_TD6%% |

                        # CompareProductTr7 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%LNG_Summary%% |
                        | %%SNIPPET_TD7%% |

                        # CompareProductTr8 Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%LNG_Other%% |
                        | %%SNIPPET_TD8%% |

                        # CompareProductTr9 Snippet

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_BaseCompareLink%% |
                        | %%LNG_SortByProductBrand%% |
                        | %%LNG_Brand%% |
                        | %%SNIPPET_TD9%% |
                    - type: text
                      data: |-
                        # ConfirmOrderCoupon Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_Coupon%% |
                        | %%GLOBAL_CouponCode%% |
                        | %%GLOBAL_CouponDiscount%% |
                    - type: text
                      data: |-
                        # ConfirmOrderGiftCertificate Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_GiftCertificate%% |
                        | %%GLOBAL_GiftCertificateCode%% |
                        | %%GLOBAL_GiftCertificateRemaining%% |
                        | %%LNG_GiftCertificateRemaining%% |
                        | %%GLOBAL_CertificateAmountUsed%% |
                    - type: text
                      data: |-
                        # CookieNotification Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PrivacyCookieNotification%% |
                        | %%LNG_HC_ok%% |
                    - type: text
                      data: |-
                        # CustomizeItemJavascript Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductAttributesJavascript%% |
                    - type: text
                      data: |-
                        # DesignModeFooter Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_jQueryUIPath%% |
                        | %%GLOBAL_DesignModeCurrentTemplate%% |
                        | %%GLOBAL_DesignModeUpdateUrl%% |
                        | %%LNG_DesignModeSave%% |
                        | %%LNG_DesignModeUndo%% |
                        | %%LNG_DesignModeToggle%% |
                        | %%LNG_DesignModeDisable%% |
                        | %%LNG_DesignModeChangesSaved%% |
                        | %%LNG_DesignModeRemoveLastPanel%% |
                        | %%LNG_DesignModeConfirmPanelRemove%% |
                        | %%LNG_DesignModeConfirmUndo%% |
                        | %%LNG_DesignModeConfirmDisable%% |
                        | %%LNG_DesignModeMenuEditPanel%% |
                        | %%LNG_DesignModeMenuRemovePanel%% |
                        | %%LNG_DesignModeMenuEditLayout%% |
                        | %%LNG_DesignModeMenuEditStylesheet%% |
                        | %%LNG_Or%% |
                        | %%LNG_DesignModeLangSaving%% |
                        | %%LNG_DesignModeCancel%% |
                    - type: text
                      data: |-
                        # ESelectPlusConfirmationDetails Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_Amount%% |
                        | %%GLOBAL_Amount%% |
                        | %%LNG_TransactionType%% |
                        | %%GLOBAL_TransactionType%% |
                        | %%LNG_DateAndTime%% |
                        | %%GLOBAL_DateTime%% |
                        | %%LNG_AuthorisationCode%% |
                        | %%GLOBAL_AuthorisationCode%% |
                        | %%LNG_ResponseCode%% |
                        | %%GLOBAL_ResponseCode%% |
                        | %%LNG_ISOCode%% |
                        | %%GLOBAL_ISOCode%% |
                        | %%LNG_ResponseMessage%% |
                        | %%GLOBAL_ResponseMessage%% |
                        | %%LNG_MerchantURL%% |
                        | %%GLOBAL_MerchantURL%% |
                        | %%LNG_CardholderName%% |
                        | %%GLOBAL_CardholderName%% |
                        | %%LNG_IssuerName%% |
                        | %%GLOBAL_IssuerName%% |
                        | %%LNG_IssuerConfirmation%% |
                        | %%GLOBAL_IssuerConfirmation%% |
                        | %%LNG_ReferenceNumber%% |
                        | %%GLOBAL_ReferenceNumber%% |
                        | %%LNG_InvoiceNumber%% |
                        | %%GLOBAL_InvoiceNumber%% |

                        # ESelectPlusDpConfirmationDetails Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_Amount%% |
                        | %%GLOBAL_Amount%% |
                        | %%LNG_TransactionType%% |
                        | %%GLOBAL_TransactionType%% |
                        | %%LNG_DateAndTime%% |
                        | %%GLOBAL_DateTime%% |
                        | %%LNG_AuthorisationCode%% |
                        | %%GLOBAL_AuthorisationCode%% |
                        | %%LNG_ResponseCode%% |
                        | %%GLOBAL_ResponseCode%% |
                        | %%LNG_ISOCode%% |
                        | %%GLOBAL_ISOCode%% |
                        | %%LNG_ResponseMessage%% |
                        | %%GLOBAL_ResponseMessage%% |
                        | %%LNG_MerchantURL%% |
                        | %%GLOBAL_MerchantURL%% |
                        | %%LNG_CardholderName%% |
                        | %%GLOBAL_CardholderName%% |
                        | %%LNG_IssuerName%% |
                        | %%GLOBAL_IssuerName%% |
                        | %%LNG_IssuerConfirmation%% |
                        | %%GLOBAL_IssuerConfirmation%% |
                        | %%LNG_ReferenceNumber%% |
                        | %%GLOBAL_ReferenceNumber%% |
                        | %%LNG_InvoiceNumber%% |
                        | %%GLOBAL_InvoiceNumber%% |

                        # ESelectPlusUsConfirmationDetails Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_MerchantName%% |
                        | %%GLOBAL_MerchantName%% |
                        | %%LNG_MerchantURL%% |
                        | %%GLOBAL_MerchantURL%% |
                        | %%LNG_TransactionType%% |
                        | %%GLOBAL_TransactionType%% |
                        | %%LNG_DateAndTime%% |
                        | %%GLOBAL_DateTime%% |
                        | %%LNG_Amount%% |
                        | %%GLOBAL_Amount%% |
                        | %%LNG_ReferenceNumber%% |
                        | %%GLOBAL_ReferenceNumber%% |
                        | %%LNG_AuthorisationCode%% |
                        | %%GLOBAL_AuthorisationCode%% |
                        | %%LNG_ResponseCode%% |
                        | %%GLOBAL_ResponseCode%% |
                        | %%LNG_ResponseMessage%% |
                        | %%GLOBAL_ResponseMessage%% |
                        | %%LNG_CardholderName%% |
                        | %%GLOBAL_CardholderName%% |
                        | %%LNG_InvoiceNumber%% |
                        | %%GLOBAL_InvoiceNumber%% |
                    - type: text
                      data: |-
                        # EstimatedShippingQuoteList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShippingQuotes%% |
                        | %%LNG_UpdateShippingCost%% |
                        | %%GLOBAL_DeliveryDisclaimer%% |

                        # EstimatedShippingQuoteProduct Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductName%% |

                        # EstimatedShippingQuote Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_ShippingMethod%% |
                        | %%LNG_Price%% |
                        | %%GLOBAL_ShippingQuoteRow%% |
                    - type: text
                      data: |-
                        # EventDate Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_EventDateNameRequired%% |
                        | %%GLOBAL_EventDateName%% |
                        | %%GLOBAL_EventDateMonthStyle%% |
                        | %%GLOBAL_OverviewToMonths%% |
                        | %%GLOBAL_EventDateDayStyle%% |
                        | %%GLOBAL_OverviewToDays%% |
                        | %%GLOBAL_EventDateYearStyle%% |
                        | %%GLOBAL_OverviewToYears%% |
                        | %%GLOBAL_EventDateLimitations%% |
                    - type: text
                      data: |-
                        # ExpressCheckoutAddress Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AddressId%% |
                        | %%GLOBAL_AddressType%% |
                        | %%GLOBAL_AddressSelected%% |
                        | %%GLOBAL_AddressLine%% |

                        # ExpressCheckoutChooseAddress Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_UpperAddressType%% |
                        | %%GLOBAL_HideChooseAddress%% |
                        | %%GLOBAL_UseExistingAddress%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_AddressType%% |
                        | %%GLOBAL_AddressList%% |
                        | %%GLOBAL_HideShippingOptions%% |
                        | %%GLOBAL_ShipToBillingName%% |
                        | %%LNG_AlsoWantToShipToThisAddress%% |
                        | %%GLOBAL_UseAddressTitle%% |
                        | %%GLOBAL_AddNewAddress%% |
                        | %%GLOBAL_HideCreateAddress%% |
                        | %%GLOBAL_HideChooseAddress%% |
                        | %%GLOBAL_CompiledFormFields%% |
                        | %%GLOBAL_HideSaveAddress%% |
                        | %%GLOBAL_SaveAddressChecked%% |
                        | %%LNG_SaveAddressInAddressBook%% |
                        | %%GLOBAL_HideShippingOptions%% |
                        | %%GLOBAL_ShipToBillingName%% |
                        | %%GLOBAL_ShipToAddressChecked%% |
                        | %%GLOBAL_CompiledFormFieldJavascript%% |
                        | %%LNG_ShipToThisAddress%% |
                        | %%LNG_BillAndShipToAddress%% |
                        | %%LNG_BillToThisAddress%% |

                        # ExpressCheckoutChooseShipper Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_ExpressCheckoutSelectShippingProvider%% |
                        | %%GLOBAL_ShippingQuotes%% |
                        | %%LNG_Continue%% |
                        | %%GLOBAL_DeliveryDisclaimer%% |

                        # ExpressCheckoutConfirmation Snippet 

                        ## Available Panels 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_HideCheckoutError%% |
                        | %%GLOBAL_CheckoutErrorMsg%% |
                        | %%GLOBAL_HideCheckoutSuccess%% |
                        | %%GLOBAL_CheckoutSuccessMsg%% |
                        | %%LNG_ReviewTheContentsOfYourOrder%% |
                        | %%LNG_CartItems%% |
                        | %%LNG_Qty%% |
                        | %%LNG_ItemPrice%% |
                        | %%LNG_ItemTotal%% |
                        | %%GLOBAL_totals%% |
                        | %%SNIPPET_CartItems%% |
                        | %%GLOBAL_HideUseCoupon%% |
                        | %%LNG_HC_giftcertificatecoupon%% |
                        | %%GLOBAL_RedeemTitle%% |
                        | %%GLOBAL_RedeemIntro%% |
                        | %%LNG_CouponCode1%% |
                        | %%LNG_Apply%% |
                        | %%GLOBAL_HidePaymentOptions%% |
                        | %%LNG_HowWouldYouLikeToPay%% |
                        | %%GLOBAL_HideUseStoreCredit%% |
                        | %%LNG_CheckoutUseStoreCredit%% |
                        | %%GLOBAL_HideUseStoreCredit%% |
                        | %%GLOBAL_HideLimitedCreditWarning%% |
                        | %%GLOBAL_CheckoutStoreCreditWarning%% |
                        | %%LNG_StoreCreditBalance%% |
                        | %%GLOBAL_StoreCredit%% |
                        | %%LNG_YourOrderTotal%% |
                        | %%GLOBAL_AdjustedTotalCost%% |
                        | %%GLOBAL_HideLimitedCreditWarning%% |
                        | %%LNG_OutstandingOrderTotal%% |
                        | %%GLOBAL_Remaining%% |
                        | %%GLOBAL_HideRemainingStoreCredit%% |
                        | %%LNG_RemainingStoreCredit%% |
                        | %%GLOBAL_RemainingCredit%% |
                        | %%GLOBAL_HideLimitedCreditPaymentOption%% |
                        | %%LNG_CreditPaymentMethod%% |
                        | %%GLOBAL_HideLimitedCreditWarning%% |
                        | %%GLOBAL_StoreCreditPaymentProviders%% |
                        | %%GLOBAL_CheckoutWith%% |
                        | %%GLOBAL_HideCreditAltOptionList%% |
                        | %%GLOBAL_CreditAlt%% |
                        | %%GLOBAL_HidePaymentProviderList%% |
                        | %%GLOBAL_PaymentProviders%% |
                        | %%GLOBAL_HideOrderComments%% |
                        | %%LNG_EnterOrderComments%% |
                        | %%GLOBAL_OrderComments%% |
                        | %%GLOBAL_HideOrderTermsAndConditions%% |
                        | %%LNG_TermsAndConditions%% |
                        | %%GLOBAL_HideTermsAndConditionsTextarea%% |
                        | %%GLOBAL_OrderTermsAndConditions%% |
                        | %%GLOBAL_AgreeTermsAndConditions%% |
                        | %%GLOBAL_TermsAndConditionsLink%% |
                        | %%GLOBAL_HideMailingListInvite%% |
                        | %%LNG_HearFromUsViaEmail%% |
                        | %%GLOBAL_HideMailingListInvite%% |
                        | %%GLOBAL_NewsletterBoxIsTicked%% |
                        | %%LNG_WouldLikeToReceiveNewsletter%% |
                        | %%GLOBAL_HideOrderCheckBox%% |
                        | %%GLOBAL_OrderBoxIsTicked%% |
                        | %%LNG_NewsletterSpecialOffersText%% |
                        | %%GLOBAL_HideButtomPaymentButton%% |
                        | %%LNG_ProceedToPayment%% |
                        | %%GLOBAL_PaymentButtonSwitch%% |
                        | %%GLOBAL_ExpressCheckoutLoadPaymentForm%% |
                        | %%LNG_TickArgeeTermsAndConditions%% |

                        # ExpressCheckoutCreateAccount Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_EmailAddress%% |
                        | %%GLOBAL_AccountEmail%% |
                        | %%LNG_Password%% |
                        | %%LNG_PasswordConfirm%% |

                        # ExpressCheckoutShippingMethod Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AddressId%% |
                        | %%GLOBAL_ShippingQuoteId%% |
                        | %%GLOBAL_ShipperName%% |
                        | %%GLOBAL_TransitTime%% |
                        | %%GLOBAL_ShippingPrice%% |
                    - type: text
                      data: |-
                        # FacebookLikeButton Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_FrameWidth%% |
                        | %%GLOBAL_FacebookButtonHref%% |
                    - type: text
                      data: |-
                        # FastCartThickBoxContent Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideThumbColumn%%% |
                        | %%GLOBAL_fastCartProdImg%% |
                        | %%GLOBAL_fastCartQuantityTxt%% |
                        | %%GLOBAL_fastCartProdLink%% |
                        | %%LNG_HC_quantity%% |
                        | %%GLOBAL_fastCartProdTotal%% |
                        | %%GLOBAL_HideCheckoutButton%% |
                        | %%GLOBAL_CheckoutLink%% |
                        | %%LNG_CheckoutButtonTitle%% |
                        | %%LNG_HC_proceedcheckout%% |
                        | %%GLOBAL_AdditionalCheckoutButtons%% |
                        | %%LNG_OrderSubtotal%% |
                        | %%GLOBAL_fastCartSubtotal%% |
                        | %%LNG_YourCartContains%% |
                        | %%GLOBAL_fastCartNumItemsTxt%% |
                        | %%LNG_ContinueShopping%% |
                        | %%LNG_Or%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%LNG_ViewEditCart%% |
                        | %%GLOBAL_HideSuggestiveCartContent%% |
                        | %%LNG_YouMayAlsoLike%% |
                        | %%GLOBAL_SuggestedProductListing%% |
                        | %%LNG_QuantityAdded%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%LNG_SuggestiveCartIntro%% |
                    - type: text
                      data: |-
                        # FlyoutNode Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_FlyoutAttributes%% |
                        | %%GLOBAL_FlyoutNodeUrl%% |
                        | %%GLOBAL_FlyoutNodeLabel%% |
                        | %%GLOBAL_FlyoutChildHtml%% |

                        # FlyoutTree Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_FlyoutAttributes%% |
                        | %%GLOBAL_FlyoutChildHtml%% |
                    - type: text
                      data: |-
                        # GiftWrappingWrapOptions Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideWrappingTitle%% |
                        | %%LNG_Item%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ExtraClass%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingId%% |
                        | %%LNG_ChooseGiftWrappingOption%% |
                        | %%GLOBAL_WrappingOptions%% |
                        | %%GLOBAL_GiftWrapPreviewLinks%% |
                        | %%GLOBAL_HideGiftWrapMessage%% |
                        | %%LNG_GiftMessage%% |
                        | %%GLOBAL_GiftWrapMessage%% |
                        | %%GLOBAL_HideWrappingSeparator%% |
                    - type: text
                      data: |-
                        # HomeCurrencyFlags Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CurrencyID%% |
                        | %%GLOBAL_CurrencyFlagURL%% |
                        | %%GLOBAL_CurrencyName%% |
                        | %%GLOBAL_CurrencyClass%% |

                        # HomeFeaturedProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_FeaturedProductsFeed%% |

                        # HomeFeaturedProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductRatingImageDimensions%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # HomeNewProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_NewProductsFeed%% |

                        # HomeNewProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductRatingImageDimensions%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # HomeRecentBlogsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_RecentBlogsFeed%% |

                        # HomeSaleProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |
                    - type: text
                      data: |-
                        # InvoiceCartItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductAvailability%% |
                        | %%GLOBAL_HideWrappingOptions%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingName%% |
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductTotal%% |

                        # InvoiceCustomerDetails Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CustomerName%% |
                        | %%GLOBAL_CustomerEmail%% |
                        | %%GLOBAL_CustomerPhone%% |

                        # InvoicePendingPaymentDetails Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_HeresHowtoPayforYourOrderUC%% |
                        | %%LNG_PayForYourOrderHelpI%% |
                        | %%LNG_YourOrderTotalIs%% |
                        | %%GLOBAL_TotalCost%% |
                        | %%GLOBAL_PaymentMessage%% |

                        # InvoicePendingPaymentNotice Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_InvoicePendingPaymentText%% |
                    - type: text
                      data: |-
                        # LogoImage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPathNormal%% |
                        | %%GLOBAL_CdnStorePath%% |
                        | %%GLOBAL_ImageDirectory%% |
                        | %%GLOBAL_StoreLogo%% |
                        | %%GLOBAL_StoreName%% |
                    - type: text
                      data: |-
                        # LogoText Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPathNormal%% |
                        | %%GLOBAL_LogoText%% |
                    - type: text
                      data: |-
                        # MaintenanceNotice Snippet 

                        ### Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_jQueryUIPath%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%LNG_AdminMaintenanceNoticeHeader%% |
                        | %%LNG_AdminMaintenanceNotice%% |
                        | %%GLOBAL_ShopPathNormal%% |
                        | %%GLOBAL_ImageDirectory%% |
                        | %%GLOBAL_StoreLogo%% |
                        | %%GLOBAL_StoreName%% |
                    - type: text
                      data: |-
                        # MessageBox Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_MsgBox_Type%% |
                        | %%GLOBAL_MsgBox_Message%% |
                    - type: text
                      data: |-
                        # MobileSiteLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_MobileSiteURL%% |
                        | %%LNG_MobileSite%% |
                    - type: text
                      data: |-
                        # MultiShippingItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_AddressFieldId%% |
                        | %%GLOBAL_ShippingAddressSelect%% |
                    - type: text
                      data: |-
                        # OfflinePaymentMessage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_YourOrderNumber%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_OrderId%% |
                        | %%LNG_HeresHowtoPayforYourOrder%% |
                        | %%LNG_InstructionsForPaymentBelow%% |
                        | %%LNG_HeresHowtoPayforYourOrderThanks%% |
                        | %%GLOBAL_OrderTotal%% |
                        | %%LNG_Outstanding%% |
                        | %%GLOBAL_PaymentMessage%% |
                    - type: text
                      data: |-
                        # PageMenuDropDown Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SubMenuLinks%% |

                        # PageMenu Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HasSubMenuClass%% |
                        | %%GLOBAL_ActivePageClass%% |
                        | %%GLOBAL_PageLink%% |
                        | %%GLOBAL_PageName%% |
                        | %%GLOBAL_SubMenu%% |

                        # PageRssItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_RSSLink%% |
                        | %%GLOBAL_RSSTitle%% |
                        | %%GLOBAL_RSSDescription%% |

                        # PageSubMenu Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_sPageLink%% |
                        | %%GLOBAL_sPageName%% |
                    - type: text
                      data: |-
                        # PinterestButton Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CurrentProductLink%% |
                        | %%GLOBAL_InitialZoomImage%% |
                        | %%GLOBAL_PinterestButtonDescription%% |
                    - type: text
                      data: |-
                        # PostTag Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_TagUrl%% |
                        | %%GLOBAL_TagName%% |
                    - type: text
                      data: |-
                        # PrintableInvoiceItemConfigurableField Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_FieldName%% |
                        | %%GLOBAL_SKUValue%% |
                        | %%GLOBAL_FieldValue%% |

                        # PrintableInvoiceItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_invoiceItemClass%% |
                        | %%GLOBAL_hideAddressColumn%% |
                        | %%GLOBAL_addressColumnRowSpan%% |
                        | %%GLOBAL_productShippingAddress%% |
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductSku%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_HideAttributes%% |
                        | %%GLOBAL_ProductAttributes%% |
                        | %%GLOBAL_HideVariationOptions%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_HideConfigurableFields%% |
                        | %%GLOBAL_ProductConfigurableFields%% |
                        | %%GLOBAL_HideGiftWrapping%% |
                        | %%GLOBAL_ProductGiftWrapping%% |
                        | %%GLOBAL_HideEventDate%% |
                        | %%GLOBAL_ProductEventDate%% |
                        | %%GLOBAL_HidePreOrder%% |
                        | %%GLOBAL_ProductPreOrder%% |
                        | %%GLOBAL_ProductCost%% |
                        | %%GLOBAL_ProductTotalCost%% |

                        # PrintableInvoice Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HeaderLogo%% |
                        | %%GLOBAL_StoreName%% |
                        | %%GLOBAL_InvoiceTitle%% |
                        | %%GLOBAL_StoreAddressFormatted%% |
                        | %%LNG_BillTo%% |
                        | %%GLOBAL_BillingAddress%% |
                        | %%LNG_Phone%% |
                        | %%GLOBAL_BillingPhone%% |
                        | %%GLOBAL_HideBillingEmail%% |
                        | %%LNG_Email%% |
                        | %%GLOBAL_BillingEmail%% |
                        | %%GLOBAL_hideInvoiceShippingDetails%% |
                        | %%LNG_ShipTo%% |
                        | %%GLOBAL_ShippingAddress%% |
                        | %%GLOBAL_ShippingPhone%% |
                        | %%GLOBAL_HideShippingEmail%% |
                        | %%GLOBAL_ShippingEmail%% |
                        | %%LNG_Order%% |
                        | %%GLOBAL_OrderId%% |
                        | %%LNG_PaymentMethod%% |
                        | %%GLOBAL_PaymentMethod%% |
                        | %%LNG_DateOfOrder%% |
                        | %%GLOBAL_OrderDate%% |
                        | %%GLOBAL_hideInvoiceShippingDetails%% |
                        | %%LNG_ShippingMethod%% |
                        | %%GLOBAL_ShippingMethod%% |
                        | %%LNG_OrderItems%% |
                        | %%GLOBAL_hideAddressColumn%% |
                        | %%LNG_ShippingAddress%% |
                        | %%LNG_Quantity%% |
                        | %%LNG_Code%% |
                        | %%LNG_ProdName%% |
                        | %%LNG_Price%% |
                        | %%LNG_Total%% |
                        | %%GLOBAL_ProductsTable%% |
                        | %%GLOBAL_totals%% |
                        | %%GLOBAL_HideComments%% |
                        | %%LNG_Comments%% |
                        | %%GLOBAL_Comments%% |

                        # PrintablePackingSlipItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductSku%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_HideAttributes%% |
                        | %%GLOBAL_ProductAttributes%% |
                        | %%GLOBAL_HideVariationOptions%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_HideConfigurableFields%% |
                        | %%GLOBAL_ProductConfigurableFields%% |
                        | %%GLOBAL_HideGiftWrapping%% |
                        | %%GLOBAL_ProductGiftWrapping%% |
                        | %%GLOBAL_HideEventDate%% |
                        | %%GLOBAL_ProductEventDate%% |
                        | %%GLOBAL_ProductBinNumber%% |
                    - type: text
                      data: |-
                        # ProductAddToCart Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_AddToCartButtonControlScript%% |
                        | %%GLOBAL_CartLink%% |
                        | %%GLOBAL_ProductOptionRequired%% |
                        | %%GLOBAL_FastCartButtonJs%% |
                        | %%GLOBAL_ProductId%%v |
                        | %%SNIPPET_ProductFieldsList%% |
                        | %%SNIPPET_VariationList%% |
                        | %%GLOBAL_HideProductAttributeList%% |
                        | %%GLOBAL_ProductAttributeList%% |
                        | %%SNIPPET_EventDate%% |
                        | %%GLOBAL_DisplayAdd%% |
                        | %%GLOBAL_DisplayAddQty%% |
                        | %%LNG_QuantityFull%% |
                        | %%GLOBAL_DisplayAddQty%% |
                        | %%GLOBAL_AddToCartQty%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_SiteColor%% |
                        | %%GLOBAL_HideBulkDiscountLink%% |
                        | %%LNG_BulkDiscountLink%% |
                        | %%SNIPPET_SideAddItemSoldOut%% |
                        | %%GLOBAL_ProductBulkDiscountThickBox%% |
                        | %%GLOBAL_OptionMessage%% |
                        | %%LNG_VariationSoldOutMessage%% |
                        | %%LNG_InvalidQuantity%% |
                        | %%LNG_EnterRequiredField%% |
                        | %%LNG_InvalidFileTypeJS%% |
                        | %%GLOBAL_ShowAddToCartQtyBox%% |
                        | %%GLOBAL_ProductMinMaxQtyJavascript%% |
                        | %%GLOBAL_EventDateJavascript%% |
                        | - |
                        | %%GLOBAL_HideSKU%% |
                        | %%LNG_SKU%% |
                        | %%GLOBAL_SKU%% |
                        | %%GLOBAL_HideCondition%% |
                        | %%LNG_Condition%% |
                        | %%GLOBAL_ProductCondition%% |
                        | %%GLOBAL_HideWeight%% |
                        | %%LNG_Weight%% |
                        | %%GLOBAL_ProductWeight%% |
                        | %%GLOBAL_HideAvailability%% |
                        | %%LNG_Availability%% |
                        | %%GLOBAL_Availability%% |
                        | %%GLOBAL_HideShipping%% |
                        | %%LNG_Shipping%% |
                        | %%GLOBAL_ShippingPrice%% |
                        | %%GLOBAL_HideMinQty%% |
                        | %%LNG_ProductMinQty%% |
                        | %%GLOBAL_MinQty%% |
                        | %%LNG_units%% |
                        | %%GLOBAL_HideMaxQty%% |
                        | %%LNG_ProductMaxQty%% |
                        | %%GLOBAL_MaxQty%% |
                        | %%LNG_units%% |
                        | %%GLOBAL_HideCurrentStock%% |
                        | %%GLOBAL_CurrentStockLabel%% |
                        | %%GLOBAL_InventoryList%% |
                        | %%GLOBAL_HideGiftWrapMessage%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingAvailable%% |
                        | %%LNG_HC_quantity%% |
                        | %%GLOBAL_ItemSoldOut%% |
                        | %%LNG_ProductAddToCartLink%% |
                        | %%GLOBAL_HideWishlist%% |
                        | %%GLOBAL_HidePurchasingOptions%% |
                        | %%LNG_AddToWishList%% |
                        | %%GLOBAL_ShopPath%% |

                        # ProductBreadCrumb Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_BreadcrumbItems%% |

                        # ProductBulkDiscountThickBox Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_BulkDiscountThickBoxTitle%% |
                        | %%LNG_BulkDiscountThickBoxIntro%% |
                        | %%GLOBAL_BulkDiscountThickBoxRates%% |
                        | %%LNG_CloseWindow%% |
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |

                        # ProductCustomFieldItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CustomFieldName%% |
                        | %%GLOBAL_CustomFieldValue%% |

                        # ProductExpectedReleaseDate Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ReleaseDate%% |

                        # ProductFieldCheckbox Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_CheckboxFieldNameLeft%% |
                        | %%GLOBAL_ProductFieldType%% |
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldValue%% |
                        | %%GLOBAL_CheckboxFieldNameRight%% |

                        # ProductFieldInput Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_ProductFieldType%% |
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_ProductFieldValue%% |
                        | %%GLOBAL_HideCartFileName%% |
                        | %%LNG_Currently%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_ItemId%% |
                        | %%GLOBAL_ProductFieldFileValue%% |
                        | %%GLOBAL_HideDeleteFileLink%% |
                        | %%LNG_Delete%% |
                        | %%GLOBAL_HideFileHelp%% |
                        | %%LNG_Size%% |
                        | %%GLOBAL_FileSize%% |
                        | %%LNG_Type%% |
                        | %%GLOBAL_FileTypes%% |
                        | %%GLOBAL_CurrentProductFile%% |

                        # ProductFieldSelect Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldInputSize%% |
                        | %%GLOBAL_SelectOptions%% |

                        # ProductFieldTextarea Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductFieldRequired%% |
                        | %%GLOBAL_ProductFieldName%% |
                        | %%GLOBAL_ProductFieldId%% |
                        | %%GLOBAL_FieldRequiredClass%% |
                        | %%GLOBAL_ProductFieldValue%% |

                        # ProductFindByCategoryItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CatTrailLink%% |
                        | %%GLOBAL_CatTrailName%% |

                        # ProductFindByCategory Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_FindByCategoryItems%% |

                        # ProductImageZoomer Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_ProdImageZoomJavascript%% |
                        | %%GLOBAL_TPL_PATH%% |

                        # ProductImagesLightBox Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                        | %%GLOBAL_LightBoxImageList%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductTinyBoxWidth%% |
                        | %%GLOBAL_VisibleImageTotal%% |
                        | %%GLOBAL_ZoomImageMaxWidth%% |
                        | %%GLOBAL_ZoomImageMaxHeight%% |

                        # ProductOptionListItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_OptionChooseText%% |
                        | %%SNIPPET_OptionList%% |

                        # ProductOptionList Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_OptionChooseText%% |
                        | %%SNIPPET_OptionList%% |

                        # ProductReviewBadCaptcha Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ReviewError%% |

                        # ProductReviewItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateReviewClass%% |
                        | %%GLOBAL_ReviewTitle%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ReviewRating%% |
                        | %%LNG_PostedBy%% |
                        | %%GLOBAL_ReviewName%% |
                        | %%LNG_xOn%% |
                        | %%GLOBAL_ReviewDate%% |
                        | %%GLOBAL_ReviewText%% |

                        # ProductReviewList Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ReviewStart%% |
                        | %%GLOBAL_ProductReviews%% |

                        # ProductReviewNextLink Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ReviewLink%% |
                        | %%LNG_Next%% |

                        # ProductReviewPaging Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_PrevRevLink%% |
                        | %%LNG_ShowingReviews%% |
                        | %%GLOBAL_ReviewStart%% |
                        | %%GLOBAL_ReviewEnd%% |
                        | %%LNG_Of%% |
                        | %%GLOBAL_ProductNumReviews%% |
                        | %%GLOBAL_NextRevLink%% |

                        # ProductReviewPreviousLink Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ReviewLink%% |
                        | %%LNG_Previous%% |

                        # ProductTagCloudItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_FontSize%% |
                        | %%GLOBAL_TagLink%% |
                        | %%GLOBAL_TagProductCount%% |
                        | %%GLOBAL_TagName%% |

                        # ProductThumbImagePlaceholder Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductThumbWidth%% |
                        | %%GLOBAL_ProductThumbHeight%% |
                        | %%GLOBAL_ThumbImageURL%% |
                        | %%GLOBAL_ImageDescription%% |

                        # ProductThumbImage Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductThumbWidth%% |
                        | %%GLOBAL_ProductThumbHeight%% |
                        | %%GLOBAL_InitialZoomImage%% |
                        | %%GLOBAL_TinyImageClickJavascript%% |
                        | %%GLOBAL_ThumbImageURL%% |
                        | %%GLOBAL_ImageDescription%% |

                        # ProductTinyImage Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductTinyBoxHeight%% |
                        | %%GLOBAL_ProductTinyBoxWidth%% |
                        | %%GLOBAL_TinyImageOverJavascript%% |
                        | %%GLOBAL_TinyImageClickJavascript%% |
                        | %%GLOBAL_ProductThumbIndex%% |
                        | %%GLOBAL_ProductMaxTinyHeight%% |
                        | %%GLOBAL_ProductMaxTinyWidth%% |
                        | %%GLOBAL_ProductThumbImageURL%% |
                        | %%GLOBAL_ProductZoomImageURL%% |
                        | %%GLOBAL_TinyImageTopPadding%% |
                        | %%GLOBAL_TinyImageWidth%% |
                        | %%GLOBAL_TinyImageHeight%% |
                        | %%GLOBAL_ProductTinyImageURL%% |
                        | %%GLOBAL_ImageDescription%% |

                        # ProductUpdatesRadio Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductName%% |

                        # ProductVariationListMultipleItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_OptionId%% |
                        | %%GLOBAL_OptionValue%% |

                        # ProductVariationListMultiple Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_VariationName%% |
                        | %%GLOBAL_VariationNumber%% |
                        | %%GLOBAL_VariationChooseText%% |
                        | %%SNIPPET_OptionList%% |

                        # ProductVariationListSingleItem Snippet

                        ## Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_VariationNumber%% |
                        | %%GLOBAL_OptionId%% |
                        | %%GLOBAL_OptionChecked%% |
                        | %%GLOBAL_OptionValue%% |

                        # ProductVariationListSingle Snippet

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_VariationName%% |
                        | %%SNIPPET_OptionList%% |
                    - type: text
                      data: |-
                        # QuickSearchJs Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CdnAppPath%% |
                        | %%GLOBAL_JSCacheToken%% |
                    - type: text
                      data: |-
                        # QuickViewJs Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_QuickViewButtonText%% |
                        | %%GLOBAL_QuickViewButtonColor%% |
                        | %%GLOBAL_QuickViewGradientColor%% |
                        | %%GLOBAL_QuickViewTextColor%% |
                    - type: text
                      data: |-
                        # RecentBlog Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_BlogLink%% |
                        | %%GLOBAL_BlogText%% |
                        | %%GLOBAL_BlogPreview%% |
                    - type: text
                      data: |-
                        # RelatedSearchItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SearchId%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_RelatedSearchQuery%% |
                        | %%GLOBAL_RelatedSearchText%% |

                        # SearchResultAjaxNews Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_NewsURL%% |
                        | %%GLOBAL_NewsTitle%% |
                        | %%LNG_SearchTypeNewsItem%% |

                        # SearchResultAjaxPage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PageURL%% |
                        | %%GLOBAL_PageTitle%% |
                        | %%LNG_SearchTypeWebPage%% |
                        | %%GLOBAL_PageSmallContent%% |

                        # SearchResultAjaxProduct Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNoImageClassName%% |
                        | %%GLOBAL_ProductImage%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRatingImage%% |

                        # SearchResultGrid Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideSectionPaging%% |
                        | %%GLOBAL_SectionPagingPrevious%% |
                        | %%GLOBAL_SectionPagingNext%% |
                        | %%LNG_Pages%% |
                        | %%GLOBAL_SectionPaging%% |
                        | %%GLOBAL_HideSectionSorting%% |
                        | %%LNG_SortBy%% |
                        | %%GLOBAL_SectionSortingOptions%% |
                        | %%GLOBAL_SectionType%% |
                        | %%GLOBAL_SectionExtraClass%% |
                        | %%GLOBAL_SectionResults%% |

                        # SearchResultNews Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_NewsURL%% |
                        | %%GLOBAL_NewsTitle%% |
                        | %%LNG_SearchTypeNewsItem%% |
                        | %%GLOBAL_NewsSmallContent%% |

                        # SearchResultPage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PageURL%% |
                        | %%GLOBAL_PageTitle%% |
                        | %%LNG_SearchTypeWebPage%% |
                        | %%GLOBAL_PageSmallContent%% |

                        # SearchResultProductGrid Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%GLOBAL_ProductId%% |
                        | %%LNG_Compare%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SearchResultProductList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_AddToCartQty%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_ProductDescription%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%LNG_Compare%% |
                        | - |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SearchResultSectionContent Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SectionSearchResults%% |

                        # SearchResultSectionProduct Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_CompareSelectMessage%% |
                        | %%LNG_PleaseSelectAProduct%% |
                        | %%GLOBAL_CompareLink%% |
                        | %%GLOBAL_ListJS%% |
                        | %%GLOBAL_CompareOnSubmit%% |
                        | %%GLOBAL_CompareButtonTop%% |
                        | %%GLOBAL_SectionSearchResults%% |
                        | %%GLOBAL_CompareButton%% |

                        # SearchResultsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_RSSURL%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_CategoryPopularProductsFeed%% |
                        | %%LNG_SearchFeed%% |
                    - type: text
                      data: |-
                        # SelectGiftWrapping Snippet

                        ##  Available Variables
                        |||
                        |---|---|
                        | %%GLOBAL_GiftWrappingTitle%% |
                        | %%GLOBAL_ItemId%% |
                        | %%GLOBAL_GiftWrapModalClass%% |
                        | %%LNG_ChooseHowToWrapItems%% |
                        | %%GLOBAL_HideSplitWrappingOptions%% |
                        | %%LNG_WrapItemsTheSame%% |
                        | %%SNIPPET_GiftWrappingOptionsSingle%% |
                        | %%LNG_WrapItemsDifferently%% |
                        | %%SNIPPET_GiftWrappingOptions%% |
                        | %%LNG_Cancel%% |
                        | %%LNG_Save%% |
                    - type: text
                      data: |-
                        # SelectedTag Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_TagName%% |
                        | %%GLOBAL_BlogUrl%% |
                    - type: text
                      data: |-
                        # ShippingProviderItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShippingData%% |
                        | %%GLOBAL_AddressId%% |
                        | %%GLOBAL_ShipperId%% |
                        | %%GLOBAL_ShippingProvider%% |
                        | %%GLOBAL_ShippingPrice%% |
                        | %%GLOBAL_TransitTime%% |

                        # ShippingQuoteProduct Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_HideGiftWrapping%% |
                        | %%LNG_GiftWrapping%% |
                        | %%GLOBAL_GiftWrappingName%% |
                        | %%GLOBAL_HideGiftMessagePreview%% |
                        | %%LNG_GiftMessage%% |
                        | %%GLOBAL_GiftMessagePreview%% |

                        # ShippingQuote Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideAddressLine%% |
                        | %%LNG_ShippedTo%% |
                        | %%GLOBAL_AddressLine%% |
                        | %%GLOBAL_HideItemList%% |
                        | %%LNG_Items%% |
                        | %%GLOBAL_ItemList%% |
                        | %%LNG_ShippingProvider%% |
                        | %%GLOBAL_ShippingProviders%% |
                        | %%GLOBAL_HideHorizontalRule%% |
                    - type: text
                      data: |-
                        # ShopByBrandAllItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AllBrandsLink%% |
                        | %%LNG_SeeAllBrands%% |

                        # ShopByBrandItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_BrandName%% |
                        | %%GLOBAL_BrandLink%% |

                        # ShopByPriceItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PriceLink%% |
                        | %%GLOBAL_PriceLow%% |
                        | %%GLOBAL_PriceHigh%% |
                    - type: text
                      data: |-
                        # SideAddItemSoldOut Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%LNG_CurrentlySoldOut1%% |
                        | %%LNG_CurrentlySoldOut2%% |
                        | %%LNG_HC_outofstock%% |

                        # SideCartContentsCheckoutLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CheckoutLink%% |
                        | %%LNG_Checkout%% |

                        # SideCartItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductQuantity%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductOptions%% |
                        | %%GLOBAL_ProductAttributes%% |
                        | %%GLOBAL_ProductPrice%% |

                        # SideCategoryList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_LastChildClass%% |
                        | %%GLOBAL_CategoryLink%% |
                        | %%GLOBAL_CategoryName%% |
                        | %%GLOBAL_SubCategoryList%% |

                        # SideCategoryNewProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_CatId%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_CategoryNewProductsFeed%% |

                        # SideCategoryNewProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideCategoryPopularProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_CatId%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_CategoryPopularProductsFeed%% |

                        # SideCategoryPopularProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideCategoryTopSellers Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideCurrencySelectorCurrency Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_CurrencyFlagStyle%% |
                        | %%GLOBAL_CurrencySwitchLink%% |
                        | %%GLOBAL_CurrencySelected%% |
                        | %%GLOBAL_CurrencyFlag%% |
                        | %%GLOBAL_CurrencyName%% |

                        # SideCustomCategoryList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_RootCatName%% |
                        | %%GLOBAL_RootCatList%% |

                        # SideNewProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_CatId%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_CategoryNewProductsFeed%% |

                        # SideNewProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SidePageLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_PageLink%% |
                        | %%GLOBAL_PageName%% |

                        # SidePopularProductsFeed Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%LNG_PopularProductsFeed%% |

                        # SidePopularProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_ProductRatingImageDimensions%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideProductAlsoBoughtItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |

                        # SideRecentlyViewedProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_HideSideProductRecentlyViewedCompare%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideRelatedProducts Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |

                        # SideTopSellersFirst Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |

                        # SideTopSellers Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductNumber%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |
                    - type: text
                      data: |-
                        # SimilarProductsByCustomerViewsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideRating%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |
                        | %%LNG_ProductAddToCartLink%% |
                    - type: text
                      data: |-
                        # SimilarProductsByTagTag Snippet

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_FontSize%% |
                        | %%GLOBAL_TagLink%% |
                        | %%GLOBAL_TagProductCount%% |
                        | %%GLOBAL_TagName%% |
                    - type: text
                      data: |-
                        # SitemapLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SitemapURL_HTML%% |
                        | %%LNG_Sitemap%% |
                    - type: text
                      data: |-
                        # SitemapSection Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ModelType%% |
                        | %%GLOBAL_ModelHeading%% |
                        | %%GLOBAL_ModelBody%% |
                        | %%GLOBAL_ModelHideAllLink%% |
                        | %%GLOBAL_ModelSubsectionURL%% |
                        | %%LNG_SitemapSeeAll%% |
                    - type: text
                      data: |-
                        # SlideList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_Slide_Link_Url%% |
                        | %%GLOBAL_Slide_Heading_Color%% |
                        | %%GLOBAL_Slide_Heading_Text%% |
                        | %%GLOBAL_Slide_Text_Color%% |
                        | %%GLOBAL_Slide_Text_Text%% |
                        | %%GLOBAL_Slide_Button_Hide%% |
                        | %%GLOBAL_Slide_Button_Color%% |
                        | %%GLOBAL_Slide_Button_Text%% |
                        | %%GLOBAL_Slide_Image_Url%% |
                        | %%GLOBAL_Slide_Image_AlternateText%% |
                    - type: text
                      data: |-
                        # SocialLink Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SocialMedia_Service_Url%% |
                        | %%GLOBAL_UseThemeSettingsClass%% |
                        | %%GLOBAL_SocialMedia_Service_Class%% |
                        | %%GLOBAL_SocialMedia_Service_Name%% |

                        # SocialSharingTabsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SharingActiveTab%% |
                        | %%GLOBAL_SharingName%% |
                        | %%GLOBAL_SharingIcon%% |
                        | %%GLOBAL_SharingDisplay%% |
                    - type: text
                      data: |-
                        # SubBrandItemImage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_width%% |
                        | %%GLOBAL_height%% |
                        | %%GLOBAL_SubBrandLink%% |
                        | %%GLOBAL_SubBrandImage%% |
                        | %%GLOBAL_SubBrandName%% |

                        # SubBrandItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SubBrandLink%% |
                        | %%GLOBAL_SubBrandName%% |

                        # SubCatItemImage Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_width%% |
                        | %%GLOBAL_height%% |
                        | %%GLOBAL_SubCatLink%% |
                        | %%GLOBAL_SubCatImage%% |
                        | %%GLOBAL_SubCatName%% |

                        # SubCatItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_SubCatLink%% |
                        | %%GLOBAL_SubCatName%% |
                    - type: text
                      data: |-
                        # TagProductsItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_AlternateClass%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_HideCompareItems%% |
                        | %%GLOBAL_ProductId%% |
                        | %%LNG_Compare%% |
                        | %%GLOBAL_HideActionAdd%% |
                        | %%GLOBAL_ProductURL%% |
                        | %%GLOBAL_ProductAddText%% |
                    - type: text
                      data: |-
                        # TopMenuGiftCertificates Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShopPathNormal%% |
                        | %%LNG_GiftCertificates%% |
                    - type: text
                      data: |-
                        # UnformattedAddressLabel Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ShipAddressLine1%% |
                        | %%GLOBAL_ShipAddressLine2%% |
                        | %%GLOBAL_ShipSuburb%% |
                        | %%GLOBAL_ShipState%% |
                        | %%GLOBAL_ShipZip%% |
                        | %%GLOBAL_ShipCountry%% |
                    - type: text
                      data: |-
                        # VideoListSide Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_VideoId%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_VideoTitleLong%% |
                        | %%GLOBAL_VideoLength%% |
                    - type: text
                      data: |-
                        # VideoList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_VideoId%% |
                        | %%GLOBAL_VideoTitleLong%% |
                        | %%GLOBAL_VideoTitleShort%% |
                        | %%GLOBAL_VideoDescriptionLong%% |
                        | %%GLOBAL_VideoDescriptionShort%% |
                    - type: text
                      data: |-
                        # WishList Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_WishListID%% |
                        | %%GLOBAL_WishListName%% |
                        | %%GLOBAL_NumOfItems%% |
                        | %%GLOBAL_WishListShared%% |
                        | %%LNG_Edit%% |
                        | %%LNG_Delete%% |
                        | %%GLOBAL_ShareWishListLink%% |

                        # WishListItem Snippet 

                        ## Available Variables 
                        |||
                        |---|---|
                        | %%GLOBAL_ProductId%% |
                        | %%GLOBAL_ProductThumb%% |
                        | %%GLOBAL_ProductLink%% |
                        | %%GLOBAL_SearchTrackClass%% |
                        | %%GLOBAL_ProductName%% |
                        | %%GLOBAL_ProductPrice%% |
                        | %%GLOBAL_ProductRating%% |
                        | %%GLOBAL_IMG_PATH%% |
                        | %%GLOBAL_HideProductRating%% |
                        | %%GLOBAL_ShopPath%% |
                        | %%GLOBAL_HideRemoveItemButton%% |
                        | %%GLOBAL_WishListID%% |
                        | %%GLOBAL_ItemId%% |
                        | %%LNG_RemoveFromWishList%% |
  /new-page-dwhwh:
    title: ''
    data: {}
  /bigcommerce-for-wordpress:
    title: BigCommerce for WordPress
    data:
      children:
        - title: Getting Started
          route:
            path: /getting-started
          data:
            children:
              - title: Introduction
                route:
                  path: /introduction
                data: {}
              - title: Install
                route:
                  path: /install
                data: {}
        - title: Setup
          route:
            path: /setup
          data:
            children:
              - title: Plugin Settings
                route:
                  path: /plugin-settings
                data: {}
              - title: Product Import
                route:
                  path: /product-import
                data: {}
              - title: Shortcodes
                route:
                  path: /shortcodes
                data: {}
        - title: Extending the Plugin
          route:
            path: /extending-the-plugin
          data:
            children:
              - title: Template Overrides
                route:
                  path: /template-overrides
                data: {}
              - title: Code Reference
                route:
                  path: /code-reference
                data: {}
theme:
  background: '#4d34c6'
  primary: '#4b71fc'
  secondary: '#2553fb'
logo: >-
  https://cdn6.bigcommerce.com/s-qtmbtj/product_images/uploaded_images/bigcommerce-logomark-darkbg.png
meta:
  title: BigCommerce Dev Center - Theme Development & API Documentation
  favicon: 'https://www.bigcommerce.com/assets/images/favicons/favicon-96x96.png'
  description: >-
    Build apps and themes for thousands of successful merchants on our growing
    ecommerce platform.
