{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "BigCommerce V2 API",
    "description": "TODO: Add a description"
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{store_hash}/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/stores/{store_hash}/v2/orders/{id}": {
      "get": {
        "description": "Gets a single order by order `id`.",
        "summary": "Get an Order",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashAndIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Order id."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "examples": {
              "application/json": {
                "id": 118,
                "customer_id": 6,
                "date_created": "Mon, 23 Apr 2018 18:04:48 +0000",
                "date_modified": "Mon, 23 Apr 2018 18:04:49 +0000",
                "date_shipped": "Wed, 14 Nov 2012 19:26:23 +0000\"",
                "status_id": 11,
                "cart_id": "a8458391-ef68-4fe5-9ec1-442e6a767364",
                "status": "Awaiting Fulfillment",
                "subtotal_ex_tax": 225,
                "subtotal_inc_tax": 225,
                "subtotal_tax": 0,
                "base_shipping_cost": 0,
                "shipping_cost_ex_tax": 0,
                "shipping_cost_inc_tax": 0,
                "shipping_cost_tax": 0,
                "shipping_cost_tax_class_id": 2,
                "base_handling_cost": 0,
                "handling_cost_ex_tax": 0,
                "handling_cost_inc_tax": 0,
                "handling_cost_tax": 0,
                "handling_cost_tax_class_id": 2,
                "base_wrapping_cost": 0,
                "wrapping_cost_ex_tax": 0,
                "wrapping_cost_inc_tax": 0,
                "wrapping_cost_tax": 0,
                "wrapping_cost_tax_class_id": 3,
                "total_ex_tax": 225,
                "total_inc_tax": 225,
                "total_tax": 0,
                "items_total": 1,
                "items_shipped": 0,
                "payment_method": "Cash on Delivery",
                "payment_provider_id": null,
                "refunded_amount": 0,
                "order_is_digital": false,
                "store_credit_amount": 0,
                "gift_certificate_amount": 0,
                "ip_address": "12.345.678.910",
                "geoip_country": "United States",
                "geoip_country_iso2": "US",
                "currency_id": 1,
                "currency_code": "USD",
                "currency_exchange_rate": 1,
                "default_currency_id": 1,
                "default_currency_code": "``",
                "staff_notes": "Send Saturday",
                "customer_message": "Thank you",
                "discount_amount": 0,
                "coupon_discount": 5,
                "shipping_address_count": 1,
                "is_deleted": false,
                "is_email_opt_in": false,
                "ebay_order_id": 0,
                "billing_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com",
                  "form_fields": [
                    {
                      "name": "",
                      "value": ""
                    }
                  ]
                },
                "order_source": "www",
                "external_source": null,
                "products": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products",
                  "resource": "/orders/129/products"
                },
                "shipping_addresses": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses",
                  "resource": "/orders/129/shippingaddresses"
                },
                "coupons": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
                  "resource": "/orders/129/coupons"
                },
                "external_id": null,
                "external_merchant_id": null,
                "custom_status": "Awaiting Payment"
              }
            }
          },
          "404": {
            "description": "\"The requested resource was not found.\"",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Updates an order using the order `id`.",
        "summary": "Update an Order",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashAndIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "x-examples": {
              "application/json": {
                "status_id": 1,
                "billing_address": {
                  "first_name": "Trisha",
                  "last_name": "McLaughlin",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Anywhere",
                  "state": "Some State",
                  "zip": "12345",
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "elsie@example.com"
                }
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "examples": {
              "application/json": {
                "id": 118,
                "customer_id": 6,
                "date_created": "Mon, 23 Apr 2018 18:04:48 +0000",
                "date_modified": "Mon, 23 Apr 2018 18:04:49 +0000",
                "date_shipped": "Wed, 14 Nov 2012 19:26:23 +0000\"",
                "status_id": 11,
                "cart_id": "a8458391-ef68-4fe5-9ec1-442e6a767364",
                "status": "Awaiting Fulfillment",
                "subtotal_ex_tax": 225,
                "subtotal_inc_tax": 225,
                "subtotal_tax": 0,
                "base_shipping_cost": 0,
                "shipping_cost_ex_tax": 0,
                "shipping_cost_inc_tax": 0,
                "shipping_cost_tax": 0,
                "shipping_cost_tax_class_id": 2,
                "base_handling_cost": 0,
                "handling_cost_ex_tax": 0,
                "handling_cost_inc_tax": 0,
                "handling_cost_tax": 0,
                "handling_cost_tax_class_id": 2,
                "base_wrapping_cost": 0,
                "wrapping_cost_ex_tax": 0,
                "wrapping_cost_inc_tax": 0,
                "wrapping_cost_tax": 0,
                "wrapping_cost_tax_class_id": 3,
                "total_ex_tax": 225,
                "total_inc_tax": 225,
                "total_tax": 0,
                "items_total": 1,
                "items_shipped": 0,
                "payment_method": "Cash on Delivery",
                "payment_provider_id": null,
                "refunded_amount": 0,
                "order_is_digital": false,
                "store_credit_amount": 0,
                "gift_certificate_amount": 0,
                "ip_address": "12.345.678.910",
                "geoip_country": "United States",
                "geoip_country_iso2": "US",
                "currency_id": 1,
                "currency_code": "USD",
                "currency_exchange_rate": 1,
                "default_currency_id": 1,
                "default_currency_code": "``",
                "staff_notes": "Send Saturday",
                "customer_message": "Thank you",
                "discount_amount": 0,
                "coupon_discount": 5,
                "shipping_address_count": 1,
                "is_deleted": false,
                "is_email_opt_in": false,
                "ebay_order_id": 0,
                "billing_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com",
                  "form_fields": [
                    {
                      "name": "",
                      "value": ""
                    }
                  ]
                },
                "order_source": "www",
                "external_source": null,
                "products": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products",
                  "resource": "/orders/129/products"
                },
                "shipping_addresses": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses",
                  "resource": "/orders/129/shippingaddresses"
                },
                "coupons": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
                  "resource": "/orders/129/coupons"
                },
                "external_id": null,
                "external_merchant_id": null,
                "custom_status": "Awaiting Payment"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Archives an order by `id`.",
        "summary": "Delete an Order",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashAndIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The order id"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/stores/{store_hash}/v2/orders/count": {
      "get": {
        "description": "Gets an array of the orders in the store organized by order status.",
        "summary": "Get a Count of Orders",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersCountByStoreHashGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrdersCountResponse"
            },
            "examples": {
              "application/json": {
                "statuses": [
                  {
                    "id": 0,
                    "name": "Incomplete",
                    "system_label": "Incomplete",
                    "custom_label": "Incomplete - Testing",
                    "system_description": "An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.",
                    "count": 0,
                    "sort_order": 0
                  },
                  {
                    "id": 1,
                    "name": "Pending",
                    "system_label": "Pending",
                    "custom_label": "Pending",
                    "system_description": "Customer started the checkout process, but did not complete it.",
                    "count": 1,
                    "sort_order": 1
                  },
                  {
                    "id": 7,
                    "name": "Awaiting Payment",
                    "system_label": "Awaiting Payment",
                    "custom_label": "Awaiting Payment",
                    "system_description": "Customer has completed checkout process, but payment has yet to be confirmed.",
                    "count": 15,
                    "sort_order": 2
                  },
                  {
                    "id": 11,
                    "name": "Awaiting Fulfillment",
                    "system_label": "Awaiting Fulfillment",
                    "custom_label": "Awaiting Fulfillment",
                    "system_description": "Customer has completed the checkout process and payment has been confirmed.",
                    "count": 6,
                    "sort_order": 3
                  },
                  {
                    "id": 9,
                    "name": "Awaiting Shipment",
                    "system_label": "Awaiting Shipment",
                    "custom_label": "Awaiting Shipment",
                    "system_description": "Order has been pulled and packaged, and is awaiting collection from a shipping provider.",
                    "count": 0,
                    "sort_order": 4
                  },
                  {
                    "id": 8,
                    "name": "Awaiting Pickup",
                    "system_label": "Awaiting Pickup",
                    "custom_label": "Awaiting Pickup",
                    "system_description": "Order has been pulled, and is awaiting customer pickup from a seller-specified location.",
                    "count": 0,
                    "sort_order": 5
                  },
                  {
                    "id": 3,
                    "name": "Partially Shipped",
                    "system_label": "Partially Shipped",
                    "custom_label": "Partially Shipped",
                    "system_description": "Only some items in the order have been shipped, due to some products being pre-order only or other reasons.",
                    "count": 0,
                    "sort_order": 6
                  },
                  {
                    "id": 10,
                    "name": "Completed",
                    "system_label": "Completed",
                    "custom_label": "Completed - Testing",
                    "system_description": "Client has paid for their digital product and their file(s) are available for download.",
                    "count": 6,
                    "sort_order": 7
                  },
                  {
                    "id": 2,
                    "name": "Shipped",
                    "system_label": "Shipped",
                    "custom_label": "Shipped",
                    "system_description": "Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.",
                    "count": 6,
                    "sort_order": 8
                  },
                  {
                    "id": 5,
                    "name": "Cancelled",
                    "system_label": "Cancelled",
                    "custom_label": "Cancelled",
                    "system_description": "Seller has cancelled an order, due to a stock inconsistency or other reasons.",
                    "count": 5,
                    "sort_order": 9
                  },
                  {
                    "id": 6,
                    "name": "Declined",
                    "system_label": "Declined",
                    "custom_label": "Declined",
                    "system_description": "Seller has marked the order as declined for lack of manual payment, or other reasons.",
                    "count": 0,
                    "sort_order": 10
                  },
                  {
                    "id": 4,
                    "name": "Refunded",
                    "system_label": "Refunded",
                    "custom_label": "Refunded",
                    "system_description": "Seller has used the Refund action.",
                    "count": 0,
                    "sort_order": 11
                  },
                  {
                    "id": 13,
                    "name": "Disputed",
                    "system_label": "Disputed",
                    "custom_label": "Disputed",
                    "system_description": "Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.",
                    "count": 0,
                    "sort_order": 12
                  },
                  {
                    "id": 12,
                    "name": "Manual Verification Required",
                    "system_label": "Manual Verification Required",
                    "custom_label": "Manual Verification Required",
                    "system_description": "Order on hold while some aspect needs to be manually confirmed.",
                    "count": 0,
                    "sort_order": 13
                  },
                  {
                    "id": 14,
                    "name": "Partially Refunded",
                    "system_label": "Partially Refunded",
                    "custom_label": "Partially Refunded",
                    "system_description": "Seller has partially refunded the order.",
                    "count": 0,
                    "sort_order": 14
                  }
                ],
                "count": 39
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/stores/{store_hash}/v2/orders": {
      "get": {
        "description": "Gets a list of orders using the filter query",
        "summary": "List Orders",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "min_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The minimum order id"
          },
          {
            "name": "max_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum order id"
          },
          {
            "name": "min_total",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The minimum order total in float format. eg. 12.50"
          },
          {
            "name": "max_total",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The maximum order total in float format. eg. 12.50"
          },
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The id of the customer"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The email of the customer"
          },
          {
            "name": "status_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The staus id of the order. You can get the status id from the `/orders` endpoints"
          },
          {
            "name": "cart_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The cart id of the order"
          },
          {
            "name": "is_deleted",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If the order was deleted or not"
          },
          {
            "name": "payment_method",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The payment method used on the order"
          },
          {
            "name": "min_date_created",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The minimum date the order was created in dateTime or date",
            "format": "date-time"
          },
          {
            "name": "max_date_created",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The maximum date the order was created in dateTime or date",
            "format": "date-time"
          },
          {
            "name": "min_date_modified",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The minimum date the order was changed in dateTime or date",
            "format": "date-time"
          },
          {
            "name": "max_date_modified",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The maximum date the order was changed in dateTime or date",
            "format": "date"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of pages to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Limit the number of hits returned"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort the results. eg. `date_created:desc`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 118,
                  "customer_id": 6,
                  "date_created": "Mon, 23 Apr 2018 18:04:48 +0000",
                  "date_modified": "Mon, 23 Apr 2018 18:04:49 +0000",
                  "date_shipped": "Wed, 14 Nov 2012 19:26:23 +0000\"",
                  "status_id": 11,
                  "cart_id": "a8458391-ef68-4fe5-9ec1-442e6a767364",
                  "status": "Awaiting Fulfillment",
                  "subtotal_ex_tax": 225,
                  "subtotal_inc_tax": 225,
                  "subtotal_tax": 0,
                  "base_shipping_cost": 0,
                  "shipping_cost_ex_tax": 0,
                  "shipping_cost_inc_tax": 0,
                  "shipping_cost_tax": 0,
                  "shipping_cost_tax_class_id": 2,
                  "base_handling_cost": 0,
                  "handling_cost_ex_tax": 0,
                  "handling_cost_inc_tax": 0,
                  "handling_cost_tax": 0,
                  "handling_cost_tax_class_id": 2,
                  "base_wrapping_cost": 0,
                  "wrapping_cost_ex_tax": 0,
                  "wrapping_cost_inc_tax": 0,
                  "wrapping_cost_tax": 0,
                  "wrapping_cost_tax_class_id": 3,
                  "total_ex_tax": 225,
                  "total_inc_tax": 225,
                  "total_tax": 0,
                  "items_total": 1,
                  "items_shipped": 0,
                  "payment_method": "Cash on Delivery",
                  "payment_provider_id": null,
                  "refunded_amount": 0,
                  "order_is_digital": false,
                  "store_credit_amount": 0,
                  "gift_certificate_amount": 0,
                  "ip_address": "12.345.678.910",
                  "geoip_country": "United States",
                  "geoip_country_iso2": "US",
                  "currency_id": 1,
                  "currency_code": "USD",
                  "currency_exchange_rate": 1,
                  "default_currency_id": 1,
                  "default_currency_code": "``",
                  "staff_notes": "Send Saturday",
                  "customer_message": "Thank you",
                  "discount_amount": 0,
                  "coupon_discount": 5,
                  "shipping_address_count": 1,
                  "is_deleted": false,
                  "is_email_opt_in": false,
                  "ebay_order_id": 0,
                  "billing_address": {
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "company": "",
                    "street_1": "123 Main Street",
                    "street_2": "",
                    "city": "Austin",
                    "state": "TX",
                    "zip": 12345,
                    "country": "United States",
                    "country_iso2": "US",
                    "phone": "",
                    "email": "janedoe@email.com",
                    "form_fields": [
                      {
                        "name": "",
                        "value": ""
                      }
                    ]
                  },
                  "order_source": "www",
                  "external_source": null,
                  "products": {
                    "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products",
                    "resource": "/orders/129/products"
                  },
                  "shipping_addresses": {
                    "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses",
                    "resource": "/orders/129/shippingaddresses"
                  },
                  "coupons": {
                    "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
                    "resource": "/orders/129/coupons"
                  },
                  "external_id": null,
                  "external_merchant_id": null,
                  "custom_status": "Awaiting Payment"
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "",
        "summary": "Create an Order",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "x-examples": {
              "application/json": {
                "customer_id": 0,
                "status_id": 11,
                "date_created": "Thu, 04 Oct 2012 03:24:40 +0000",
                "subtotal_ex_tax": 1705,
                "subtotal_inc_tax": 1915,
                "base_shipping_cost": 0,
                "shipping_cost_ex_tax": 0,
                "shipping_cost_inc_tax": 0,
                "base_handling_cost": 0,
                "handling_cost_ex_tax": 0,
                "handling_cost_inc_tax": 0,
                "base_wrapping_cost": 0,
                "wrapping_cost_ex_tax": 0,
                "wrapping_cost_inc_tax": 0,
                "total_ex_tax": 1705,
                "total_inc_tax": 1915,
                "refunded_amount": 0,
                "order_is_digital": false,
                "staff_notes": "",
                "customer_message": "",
                "discount_amount": 10,
                "billing_address": {
                  "first_name": "Trisha",
                  "last_name": "McLaughlin",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Anywhere",
                  "state": "Some State",
                  "zip": "12345",
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "elsie@example.com"
                },
                "shipping_addresses": [
                  {
                    "first_name": "Trisha",
                    "last_name": "McLaughlin",
                    "company": "Acme Pty Ltd",
                    "street_1": "566 Sussex St",
                    "street_2": "",
                    "city": "Anywhere",
                    "state": "Some State",
                    "zip": "12345",
                    "country": "United States",
                    "country_iso2": "US",
                    "phone": "",
                    "email": "elsie@example.com"
                  }
                ],
                "products": [
                  {
                    "product_id": 32,
                    "quantity": 2
                  },
                  {
                    "product_id": 33,
                    "quantity": 2,
                    "product_options": [
                      {
                        "id": 87,
                        "value": 10
                      }
                    ]
                  },
                  {
                    "name": "My custom product",
                    "quantity": 2,
                    "price_inc_tax": 10.8,
                    "price_ex_tax": 10
                  }
                ],
                "external_source": "POS"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "examples": {
              "application/json": {
                "id": 118,
                "customer_id": 6,
                "date_created": "Mon, 23 Apr 2018 18:04:48 +0000",
                "date_modified": "Mon, 23 Apr 2018 18:04:49 +0000",
                "date_shipped": "Wed, 14 Nov 2012 19:26:23 +0000\"",
                "status_id": 11,
                "cart_id": "a8458391-ef68-4fe5-9ec1-442e6a767364",
                "status": "Awaiting Fulfillment",
                "subtotal_ex_tax": 225,
                "subtotal_inc_tax": 225,
                "subtotal_tax": 0,
                "base_shipping_cost": 0,
                "shipping_cost_ex_tax": 0,
                "shipping_cost_inc_tax": 0,
                "shipping_cost_tax": 0,
                "shipping_cost_tax_class_id": 2,
                "base_handling_cost": 0,
                "handling_cost_ex_tax": 0,
                "handling_cost_inc_tax": 0,
                "handling_cost_tax": 0,
                "handling_cost_tax_class_id": 2,
                "base_wrapping_cost": 0,
                "wrapping_cost_ex_tax": 0,
                "wrapping_cost_inc_tax": 0,
                "wrapping_cost_tax": 0,
                "wrapping_cost_tax_class_id": 3,
                "total_ex_tax": 225,
                "total_inc_tax": 225,
                "total_tax": 0,
                "items_total": 1,
                "items_shipped": 0,
                "payment_method": "Cash on Delivery",
                "payment_provider_id": null,
                "refunded_amount": 0,
                "order_is_digital": false,
                "store_credit_amount": 0,
                "gift_certificate_amount": 0,
                "ip_address": "12.345.678.910",
                "geoip_country": "United States",
                "geoip_country_iso2": "US",
                "currency_id": 1,
                "currency_code": "USD",
                "currency_exchange_rate": 1,
                "default_currency_id": 1,
                "default_currency_code": "``",
                "staff_notes": "Send Saturday",
                "customer_message": "Thank you",
                "discount_amount": 0,
                "coupon_discount": 5,
                "shipping_address_count": 1,
                "is_deleted": false,
                "is_email_opt_in": false,
                "ebay_order_id": 0,
                "billing_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com",
                  "form_fields": [
                    {
                      "name": "",
                      "value": ""
                    }
                  ]
                },
                "order_source": "www",
                "external_source": null,
                "products": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products",
                  "resource": "/orders/129/products"
                },
                "shipping_addresses": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses",
                  "resource": "/orders/129/shippingaddresses"
                },
                "coupons": {
                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
                  "resource": "/orders/129/coupons"
                },
                "external_id": null,
                "external_merchant_id": null,
                "custom_status": "Awaiting Payment"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Archives all orders.",
        "summary": "Delete all Orders",
        "tags": [
          "Orders"
        ],
        "operationId": "StoresV2OrdersByStoreHashDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/coupons": {
      "get": {
        "description": "Lists all order coupons. Optional parameters can be passed in.",
        "summary": "List Order Coupons",
        "operationId": "StoresV2OrdersCouponsByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The order id"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages to return"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Limit the number of responses"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderCoupons"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "coupon_id": 1,
                  "order_id": 120,
                  "code": "S2549JM0Y",
                  "amount": 5,
                  "type": 2,
                  "discount": 5
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Coupons",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/products": {
      "get": {
        "description": "Lists all order products on an order using `order_id`.",
        "summary": "List Order Products",
        "operationId": "StoresV2OrdersProductsByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL."
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderProducts"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 65,
                  "order_id": 149,
                  "product_id": 77,
                  "order_address_id": 51,
                  "name": "Fog Linen Chambray Towel - Beige Stripe",
                  "sku": "S-ORAN",
                  "type": "physical",
                  "base_price": "55.9900",
                  "price_ex_tax": "55.9900",
                  "price_inc_tax": "65.2300",
                  "price_tax": "9.2400",
                  "base_total": "55.9900",
                  "total_ex_tax": "55.9900",
                  "total_inc_tax": "65.2300",
                  "total_tax": "9.2400",
                  "weight": "1.0000",
                  "quantity": 1,
                  "base_cost_price": "0.0000",
                  "cost_price_inc_tax": "0.0000",
                  "cost_price_ex_tax": "0.0000",
                  "cost_price_tax": "0.0000",
                  "is_refunded": false,
                  "quantity_refunded": 0,
                  "refund_amount": "0.0000",
                  "return_id": 0,
                  "wrapping_name": "",
                  "base_wrapping_cost": "0.0000",
                  "wrapping_cost_ex_tax": "0.0000",
                  "wrapping_cost_inc_tax": "0.0000",
                  "wrapping_cost_tax": "0.0000",
                  "wrapping_message": "",
                  "quantity_shipped": 0,
                  "event_name": null,
                  "event_date": "",
                  "fixed_shipping_cost": "5.0000",
                  "ebay_item_id": "",
                  "ebay_transaction_id": "",
                  "option_set_id": 19,
                  "parent_order_product_id": null,
                  "is_bundled_product": false,
                  "bin_picking_number": "",
                  "external_id": null,
                  "fulfillment_source": "",
                  "applied_discounts": [],
                  "product_options": [
                    {
                      "id": 45,
                      "option_id": 18,
                      "order_product_id": 65,
                      "product_option_id": 120,
                      "display_name": "Size",
                      "display_value": "S",
                      "value": "69",
                      "type": "Multiple choice",
                      "name": "Apparel sizes",
                      "display_style": "Rectangle"
                    },
                    {
                      "id": 46,
                      "option_id": 3,
                      "order_product_id": 65,
                      "product_option_id": 121,
                      "display_name": "Color",
                      "display_value": "Orange",
                      "value": "112",
                      "type": "Swatch",
                      "name": "Colors",
                      "display_style": ""
                    },
                    {
                      "id": 47,
                      "option_id": 37,
                      "order_product_id": 65,
                      "product_option_id": 122,
                      "display_name": "Add Letters",
                      "display_value": "Text Field",
                      "value": "Text Field",
                      "type": "Text field",
                      "name": "Add Letters",
                      "display_style": ""
                    },
                    {
                      "id": 48,
                      "option_id": 38,
                      "order_product_id": 65,
                      "product_option_id": 123,
                      "display_name": "Is this a gift?",
                      "display_value": "Yes",
                      "value": "104",
                      "type": "Checkbox",
                      "name": "Gift Wrapping $5",
                      "display_style": ""
                    },
                    {
                      "id": 49,
                      "option_id": 39,
                      "order_product_id": 65,
                      "product_option_id": 124,
                      "display_name": "PickList",
                      "display_value": "Able Brewing System",
                      "value": "106",
                      "type": "Product Pick List",
                      "name": "PickList",
                      "display_style": "Pick list"
                    }
                  ],
                  "configurable_fields": []
                },
                {
                  "id": 66,
                  "order_id": 149,
                  "product_id": 86,
                  "order_address_id": 51,
                  "name": "Able Brewing System",
                  "sku": "ABS",
                  "type": "physical",
                  "base_price": "0.0000",
                  "price_ex_tax": "0.0000",
                  "price_inc_tax": "0.0000",
                  "price_tax": "0.0000",
                  "base_total": "0.0000",
                  "total_ex_tax": "0.0000",
                  "total_inc_tax": "0.0000",
                  "total_tax": "0.0000",
                  "weight": "0.0000",
                  "quantity": 1,
                  "base_cost_price": "0.0000",
                  "cost_price_inc_tax": "0.0000",
                  "cost_price_ex_tax": "0.0000",
                  "cost_price_tax": "0.0000",
                  "is_refunded": false,
                  "quantity_refunded": 0,
                  "refund_amount": "0.0000",
                  "return_id": 0,
                  "wrapping_name": "",
                  "base_wrapping_cost": "0.0000",
                  "wrapping_cost_ex_tax": "0.0000",
                  "wrapping_cost_inc_tax": "0.0000",
                  "wrapping_cost_tax": "0.0000",
                  "wrapping_message": "",
                  "quantity_shipped": 0,
                  "event_name": null,
                  "event_date": "",
                  "fixed_shipping_cost": "0.0000",
                  "ebay_item_id": "",
                  "ebay_transaction_id": "",
                  "option_set_id": null,
                  "parent_order_product_id": 65,
                  "is_bundled_product": true,
                  "bin_picking_number": "BIN",
                  "external_id": null,
                  "fulfillment_source": "",
                  "applied_discounts": [],
                  "product_options": [],
                  "configurable_fields": []
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Products",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses": {
      "get": {
        "description": "Get all shipping address on an order using the `order_id`.",
        "summary": "Get A List of Order Shipping Address",
        "operationId": "StoresV2OrdersShippingAddressesByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderShippingAddress"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 39,
                  "order_id": 138,
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "zip": "78751",
                  "country": "United States",
                  "country_iso2": "US",
                  "state": "Texas",
                  "email": "",
                  "phone": "1234567890",
                  "items_total": 1,
                  "items_shipped": 0,
                  "shipping_method": "Free Shipping",
                  "base_cost": "0.0000",
                  "cost_ex_tax": "0.0000",
                  "cost_inc_tax": "0.0000",
                  "cost_tax": "0.0000",
                  "cost_tax_class_id": 2,
                  "base_handling_cost": "0.0000",
                  "handling_cost_ex_tax": "0.0000",
                  "handling_cost_inc_tax": "0.0000",
                  "handling_cost_tax": "0.0000",
                  "handling_cost_tax_class_id": 2,
                  "shipping_zone_id": 1,
                  "shipping_zone_name": "United States",
                  "form_fields": [
                    {
                      "name": "License",
                      "value": ""
                    }
                  ]
                },
                {
                  "id": 40,
                  "order_id": 138,
                  "first_name": "John",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "178 South Street",
                  "street_2": "",
                  "city": "Austin",
                  "zip": "78751",
                  "country": "United States",
                  "country_iso2": "US",
                  "state": "Texas",
                  "email": "",
                  "phone": "1234567890",
                  "items_total": 1,
                  "items_shipped": 0,
                  "shipping_method": "Free Shipping",
                  "base_cost": "0.0000",
                  "cost_ex_tax": "0.0000",
                  "cost_inc_tax": "0.0000",
                  "cost_tax": "0.0000",
                  "cost_tax_class_id": 2,
                  "base_handling_cost": "0.0000",
                  "handling_cost_ex_tax": "0.0000",
                  "handling_cost_inc_tax": "0.0000",
                  "handling_cost_tax": "0.0000",
                  "handling_cost_tax_class_id": 2,
                  "shipping_zone_id": 1,
                  "shipping_zone_name": "United States",
                  "form_fields": [
                    {
                      "name": "License",
                      "value": ""
                    }
                  ]
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipping Addresses",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses/count": {
      "get": {
        "description": "Returns a count of all order shipping addresses using the `order_id`.",
        "summary": "Get a Count of All Order Shipping Addresses",
        "operationId": "StoresV2OrdersShippingAddressesCountByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderCountResponse"
            },
            "examples": {
              "application/json": {
                "count": 27
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipping Addresses",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/order_statuses": {
      "get": {
        "description": "Gets a list of order statues.",
        "summary": "Get All Order Statuses",
        "operationId": "StoresV2OrderStatusesByStoreHashGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderStatuses"
            },
            "examples": {
              "application/json": [
                {
                  "id": 0,
                  "name": "Incomplete",
                  "system_label": "Incomplete",
                  "custom_label": "Incomplete - Testing",
                  "system_description": "An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.",
                  "order": 0
                },
                {
                  "id": 1,
                  "name": "Pending",
                  "system_label": "Pending",
                  "custom_label": "Pending",
                  "system_description": "Customer started the checkout process, but did not complete it.",
                  "order": 1
                },
                {
                  "id": 2,
                  "name": "Shipped",
                  "system_label": "Shipped",
                  "custom_label": "Shipped",
                  "system_description": "Order has been shipped, but receipt has not been confirmed; seller has used the Ship Items action.",
                  "order": 8
                },
                {
                  "id": 3,
                  "name": "Partially Shipped",
                  "system_label": "Partially Shipped",
                  "custom_label": "Partially Shipped",
                  "system_description": "Only some items in the order have been shipped, due to some products being pre-order only or other reasons.",
                  "order": 6
                },
                {
                  "id": 4,
                  "name": "Refunded",
                  "system_label": "Refunded",
                  "custom_label": "Refunded",
                  "system_description": "Seller has used the Refund action.",
                  "order": 11
                },
                {
                  "id": 5,
                  "name": "Cancelled",
                  "system_label": "Cancelled",
                  "custom_label": "Cancelled",
                  "system_description": "Seller has cancelled an order, due to a stock inconsistency or other reasons.",
                  "order": 9
                },
                {
                  "id": 6,
                  "name": "Declined",
                  "system_label": "Declined",
                  "custom_label": "Declined",
                  "system_description": "Seller has marked the order as declined for lack of manual payment, or other reasons.",
                  "order": 10
                },
                {
                  "id": 7,
                  "name": "Awaiting Payment",
                  "system_label": "Awaiting Payment",
                  "custom_label": "Awaiting Payment",
                  "system_description": "Customer has completed checkout process, but payment has yet to be confirmed.",
                  "order": 2
                },
                {
                  "id": 8,
                  "name": "Awaiting Pickup",
                  "system_label": "Awaiting Pickup",
                  "custom_label": "Awaiting Pickup",
                  "system_description": "Order has been pulled, and is awaiting customer pickup from a seller-specified location.",
                  "order": 5
                },
                {
                  "id": 9,
                  "name": "Awaiting Shipment",
                  "system_label": "Awaiting Shipment",
                  "custom_label": "Awaiting Shipment",
                  "system_description": "Order has been pulled and packaged, and is awaiting collection from a shipping provider.",
                  "order": 4
                },
                {
                  "id": 10,
                  "name": "Completed",
                  "system_label": "Completed",
                  "custom_label": "Completed - Testing",
                  "system_description": "Client has paid for their digital product and their file(s) are available for download.",
                  "order": 7
                },
                {
                  "id": 11,
                  "name": "Awaiting Fulfillment",
                  "system_label": "Awaiting Fulfillment",
                  "custom_label": "Awaiting Fulfillment",
                  "system_description": "Customer has completed the checkout process and payment has been confirmed.",
                  "order": 3
                },
                {
                  "id": 12,
                  "name": "Manual Verification Required",
                  "system_label": "Manual Verification Required",
                  "custom_label": "Manual Verification Required",
                  "system_description": "Order on hold while some aspect needs to be manually confirmed.",
                  "order": 13
                },
                {
                  "id": 13,
                  "name": "Disputed",
                  "system_label": "Disputed",
                  "custom_label": "Disputed",
                  "system_description": "Customer has initiated a dispute resolution process for the PayPal transaction that paid for the order.",
                  "order": 12
                },
                {
                  "id": 14,
                  "name": "Partially Refunded",
                  "system_label": "Partially Refunded",
                  "custom_label": "Partially Refunded",
                  "system_description": "Seller has partially refunded the order.",
                  "order": 14
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Statues",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/order_statuses/{id}": {
      "get": {
        "description": "Gets a single order status.",
        "summary": "Get a Single Order Status by Id",
        "operationId": "StoresV2OrderStatusesByStoreHashAndIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order status"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "system_label": {
                  "type": "string"
                },
                "custom_label": {
                  "type": "string"
                },
                "system_description": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Pending",
                "system_label": "Pending",
                "system_description": "Pending",
                "custom_label": "Pending",
                "order": 1
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Statues",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/taxes": {
      "get": {
        "description": "Gets all order taxes using `order_id`.",
        "summary": "Get All Order Taxes",
        "operationId": "StoresV2OrdersTaxesByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderTaxes"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 13,
                  "order_id": 138,
                  "order_address_id": 39,
                  "tax_rate_id": 1,
                  "tax_class_id": 0,
                  "name": "Tax",
                  "class": "Default Tax Class",
                  "rate": "8.0000",
                  "priority": 0,
                  "priority_amount": "17.6400",
                  "line_amount": "17.6400"
                },
                {
                  "id": 14,
                  "order_id": 138,
                  "order_address_id": 40,
                  "tax_rate_id": 1,
                  "tax_class_id": 0,
                  "name": "Tax",
                  "class": "Default Tax Class",
                  "rate": "8.0000",
                  "priority": 0,
                  "priority_amount": "4.4000",
                  "line_amount": "4.4000"
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Taxes",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/shipments": {
      "get": {
        "description": "Gets a list of all shipments on an order",
        "summary": "Get A List of Order Shipments",
        "operationId": "StoresV2OrdersShipmentsByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderShipment"
            },
            "examples": {
              "application/json": [
                {
                  "id": 2,
                  "order_id": 143,
                  "customer_id": 6,
                  "order_address_id": 45,
                  "date_created": "Tue, 14 Aug 2018 13:59:39 +0000",
                  "tracking_number": "123445656746576787568",
                  "shipping_method": "Free Shipping",
                  "comments": "Packing Slip Notes",
                  "shipping_provider": "",
                  "tracking_carrier": "",
                  "billing_address": {
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "company": "",
                    "street_1": "123 Main Street",
                    "street_2": "",
                    "city": "Austin",
                    "state": "Texas",
                    "zip": "78726",
                    "country": "United States",
                    "country_iso2": "US",
                    "phone": "5122134567",
                    "email": "janedoe@email.com"
                  },
                  "shipping_address": {
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "company": "",
                    "street_1": "123 Main Street",
                    "street_2": "",
                    "city": "Austin",
                    "state": "Texas",
                    "zip": "78726",
                    "country": "United States",
                    "country_iso2": "US",
                    "phone": "1234567890",
                    "email": ""
                  },
                  "items": [
                    {
                      "order_product_id": 57,
                      "product_id": 86,
                      "quantity": 1
                    }
                  ]
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      },
      "post": {
        "description": "Creates a new shipment for an order.",
        "summary": "Create A New Order Shipment",
        "operationId": "StoresV2OrdersShipmentsByStoreHashAndOrderIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderShipment"
            },
            "x-examples": {
              "application/json": {
                "tracking_number": "EJ958083578US",
                "comments": "Ready to go...",
                "order_address_id": 1,
                "shipping_provider": "",
                "items": [
                  {
                    "order_product_id": 15,
                    "quantity": 2
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderShipment"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "order_id": 120,
                "customer_id": 5,
                "order_address_id": 20,
                "date_created": "Tue, 12 Jun 2018 14:12:26 +0000",
                "tracking_number": "w4se4b6ASFEW4T",
                "shipping_method": "Ship by Weight",
                "shipping_provider": "usps",
                "tracking_carrier": "auspost",
                "comments": "",
                "billing_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com"
                },
                "shipping_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com"
                },
                "items": [
                  {
                    "order_product_id": 25,
                    "product_id": 77,
                    "quantity": 1
                  }
                ]
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      },
      "delete": {
        "description": "Deletes all shipments associated with an order.",
        "summary": "Delete All Order Shipments",
        "operationId": "StoresV2OrdersShipmentsByStoreHashAndOrderIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/shipments/count": {
      "get": {
        "description": "Gets a count of the number of shipments that have been made for a single order.",
        "summary": "Get A Count of Shipments Per Order",
        "operationId": "StoresV2OrdersShipmentsCountByStoreHashAndOrderIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderCountResponse"
            },
            "examples": {
              "application/json": {
                "count": 27
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      }
    },
    "/stores/{store_hash}/v2/orders/{order_id}/shipments/{id}": {
      "put": {
        "description": "Updates an existing shipment associated with an order.",
        "summary": "Update A Shipment",
        "operationId": "StoresV2OrdersShipmentsIdByStoreHashAndOrderIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The id of the shipment"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderShipment"
            },
            "x-examples": {
              "application/json": {
                "tracking_number": "EJ958083578US",
                "order_address_id": 1,
                "shipping_provider": "",
                "items": [
                  {
                    "order_product_id": 15,
                    "quantity": 2
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderShipment"
            },
            "examples": {
              "application/json": {
                "id": 1,
                "order_id": 120,
                "customer_id": 5,
                "order_address_id": 20,
                "date_created": "Tue, 12 Jun 2018 14:12:26 +0000",
                "tracking_number": "w4se4b6ASFEW4T",
                "shipping_method": "Ship by Weight",
                "shipping_provider": "usps",
                "tracking_carrier": "auspost",
                "comments": "",
                "billing_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com"
                },
                "shipping_address": {
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "company": "",
                  "street_1": "123 Main Street",
                  "street_2": "",
                  "city": "Austin",
                  "state": "TX",
                  "zip": 12345,
                  "country": "United States",
                  "country_iso2": "US",
                  "phone": "",
                  "email": "janedoe@email.com"
                },
                "items": [
                  {
                    "order_product_id": 25,
                    "product_id": 77,
                    "quantity": 1
                  }
                ]
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      },
      "delete": {
        "description": "Deletes a shipment associated with an order.",
        "summary": "Delete A Order Shipment",
        "operationId": "StoresV2OrdersShipmentsIdByStoreHashAndOrderIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "store_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Your store's hash from the canonical URL"
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the order"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The id of the shipment"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "X-Auth-Client",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Order Shipments",
          "Orders"
        ]
      }
    }
  },
  "definitions": {
    "Order": {
      "title": "Order",
      "example": {
        "id": 113,
        "customer_id": 1,
        "date_created": "Wed, 17 Jan 2018 20:11:21 +0000",
        "date_modified": "Wed, 25 Apr 2018 20:20:25 +0000",
        "date_shipped": "",
        "status_id": 7,
        "status": "Awaiting Payment",
        "subtotal_ex_tax": "143.9500",
        "subtotal_inc_tax": "143.9500",
        "subtotal_tax": "0.0000",
        "base_shipping_cost": "0.0000",
        "shipping_cost_ex_tax": "0.0000",
        "shipping_cost_inc_tax": "0.0000",
        "shipping_cost_tax": "0.0000",
        "shipping_cost_tax_class_id": 2,
        "base_handling_cost": "0.0000",
        "handling_cost_ex_tax": "0.0000",
        "handling_cost_inc_tax": "0.0000",
        "handling_cost_tax": "0.0000",
        "handling_cost_tax_class_id": 2,
        "base_wrapping_cost": "0.0000",
        "wrapping_cost_ex_tax": "0.0000",
        "wrapping_cost_inc_tax": "0.0000",
        "wrapping_cost_tax": "0.0000",
        "wrapping_cost_tax_class_id": 3,
        "total_ex_tax": "138.9500",
        "total_inc_tax": "138.9500",
        "total_tax": "0.0000",
        "items_total": 2,
        "items_shipped": 0,
        "payment_method": "Cash on Delivery",
        "payment_provider_id": null,
        "payment_status": "",
        "refunded_amount": "0.0000",
        "order_is_digital": false,
        "store_credit_amount": "0.0000",
        "gift_certificate_amount": "0.0000",
        "ip_address": "64.183.182.114",
        "geoip_country": "United States",
        "geoip_country_iso2": "US",
        "currency_id": 1,
        "currency_code": "USD",
        "currency_exchange_rate": "1.0000000000",
        "default_currency_id": 1,
        "default_currency_code": "USD",
        "staff_notes": "",
        "customer_message": "",
        "discount_amount": "0.0000",
        "coupon_discount": "5.0000",
        "shipping_address_count": 1,
        "is_deleted": false,
        "ebay_order_id": "0",
        "cart_id": "1cf3da59-1c90-42a9-82fb-2a954743a390",
        "billing_address": {
          "first_name": "Jane",
          "last_name": "Does",
          "company": "",
          "street_1": "123 MainStreet",
          "street_2": "",
          "city": "Austin",
          "state": "Texas",
          "zip": "78751",
          "country": "United States",
          "country_iso2": "US",
          "phone": "",
          "email": "jane@email.com",
          "form_fields": []
        },
        "is_email_opt_in": false,
        "credit_card_type": null,
        "order_source": "www",
        "external_source": null,
        "products": {
          "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/products",
          "resource": "/orders/113/products"
        },
        "shipping_addresses": {
          "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/shippingaddresses",
          "resource": "/orders/113/shippingaddresses"
        },
        "coupons": {
          "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/coupons",
          "resource": "/orders/113/coupons"
        },
        "external_id": null,
        "external_merchant_id": null,
        "custom_status": "Awaiting Payment"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the order, a read-only value. Do not pass in PUT or POST.",
          "example": 118,
          "type": "integer"
        },
        "customer_id": {
          "description": "The ID of the customer placing the order; or 0 if it was a guest order.",
          "example": 6,
          "type": "integer"
        },
        "date_created": {
          "description": "The date this order was created. If not specified, will default to the current time. The date should be in RFC 2822 format, e.g.: Tue, 20 Nov 2012 00:00:00 +0000",
          "example": "Mon, 23 Apr 2018 18:04:48 +0000",
          "type": "string",
          "format": "date-time"
        },
        "date_modified": {
          "description": "A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation.",
          "example": "Mon, 23 Apr 2018 18:04:49 +0000",
          "type": "string",
          "format": "date-time"
        },
        "date_shipped": {
          "description": "A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation.",
          "example": "Wed, 14 Nov 2012 19:26:23 +0000\"",
          "type": "string",
          "format": "date-time"
        },
        "status_id": {
          "description": "The status ID of the order.",
          "example": 11,
          "type": "integer"
        },
        "cart_id": {
          "description": "The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": "a8458391-ef68-4fe5-9ec1-442e6a767364",
          "type": "string"
        },
        "status": {
          "description": "The status will include one of the (string, optiona) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.",
          "example": "Awaiting Fulfillment",
          "type": "string"
        },
        "custom_status": {
          "description": "Contains the same (string, optiona) - value as the Order Statuses object's `custom_label` property.",
          "example": "Awaiting Fulfillment",
          "type": "string"
        },
        "subtotal_ex_tax": {
          "description": "Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)",
          "example": "225.0000",
          "type": "string"
        },
        "subtotal_inc_tax": {
          "description": "Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)",
          "example": "225.0000",
          "type": "string"
        },
        "subtotal_tax": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "base_shipping_cost": {
          "description": "The value of the base shipping cost. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "shipping_cost_ex_tax": {
          "description": "The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "shipping_cost_inc_tax": {
          "description": "The value of shipping cost, including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "shipping_cost_tax": {
          "description": "A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "shipping_cost_tax_class_id": {
          "description": "Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)",
          "example": 2,
          "type": "integer"
        },
        "base_handling_cost": {
          "description": "The value of the base handling cost. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_ex_tax": {
          "description": "The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_inc_tax": {
          "description": "The value of the handling cost, including tax. (Float, Float-As-String, Integer)",
          "example": 0,
          "type": "number"
        },
        "handling_cost_tax": {
          "description": "A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_tax_class_id": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)",
          "example": 2,
          "type": "integer"
        },
        "base_wrapping_cost": {
          "description": "The value of the base wrapping cost. (Float, Float-As-String, Integer)",
          "example": 0,
          "type": "integer"
        },
        "wrapping_cost_ex_tax": {
          "description": "The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_inc_tax": {
          "description": "The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_tax": {
          "description": "A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_tax_class_id": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)",
          "example": 3,
          "type": "integer"
        },
        "total_ex_tax": {
          "description": "Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)",
          "example": "225.0000",
          "type": "string"
        },
        "total_inc_tax": {
          "description": "Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer) ",
          "example": "225.0000",
          "type": "string"
        },
        "total_tax": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "items_total": {
          "description": "The total number of items in the order.",
          "example": 1,
          "type": "number"
        },
        "items_shipped": {
          "description": "The number of items that have been shipped.",
          "example": 0,
          "type": "number"
        },
        "payment_method": {
          "description": "The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.",
          "example": "Cash on Delivery",
          "type": "string"
        },
        "payment_provider_id": {
          "description": "The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).",
          "example": "null",
          "type": "string"
        },
        "payment_status": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.",
          "type": "string"
        },
        "refunded_amount": {
          "description": "The amount refunded from this transaction. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "order_is_digital": {
          "description": "Whether this is an order for digital products.",
          "example": false,
          "type": "boolean"
        },
        "store_credit_amount": {
          "description": "Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "gift_certificate_amount": {
          "description": "A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "ip_address": {
          "description": "IP Address of the customer, if known.",
          "example": "12.345.678.910",
          "type": "string"
        },
        "geoip_country": {
          "description": "The full name of the country where the customer made the purchase, based on the IP.",
          "example": "United States",
          "type": "string"
        },
        "geoip_country_iso2": {
          "description": "The country where the customer made the purchase, in ISO2 format, based on the IP.",
          "example": "US",
          "type": "string"
        },
        "currency_id": {
          "description": "The ID of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.",
          "example": 1,
          "type": "integer"
        },
        "currency_code": {
          "description": "The currency code of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.",
          "example": "USD",
          "type": "string"
        },
        "currency_exchange_rate": {
          "description": "A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
          "example": "1.0000000000",
          "type": "string"
        },
        "default_currency_id": {
          "description": "A read-only value. Do not pass in a POST or PUT.",
          "example": 1,
          "type": "integer"
        },
        "default_currency_code": {
          "description": "The currency code of the default currency for this type of transaction. A read-only value. Do not pass in a POST or PUT.",
          "type": "string",
          "example": "USD"
        },
        "staff_notes": {
          "description": "Any additional notes for staff.",
          "example": "Send Saturday",
          "type": "string"
        },
        "customer_message": {
          "description": "Message that the customer entered (number, optiona) -o the `Order Comments` box during checkout.",
          "example": "Thank you",
          "type": "string"
        },
        "discount_amount": {
          "description": "Amount of discount for this transaction. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "coupon_discount": {
          "description": "A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)",
          "example": "5.0000",
          "type": "string"
        },
        "shipping_address_count": {
          "type": "number",
          "description": "The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT."
        },
        "is_deleted": {
          "description": "Indicates whether the order was deleted (archived).",
          "example": false,
          "type": "boolean"
        },
        "is_email_opt_in": {
          "description": "Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.",
          "example": false,
          "type": "boolean"
        },
        "ebay_order_id": {
          "description": "If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.",
          "example": "0",
          "type": "string"
        },
        "billing_address": {
          "$ref": "#/definitions/BillingAddress"
        },
        "order_source": {
          "description": "Orders submitted via the store's website will include a `www` value. Orders submitted via the API will be set to `external`. A read-only value. Do not pass in a POST or PUT.",
          "example": "www",
          "type": "string"
        },
        "external_source": {
          "description": "For orders submitted or modified via the API, using a PUT or POST operation, you can optionally pass in a value identifying the system used to generate the order. For example: `POS`. Otherwise, the value will be null.",
          "example": "null",
          "type": "string"
        },
        "products": {
          "$ref": "#/definitions/ProductsResource"
        },
        "shipping_addresses": {
          "$ref": "#/definitions/ShippingAddressesResource"
        },
        "coupons": {
          "$ref": "#/definitions/CouponsResource"
        },
        "external_id": {
          "description": "ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.",
          "example": "null",
          "type": "string"
        },
        "external_merchant_id": {
          "description": "Id of the external merchant.",
          "example": "null",
          "type": "string"
        }
      },
      "required": [
        "billing_address",
        "products"
      ]
    },
    "BillingAddress": {
      "title": "Billing Address",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "",
          "example": "Jane",
          "type": "string"
        },
        "last_name": {
          "description": "",
          "example": "Doe",
          "type": "string"
        },
        "company": {
          "description": "",
          "type": "string"
        },
        "street_1": {
          "description": "",
          "example": "123 Main Street",
          "type": "string"
        },
        "street_2": {
          "description": "",
          "type": "string"
        },
        "city": {
          "description": "",
          "example": "Austin",
          "type": "string"
        },
        "state": {
          "description": "",
          "example": "TX",
          "type": "string"
        },
        "zip": {
          "description": "",
          "example": "12345",
          "type": "string"
        },
        "country": {
          "description": "",
          "example": "United States",
          "type": "string"
        },
        "country_iso2": {
          "description": "",
          "example": "US",
          "type": "string"
        },
        "phone": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "example": "janedoe@email.com",
          "type": "string"
        },
        "form_fields": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFields"
          }
        }
      }
    },
    "FormFields": {
      "title": "Form Fields",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the form field",
          "type": "string",
          "example": "License Id"
        },
        "value": {
          "description": "Value of the form field",
          "type": "string",
          "example": "123BAF"
        }
      }
    },
    "ProductsResource": {
      "title": "Products Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products",
          "type": "string"
        },
        "resource": {
          "description": "",
          "example": "/orders/129/products",
          "type": "string"
        }
      }
    },
    "ShippingAddressesResource": {
      "title": "Shipping Address Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the shipping address for api requests",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses",
          "type": "string"
        },
        "resource": {
          "description": "",
          "example": "/orders/129/shippingaddresses",
          "type": "string"
        }
      }
    },
    "CouponsResource": {
      "title": "Coupon Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the coupons for api requests",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
          "type": "string"
        },
        "resource": {
          "description": "resource of the coupons",
          "example": "/orders/129/coupons",
          "type": "string"
        }
      }
    },
    "OrdersCountResponse": {
      "title": "Orders Count Response",
      "example": {
        "statuses": {
          "id": 0,
          "name": "Incomplete",
          "system_label": "Incomplete",
          "custom_label": "Incomplete- Waiting on Shipment",
          "system_description": "An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.",
          "count": 6,
          "sort_order": 0
        },
        "count": 45
      },
      "type": "object",
      "properties": {
        "statuses": {
          "$ref": "#/definitions/OrderStatuses"
        },
        "count": {
          "description": "Total number of orders in the store",
          "example": 45,
          "type": "number"
        }
      }
    },
    "OrderStatuses": {
      "title": "Order Statuses",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the type of order status",
          "example": 0,
          "type": "integer"
        },
        "name": {
          "description": "Name of the type of order status",
          "example": "Incomplete",
          "type": "string"
        },
        "system_label": {
          "description": "System name of the type of order status.",
          "example": "Incomplete",
          "type": "string"
        },
        "custom_label": {
          "description": "Custom order status label given in the Control Panel",
          "example": "Incomplete- Waiting on Shipment",
          "type": "string"
        },
        "system_description": {
          "description": "System description of the order status",
          "example": "An incomplete order happens when a shopper reached the payment page, but did not complete the transaction.",
          "type": "string"
        },
        "count": {
          "description": "Number of orders that exist with this status",
          "example": 6,
          "type": "number"
        },
        "sort_order": {
          "description": "The sort order of the order status from the Control Panel",
          "example": 0,
          "type": "number"
        }
      }
    },
    "OrderCoupons": {
      "title": "Order Coupons",
      "type": "object",
      "properties": {
        "id": {
          "description": "Numeric ID of the coupon code.",
          "example": 3,
          "type": "integer"
        },
        "coupon_id": {
          "description": "Numeric ID of the associated coupon.",
          "example": 1,
          "type": "integer"
        },
        "order_id": {
          "description": "Numeric ID of the associated order.",
          "example": 120,
          "type": "integer"
        },
        "code": {
          "description": "Coupon code, as a string.",
          "example": "S2549JM0Y",
          "type": "string"
        },
        "amount": {
          "description": "Amount of the coupon code. (Float, Float-As-String, Integer)",
          "example": "5.0000",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/OrderCouponDiscountType"
        },
        "discount": {
          "description": "The discount to apply to an order, as either an amount or a percentage. This field’s usage is determined by the coupon code’s type. For example, a type of percentage_discount would determine a percentage here. (Float, Float-As-String, Integer)",
          "example": "5.0000",
          "type": "number"
        }
      }
    },
    "OrderCouponDiscountType": {
      "type": "string",
      "title": "Order Coupon Discount Type",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "description": "type 0: per_item_discount\ntype 1: percentage_discount\ntype 2: per_total_discount\ntype 3: shipping_discount\ntype 4: free_shipping"
    },
    "OrderProducts": {
      "title": "Order Products",
      "type": "object",
      "properties": {
        "id": {
          "description": "Numeric ID of this product within this order.",
          "example": 25,
          "type": "integer"
        },
        "order_id": {
          "description": "Numeric ID of the associated order.",
          "example": 120,
          "type": "integer"
        },
        "product_id": {
          "description": "Numeric ID of the product.",
          "example": 20,
          "type": "integer"
        },
        "order_address_id": {
          "description": "Numeric ID of the associated order address.",
          "example": 20,
          "type": "integer"
        },
        "name": {
          "description": "The product name.",
          "example": "Fog Linen Chambray Towel - Beige Stripe",
          "type": "string"
        },
        "sku": {
          "description": "User-defined product code/stock keeping unit (SKU).",
          "example": "S-GREE",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "physical",
            "digital"
          ],
          "example": "physical",
          "description": "Type of product"
        },
        "base_price": {
          "description": "The product's base price. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "price_ex_tax": {
          "description": "The product’s price excluding tax. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "price_inc_tax": {
          "description": "The product’s price including tax. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "price_tax": {
          "description": "Tax applied to the product. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "base_total": {
          "description": "Total base price. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "total_ex_tax": {
          "description": "Total base price excluding tax. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "total_inc_tax": {
          "description": "Total base price including tax. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "total_tax": {
          "description": "Total tax applied. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity of the product ordered.",
          "example": 1,
          "type": "number"
        },
        "base_cost_price": {
          "description": "The product's cost price. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "cost_price_inc_tax": {
          "description": "The product's cost price including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "cost_price_ex_tax": {
          "description": "The products cost price excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "weight": {
          "description": "Weight of the product. (Float, Float-As-String, Integer)",
          "example": 1,
          "type": "string"
        },
        "cost_price_tax": {
          "description": "Tax applied to the product’s cost price. (Float, Float-As-String, Integer)",
          "example": "54.0000",
          "type": "string"
        },
        "is_refunded": {
          "description": "Whether the product has been refunded.",
          "example": false,
          "type": "boolean"
        },
        "refunded_amount": {
          "description": "The amount refunded from this transaction. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "return_id": {
          "description": "Numeric ID for the refund.",
          "example": 0,
          "type": "integer"
        },
        "wrapping_name": {
          "description": "Name of gift-wrapping option",
          "example": "null",
          "type": "string"
        },
        "base_wrapping_cost": {
          "description": "The value of the base wrapping cost. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_ex_tax": {
          "description": "The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_inc_tax": {
          "description": "The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_cost_tax": {
          "description": "Tax applied to gift-wrapping option. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "wrapping_message": {
          "description": "Message to accompany gift-wrapping option.",
          "type": "string"
        },
        "quantity_shipped": {
          "description": "Quantity of this item shipped.",
          "example": 0,
          "type": "number"
        },
        "event_name": {
          "description": "Name of promotional event/delivery date.",
          "example": "null",
          "type": "string"
        },
        "event_date": {
          "description": "Date of the promotional event/scheduled delivery.",
          "type": "string",
          "format": "date"
        },
        "fixed_shipping_cost": {
          "description": "Fixed shipping cost for this product. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "ebay_item_id": {
          "description": "Item ID for this product on eBay.",
          "type": "string"
        },
        "ebay_transaction_id": {
          "description": "Transaction ID for this product on eBay.",
          "type": "string"
        },
        "option_set_id": {
          "description": "Numeric ID of the option set applied to the product.",
          "example": 5,
          "type": "integer"
        },
        "parent_order_product_id": {
          "description": "ID of a parent product.",
          "type": "integer"
        },
        "is_bundled_product": {
          "description": "Whether this product is bundled with other products.",
          "example": false,
          "type": "boolean"
        },
        "bin_picking_number": {
          "description": "Bin picking number for the physical product.",
          "type": "string"
        },
        "applied_discounts": {
          "description": "Array of objects containing discounts applied to the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProductsAppliedDiscounts"
          }
        },
        "product_options": {
          "description": "Array of product option objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProductsProductOptions"
          }
        },
        "external_id": {
          "description": "ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.",
          "type": "integer"
        }
      }
    },
    "OrderProductsAppliedDiscounts": {
      "title": "Order Products Applied Discounts",
      "type": "object",
      "properties": {
        "id": {
          "description": "Name of the coupon applied to order",
          "example": "total-coupon",
          "type": "string"
        },
        "amount": {
          "description": "Amount of the discount.(Float, Float-As-String, Integer) ",
          "example": "1.2100",
          "type": "string"
        },
        "name": {
          "description": "Name of the coupon",
          "example": "$5 off",
          "type": "string"
        },
        "code": {
          "description": "Coupon Code",
          "example": "S2549JM0Y",
          "type": "string"
        }
      }
    },
    "OrderProductsProductOptions": {
      "title": "Order Products Product Options",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique numerical ID of the option; increments sequentially.",
          "example": 16,
          "type": "integer"
        },
        "option_id": {
          "description": "Numeric ID of the associated option.",
          "example": 18,
          "type": "integer"
        },
        "order_product_id": {
          "description": "",
          "example": 53,
          "type": "integer"
        },
        "product_option_id": {
          "description": "",
          "example": 120,
          "type": "integer"
        },
        "display_name": {
          "description": "The name of the option, as shown on the storefront.",
          "example": "Size",
          "type": "string"
        },
        "display_value": {
          "description": "The name of the value, as shown on the storefront.",
          "example": "S",
          "type": "string"
        },
        "value": {
          "description": "",
          "example": "70",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Checkbox",
            "Date field",
            "File Upload",
            "Multi-line text field",
            "Multiple choice",
            "Product Pick List",
            "Swatch",
            "Text field"
          ],
          "example": "Checkbox",
          "description": "Option Type"
        },
        "name": {
          "description": "The option’s name, as used internally. Must be unique",
          "example": "Apparel sizes",
          "type": "string"
        },
        "display_style": {
          "description": "How it is displayed on the storefront. Examples include Drop-down, radio buttons, or rectangles.",
          "example": "Rectangle",
          "type": "string"
        }
      }
    },
    "OrderCountResponse": {
      "title": "Order Count Response",
      "example": {
        "count": 27
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "",
          "example": 27,
          "type": "number"
        }
      }
    },
    "OrderShippingAddress": {
      "title": "Order Shipping Address",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of this shipping address.",
          "example": 1,
          "type": "integer"
        },
        "order_id": {
          "description": "ID of the order.",
          "example": 100,
          "type": "integer"
        },
        "first_name": {
          "description": "Addressee first name.",
          "example": "Rick",
          "type": "string"
        },
        "last_name": {
          "description": "Addressee last name.",
          "example": "Sanchez",
          "type": "string"
        },
        "company": {
          "description": "Addressee company.",
          "example": "BigCommerce",
          "type": "string"
        },
        "street_1": {
          "description": "Street address (first line).",
          "example": "123 MainStreet",
          "type": "string"
        },
        "street_2": {
          "description": "Street address (second line).",
          "type": "string"
        },
        "city": {
          "description": "Addressee city.",
          "example": "Austin",
          "type": "string"
        },
        "zip": {
          "description": "ZIP or postal code, as a string.",
          "example": "12345",
          "type": "string"
        },
        "country": {
          "description": "Addressee’s country.",
          "example": "United States",
          "type": "string"
        },
        "country_iso2": {
          "description": "2-letter ISO Alpha-2 code for the country. (Looking Up Country Codes)",
          "example": "US",
          "type": "string"
        },
        "state": {
          "description": "The name of the state or province. Should be spelled out in full, e.g.: California.",
          "example": "Texas",
          "type": "string"
        },
        "email": {
          "description": "Recipient’s email address.",
          "example": "janedoe@email.com",
          "type": "string"
        },
        "phone": {
          "description": "Recipient’s telephone number",
          "example": "1234567890",
          "type": "string"
        },
        "items_total": {
          "description": "The total number of items in the order.",
          "example": 1,
          "type": "number"
        },
        "items_shipped": {
          "description": "The number of items that have been shipped.",
          "example": 0,
          "type": "number"
        },
        "shipping_method": {
          "description": "Text code identifying the BigCommerce shipping module selected by the customer.",
          "example": "Free Shipping",
          "type": "string"
        },
        "base_cost": {
          "description": "The base value of the order’s items. (Float, Float-As-String, Integer)",
          "example": "5.0000",
          "type": "string"
        },
        "cost_ex_tax": {
          "description": "The value of the order’s items, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "cost_inc_tax": {
          "description": "The value of the order’s items, including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "cost_tax": {
          "description": "The tax amount on the order. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "cost_tax_class_id": {
          "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)",
          "example": 2,
          "type": "integer"
        },
        "base_handling_cost": {
          "description": "The base handling charge. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_ex_tax": {
          "description": "The handling charge, excluding tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_inc_tax": {
          "description": "The handling charge, including tax. (Float, Float-As-String, Integer)",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_tax": {
          "description": "",
          "example": "0.0000",
          "type": "string"
        },
        "handling_cost_tax_class_id": {
          "description": "A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)",
          "example": 2,
          "type": "integer"
        },
        "shipping_zone_id": {
          "description": "Numeric ID of the shipping zone.",
          "example": 1,
          "type": "integer"
        },
        "shipping_zone_name": {
          "description": "Name of the shipping zone.",
          "example": "United States",
          "type": "string"
        },
        "form_fields": {
          "description": "Empty array",
          "type": "object"
        }
      }
    },
    "OrderShippingAddressShippingQuotesResource": {
      "title": "Order Shipping Address Shipping Quotes Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "Path to the shipping quote for the order",
          "example": "https://api.bigcommerce.com/stores/jrah6gmn/v2/orders/100/shippingaddresses/1/shippingquotes",
          "type": "string"
        },
        "resource": {
          "description": "API resources being used.",
          "example": "/orders/100/shippingaddresses/1/shippingquotes",
          "type": "string"
        }
      }
    },
    "OrderTaxes": {
      "title": "Order Taxes",
      "example": {
        "id": 16,
        "order_id": 140,
        "order_address_id": 42,
        "tax_rate_id": 1,
        "tax_class_id": 3,
        "name": "Tax",
        "class": "Gift Wrapping",
        "rate": "8.0000",
        "priority": 0,
        "priority_amount": "1.5200",
        "line_amount": "1.5200"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique numeric identifier of the taxes object.",
          "example": 1,
          "type": "integer"
        },
        "order_id": {
          "description": "The unique numeric identifier of the order to which the tax was applied. NOTE: Not included if the store was using the automatic tax feature.",
          "example": 129,
          "type": "integer"
        },
        "order_address_id": {
          "description": "The unique numeric identifier of the order address object associated with the order. NOTE: Not included if the store was using the automatic tax feature.",
          "example": 29,
          "type": "integer"
        },
        "tax_rate_id": {
          "description": "The unique numeric identifier of the tax rate.",
          "example": 1,
          "type": "integer"
        },
        "tax_class_id": {
          "description": "The unique numeric identifier of the tax class object. NOTE: Will be 0 if automatic tax was enabled, or if the default tax class was used.",
          "example": 0,
          "type": "integer"
        },
        "name": {
          "description": "The name of the tax class object.",
          "example": "\"State Tax\"",
          "type": "string"
        },
        "class": {
          "description": "The name of the type of tax that was applied. NOTE: will be “Automatic Tax” if automatic tax was enabled.",
          "example": "Gift Wrapping",
          "type": "string"
        },
        "rate": {
          "description": "The tax rate.  The priority order in which the tax is applied (Float, Float-As-String, Integer)",
          "example": "8.0000",
          "type": "string"
        },
        "priority": {
          "description": "The order in which the tax is applied",
          "example": 0,
          "type": "integer"
        },
        "priority_amount": {
          "description": "The amount of tax calculated on the order.   (Float, Float-As-String, Integer)",
          "example": "1.5200",
          "type": "string"
        },
        "line_amount": {
          "description": "(Float, Float-As-String, Integer)",
          "example": "1.5200",
          "type": "string"
        }
      }
    },
    "OrderShipment": {
      "title": "Order Shipment",
      "example": {
        "id": 2,
        "order_id": 143,
        "customer_id": 6,
        "order_address_id": 45,
        "date_created": "Tue, 14 Aug 2018 13:59:39 +0000",
        "tracking_number": "123445656746576787568",
        "shipping_method": "Free Shipping",
        "comments": "Shipment 1 of 2",
        "shipping_provider": "",
        "tracking_carrier": "",
        "billing_address": {
          "first_name": "Jane",
          "last_name": "Doe",
          "company": "",
          "street_1": "123 Main Street",
          "street_2": "",
          "city": "Austin",
          "state": "Texas",
          "zip": "78726",
          "country": "United States",
          "country_iso2": "US",
          "phone": "1234567890",
          "email": "jane@email.com"
        },
        "shipping_address": {
          "first_name": "Jane",
          "last_name": "Doe",
          "company": "",
          "street_1": "123 Main Street",
          "street_2": "",
          "city": "Austin",
          "state": "Texas",
          "zip": "78726",
          "country": "United States",
          "country_iso2": "US",
          "phone": "1234567890",
          "email": ""
        },
        "items": [
          {
            "order_product_id": 57,
            "product_id": 86,
            "quantity": 1
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Shipment ID.",
          "example": 1,
          "type": "integer"
        },
        "order_id": {
          "description": "ID of the order associated with this shipment.",
          "example": 120,
          "type": "integer"
        },
        "customer_id": {
          "description": "ID of this order’s customer.",
          "example": 5,
          "type": "integer"
        },
        "order_address_id": {
          "description": "ID of the associated order address.",
          "example": 20,
          "type": "integer"
        },
        "date_created": {
          "description": "Creation date for the shipment.",
          "example": "Tue, 12 Jun 2018 14:12:26 +0000",
          "type": "string",
          "format": "date-time"
        },
        "tracking_number": {
          "description": "Tracking number of the shipment.",
          "example": "w4se4b6ASFEW4T",
          "type": "string"
        },
        "shipping_method": {
          "description": "Extra detail to describe the shipment, with values like: Standard, My Custom Shipping Method Name, etc. Can also be used for live quotes from some shipping providers.",
          "example": "Ship by Weight",
          "type": "string"
        },
        "shipping_provider": {
          "description": "Enum of the BigCommerce shipping-carrier integration/module. (Note: This property should be included in a POST request to create a shipment object. If it is omitted from the request, the property’s value will default to custom, and no tracking link will be generated in the email. To avoid this behavior, you can pass the property as an empty string.)",
          "example": "usps",
          "type": "string"
        },
        "tracking_carrier": {
          "$ref": "#/definitions/TrackingCarrier"
        },
        "comments": {
          "description": "Comments the shipper wishes to add.",
          "type": "string"
        },
        "billing_address": {
          "type": "object",
          "properties": {
            "first_name": {
              "description": "",
              "example": "Jane",
              "type": "string"
            },
            "last_name": {
              "description": "",
              "example": "Doe",
              "type": "string"
            },
            "company": {
              "description": "",
              "type": "string"
            },
            "street_1": {
              "description": "",
              "example": "123 Main Street",
              "type": "string"
            },
            "street_2": {
              "description": "",
              "type": "string"
            },
            "city": {
              "description": "",
              "example": "Austin",
              "type": "string"
            },
            "state": {
              "description": "",
              "example": "TX",
              "type": "string"
            },
            "zip": {
              "description": "",
              "example": "12345",
              "type": "string"
            },
            "country": {
              "description": "",
              "example": "United States",
              "type": "string"
            },
            "country_iso2": {
              "description": "",
              "example": "US",
              "type": "string"
            },
            "phone": {
              "description": "",
              "type": "string"
            },
            "email": {
              "description": "",
              "example": "janedoe@email.com",
              "type": "string"
            }
          }
        },
        "shipping_address": {
          "type": "object",
          "properties": {
            "first_name": {
              "description": "",
              "example": "Jane",
              "type": "string"
            },
            "last_name": {
              "description": "",
              "example": "Doe",
              "type": "string"
            },
            "company": {
              "description": "",
              "type": "string"
            },
            "street_1": {
              "description": "",
              "example": "123 Main Street",
              "type": "string"
            },
            "street_2": {
              "description": "",
              "type": "string"
            },
            "city": {
              "description": "",
              "example": "Austin",
              "type": "string"
            },
            "state": {
              "description": "",
              "example": "TX",
              "type": "string"
            },
            "zip": {
              "description": "",
              "example": "12345",
              "type": "string"
            },
            "country": {
              "description": "",
              "example": "United States",
              "type": "string"
            },
            "country_iso2": {
              "description": "",
              "example": "US",
              "type": "string"
            },
            "phone": {
              "description": "",
              "type": "string"
            },
            "email": {
              "description": "",
              "example": "janedoe@email.com",
              "type": "string"
            }
          }
        },
        "items": {
          "description": "The items in the shipment. This object has the following members, all integer: order_product_id (required), quantity (required), product_id (read-only). A sample items value might be: [ {\"order_product_id\":16,\"product_id\": 0,\"quantity\":2} ]",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "order_product_id": {
                "type": "integer",
                "example": 5
              },
              "product_id": {
                "type": "integer",
                "example": 87
              },
              "quantity": {
                "type": "integer",
                "example": 2
              }
            }
          }
        }
      }
    },
    "TrackingCarrier": {
      "title": "Tracking Carrier",
      "example": "auspost",
      "x-enum-elements": [
        {
          "name": "auspost",
          "description": ""
        },
        {
          "name": "canadapost",
          "description": ""
        },
        {
          "name": "endicia",
          "description": ""
        },
        {
          "name": "usps",
          "description": ""
        },
        {
          "name": "fedex",
          "description": ""
        },
        {
          "name": "royalmail",
          "description": ""
        },
        {
          "name": "ups",
          "description": ""
        },
        {
          "name": "upsready",
          "description": ""
        },
        {
          "name": "shipperhq",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "auspost",
        "canadapost",
        "endicia",
        "usps",
        "fedex",
        "royalmail",
        "ups",
        "upsready",
        "shipperhq"
      ]
    },
    "ShippingProvider": {
      "title": "Shipping Provider",
      "x-enum-elements": [
        {
          "name": "Enum_0",
          "description": "empty string"
        },
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        },
        {
          "name": "Enum_4",
          "description": ""
        },
        {
          "name": "Enum_5",
          "description": ""
        },
        {
          "name": "Enum_6",
          "description": ""
        },
        {
          "name": "Enum_7",
          "description": ""
        },
        {
          "name": "Enum_8",
          "description": ""
        },
        {
          "name": "Enum_9",
          "description": ""
        },
        {
          "name": "Enum_10",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "``",
        "fedex",
        "auspost",
        "canadapost",
        "endicia",
        "usps",
        "royalmail",
        "ups",
        "upsready",
        "upsonline",
        "shipperhq"
      ],
      "example": "endicia"
    },
    "BlogPosts": {
      "title": "Blog Posts",
      "example": {
        "id": 3,
        "title": "Welcome to BigCommerce",
        "url": "/blog/welcome-bigcommerce/",
        "preview_url": "/blog/welcome-bigcommerce/",
        "body": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>",
        "tags": [
          "BigCommerce",
          "welcome",
          "ecommerce"
        ],
        "summary": "<p>We power ecommerce websites for successful retailers all over the world</p>",
        "is_published": true,
        "published_date": {
          "date": "2018-05-18T08:26:42.000Z",
          "timezone_type": 1,
          "timezone": "+00:00"
        },
        "published_date_iso8601": "2018-05-18T13:26:42.000Z",
        "meta_description": "Welcome Post",
        "meta_keywords": "BigCommerce, welcome, ecommerce",
        "author": "BigCommerce",
        "thumbnail_path": ""
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of this blog post. (READ-ONLY)",
          "example": 3,
          "type": "integer"
        },
        "title": {
          "type": "string",
          "description": "Title of this blog post.",
          "example": "Welcome to BigCommerce"
        },
        "url": {
          "description": "URL for the public blog post.",
          "example": "/blog/welcome-bigcommerce/",
          "type": "string"
        },
        "preview_url": {
          "description": "URL to preview the blog post. (READ-ONLY)",
          "example": "/blog/welcome-bigcommerce/",
          "type": "string"
        },
        "body": {
          "type": "string",
          "description": "Text body of the blog post.",
          "example": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>"
        },
        "tags": {
          "description": "Tags to characterize the blog post.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "description": "Summary of the blog post. (READ-ONLY)",
          "example": "<p>We power ecommerce websites for successful retailers all over the world</p>",
          "type": "string"
        },
        "is_published": {
          "description": "Whether the blog post is published.",
          "example": true,
          "type": "boolean"
        },
        "published_date": {
          "type": "object",
          "properties": {
            "timezone_type": {
              "type": "string",
              "example": 1
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "example": "2018-05-18T08:26:42.000Z"
            },
            "timezone": {
              "type": "string",
              "format": "time",
              "example": "+00:00"
            }
          }
        },
        "published_date_iso8601": {
          "description": "Published date in ISO 8601 format.",
          "example": "5/18/2018 1:26:42 PM",
          "type": "string"
        },
        "meta_description": {
          "description": "Description text for this blog post’s <meta> element.",
          "example": "Welcome Post",
          "type": "string"
        },
        "meta_keywords": {
          "description": "Keywords for this blog post’s <meta> element.",
          "example": "BigCommerce, welcome, ecommerce",
          "type": "string"
        },
        "author": {
          "description": "Name of the blog post’s author.",
          "example": "BigCommerce",
          "type": "string"
        },
        "thumbnail_path": {
          "description": "Local path to a thumbnail image within the product_images folder to accompany the blog post.",
          "type": "string"
        }
      },
      "required": [
        "title",
        "body"
      ]
    },
    "Page": {
      "title": "Page",
      "example": {
        "id": 6,
        "parent_id": 5,
        "type": "page",
        "contact_fields": "fullname,companyname,phone,orderno,rma",
        "email": "janedoes@email.com",
        "name": "Contact Form",
        "url": "/contact-us/",
        "meta_description": "",
        "body": "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>",
        "mobile_body": 0,
        "has_mobile_version": false,
        "is_visible": true,
        "is_homepage": false,
        "layout_file": "page.html",
        "sort_order": 3,
        "meta_title": "",
        "search_keywords": "",
        "meta_keywords": ""
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique ID of this Web page. Read Only",
          "example": 6,
          "type": "intger"
        },
        "parent_id": {
          "description": "ID of any parent Web page.",
          "example": 5,
          "type": "integer"
        },
        "type": {
          "type": "string",
          "description": "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t",
          "enum": [
            "page",
            "rss_feed",
            "contact_form",
            "raw",
            "link"
          ]
        },
        "contact_fields": {
          "description": "Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.",
          "example": "fullname,companyname,phone,orderno,rma",
          "type": "string"
        },
        "email": {
          "description": "Where the page’s type is a contact form: email address that receives messages sent via the form.",
          "example": "janedoes@email.com",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Page name, as displayed on the storefront.",
          "example": "Contact Form"
        },
        "url": {
          "description": "Relative URL on the storefront for this page.",
          "example": "/contact-us/",
          "type": "string"
        },
        "meta_description": {
          "description": "Description contained within this page’s <meta> element.",
          "type": "string"
        },
        "body": {
          "type": "string",
          "description": "HTML or variable that populates this page’s <body> element, in default/desktop view. Required in POST if page type is `raw`.",
          "example": "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>"
        },
        "mobile_body": {
          "description": "HTML to use for this page's body when viewed in the mobile template (deprecated).",
          "example": 0,
          "type": "string"
        },
        "has_mobile_version": {
          "description": "If true, this page has a mobile version.",
          "example": false,
          "type": "boolean"
        },
        "is_visible": {
          "description": "If true, this page appears in the storefront’s navigation menu.",
          "example": true,
          "type": "boolean"
        },
        "is_homepage": {
          "description": "If true, this page is the storefront’s home page.",
          "example": false,
          "type": "boolean"
        },
        "meta_title": {
          "description": "Text specified for this page’s <title> element. (If empty, the value of the name property is used.)",
          "type": "string"
        },
        "layout_file": {
          "description": "Layout template for this page.",
          "example": "page.html",
          "type": "string"
        },
        "sort_order": {
          "description": "Order in which this page should display on the storefront. (Lower integers specify earlier display.)",
          "example": 3,
          "type": "integer"
        },
        "search_keywords": {
          "description": "Comma-separated list of keywords that shoppers can use to locate this page when searching the store.",
          "type": "string"
        },
        "meta_keywords": {
          "description": "Comma-separated list of SEO-relevant keywords to include in the page’s <meta> element.",
          "type": "string"
        },
        "feed": {
          "type": "string",
          "description": "If page type is `rss_feed` the n this field is visisble. Required in POST required for `rss page` type."
        },
        "link": {
          "type": "string",
          "description": "If page type is `link` this field is returned. Required in  POST to create a `link` page."
        }
      },
      "required": [
        "type",
        "name",
        "body",
        "feed",
        "link"
      ]
    },
    "Redirect": {
      "title": "Redirect",
      "example": {
        "id": 1,
        "path": "/smith-journal-13/",
        "forward": {
          "type": "product",
          "ref": 111
        },
        "url": "http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Numeric ID of the redirect.",
          "example": 1,
          "type": "integer"
        },
        "path": {
          "type": "string",
          "description": "The path from which to redirect.",
          "example": "/smith-journal-13/"
        },
        "forward": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of redirect. If it is a manual redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.\n",
              "example": "product"
            },
            "ref": {
              "type": "string",
              "description": "Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.",
              "example": 111
            }
          }
        },
        "url": {
          "description": "URL of the redirect. READ-ONLY",
          "example": "http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/",
          "type": "string"
        }
      },
      "required": [
        "path",
        "forward"
      ]
    },
    "RedirectForward": {
      "title": "Redirect Forward",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of redirect. If it is a `manual` redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.",
          "example": "product",
          "type": "string"
        },
        "ref": {
          "description": "Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.",
          "example": 111,
          "type": "number"
        }
      }
    },
    "Currency": {
      "title": "Currency",
      "example": {
        "id": 2,
        "is_default": false,
        "last_updated": "Tue, 12 Jun 2018 14:41:56 +0000\"",
        "country_iso2": "EU",
        "currency_code": "EUR",
        "currency_exchange_rate": 0.849,
        "auto_update": true,
        "token_location": "left",
        "token": "€",
        "decimal_token": ".",
        "thousands_token": ",",
        "decimal_places": 2,
        "name": "Euro",
        "enabled": false
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the currency. READ-ONLY",
          "example": 2,
          "type": "integer"
        },
        "is_default": {
          "description": "Specifies whether this is the store’s default currency display format and may only be adjusted in the control panel. READ-ONLY",
          "example": false,
          "type": "boolean"
        },
        "last_updated": {
          "description": "Date the currency was last updated, created or modified.",
          "example": "Tue, 12 Jun 2018 14:41:56 +0000\"",
          "type": "string",
          "format": "date-time"
        },
        "country_iso2": {
          "type": "string",
          "description": "2-letter ISO Alpha-2 code for this currency’s country.",
          "example": "EU"
        },
        "currency_code": {
          "type": "string",
          "description": "3-letter ISO 4217 code for this currency.",
          "example": "EUR"
        },
        "currency_exchange_rate": {
          "type": "string",
          "description": "Amount of this currency that is equivalent to one U.S. dollar.(Float, Float as String, Integer)",
          "example": 0.849
        },
        "auto_update": {
          "type": "boolean",
          "description": "Specifies whether to use the Open Exchange Rates service to update the currency conversion. A value of false specifies a static conversion value.",
          "example": true
        },
        "token_location": {
          "type": "string",
          "description": "Specifies whether this currency’s symbol appears to the “left” or “right” of the numeric amount.",
          "example": "left"
        },
        "token": {
          "type": "string",
          "description": "Symbol for this currency.",
          "example": "€"
        },
        "decimal_token": {
          "type": "string",
          "description": "Symbol used as the decimal separator in this currency.",
          "example": "."
        },
        "thousands_token": {
          "type": "string",
          "description": "Symbol used as the thousands separator in this currency.",
          "example": ","
        },
        "decimal_places": {
          "type": "integer",
          "description": "Number of decimal places to show for this currency.",
          "example": 2
        },
        "name": {
          "type": "string",
          "description": "Name of the currency.",
          "example": "Euro"
        },
        "enabled": {
          "description": "If the currency is active on the store.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "country_iso2",
        "currency_code",
        "currency_exchange_rate",
        "auto_update",
        "token_location",
        "token",
        "decimal_token",
        "thousands_token",
        "decimal_places",
        "name"
      ]
    },
    "Customer": {
      "title": "Customers",
      "example": {
        "id": 1,
        "_authentication": {},
        "company": "BigCommerce",
        "first_name": "Jane",
        "last_name": "Doe",
        "email": "janedoe@email.com",
        "phone": 1234567890,
        "date_created": "Thu, 11 Jan 2018 20:57:52 +0000",
        "date_modified": "Tue, 10 Apr 2018 18:59:05 +0000",
        "store_credit": 0,
        "registration_ip_address": "12.345.678.910",
        "customer_group_id": 2,
        "notes": "",
        "tax_exempt_category": "",
        "accepts_marketing": true,
        "addresses": {
          "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",
          "resource": "/customers/5/addresses"
        },
        "form_fields": [
          {
            "name": "",
            "value": ""
          }
        ],
        "reset_pass_on_login": false
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": 1,
          "type": "integer"
        },
        "_authentication": {
          "description": "Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.",
          "type": "object",
          "properties": {
            "force_reset": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "password_confirmation": {
              "type": "string"
            }
          }
        },
        "company": {
          "description": "The name of the company for which the customer works.",
          "example": "BigCommerce",
          "type": "string"
        },
        "first_name": {
          "type": "string",
          "description": "First name of the customer.",
          "example": "Jane"
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the customer.",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "description": "Email address of the customer.",
          "example": "janedoe@email.com"
        },
        "phone": {
          "description": "Phone number of the customer.",
          "example": 1234567890,
          "type": "string"
        },
        "date_created": {
          "description": "Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": "Thu, 11 Jan 2018 20:57:52 +0000",
          "type": "string",
          "format": "date-time"
        },
        "date_modified": {
          "description": "Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": "Tue, 10 Apr 2018 18:59:05 +0000",
          "type": "string",
          "format": "date-time"
        },
        "store_credit": {
          "description": "The amount of credit the customer has. (Float, Float as String, Integer)",
          "example": 0,
          "type": "string"
        },
        "registration_ip_address": {
          "description": "The customer’s IP address when they signed up.",
          "example": "12.345.678.910",
          "type": "string"
        },
        "customer_group_id": {
          "description": "The group to which the customer belongs.",
          "example": 2,
          "type": "integer"
        },
        "notes": {
          "description": "Store-owner notes on the customer.",
          "type": "string"
        },
        "tax_exempt_category": {
          "description": "Used to identify customers who fall into special sales-tax categories – in particular, those who are fully or partially exempt from paying sales tax. Can be blank, or can contain a single AvaTax code. (The codes are case-sensitive.) Stores that subscribe to BigCommerce’s Avalara Premium integration will use this code to determine how/whether to apply sales tax. Does not affect sales-tax calculations for stores that do not subscribe to Avalara Premium.",
          "type": "string"
        },
        "accepts_marketing": {
          "description": "Records whether the customer would like to receive marketing content from this store. READ-ONLY.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": true,
          "type": "boolean"
        },
        "addresses": {
          "$ref": "#/definitions/AddressFieldResource"
        },
        "form_fields": {
          "description": "Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFields"
          }
        },
        "reset_pass_on_login": {
          "description": "Force a password change on next login.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email"
      ]
    },
    "AddressFieldResource": {
      "title": "Address Field Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "Full URL of where the resource is located.",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",
          "type": "string"
        },
        "resource": {
          "description": "Resource being accessed.",
          "example": "/customers/5/addresses",
          "type": "string"
        }
      }
    },
    "CustomerAddress": {
      "title": "Customer Address",
      "example": {
        "id": 3,
        "customer_id": 5,
        "first_name": "Jane",
        "last_name": "Doe",
        "company": "BigCommerce",
        "street_1": "123 Main Street",
        "street_2": "",
        "city": "Austin",
        "state": "Texas",
        "zip": 78726,
        "country": "United States",
        "country_iso2": "US",
        "phone": "123-345-7890",
        "address_type": "residental"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of this customer address. READ-ONLY",
          "example": 3,
          "type": "integer"
        },
        "customer_id": {
          "description": "ID of the associated customer.",
          "example": 5,
          "type": "integer"
        },
        "first_name": {
          "type": "string",
          "description": "The customer’s first name.",
          "example": "Jane"
        },
        "last_name": {
          "type": "string",
          "description": "The customer’s last name.",
          "example": "Doe"
        },
        "company": {
          "description": "The customer’s company name.",
          "example": "BigCommerce",
          "type": "string"
        },
        "street_1": {
          "type": "string",
          "description": "The customer’s street address, line 1.",
          "example": "123 Main Street"
        },
        "street_2": {
          "description": "The customer’s street address, line 2.",
          "type": "string"
        },
        "city": {
          "type": "string",
          "description": "The customer’s city/town/suburb.",
          "example": "Austin"
        },
        "state": {
          "type": "string",
          "description": "The customer’s state/province. Do not abbreviate the state; spell out the entire word, e.g.: California. (Cannot be null. As a workaround for addresses that include no state/province string, pass a space as the “state” value.)",
          "example": "Texas"
        },
        "zip": {
          "type": "string",
          "description": "The customer’s ZIP or postal code.",
          "example": 78726
        },
        "country": {
          "type": "string",
          "description": "The customer’s country. Must be the full country name.",
          "example": "United States"
        },
        "country_iso2": {
          "description": "2-letter ISO Alpha-2 code for the customer’s country. READ-ONLY",
          "example": "US",
          "type": "string"
        },
        "phone": {
          "type": "string",
          "description": "The customer’s phone number.",
          "example": "123-345-7890"
        },
        "address_type": {
          "type": "string",
          "enum": [
            "residential",
            "commercial"
          ],
          "example": "residential"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "street_1",
        "city",
        "state",
        "zip",
        "country",
        "phone"
      ]
    },
    "CustomerGroup": {
      "title": "Customer Group",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the customer group",
          "example": 1,
          "type": "integer"
        },
        "name": {
          "description": "Name of the group",
          "example": "Wholesale",
          "type": "string"
        },
        "is_default": {
          "description": "Determines whether new customers are assigned to this group by default.",
          "example": false,
          "type": "boolean"
        },
        "category_access": {
          "$ref": "#/definitions/CategoryAccess"
        },
        "discount_rules": {
          "description": "A collection of discount rules that are automatically applied to customers who are members of the group",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "all"
              },
              "method": {
                "type": "string",
                "example": "percent"
              },
              "amount": {
                "type": "string",
                "example": "\"5.0000\" (Float, Float as String, Integer)",
                "description": "A float that specifies the value applied to the price modified"
              }
            }
          }
        }
      }
    },
    "CategoryAccess": {
      "title": "Category Access Level",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "all",
            "specific",
            "none"
          ],
          "description": "+ `all` - Customers can access all categories\n + `specific`  - Customers can access a specific list of categories\n+ `none` - Customers are prevented from viewing any of the categories in this group."
        },
        "categories": {
          "description": "Is an array of category IDs and should be supplied only if `type` is specific.",
          "type": "array",
          "example": "18,19,23,34",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Country": {
      "title": "Country",
      "example": {
        "id": 13,
        "country": "Australia",
        "country_iso2": "AU",
        "country_iso3": "AUS",
        "states": {
          "url": "https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states",
          "resource": "/countries/13/states"
        }
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the country.",
          "example": 13,
          "type": "integer"
        },
        "country": {
          "description": "Country name.",
          "example": "Australia",
          "type": "string"
        },
        "country_iso2": {
          "description": "2-letter country code.",
          "example": "AU",
          "type": "string"
        },
        "country_iso3": {
          "description": "3-letter country code.",
          "example": "AUS",
          "type": "string"
        },
        "states": {
          "$ref": "#/definitions/States"
        }
      }
    },
    "States": {
      "title": "States Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states",
          "type": "string"
        },
        "resource": {
          "description": "",
          "example": "/countries/13/states",
          "type": "string"
        }
      }
    },
    "State": {
      "title": "State",
      "example": {
        "id": 208,
        "state": "Australian Capital Territory",
        "state_abbreviation": "ACT",
        "country_id": 13
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Numeric ID of the state/province.",
          "example": 208,
          "type": "integer"
        },
        "state": {
          "description": "Name of the state/province.",
          "example": "Australian Capital Territory",
          "type": "string"
        },
        "state_abbreviation": {
          "description": "Abbreviation for the state/province.",
          "example": "ACT",
          "type": "string"
        },
        "country_id": {
          "description": "Numeric ID of the state’s/province’s associated country.",
          "example": 13,
          "type": "integer"
        }
      }
    },
    "Coupon": {
      "title": "Coupon",
      "example": {
        "id": 2,
        "name": "Australia Customers Discount",
        "type": "per_item_discount",
        "amount": 5,
        "min_purchase": 25,
        "expires": "",
        "enabled": true,
        "code": "S2549JM0Y",
        "applies_to": {
          "entity": "categories",
          "ids": [
            "0,3"
          ]
        },
        "num_uses": 0,
        "max_uses": 25,
        "max_uses_per_customer": 0,
        "restricted_to": {
          "countries": [
            "AU"
          ]
        },
        "shipping_methods": [
          "shipping_endicia"
        ],
        "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
          "example": 2,
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "The name of the coupon.",
          "example": "Australia Customers Discount"
        },
        "type": {
          "type": "string",
          "enum": [
            "per_item_discount",
            "per_total_discount",
            "shipping_discount",
            "free_shipping",
            "percentage_discount"
          ]
        },
        "amount": {
          "type": "string",
          "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
          "example": 5
        },
        "min_purchase": {
          "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
          "example": 25,
          "type": "string"
        },
        "expires": {
          "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
          "type": "string"
        },
        "enabled": {
          "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
          "example": true,
          "type": "boolean"
        },
        "code": {
          "type": "string",
          "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
          "example": "S2549JM0Y"
        },
        "applies_to": {
          "type": "object",
          "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
          "properties": {
            "id": {
              "type": "integer"
            },
            "entities": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "num_uses": {
          "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
          "example": 0,
          "type": "integer"
        },
        "max_uses": {
          "description": "Maximum number of times this coupon can be used.",
          "example": 25,
          "type": "integer"
        },
        "max_uses_per_customer": {
          "description": "Maximum number of times each customer can use this coupon.",
          "example": 0,
          "type": "integer"
        },
        "restricted_to": {
          "type": "object",
          "properties": {
            "countries": {
              "type": "string"
            }
          }
        },
        "shipping_methods": {
          "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "date_created": {
          "description": "Date Created",
          "example": "Tue, 13 Mar 2018 16:18:59 +0000",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "amount",
        "code",
        "applies_to"
      ]
    },
    "Banner": {
      "title": "Banner",
      "example": {
        "id": 1,
        "name": "Sale Banner",
        "content": "<p> Sale! Tuesday at 9am! </p>",
        "page": "home_page",
        "item_id": 0,
        "location": "top",
        "date_created": 1522169082,
        "date_type": "always",
        "date_from": 0,
        "date_to": 0,
        "visible": 1
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the banner.",
          "example": "Sale Banner",
          "type": "string"
        },
        "content": {
          "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
          "example": "<p> Sale! Tuesday at 9am! </p>",
          "type": "string"
        },
        "page": {
          "type": "string",
          "description": "Page the Banner is located",
          "enum": [
            "home_page",
            "category_page",
            "brand_page",
            "search_page"
          ]
        },
        "location": {
          "type": "string",
          "enum": [
            "top",
            "bottom"
          ],
          "description": "Location on the page",
          "example": "top"
        },
        "date_type": {
          "type": "string",
          "enum": [
            "always",
            "custom"
          ],
          "description": "This specifies whether the banner should be visible during a specific date range."
        },
        "id": {
          "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": 1,
          "type": "integer"
        },
        "item_id": {
          "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
          "example": 0,
          "type": "string"
        },
        "date_created": {
          "description": "Date the banner is created.",
          "example": 1522169082,
          "type": "string",
          "format": "date-time"
        },
        "date_from": {
          "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
          "example": 0,
          "type": "string"
        },
        "date_to": {
          "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
          "example": 0,
          "type": "string"
        },
        "visible": {
          "type": "string",
          "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
          "example": 1
        }
      },
      "required": [
        "name",
        "content",
        "page",
        "location",
        "date_type"
      ]
    },
    "GiftCertificate": {
      "title": "Gift Certificate",
      "example": {
        "id": 1,
        "customer_id": 5,
        "order_id": 116,
        "code": "FFZ-5N4-C7M-S78",
        "to_name": "John Doe",
        "to_email": "johndoe@email.com",
        "from_name": "Jane Doe",
        "from_email": "janedoe@email.com",
        "amount": 10,
        "balance": 0,
        "status": "active",
        "template": false,
        "message": "Happy Birthday!",
        "purchase_date": 1520957992,
        "expiry_date": 0
      },
      "type": "object",
      "properties": {
        "to_name": {
          "description": "Name of the recipient.",
          "example": "John Doe",
          "type": "string"
        },
        "to_email": {
          "description": "Email of the recipient.",
          "example": "johndoe@email.com",
          "type": "string"
        },
        "from_name": {
          "description": "Name of the customer who purchased the gift certificate.",
          "example": "Jane Doe",
          "type": "string"
        },
        "from_email": {
          "description": "Email of the customer who purchased the gift certificate.",
          "example": "janedoe@email.com",
          "type": "string"
        },
        "amount": {
          "description": "Value of the gift certificate.",
          "example": 10,
          "type": "string"
        },
        "id": {
          "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": 1,
          "type": "integer"
        },
        "customer_id": {
          "description": "The ID of the customer placing the order.",
          "example": 5,
          "type": "integer"
        },
        "order_id": {
          "description": "The ID of the order.",
          "example": 116,
          "type": "integer"
        },
        "code": {
          "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
          "example": "FFZ-5N4-C7M-S78",
          "type": "string"
        },
        "balance": {
          "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
          "example": 0,
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "template": {
          "description": "The email theme to use in the message sent to the recipient.",
          "example": false,
          "type": "string"
        },
        "message": {
          "description": "Text that will be sent to the recipient, such as “Congratulations.”",
          "example": "Happy Birthday!",
          "type": "string"
        },
        "purchase_date": {
          "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
          "example": 1520957992,
          "type": "string"
        },
        "expiry_date": {
          "description": "Date on which the gift certificate is set to expire.",
          "example": 0,
          "type": "string"
        }
      },
      "required": [
        "to_name",
        "to_email",
        "from_name",
        "from_email",
        "amount"
      ]
    },
    "Status": {
      "title": "Gift Certificate Status",
      "example": "active",
      "x-enum-elements": [
        {
          "name": "active",
          "description": ""
        },
        {
          "name": "pending",
          "description": ""
        },
        {
          "name": "disabled",
          "description": ""
        },
        {
          "name": "expired",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "active",
        "pending",
        "disabled",
        "expired"
      ]
    },
    "PaymentMethod": {
      "title": "PaymentMethod",
      "example": {
        "code": "squarev2",
        "name": "Square",
        "test_mode": false
      },
      "type": "object",
      "properties": {
        "code": {
          "description": "Unique platform-wide code identifying the payment method.",
          "example": "squarev2",
          "type": "string"
        },
        "name": {
          "description": "Descriptive name of the payment method.",
          "example": "Square",
          "type": "string"
        },
        "test_mode": {
          "description": "Determines whether the payment gateway is in test mode. Always false for offline payment methods.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ShippingZone": {
      "title": "Shipping Zone",
      "example": {
        "id": 1,
        "name": "United States",
        "type": "zip",
        "locations": [
          {
            "id": 3,
            "zip": 12345,
            "country_iso2": "US",
            "state_iso2": "TX"
          }
        ],
        "free_shipping": {
          "enabled": false,
          "minimum_subtotal": 0,
          "exclude_fixed_shipping_products": false
        },
        "handling_fees": {
          "fixed_surcharge": 0,
          "percentage_surcharge": "",
          "display_separately": true
        },
        "enabled": true
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Zone Id. READ-ONLY",
          "example": 1
        },
        "name": {
          "type": "string",
          "description": "Zone name. Required for /PUT",
          "example": "United States"
        },
        "type": {
          "type": "string",
          "enum": [
            "zip",
            "country",
            "state",
            "global"
          ]
        },
        "locations": {
          "description": "Array of zone locations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingZoneLocations"
          }
        },
        "free_shipping": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "minimum_sub_total": {
              "type": "string",
              "example": "0.0000",
              "description": "(Float, Float-As-String, Integer)"
            },
            "exclude_fixed_shipping_products": {
              "type": "boolean"
            }
          }
        },
        "handling_fees": {
          "$ref": "#/definitions/HandlingFees"
        },
        "enabled": {
          "description": "Whether this shipping zone is enabled.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ]
    },
    "ShippingZoneLocations": {
      "title": "Shipping Zone Locations",
      "type": "object",
      "properties": {
        "id": {
          "description": "Location’s ID.",
          "example": 3,
          "type": "integer"
        },
        "zip": {
          "description": "Location’s ZIP/postal code.",
          "example": 12345,
          "type": "string"
        },
        "country_iso2": {
          "description": "2-letter ISO Alpha-2 code for the country.",
          "example": "US",
          "type": "string"
        },
        "state_iso2": {
          "description": "ISO Alpha-2 code for the state.",
          "example": "TX",
          "type": "string"
        }
      }
    },
    "HandlingFees": {
      "title": "Shipping Zone Handling Fees",
      "type": "object",
      "properties": {
        "fixed_surcharge": {
          "description": "",
          "example": 0,
          "type": "string"
        },
        "percentage_surcharge": {
          "description": "",
          "type": "string"
        },
        "display_separately": {
          "description": "",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "ShippingMethod": {
      "title": "Shipping Method",
      "type": "object",
      "properties": {
        "id": {
          "description": "Shipping-method ID. READ-ONLY",
          "example": 1,
          "type": "integer"
        },
        "name": {
          "description": "Display name for shipping method.",
          "example": "Flat Rate",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type109"
        },
        "settings": {
          "description": "Depends on the shipping-method type. See the [supported settings object](#supported-settings).",
          "type": "object"
        },
        "enabled": {
          "description": "Whether or not this shipping-zone method is enabled.",
          "example": true,
          "type": "boolean"
        },
        "handling_fees": {
          "type": "object",
          "enum": [
            "fixed_surcharge",
            "percentage_surcharge"
          ],
          "example": "percentage_surcharge",
          "description": "`fixed_surcharge`: flat-rate handling fee applied to shipping cost.\n\n`percentage_surcharge`: percentage handling fee applied to shipping cost"
        },
        "is_fallback": {
          "description": "Whether or not this shipping zone is the fallback if all others are not valid for the order.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Type109": {
      "title": "Shipping Method Type",
      "example": "perorder",
      "x-enum-elements": [
        {
          "name": "perorder",
          "description": ""
        },
        {
          "name": "peritem",
          "description": ""
        },
        {
          "name": "weight",
          "description": ""
        },
        {
          "name": "total",
          "description": ""
        },
        {
          "name": "auspost",
          "description": ""
        },
        {
          "name": "canadapost",
          "description": ""
        },
        {
          "name": "endicia",
          "description": ""
        },
        {
          "name": "usps",
          "description": ""
        },
        {
          "name": "fedex",
          "description": ""
        },
        {
          "name": "royalmail",
          "description": ""
        },
        {
          "name": "upsready",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "perorder",
        "peritem",
        "weight",
        "total",
        "auspost",
        "canadapost",
        "endicia",
        "usps",
        "fedex",
        "royalmail",
        "upsready"
      ]
    },
    "StoreInformation": {
      "title": "Store Information",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique store identifier.",
          "example": "store_hash",
          "type": "string"
        },
        "domain": {
          "description": "Primary domain name.",
          "example": "your-store-url.com",
          "type": "string"
        },
        "secure_URL": {
          "description": "Store’s current HTTPS URL.",
          "example": "https://your-store-url.com",
          "type": "string"
        },
        "name": {
          "description": "Store's name.",
          "example": "BigCommerce",
          "type": "string"
        },
        "first_name": {
          "description": "Primary contact’s first name (as defined during the store sign-up process).",
          "example": "Jane",
          "type": "string"
        },
        "last_name": {
          "description": "Primary contact’s last name (as defined during the store sign-up process).",
          "example": "Doe",
          "type": "string"
        },
        "address": {
          "description": "Display address.",
          "example": "BigCommerce",
          "type": "string"
        },
        "country": {
          "description": "Country where the store is located (as defined during the store sign-up process).",
          "example": "United States",
          "type": "string"
        },
        "phone": {
          "description": "Display phone number.",
          "type": "string"
        },
        "admin_email": {
          "description": "Email address of the store administrator/owner.",
          "example": "janedoes@email.com",
          "type": "string"
        },
        "order_email": {
          "description": "Email address for orders and fulfillment.",
          "example": "orders@emai",
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        },
        "language": {
          "description": "Default language code.",
          "example": "en",
          "type": "string"
        },
        "currency": {
          "description": "Default currency code",
          "example": "USD",
          "type": "string"
        },
        "currency_symbol": {
          "description": "Default symbol for values in the currency.",
          "example": "$",
          "type": "string"
        },
        "decimal_separator": {
          "description": "Default decimal separator for values in the currency.",
          "example": ".",
          "type": "string"
        },
        "thousands_separator": {
          "description": "Default thousands separator for values in the currency.",
          "example": ",",
          "type": "string"
        },
        "decimal_places": {
          "description": "Default decimal places for values in the currency.",
          "example": 2,
          "type": "interger"
        },
        "currency_symbol_location": {
          "description": "Default position of the currency symbol (left or right).",
          "example": "left",
          "type": "string"
        },
        "weight_units": {
          "description": "Default weight units (metric or imperial).",
          "example": "Ounces",
          "type": "string"
        },
        "dimension_units": {
          "description": "Default dimension units (metric or imperial).",
          "example": "Inches",
          "type": "string"
        },
        "dimension_decimal_places": {
          "description": "The number of decimal places.",
          "example": 2,
          "type": "integer"
        },
        "dimension_decimal_token": {
          "description": "The symbol that separates the whole numbers from the decimal points.",
          "example": ".",
          "type": "string"
        },
        "dimension_thousands_token:": {
          "description": "The symbol used to denote thousands.",
          "type": "string"
        },
        "plan_name": {
          "description": "Name of the BigCommerce plan to which this store is subscribed.",
          "example": "Standard",
          "type": "string"
        },
        "plan_level": {
          "description": "Level of the BigCommerce plan to which this store is subscribed.",
          "example": "Standard",
          "type": "string"
        },
        "industry": {
          "description": "Industry, or vertical category, in which the business operates. (As selected from drop-down list during the store sign-up process.)",
          "example": "Technology",
          "type": "string"
        },
        "logo": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "example": "https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png\""
            }
          }
        },
        "is_price_entered_with_tax": {
          "description": "A Boolean value that indicates whether or not prices are entered with tax.",
          "example": false,
          "type": "boolean"
        },
        "active_comparison_modules": {
          "description": "",
          "type": "array",
          "items": {}
        },
        "features": {
          "description": "+ `stencil_enabled`: `true` (boolean)\n    + `sitewidehttps_enabled`: `false` (boolean)\n    + `facebook_catalog_id` (string)",
          "type": "object",
          "properties": {
            "stencil_enabled": {
              "type": "boolean",
              "example": true,
              "description": "Indicates whether a store is using a Stencil theme."
            },
            "sitewidehttps_enabled": {
              "type": "string",
              "example": false,
              "description": "Indicates if there is sitewide https."
            },
            "facebook_catalog_id": {
              "type": "string",
              "description": "Id of the facebook catalog. If there is none, it returns an empty string. "
            },
            "checkout_type": {
              "type": "string",
              "example": "optimized",
              "description": "What type of checkout is enabled on the store. Possible values returned are optimized, single (one page), single_customizable (one page for developers), klarna."
            }
          }
        }
      }
    },
    "Timezone": {
      "title": "Time Zone",
      "type": "object",
      "properties": {
        "name": {
          "description": "a string identifying the time zone, in the format: <Continent-name>/<City-name>.",
          "example": "America/Chicago",
          "type": "string"
        },
        "raw_offset": {
          "description": "a negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.",
          "example": -21600,
          "type": "integer"
        },
        "dst_offset": {
          "description": "\"-/+\" offset from UTC/GMT, in seconds, during summer/daylight saving time.",
          "example": -18000,
          "type": "integer"
        },
        "dst_correction": {
          "description": "a boolean indicating whether this time zone observes daylight saving time.",
          "example": true,
          "type": "boolean"
        },
        "date_format": {
          "$ref": "#/definitions/DateFormat"
        }
      }
    },
    "DateFormat": {
      "title": "Date Format",
      "type": "object",
      "properties": {
        "display": {
          "description": "string that defines dates’ display format, in the pattern: M jS Y",
          "example": "M jS Y",
          "type": "string"
        },
        "export": {
          "description": "string that defines the CSV export format for orders, customers, and products, in the pattern: M jS Y",
          "example": "M jS Y",
          "type": "string"
        },
        "extended_display": {
          "description": "string that defines dates’ extended-display format, in the pattern: M jS Y @ g:i A.",
          "example": "M jS Y @ g:i A",
          "type": "string"
        }
      }
    },
    "TaxClass": {
      "title": "Tax Class",
      "example": {
        "id": 1,
        "name": "Shipping"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique numerical ID of the tax class. A read-only value which is automatically assigned and increments sequentially.",
          "example": 1,
          "type": "string"
        },
        "name": {
          "description": "The unique numerical ID of the tax class. A read-only value which is automatically assigned and increments sequentially.",
          "example": "Shipping",
          "type": "string"
        }
      }
    },
    "BlogTags": {
      "type": "array",
      "title": "Blog Tags",
      "items": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "example": "Blog"
          },
          "post_ids": {
            "type": "array",
            "example": "1,2,4",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Orders"
    },
    {
      "name": "Order Coupons"
    },
    {
      "name": "Order Products"
    },
    {
      "name": "Order Taxes"
    },
    {
      "name": "Order Statues"
    },
    {
      "name": "Order Shipments"
    },
    {
      "name": "Order Shipping Addresses"
    },
    {
      "name": "Store Content"
    },
    {
      "name": "Blog Posts"
    },
    {
      "name": "Pages"
    },
    {
      "name": "Redirects"
    },
    {
      "name": "Gift Certificate"
    },
    {
      "name": "Currency"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Customer Groups"
    },
    {
      "name": "Customer Addresses"
    },
    {
      "name": "Customer Passwords"
    },
    {
      "name": "Geography"
    },
    {
      "name": "Countries"
    },
    {
      "name": "States"
    },
    {
      "name": "Marketing"
    },
    {
      "name": "Banners"
    },
    {
      "name": "Coupons"
    },
    {
      "name": "Shipping"
    },
    {
      "name": "Shipping Method"
    },
    {
      "name": "Shipping Carrier"
    },
    {
      "name": "Shipping Zones"
    },
    {
      "name": "Store Information Reference"
    },
    {
      "name": "Store"
    },
    {
      "name": "Taxes"
    },
    {
      "name": "Payment Methods"
    }
  ],
  "securityDefinitions": {},
  "security": [
    {
      "X-Auth-Token": []
    },
    {
      "X-Auth-Client": []
    }
  ]
}