swagger: '2.0'
info:
  title: Widgets and Placements API
  version: ''
  description: >
    ## The Widget Template, Widget, and Placement APIs are currently available
    to Early Access participants who have opted in to the Storefront Widgets API
    beta.
  termsOfService: ''
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v3'
tags:
  - name: Widget Template
    description: BigCommerce Widget Templates API Definition.
  - name: Widget
    description: BigCommerce Widgets API Definition.
  - name: Placement
    description: BigCommerce Placements API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /content/widget-templates:
    post:
      tags:
        - Widget Template
      summary: Creates a widget template.
      operationId: createWidgetTemplate
      parameters:
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetTemplatePost'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetTemplateResponse'
          description: |
            A widget template.
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    get:
      tags:
        - Widget Template
      summary: Gets all widget templates.
      operationId: getWidgetTemplates
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterWidgetTemplateKindParam'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetTemplatesResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  '/content/widget-templates/{uuid}':
    get:
      tags:
        - Widget Template
      summary: Gets a widget template.
      operationId: getWidgetTemplate
      parameters:
        - $ref: '#/parameters/TemplateUUID'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetTemplateResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    put:
      tags:
        - Widget Template
      summary: Updates a widget template.
      operationId: updateWidgetTemplate
      parameters:
        - $ref: '#/parameters/TemplateUUID'
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetTemplatePut'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetTemplateResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    delete:
      tags:
        - Widget Template
      summary: Deletes a widget template.
      operationId: deleteWidgetTemplate
      parameters:
        - $ref: '#/parameters/TemplateUUID'
      responses:
        '204':
          description: An empty response.
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  '/content/widget-templates/{uuid}/preview':
    post:
      tags:
        - Widget Template
      summary: Render a widget template and return the widget html.
      operationId: previewWidget
      parameters:
        - $ref: '#/parameters/TemplateUUID'
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetTemplatePreview'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetTemplatePreviewResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  /content/widgets:
    post:
      tags:
        - Widget
      summary: Creates a widget.
      operationId: createWidget
      parameters:
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetPost'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    get:
      tags:
        - Widget
      summary: Gets all widgets.
      operationId: getWidgets
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterWidgetTemplateKindParam'
        - $ref: '#/parameters/FilterWidgetTemplateUUIDParam'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetsResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  '/content/widgets/{uuid}':
    get:
      tags:
        - Widget
      summary: Gets a widget.
      operationId: getWidget
      parameters:
        - $ref: '#/parameters/WidgetUUID'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    put:
      tags:
        - Widget
      summary: Updates a widget.
      operationId: updateWidget
      parameters:
        - $ref: '#/parameters/WidgetUUID'
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetPut'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    delete:
      tags:
        - Widget
      summary: Deletes a widget.
      operationId: deleteWidget
      parameters:
        - $ref: '#/parameters/WidgetUUID'
      responses:
        '204':
          description: An empty response.
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  /content/widgets/search:
    get:
      tags:
        - Widget
      summary: Gets all widgets by search.
      operationId: searchWidgets
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/QueryWidgetsParam'
      responses:
        '200':
          schema:
            $ref: '#/definitions/WidgetsResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
  /content/placements:
    post:
      tags:
        - Placement
      summary: Creates a placement.
      operationId: createPlacement
      parameters:
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlacementPost'
      responses:
        '200':
          schema:
            $ref: '#/definitions/PlacementResponse'
          description: |
            A placement.
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    get:
      tags:
        - Placement
      summary: Get All Placements
      operationId: getPlacements
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterWidgetTemplateKindParam'
        - $ref: '#/parameters/FilterTemplateFileParam'
        - $ref: '#/parameters/FilterWidgetUUIDParam'
        - $ref: '#/parameters/FilterWidgetTemplateUUIDParam'
      responses:
        '200':
          schema:
            $ref: '#/definitions/PlacementsResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
      description: Get all placements.
  '/content/placements/{uuid}':
    get:
      tags:
        - Placement
      summary: Gets a placement.
      operationId: getPlacement
      parameters:
        - $ref: '#/parameters/PlacementUUID'
      responses:
        '200':
          schema:
            $ref: '#/definitions/PlacementResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    put:
      tags:
        - Placement
      summary: Updates a placement.
      operationId: updatePlacement
      parameters:
        - $ref: '#/parameters/PlacementUUID'
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlacementPut'
      responses:
        '200':
          schema:
            $ref: '#/definitions/PlacementResponse'
          description: Success
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
    delete:
      tags:
        - Placement
      summary: Deletes a placement.
      operationId: deletePlacement
      parameters:
        - $ref: '#/parameters/PlacementUUID'
      responses:
        '204':
          description: An empty response.
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: >
            This is the result of missing required fields, or of invalid data.
            See the response for more details.
parameters:
  TemplateUUID:
    name: uuid
    description: The identifier for a specific template.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetTemplateUUIDParam:
    in: query
    name: widget_template_uuid
    description: The identifier for a specific widget template.
    type: string
    format: uuid
    required: false
  FilterWidgetTemplateKindParam:
    in: query
    name: widget_template_kind
    description: The kind of widget template.
    type: string
    required: false
  FilterTemplateFileParam:
    in: query
    name: template_file
    description: 'The template file, for example: `pages/home`.'
    type: string
    required: false
  RequiredTemplateFile:
    in: query
    name: templateFile
    description: 'The template file, for example: `pages/home`.'
    type: string
    required: true
  PlacementUUID:
    name: uuid
    description: The identifier for a specific placement.
    required: true
    in: path
    type: string
    format: uuid
  WidgetUUID:
    name: uuid
    description: The identifier for a specific widget.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetUUIDParam:
    name: widget_uuid
    description: The identifier for a specific widget.
    in: query
    type: string
    format: uuid
    required: false
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: >
      Controls the number of items per page in a limited (paginated) list of
      products.
    required: false
    in: query
    type: integer
  QueryWidgetsParam:
    type: string
    name: query
    in: query
    description: |
      The query string associated with a widget's name and description.
definitions:
  Status:
    type: object
    properties:
      id:
        type: integer
        description: |
          Id for status
      name:
        type: string
        description: |
          status name for the inventory
  WidgetTemplatePreview:
    properties:
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
  WidgetTemplatePut:
    properties:
      name:
        type: string
        description: User-friendly name.
      schema:
        type: object
        description: >-
          The schema for this template. Describes how to build dynamic forms for
          widget configurations.
        format: json
      template:
        type: string
        description: Handlebars HTML content. Also has access to Stencil Paper helpers.
        format: html
  WidgetTemplatePost:
    required:
      - name
      - template
    properties:
      name:
        type: string
        description: User friendly name.
      schema:
        type: object
        description: >-
          The JSON schema of data for this template. Used to validate a
          configuration.
        format: json
      template:
        type: string
        description: Handlebars HTML content. Also has access to Stencil Paper helpers.
        format: html
  WidgetTemplateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/WidgetTemplate'
  WidgetTemplatePreviewResponse:
    type: object
    properties:
      data:
        properties:
          html:
            type: string
            description: The HTML render of the widget template.
            format: html
  WidgetTemplatesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/WidgetTemplate'
      meta:
        $ref: '#/definitions/CollectionMeta'
  WidgetTemplate:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: The primary identifier.
      name:
        type: string
        description: The user-friendly name.
      kind:
        type: string
        description: The kind of widget template.
      schema:
        type: object
        format: json
        description: >-
          The JSON schema of data for this template. Used to validate a
          configuration.
      template:
        type: string
        format: html
        description: The widget template HTML. Supports Handlebars and Paper helpers.
      date_created:
        type: string
        format: datetime
        description: The date on which this object was initially created.
      date_modified:
        type: string
        format: datetime
        description: The date on which this object was last updated.
  Widget:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: The primary identifier.
      name:
        type: string
        description: The user-friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
      widget_template:
        $ref: '#/definitions/WidgetTemplate'
      date_created:
        type: string
        format: datetime
        description: The date on which this object was initially created.
      date_modified:
        type: string
        format: datetime
        description: The date on which this object was last updated.
  WidgetPost:
    required:
      - name
      - widget_template_uuid
    properties:
      name:
        type: string
        description: User friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
      widget_template_uuid:
        type: string
        description: The widget template UUID.
  WidgetPut:
    properties:
      name:
        type: string
        description: User-friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
      widget_template_uuid:
        type: string
        description: The widget template UUID.
  WidgetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Widget'
  WidgetsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Widget'
      meta:
        $ref: '#/definitions/CollectionMeta'
  PlacementPost:
    required:
      - widget_uuid
      - region
      - template_file
    properties:
      widget_uuid:
        type: string
        description: A widget identifier.
      entity_id:
        type: string
        description: The specific instance of a page that you would like to target.
      sort_order:
        type: integer
        description: >-
          The sort order to control the position of a content widget in a
          region.
      region:
        type: string
        description: The name of the region in which to insert content widgets.
      template_file:
        type: string
        description: The template file that you would like to target.
      status:
        type: string
        description: Sets the placement as either inactive or active.
        default: inactive
        enum:
          - inactive
          - active
  PlacementPut:
    properties:
      entity_id:
        type: string
        description: >-
          Optional. The specific instance of a page that you would like to
          target.
      template_file:
        type: string
        description: The template file that you would like to target.
      region:
        type: string
        description: The name of the region in which to insert content widgets.
      sort_order:
        type: integer
        description: >-
          The sort order to control the position of a content widget in a
          region.
      widget_uuid:
        type: string
        description: A widget identifier.
      status:
        type: string
        description: Sets the placement as either inactive or active.
        enum:
          - inactive
          - active
  PlacementResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Placement'
  PlacementsResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Placement'
      meta:
        $ref: '#/definitions/CollectionMeta'
  Placement:
    properties:
      uuid:
        type: string
        format: uuid
        description: The primary identifier.
      entity_id:
        type: string
        description: The specific instance of a page
      status:
        type: string
        description: Determines whether this placement is `active` or `inactive`.
        enum:
          - inactive
          - active
      template_file:
        type: string
        description: The page template name.
      region:
        type: string
        description: The user-friendly name.
      sort_order:
        type: integer
        description: The sort order to control position of a content widget in a region.
      widget:
        $ref: '#/definitions/Widget'
      date_created:
        type: string
        format: datetime
        description: The date on which this object was initially created.
      date_modified:
        type: string
        format: datetime
        description: The date on which this object was last updated.
  CollectionMeta:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
  Pagination:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
      count:
        type: integer
        description: |
          Total number of items in the collection response.
      per_page:
        type: integer
        description: >
          The amount of items returned in the collection per page, controlled by
          the limit parameter.
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
      links:
        type: object
        description: >
          Pagination links for the previous and next parts of the whole
          collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
          next:
            type: string
            description: |
              Link to the next page returned in the response.
  ErrorResponse:
    allOf:
      - $ref: '#/definitions/BaseError'
      - type: object
        properties:
          errors:
            $ref: '#/definitions/DetailedErrors'
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
