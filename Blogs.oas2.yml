{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Blogs",
    "description": "Store Content APIs help merchants edit and publish blog posts and Web pages, improve SEO, and drive traffic to stores. They include Blog Posts, Blog Tags, Redirects, and Pages.\n\n### Blog Posts\nA content entry in the store’s blog.\n\n### Blog Tags\nIndex of tags used on the store’s blog.\n\n### Pages\nA static Web page on the storefront.\n\n### Redirects\nA 301 redirect, mapping from a given URL path to another URL. Redirects are used to create custom URL paths that map to resources on the storefront (such as products, categories, brands, etc.), or to manually defined static URLs."
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{$$.env.store_hash}/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/blog/tags": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/blogTags"
              }
            },
            "examples": {
              "application/json": [
                {
                  "tag": "Blog",
                  "post_ids": [
                    1
                  ]
                },
                {
                  "tag": "cupcakes",
                  "post_ids": [
                    2
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "type": "string",
            "required": true,
            "default": "application/json"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "required": true,
            "default": "application/json"
          }
        ],
        "produces": [],
        "summary": "Get All Blog Tags",
        "tags": [
          "Blog Tags"
        ],
        "description": "Returns a list of *Blog Tags*.",
        "operationId": "getAllBlogTags"
      }
    },
    "/blog/posts": {
      "get": {
        "description": "Returns all *Blog Posts*. Default sorting is by published_date, beginning with the most recent post.",
        "summary": "Get All Blog Posts",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "is_published",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter param."
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter param."
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter param."
          },
          {
            "name": "published_date",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter param.",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMinimum": false,
            "description": "Filter param.",
            "maximum": 50
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Filter param.",
            "maximum": 250
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/blogPost_Full"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "title": "Hello Again",
                  "url": "/blog/hello-again/",
                  "preview_url": "/blog/hello-again/",
                  "body": "<p>Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.</p><p>Marshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.</p>",
                  "tags": [
                    "sugar",
                    "sweet",
                    "spice",
                    "everything",
                    "nice"
                  ],
                  "summary": "Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]",
                  "is_published": true,
                  "published_date": {
                    "date": "2018-05-18 08:26:42.000000",
                    "timezone_type": 1,
                    "timezone": "+00:00"
                  },
                  "published_date_iso8601": "2018-05-18T13:26:42+0000",
                  "meta_description": "Cupcakes post 2",
                  "meta_keywords": "sugar,sweet,spice,everything,nice",
                  "author": "",
                  "thumbnail_path": ""
                },
                {
                  "id": 2,
                  "title": "Hello",
                  "url": "/blog/hello/",
                  "preview_url": "/blog/hello/",
                  "body": "<p>Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar chocolate bar tiramisu chocolate lemon drops candy.</p><p>Marshmallow cupcake sweet roll candy marshmallow caramels cotton candy pie icing. Powder jelly beans chupa chups lollipop liquorice marzipan dessert soufflé sesame snaps. Macaroon chupa chups gummies cheesecake ice cream caramels sesame snaps cotton candy gingerbread. Chocolate cake fruitcake tart bear claw lemon drops tart dragée tart apple pie. Halvah chupa chups soufflé jelly soufflé marshmallow. Croissant tart tart. Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart pastry brownie chocolate bar jelly. Dragée muffin cupcake liquorice caramels marzipan gingerbread marzipan. Apple pie pudding jelly sweet roll croissant bonbon wafer. Cookie chocolate bar sesame snaps bonbon macaroon candy canes donut sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie gummies donut sweet. Marzipan bear claw cotton candy topping dragée bonbon danish powder.</p>",
                  "tags": [
                    "cupcakes",
                    "sugar",
                    "sweet"
                  ],
                  "summary": "Jelly beans muffin marzipan gingerbread donut dessert. Cheesecake cheesecake sugar plum cookie cake tart. Soufflé sesame snaps jelly beans brownie chocolate tart. Marshmallow jujubes candy pie. Gummies lemon drops tart soufflé pastry pie. Caramels wafer biscuit gummi bears. Liquorice toffee wafer bear claw marzipan jelly-o. Dessert bear claw topping icing croissant. Pie bonbon chocolate bar [...]",
                  "is_published": true,
                  "published_date": {
                    "date": "2018-05-18 08:26:00.000000",
                    "timezone_type": 1,
                    "timezone": "+00:00"
                  },
                  "published_date_iso8601": "2018-05-18T13:26:00+0000",
                  "meta_description": "cupcake blog post",
                  "meta_keywords": "cupcakes,sugar,sweet",
                  "author": "",
                  "thumbnail_path": ""
                },
                {
                  "id": 1,
                  "title": "Your first blog post!",
                  "url": "/your-first-blog-post/",
                  "preview_url": "/your-first-blog-post/",
                  "body": "<p> <strong>Welcome to your blog!</strong><br> A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look at the Bigcommerce <a href='http://blog.bigcommerce.com/' target='_blank' rel='nofollow'>ecommerce blog</a>.</p><p><strong>How can I delete this post?</strong><br>To delete this post and add your own, login to your <a href='/admin' target='_blank'>admin area</a> and go to Storefront > Blog in the left hand menu.</p><p><strong>Powered by Bigcommerce</strong><br>Your website, online store and blog are powered by Bigcommerce <a href='http://www.bigcommerce.com/' target='_blank' rel='nofollow'>ecommerce software</a>. It includes everything you need to run a beautiful online store including <a href='http://www.bigcommerce.com/templates/' target='_blank' rel='nofollow'>ecommerce website templates</a>, <a href='http://www.bigcommerce.com/features/hosting/' target='_blank' rel='nofollow'>ecommerce hosting</a>, an <a href='http://www.bigcommerce.com/features/setup/' target='_blank' rel='nofollow'>online shopping cart</a> and more.</p>",
                  "tags": [
                    "Blog",
                    "SEO"
                  ],
                  "summary": " Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]",
                  "is_published": true,
                  "published_date": {
                    "date": "2014-02-15 14:46:34.000000",
                    "timezone_type": 1,
                    "timezone": "+00:00"
                  },
                  "published_date_iso8601": "2014-02-15T19:46:34+0000",
                  "meta_description": "",
                  "meta_keywords": "Blog,SEO",
                  "author": "",
                  "thumbnail_path": ""
                }
              ]
            }
          }
        },
        "tags": [
          "Blog Posts"
        ],
        "operationId": "getAllBlogPosts"
      },
      "post": {
        "description": "Creates a *Blog Post*.\n\n**Required Fields**\n*   title\n*   body\n\n**Read Only Fields**\n*   id\n*   preview_url\n*   summary\n\n**Notes**\n\n* When including `published_date` in a request, supply it as a flat date string (not an object) in valid <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a>. The&#160;example request below includes a `published_date` in RFC 2822 format.\n\n* Blog posts default to draft status. To publish blog posts to the storefront, set their `is_published` property to `true`.\n* If a custom URL is not provided, the post’s URL will be generated based on the value of `title`.",
        "summary": "Create a Blog Post",
        "produces": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Blog Posts",
              "example": {
                "id": 3,
                "title": "Welcome to BigCommerce",
                "url": "/blog/welcome-bigcommerce/",
                "preview_url": "/blog/welcome-bigcommerce/",
                "body": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>",
                "tags": [
                  "BigCommerce",
                  "welcome",
                  "ecommerce"
                ],
                "summary": "<p>We power ecommerce websites for successful retailers all over the world</p>",
                "is_published": true,
                "published_date": {
                  "date": "2018-05-18T08:26:42.000Z",
                  "timezone_type": 1,
                  "timezone": "+00:00"
                },
                "published_date_iso8601": "2018-05-18T13:26:42.000Z",
                "meta_description": "Welcome Post",
                "meta_keywords": "BigCommerce, welcome, ecommerce",
                "author": "BigCommerce",
                "thumbnail_path": ""
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of this blog post. (READ-ONLY)",
                  "example": 3,
                  "type": "integer"
                },
                "title": {
                  "type": "string",
                  "description": "Title of this blog post.",
                  "example": "Welcome to BigCommerce"
                },
                "url": {
                  "description": "URL for the public blog post.",
                  "example": "/blog/welcome-bigcommerce/",
                  "type": "string"
                },
                "preview_url": {
                  "description": "URL to preview the blog post. (READ-ONLY)",
                  "example": "/blog/welcome-bigcommerce/",
                  "type": "string"
                },
                "body": {
                  "type": "string",
                  "description": "Text body of the blog post.",
                  "example": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>"
                },
                "tags": {
                  "description": "Tags to characterize the blog post.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "summary": {
                  "description": "Summary of the blog post. (READ-ONLY)",
                  "example": "<p>We power ecommerce websites for successful retailers all over the world</p>",
                  "type": "string"
                },
                "is_published": {
                  "description": "Whether the blog post is published.",
                  "example": true,
                  "type": "boolean"
                },
                "published_date": {
                  "description": "Published date in RFC-2822 format.",
                  "example": "Fri, 6 Sep 2019 12:55:31 +0000",
                  "type": "string"
                },
                "meta_description": {
                  "description": "Description text for this blog post’s <meta> element.",
                  "example": "Welcome Post",
                  "type": "string"
                },
                "meta_keywords": {
                  "description": "Keywords for this blog post’s <meta> element.",
                  "example": "BigCommerce, welcome, ecommerce",
                  "type": "string"
                },
                "author": {
                  "description": "Name of the blog post’s author.",
                  "example": "BigCommerce",
                  "type": "string"
                },
                "thumbnail_path": {
                  "description": "Local path to a thumbnail image within the product_images folder to accompany the blog post.",
                  "type": "string"
                }
              },
              "required": [
                "title",
                "body"
              ]
            },
            "x-examples": {
              "application/json": {
                "title": "A Sample Blog Post",
                "body": "<p>This is a blog post.</p>",
                "author": "Author Name",
                "thumbnail_path": "http://cdn.example.com/sample-post.jpg",
                "is_published": true,
                "published_date": "Fri, 6 Sep 2019 12:55:31 +0000",
                "tags": [
                  "Blog",
                  "Example"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/blogPost_Base"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "title": "Welcome to BigCommerce",
                "url": "/blog/welcome-bigcommerce/",
                "preview_url": "/blog/welcome-bigcommerce/",
                "body": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>",
                "tags": [
                  "BigCommerce",
                  "welcome",
                  "ecommerce"
                ],
                "summary": "<p>We power ecommerce websites for successful retailers all over the world</p>",
                "is_published": true,
                "published_date": {
                  "date": "2018-05-18T08:26:42.000Z",
                  "timezone_type": 1,
                  "timezone": "+00:00"
                },
                "published_date_iso8601": "2018-05-18T13:26:42.000Z",
                "meta_description": "Welcome Post",
                "meta_keywords": "BigCommerce, welcome, ecommerce",
                "author": "BigCommerce",
                "thumbnail_path": ""
              }
            }
          }
        },
        "tags": [
          "Blog Posts"
        ],
        "operationId": "createABlogPosts"
      },
      "delete": {
        "description": "Deletes a page of `Blog Posts`.",
        "summary": "Delete Blog Posts",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Filter param.",
            "maximum": 250
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Filter param.",
            "maximum": 50
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Blog Posts"
        ],
        "operationId": "deleteAllBlogPosts"
      }
    },
    "/blog/posts/{id}": {
      "get": {
        "description": "Returns a single *Blog Post*.",
        "summary": "Get a Blog Post",
        "tags": [
          "Blog Posts"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the blog post."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/blogPost_Full"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "title": "Welcome to BigCommerce",
                "url": "/blog/welcome-bigcommerce/",
                "preview_url": "/blog/welcome-bigcommerce/",
                "body": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>",
                "tags": [
                  "BigCommerce",
                  "welcome",
                  "ecommerce"
                ],
                "summary": "<p>We power ecommerce websites for successful retailers all over the world</p>",
                "is_published": true,
                "published_date": {
                  "date": "2018-05-18T08:26:42.000Z",
                  "timezone_type": 1,
                  "timezone": "+00:00"
                },
                "published_date_iso8601": "2018-05-18T13:26:42.000Z",
                "meta_description": "Welcome Post",
                "meta_keywords": "BigCommerce, welcome, ecommerce",
                "author": "BigCommerce",
                "thumbnail_path": ""
              }
            }
          }
        },
        "operationId": "getABlogPost"
      },
      "put": {
        "description": "Updates a *Blog Post*.\n\n**Read Only Fields**\n*   id\n*   preview_url\n\n**Notes** \n\n* When including `published_date` in a request, supply it as a flat date string (not an object) in valid <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a>. The&#160;example request below includes a `published_date` in RFC 2822 format.\n",
        "summary": "Update a Blog Post",
        "tags": [
          "Blog Posts"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the blog post."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/blogPost_Base"
            },
            "x-examples": {
              "application/json": {
                "title": "New: A Sample Blog Post",
                "url": "/blog/sample-post",
                "published_date": "Sun, 01 Jan 2017 15:33:33 +0400"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/blogPost_Full"
            },
            "examples": {
              "application/json": {
                "id": 3,
                "title": "Welcome to BigCommerce",
                "url": "/blog/welcome-bigcommerce/",
                "preview_url": "/blog/welcome-bigcommerce/",
                "body": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>",
                "tags": [
                  "BigCommerce",
                  "welcome",
                  "ecommerce"
                ],
                "summary": "<p>We power ecommerce websites for successful retailers all over the world</p>",
                "is_published": true,
                "published_date": {
                  "date": "2018-05-18T08:26:42.000Z",
                  "timezone_type": 1,
                  "timezone": "+00:00"
                },
                "published_date_iso8601": "2018-05-18T13:26:42.000Z",
                "meta_description": "Welcome Post",
                "meta_keywords": "BigCommerce, welcome, ecommerce",
                "author": "BigCommerce",
                "thumbnail_path": ""
              }
            }
          }
        },
        "operationId": "updateABlogPost"
      },
      "delete": {
        "description": "Deletes a *Blog Post*.",
        "summary": "Delete a Blog Post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the blog post."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Blog Posts"
        ],
        "operationId": "deleteABlogPost"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/blog/posts/count": {
      "get": {
        "description": "Returns a count of all *Blog Posts*.",
        "summary": "Get A Count of All Blog Posts",
        "produces": [],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/count_Response"
            },
            "examples": {
              "application/json": {
                "count": 27
              }
            }
          }
        },
        "tags": [
          "Blog Posts"
        ],
        "operationId": "getACountOfAllBlogPosts"
      }
    }
  },
  "definitions": {
    "blogPost_Full": {
      "title": "blogPost_Full",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of this blog post. (READ-ONLY)",
              "example": 3,
              "type": "integer"
            }
          }
        },
        {
          "$ref": "#/definitions/blogPost_Base"
        }
      ]
    },
    "addresses": {
      "type": "object",
      "properties": {
        "url": {
          "description": "Full URL of where the resource is located.",
          "example": "https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/customers/5/addresses",
          "type": "string"
        },
        "resource": {
          "description": "Resource being accessed.",
          "example": "/customers/5/addresses",
          "type": "string"
        }
      },
      "title": "addresses"
    },
    "formField": {
      "title": "formField",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the form field",
          "type": "string",
          "example": "License Id"
        },
        "value": {
          "description": "Value of the form field",
          "type": "string",
          "example": "123BAF"
        }
      }
    },
    "page_Full": {
      "title": "page_Full",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 44,
              "description": "ID of the page."
            }
          }
        },
        {
          "$ref": "#/definitions/page_Base"
        }
      ]
    },
    "forward": {
      "title": "forward",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of redirect. If it is a `manual` redirect then type will always be manual. Dynamic redirects will have the type of the page. Such as product or category.",
          "example": "product",
          "type": "string"
        },
        "ref": {
          "description": "Reference of the redirect. Dynamic redirects will have the category or product number. Manual redirects will have the url that is being directed to.",
          "example": 111,
          "type": "number"
        }
      }
    },
    "customer_Full": {
      "title": "customer_Full",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique numeric ID of this customer. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": 1,
          "type": "integer"
        },
        "_authentication": {
          "description": "Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.",
          "type": "object",
          "properties": {
            "force_reset": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "password_confirmation": {
              "type": "string"
            }
          }
        },
        "company": {
          "description": "The name of the company for which the customer works.",
          "example": "BigCommerce",
          "type": "string"
        },
        "first_name": {
          "type": "string",
          "description": "First name of the customer.",
          "example": "Jane"
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the customer.",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "description": "Email address of the customer.",
          "example": "janedoe@email.com"
        },
        "phone": {
          "description": "Phone number of the customer.",
          "example": 1234567890,
          "type": "string"
        },
        "date_created": {
          "description": "Date on which the customer registered from the storefront or was created in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": "Thu, 11 Jan 2018 20:57:52 +0000",
          "type": "string",
          "format": "date-time"
        },
        "date_modified": {
          "description": "Date on which the customer updated their details in the storefront or was updated in the control panel. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": "Tue, 10 Apr 2018 18:59:05 +0000",
          "type": "string",
          "format": "date-time"
        },
        "store_credit": {
          "description": "The amount of credit the customer has. (Float, Float as String, Integer)",
          "example": 0,
          "type": "string"
        },
        "registration_ip_address": {
          "description": "The customer’s IP address when they signed up.",
          "example": "12.345.678.910",
          "type": "string"
        },
        "customer_group_id": {
          "description": "The group to which the customer belongs.",
          "example": 2,
          "type": "integer"
        },
        "notes": {
          "description": "Store-owner notes on the customer.",
          "type": "string"
        },
        "tax_exempt_category": {
          "description": "Used to identify customers who fall into special sales-tax categories – in particular, those who are fully or partially exempt from paying sales tax. Can be blank, or can contain a single AvaTax code. (The codes are case-sensitive.) Stores that subscribe to BigCommerce’s Avalara Premium integration will use this code to determine how/whether to apply sales tax. Does not affect sales-tax calculations for stores that do not subscribe to Avalara Premium.",
          "type": "string"
        },
        "accepts_marketing": {
          "description": "Records whether the customer would like to receive marketing content from this store. READ-ONLY.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": true,
          "type": "boolean"
        },
        "addresses": {
          "$ref": "#/definitions/addresses"
        },
        "form_fields": {
          "description": "Array of custom fields. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/formField"
          }
        },
        "reset_pass_on_login": {
          "description": "Force a password change on next login.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email"
      ]
    },
    "categoryAccessLevel": {
      "title": "categoryAccessLevel",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "all",
            "specific",
            "none"
          ],
          "description": "+ `all` - Customers can access all categories\n + `specific`  - Customers can access a specific list of categories\n+ `none` - Customers are prevented from viewing any of the categories in this group."
        },
        "categories": {
          "description": "Is an array of category IDs and should be supplied only if `type` is specific.",
          "type": "array",
          "example": "18,19,23,34",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "timeZone": {
      "title": "timeZone",
      "type": "object",
      "properties": {
        "name": {
          "description": "a string identifying the time zone, in the format: <Continent-name>/<City-name>.",
          "example": "America/Chicago",
          "type": "string"
        },
        "raw_offset": {
          "description": "a negative or positive number, identifying the offset from UTC/GMT, in seconds, during winter/standard time.",
          "example": -21600,
          "type": "integer"
        },
        "dst_offset": {
          "description": "\"-/+\" offset from UTC/GMT, in seconds, during summer/daylight saving time.",
          "example": -18000,
          "type": "integer"
        },
        "dst_correction": {
          "description": "a boolean indicating whether this time zone observes daylight saving time.",
          "example": true,
          "type": "boolean"
        },
        "date_format": {
          "$ref": "#/definitions/dateFormat"
        }
      }
    },
    "count_Response": {
      "title": "count_Response",
      "example": {
        "count": 27
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "",
          "example": 27,
          "type": "number"
        }
      }
    },
    "dateFormat": {
      "title": "dateFormat",
      "type": "object",
      "properties": {
        "display": {
          "description": "string that defines dates’ display format, in the pattern: M jS Y",
          "example": "M jS Y",
          "type": "string"
        },
        "export": {
          "description": "string that defines the CSV export format for orders, customers, and products, in the pattern: M jS Y",
          "example": "M jS Y",
          "type": "string"
        },
        "extended_display": {
          "description": "string that defines dates’ extended-display format, in the pattern: M jS Y @ g:i A.",
          "example": "M jS Y @ g:i A",
          "type": "string"
        }
      }
    },
    "blogTags": {
      "type": "array",
      "title": "blogTags",
      "items": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "example": "Blog"
          },
          "post_ids": {
            "type": "array",
            "example": "1,2,4",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    },
    "blogPost_Base": {
      "type": "object",
      "title": "blogPost_Base",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of this blog post.",
          "example": "Welcome to BigCommerce"
        },
        "url": {
          "example": "/blog/welcome-bigcommerce/",
          "type": "string",
          "description": "URL for the public blog post."
        },
        "preview_url": {
          "description": "URL to preview the blog post. (READ-ONLY)",
          "example": "/blog/welcome-bigcommerce/",
          "type": "string"
        },
        "body": {
          "type": "string",
          "description": "Text body of the blog post.",
          "example": "<p>Customize your site, manage shipping and payments, and list your products on Amazon, eBay, and Facebook with the #1 ecommerce platform. </p>"
        },
        "tags": {
          "description": "Tags to characterize the blog post.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "description": "Summary of the blog post. (READ-ONLY)",
          "example": "<p>We power ecommerce websites for successful retailers all over the world</p>",
          "type": "string"
        },
        "is_published": {
          "description": "Whether the blog post is published.",
          "example": true,
          "type": "boolean"
        },
        "published_date": {
          "$ref": "#/definitions/publishedDate"
        },
        "published_date_iso8601": {
          "description": "Published date in `ISO 8601` format.",
          "example": "5/18/2018 1:26:42 PM",
          "type": "string"
        },
        "meta_description": {
          "description": "Description text for this blog post’s `<meta/>` element.",
          "example": "Welcome Post",
          "type": "string"
        },
        "meta_keywords": {
          "description": "Keywords for this blog post’s `<meta/>` element.",
          "example": "BigCommerce, welcome, ecommerce",
          "type": "string"
        },
        "author": {
          "description": "Name of the blog post’s author.",
          "example": "BigCommerce",
          "type": "string"
        },
        "thumbnail_path": {
          "description": "Local path to a thumbnail image within the product_images folder to accompany the blog post.",
          "type": "string"
        }
      },
      "required": [
        "title",
        "body"
      ]
    },
    "publishedDate": {
      "type": "object",
      "properties": {
        "timezone_type": {
          "type": "string",
          "example": 1
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-18T08:26:42.000Z"
        },
        "timezone": {
          "type": "string",
          "format": "time",
          "example": "+00:00"
        }
      }
    },
    "authentication": {
      "description": "Not returned in any responses, but accepts up to two fields allowing you to set the customer’s password. If a password is not supplied, it is generated automatically. For further information about using this object, please see the Customers resource documentation.",
      "type": "object",
      "properties": {
        "force_reset": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "type": "string"
        }
      }
    },
    "customer_Base": {
      "type": "object",
      "properties": {},
      "title": "customer_Base"
    },
    "page_Base": {
      "title": "page_Base",
      "type": "object",
      "properties": {
        "parent_id": {
          "description": "ID of any parent Web page.",
          "example": 5,
          "type": "integer"
        },
        "type": {
          "type": "string",
          "description": "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t",
          "enum": [
            "page",
            "rss_feed",
            "contact_form",
            "raw",
            "link"
          ]
        },
        "contact_fields": {
          "description": "Where the page’s type is a contact form: object whose members are the fields enabled (in the control panel) for storefront display. Possible members are:`fullname`: full name of the customer submitting the form; `phone`: customer’s phone number, as submitted on the form; `companyname`: customer’s submitted company name; `orderno`: customer’s submitted order number; `rma`: customer’s submitted RMA (Return Merchandise Authorization) number.",
          "example": "fullname,companyname,phone,orderno,rma",
          "type": "string"
        },
        "email": {
          "description": "Where the page’s type is a contact form: email address that receives messages sent via the form.",
          "example": "janedoes@email.com",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Page name, as displayed on the storefront.",
          "example": "Contact Form"
        },
        "url": {
          "description": "Relative URL on the storefront for this page.",
          "example": "/contact-us/",
          "type": "string"
        },
        "meta_description": {
          "description": "Description contained within this page’s `<meta/>` element.",
          "type": "string"
        },
        "body": {
          "type": "string",
          "description": "HTML or variable that populates this page’s `<body>` element, in default/desktop view. Required in POST if page type is `raw`.",
          "example": "<p>We're happy to answer questions or help you with returns.<br />Please fill out the form below if you need assistance.</p>"
        },
        "mobile_body": {
          "description": "HTML to use for this page's body when viewed in the mobile template (deprecated).",
          "example": 0,
          "type": "string"
        },
        "has_mobile_version": {
          "description": "If true, this page has a mobile version.",
          "example": false,
          "type": "boolean"
        },
        "is_visible": {
          "description": "If true, this page appears in the storefront’s navigation menu.",
          "example": true,
          "type": "boolean"
        },
        "is_homepage": {
          "description": "If true, this page is the storefront’s home page.",
          "example": false,
          "type": "boolean"
        },
        "meta_title": {
          "description": "Text specified for this page’s `<title>` element. (If empty, the value of the name property is used.)",
          "type": "string"
        },
        "layout_file": {
          "description": "Layout template for this page. This field is writable only for stores with a Blueprint theme applied.",
          "example": "page.html",
          "type": "string"
        },
        "sort_order": {
          "description": "Order in which this page should display on the storefront. (Lower integers specify earlier display.)",
          "example": 3,
          "type": "integer"
        },
        "search_keywords": {
          "description": "Comma-separated list of keywords that shoppers can use to locate this page when searching the store.",
          "type": "string"
        },
        "meta_keywords": {
          "description": "Comma-separated list of SEO-relevant keywords to include in the page’s `<meta/>` element.",
          "type": "string"
        },
        "feed": {
          "type": "string",
          "description": "If page type is `rss_feed` the n this field is visisble. Required in POST required for `rss page` type."
        },
        "link": {
          "type": "string",
          "description": "If page type is `link` this field is returned. Required in  POST to create a `link` page."
        },
        "content_type": {
          "type": "string",
          "enum": [
            "application/json",
            "text/javascript",
            "text/html"
          ],
          "example": "text/html"
        }
      },
      "required": [
        "type",
        "name",
        "body",
        "feed",
        "link"
      ]
    }
  },
  "tags": [
    {
      "name": "Blog Posts"
    },
    {
      "name": "Blog Tags"
    }
  ],
  "securityDefinitions": {
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Content | modify | `store_v2_content` |\n|  Content | read-only | `store_v2_content_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    },
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Content | modify | `store_v2_content` |\n|  Content | read-only | `store_v2_content_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    }
  },
  "security": [
    {
      "X-Auth-Token": []
    },
    {
      "X-Auth-Client": []
    }
  ],
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true,
      "showModels": false
    }
  }
}