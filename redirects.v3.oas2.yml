openapi: 3.0.1
info:
  title: Redirects
  version: 3.0.0
  description: >-
    - [OAuth Scopes](#oauth-scopes)

    - [Authentication](#authentication)


    BigCommerce' V3 RESTP API Redirect endpoints allow developers to manage 301
    redirects for one or more storefronts powered by a single BigCommerce
    back-end.


    ## OAuth Scopes

    | UI Name                                      | Permission |
    Parameter                                     |

    |----------------------------------------------|------------|-----------------------------------------------|

    | Storefront API                               | manage     |
    `store_storefront_api`                        |


    For more information on OAuth Scopes, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).


    ## Authentication


    Requests can be authenticated by sending a `client_id` and `access_token`
    via `X-Auth-Client` and `X-Auth-Token` HTTP headers:


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Client: {client_id}

    X-Auth-Token: {access_token}

    ```


    |Header|Parameter|Description|

    |-|-|-|

    |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|

    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|


    For more information on Authenticating BigCommerce APIs, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
servers:
  - url: 'https://api.bigcommerce.com/stores/{store_hash}/v3'
    description: Production API Gateway
    variables:
      store_hash:
        default: abc123
        description: Store hash used to identify the store.
paths:
  /storefront/redirects:
    get:
      summary: Get collection of redirects
      tags:
        - redirects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/301RedirectRead'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
      parameters:
        - schema:
            type: integer
          in: query
          name: site_id
          description: Site ID to return only redirects for a given Site
        - schema:
            type: string
          in: query
          name: 'id:in'
          description: 'Explicitly fetch Redirects by IDs, provided as CSV string'
        - schema:
            type: integer
          in: query
          name: limit
          description: Number of results to return per page
        - schema:
            type: integer
          in: query
          name: page
          description: >-
            Which page number to return, based on the page size. Used to
            paginate large collections.
        - schema:
            type: string
            enum:
              - from_path
              - type
              - site_id
          in: query
          name: sort
          description: Sorts a collection by a particular field.
        - schema:
            type: string
            enum:
              - asc
              - desc
          in: query
          name: direction
          description: Sort direction.
        - schema:
            type: string
            enum:
              - to_url
          in: query
          name: include
          description: >-
            Request extra fields that aren't in the standard response. On this
            endpoint, only "to_url" is supported.
        - schema:
            type: string
          in: query
          name: keyword
          description: >-
            Search keyword to look for redirects matching this keyword. Will
            only search from the beginning of a URL path, so "blue" will match
            "/blue" and "/blue-shirt" but not "/royal-blue-shirt"
      description: Get a collection of the store's 301 redirects across all sites
      operationId: GetRedirects
      x-private: true
    put:
      summary: Upsert redirects
      tags:
        - redirects
      responses:
        '200':
          description: Success response for batch upsert of Redirects
          content:
            application/json:
              schema:
                type: object
        '422':
          description: >-
            Error response for batch PUT of Redirects. Includes the errors for
            each reference id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              uniqueItems: true
              maxItems: 100
              minItems: 1
              items:
                $ref: '#/components/schemas/301RedirectUpsert'
        description: ''
      description: Upsert new redirect data across all storefronts.
      operationId: UpsertRedirects
      x-private: true
    delete:
      summary: Delete redirects
      tags:
        - redirects
      responses:
        '204':
          description: No Content
      parameters:
        - schema:
            type: integer
          in: query
          name: 'id:in'
          required: true
          description: List of Redirect IDs to delete explicitly
        - schema:
            type: integer
          in: query
          name: site_id
          description: Site ID provided to delete all redirects for a given Site
      description: Delete redirects
      operationId: DeleteRedirects
      x-private: true
components:
  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
    301RedirectUpsert:
      type: object
      description: >-
        Data necessary to create or update a redirect. If there's a conflict on
        the from_path and site_id, the redirect will be overwritten with new
        data.
      properties:
        from_path:
          type: string
          example: /old-url
        site_id:
          type: integer
        to:
          $ref: '#/components/schemas/RedirectTo'
      required:
        - from_path
        - site_id
    301RedirectRead:
      type: object
      description: >-
        Full detail of a Redirect, optionally including the full destination
        URL.
      properties:
        from_path:
          type: string
          example: /old-url
        site_id:
          type: integer
        to:
          $ref: '#/components/schemas/RedirectTo'
        id:
          type: integer
        to_url:
          type: string
          format: uri
          description: >-
            Full destination URL for the redirect. Must be explicitly included
            via URL parameter.
          example: 'https://store-domain.com/new-url'
      required:
        - from_path
        - site_id
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              example: 246
              minimum: 0
            count:
              type: integer
              example: 5
              minimum: 0
            per_page:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            total_pages:
              type: integer
              example: 50
              minimum: 0
            links:
              type: object
              properties:
                next:
                  type: string
                  example: '?limit=5&page=2'
                current:
                  type: string
                  example: '?limit=5&page=1'
    RedirectTo:
      title: RedirectTo
      type: object
      properties:
        type:
          type: string
          enum:
            - product
            - brand
            - category
            - page
            - post
            - url
        entity_id:
          type: integer
        url:
          type: string
          example: /new-url
          maxLength: 2048
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
  securitySchemes: {}
