title: Dev Center
header:
  nav:
    left:
      - title: API Docs
        path: /api-docs
      - title: Stencil Docs
        path: /stencil-docs
      - title: Tools & Resources
        path: /tools-resources
      - title: Changelog
        path: /changelog
    center: []
    right:
      - title: My Apps
        path: ''
      - title: Create Account
        path: ''
pages:
  /:
    title: ''
    data: {}
  /stencil-docs:
    title: Stencil Docs
    data:
      children:
        - title: Getting Started
          route:
            path: /getting-started
          data:
            children:
              - title: Transitioning to Stencil
                route:
                  path: /transitioning-to-stencil
                data:
                  blocks:
                    - type: html
                      data: <h1>Transitioning to Stencil</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#choosing-dev-path\"> Choosing a Development Path</a></li>\n\t\t<li><a href=\"#front-matter-quick-start\">Front-Matter Quick Start</a></li>\n    <li><a href=\"#front-matter-quick-start\">Handlebars Quick Start</a></li>\n\t\t<li><a href=\"#seo-tips\">SEO Tips and Best Practices</a></li>\n\t\t<li><a href=\"#blueprint-to-stencil\">Blueprint to Stencil Features Map</a></li>\n    <li><a href=\"#interacting-with-api\">Interacting with the BigCommerce API</a></li>\n    <li><a href=\"#partnering-with-bc\">Partnering with BigCommerce</a></li>\n    <li><a href=\"#next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Choosing a Development Path


                        Are you approaching Stencil from a different theming
                        framework, like Blueprint, BigCommerce's legacy
                        framework? Or moving to the Stencil templating
                        environment from a pure HTML and CSS-based design?


                        You have four (non-mutually exclusive) options for
                        developing Stencil themes:


                        * Find a Design & Solutions Partner

                        * Light Customization using the Theme Editor

                        * Light Customization using HTML and CSS

                        * Adapting a Stencil Theme or Developing from Scratch


                        ###  Find a Design & Solutions Partner


                        If you prefer to have an expert collaborator customize
                        your theme, we recommend working with one of our
                        certified BigCommerce Design & Solutions Partners.
                        Reference the following resources to do so:


                        * [Partner
                        Directory](https://partners.bigcommerce.com/directory/search?i=75)

                        * [Working with a Design
                        Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner)
                        (Support Guide)


                        ### Light Customization with Stencil Theme Editor


                        Stencil can be customized without the use of any
                        specialized development tools or techniques by using of
                        the Stencil Theme Editor. The Stencil Theme Editor still
                        enables customization of a theme's colors, typography,
                        banners, headings, carousel, and footer. It also enables
                        customization of broader layout characteristics, such as
                        the number of products displayed in various panels,
                        category pages, and brand pages.


                        For details, please see:


                        * [Theme
                        Editor](https://support.bigcommerce.com/articles/Public/Using-the-Stencil-Theme-Editor/)
                        (Support article)

                        * [Stencil and the BigCommerce Control
                        Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2)
                        (Video introduction to Theme Editor)

                        * [Changing Your Store's
                        Theme](https://support.bigcommerce.com/articles/Learning/What-to-Consider-When-Changing-Your-Theme)
                        (Support guide)

                        * [Personalizing Your
                        Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme)
                        (Support guide)


                        ### Light Customization with HTML and CSS


                        If you are most comfortable working in HTML and CSS,
                        Stencil's *Edit Theme Files* feature allows you to
                        directly edit most of your theme's files from the
                        Control Panel. For details, please see:


                        * [Editing Stencil Theme
                        Files](https://support.bigcommerce.com/articles/Public/Editing-Stencil-Theme-Files)
                        (Support article)

                        * [Getting Started with the Stencil
                        Framework](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)
                        (Video overview of copying and editing a theme's files)


                        ### Adapt a Stencil Theme, or Develop from Scratch


                        For complete control over a theme's appearance and logic
                        – including the ability to edit _all_ theme
                        configuration files – you will want to use the Stencil
                        Command-line interface, also known as the Stencil CLI.


                        To learn Stencil CLI's templating conventions, see
                        Installing Stencil CLI. Also take a look at
                        BigCommerce's [Getting Started with the Stencil
                        Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)
                        video playlist.
                      header:
                        anchor: choosing-dev-path
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Front-Matter Quick Start


                        Stencil templates start with a section of "front matter"
                        where you can and concisely customize each page's design
                        and layout details. 


                        This front-matter section uses conventions from YAML, a
                        simple, widely used markup language. If you haven't used
                        these conventions before, refer to our [Front-Matter
                        Overview](https://stencil.bigcommerce.com/docs/using-yaml-front-matter).
                      header:
                        anchor: front-matter-quick-start
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Handlebars Quick Start


                        Stencil uses Handlebars.js to assemble dynamic content
                        into the storefront pages that are displayed to
                        shoppers. The dynamic content can be drawn from a few
                        sources, like the store's catalog.


                        Handlebars' syntax is quite simple, and it allows you to
                        accomplish powerful JavaScript operations with minimal
                        JavaScript code. To learn more about Handlebars.js, see
                        these third-party tutorials: 


                        * [Learn Handlebars in 10 Minutes or
                        Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/)

                        * [A Beginner’s Guide to
                        Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/)

                        * [Getting Started with
                        Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js)

                        * [Handlebars interactive
                        tutorial](http://tryhandlebarsjs.com/)
                      header:
                        anchor: handlebars-quick-start
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## SEO Tips and Best Practices


                        Search-engine optimization (SEO) helps translate an
                        elegant theme into a successful, high-conversion
                        storefront. Because so many shoppers reach online stores
                        through a search engine, a search-optimized site will be
                        more visible – attracting more traffic. 


                        The Stencil framework is [designed for high SEO
                        performance](https://www.bigcommerce.com/improve-organic-traffic/).
                        However, you will want to keep SEO in mind as you build
                        out each theme and storefront. For guidelines, please
                        see these BigCommerce support articles (which are a
                        series of intermediate to advanced chapters in our Guide
                        to SEO):


                        * [SEO Do's and
                        Don'ts](https://support.bigcommerce.com/articles/Learning/Things-to-Know/)

                        * [Developing a Keyword
                        Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/)

                        * [SEO Success
                        Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/)

                        * [Advanced SEO on
                        BigCommerce](https://support.bigcommerce.com/articles/Learning/Advanced-SEO-on-Bigcommerce/)


                        Also checkout our [Guide to Keyword
                        Research](https://support.bigcommerce.com/articles/Learning/Value-of-Keywords/).
                      header:
                        anchor: seo-tips
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Blueprint-to-Stencil Features Map 


                        This following resources are designed to help you
                        identify the Stencil counterparts to familiar Blueprint
                        components.


                        * What to Consider When Changing Your Theme (Support
                        article)

                        * Stencil and the BigCommerce Control Panel (Video tour
                        of Blueprint-to-Stencil  changes in the BigCommerce
                        control panel)
                      header:
                        anchor: blueprint-to-stencil
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Interacting with the BigCommerce API


                        Interacting with the BigCommerce API

                        BigCommerce's growing API resources enable application
                        developers to create private scripts or apps that
                        support a single store, or to create public apps offered
                        to multiple stores via BigCommerce's App Marketplace.


                        As a theme developer, you can rely on apps to enhance
                        your themes' capabilities, and to extend or complement
                        the storefront features built into the BigCommerce
                        platform. Popular app areas include inventory
                        management, email marketing, coupons, reviews, shipping,
                        tax accounting, and security. For more information, see
                        BigCommerce's:


                        * App Marketplace

                        * API documentation
                      header:
                        anchor: interacting-with-api
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Partnering with BigCommerce


                        Do we belong together? No formal business relationship
                        is required to develop themes on the BigCommerce
                        platform. However, consider applying to become a
                        BigCommerce Design & Solutions Partner (DSP), in order
                        to accelerate your development of new business and
                        revenue. For details, see our:


                        * Overview of BigCommerce Partnerships

                        * Design & Solutions Partners – basics and application
                        links

                        * Technology Partners – basics and application links

                        * Partnership Application
                      header:
                        anchor: partnering-with-bc
                    - type: text
                      data: |-
                        ## Next Steps

                        Proceed to: 

                        * Installation and Launch instructions
                        * Development Quick Start tutorial
                        * Front-matter overview of YAML conventions
                        * Front-matter attributes reference
                        * Handlebars overview
                      header:
                        anchor: next-steps
              - title: Supported Browsers
                route:
                  path: /supported-browsers
                data:
                  blocks:
                    - type: html
                      data: <h1>Supported Browsers</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Supported Desktop and Mobile Browsers</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Supported Desktop and Mobile Browsers


                        The following browsers are supported for BigCommerce
                        storefronts that use Stencil-based themes. 


                        The browsers are sorted by popularity, beginning with
                        the most popular browsers. Please ensure that your theme
                        functions properly with all supported browsers.


                        ### Desktop Browsers


                        * Google Chrome (latest edition)

                        * Firefox (latest edition)

                        * Internet Explorer 10 and 11

                        * Safari (latest edition)

                        * Microsoft Edge (latest edition)


                        ### Mobile Browsers 


                        * Android Chrome browser (latest edition)

                        * iOS Safari browser (latest edition)
                      header:
                        anchor: desktop-and-mobile
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          Browser support will cease to be offered if browser
                          usage falls below 2%.
                        title: Usage Support
              - title: Installing and Launching Stencil
                route:
                  path: /installing-and-launching
                data:
                  children:
                    - title: Mac OS Prerequisites
                      route:
                        path: /mac-os-prerequisites
                      data:
                        blocks:
                          - type: html
                            data: <h1>Mac OS Prerequisites</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"mac_xcode\">Installing Xcode</a></li>\n    <li><a href=\"mac_nodejs\">Installing Node.js</a></li>\n    <li><a href=\"mac_troubleshooting\">Troubleshooting</a></li>\n    <li><a href=\"mac_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>\n"
                          - type: callout
                            data:
                              title: Platform Support
                              body: >-
                                These instructions have been tested on Mac OS X
                                Yosemite. Dependencies for other platforms will
                                be added upon further testing.
                          - type: text
                            data: >-
                              ## Node.js 


                              Stencil requires the <a
                              href="https://nodejs.org/">Node.js</a> runtime
                              environment, version <a
                              href="https://nodejs.org/en/blog/release/">6.x or
                              later</a>. We have tested Stencil on selected
                              Node.js versions, from <a
                              href="https://nodejs.org/en/blog/release/v6.10.3/">6.10.3</a>
                              to <a
                              href="https://nodejs.org/en/blog/release/v7.9.0/">7.9.0</a>. 


                              We recommend that you install or update Node.js
                              using <a
                              href="https://github.com/creationix/nvm#installation">nvm</a>.
                              First install nvm, version <a
                              href="https://github.com/creationix/nvm/tree/v0.31.0">0.31.0</a>,
                              as follows:


                              ```

                              curl -o-
                              https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
                              | bash

                              ```


                              Next, explicitly install a supported Node.js
                              version, using this convention:<br>


                              ```

                              nvm install 6.4.0

                              ```
                          - type: callout
                            data:
                              title: Notes on Dependencies
                              body: >-
                                You can choose to instead download the latest
                                x.x version of Node.js from the Node.js
                                Foundation's archives, using URLs of the form:
                                https://nodejs.org/dist/latest-v6.x/,
                                https://nodejs.org/dist/latest-v7.x/, etc. We
                                recommend installing only LTS ("Long-Term
                                Support"/"Mature and Dependable") versions.
                          - type: text
                            data: '---'
                          - type: text
                            data: >+
                              ## Troubleshooting


                              If you run into any problems with Stencil
                              installation or launch, first consult
                              Troubleshooting Your Setup. 


                              If that does not resolve your issue, consult our
                              [Support resources](), which include community and
                              peer support via BigCommerce and Stack Overflow
                              forums.

                          - type: callout
                            data:
                              type: error
                              body: >-
                                While alternate versions might also support
                                Stencil, BigCommerce does not offer technical
                                assistance on, substitutions for, or customized
                                versions of, the tested dependencies listed
                                here.
                              title: Customization Support
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Next Steps


                              Now that you've completed the installation for
                              Xcode and Node.js, proceed to [Installing Stencil
                              CLI]().
                    - title: Linux Prerequisities
                      route:
                        path: /linux-prerequisites
                      data:
                        blocks:
                          - type: html
                            data: <h1>Linux Prerequisites</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#linux_root\">Root Permissions</a></li>\n     <li><a href=\"#linux_git-client\">Git Client</a></li>\n     <li><a href=\"#linux_node.js\">Node.js</a></li>\n      <li><a href=\"#linux_node.js\">Troubleshooting</a></li>\n     <li><a href=\"#linux_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              title: Platform Support
                              body: >-
                                These instructions have been tested on
                                Linux/Ubuntu v.14.04.4. Dependencies for other
                                platforms will be added upon further testing.
                          - type: text
                            data: >-
                              ## Root Permissions


                              You should have administrator/root permissions on
                              your machine. (If not, you may need to precede
                              some of the below commands with the `sudo`
                              prefix.)
                            header:
                              anchor: linux_root
                          - type: text
                            data: |-
                              ## Git Client

                              You must have a [Git client]() installed.
                            header:
                              anchor: linux_git-client
                          - type: text
                            data: >-
                              ## Node.js


                              Stencil requires the Node.js runtime environment,
                              version 6.x or later. We have tested Stencil on
                              selected Node.js versions, from 6.10.3 to 7.9.0.


                              We recommend that you install or update Node.js
                              using nvm. First install nvm, version 0.31.0, as
                              follows:


                              `curl -o-
                              https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
                              | bash`


                              Next, explicitly install a supported Node.js
                              version, using this convention:


                              `nvm install 6.4.0`
                            header:
                              anchor: linux_node
                          - type: text
                            data: >-
                              ## Troubleshooting


                              If you run into any problems with Stencil
                              installation or launch, please first see our
                              Troubleshooting Your Setup page. Next, please
                              consult our Support resources, which include
                              community/peer support via BigCommerce and Stack
                              Overflow forums.
                            header:
                              anchor: linux_troubleshooting
                          - type: text
                            data: >-
                              ## Next Steps


                              Now that you've completed the steps outlined in
                              this article, proceed to [Installing Stencil
                              CLI]().
                            header:
                              anchor: linux_next-steps
                    - title: 'Windows Prerequisites '
                      route:
                        path: /windows-prerequisites
                      data:
                        blocks:
                          - type: html
                            data: <h1>Windows Prerequisites</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n     <li><a href=\"#windows_root-permissions\">Root Permissions</a></li>\n     <li><a href=\"#windows_git-client\">Git Client and Git BASH</a></li>\n     <li><a href=\"#windows_python-installation\">Python Installation</a></li>\n     <li><a href=\"#windows_python-node-config\">Python/Node Configuration</a></li>\n     <li><a href=\"#windows_node-installation\">Node.js Installation</a></li>\n     <li><a href=\"#windows_compiler-options\">C++ Compiler Options</a></li>\n     <li><a href=\"#windows_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              body: >-
                                The following instructions have been tested on
                                Windows 8. Dependencies for other platforms will
                                be added upon further testing.
                              title: Platform Support
                          - type: text
                            data: >-
                              ## Root Permissions


                              You must have authorization to run Powershell "as
                              administrator" on your machine.
                            header:
                              anchor: windows_root
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Git Client and Git BASH


                              You must have a Git client installed. The Git for
                              Windows distribution includes a Git client, and
                              also provides the Git BASH emulator for
                              command-line access. All commands should be run in
                              Git Bash from here.
                            header:
                              anchor: windows_git-client-and-bash
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Python Installation


                              Install Python 2.7.x for Windows. (This is
                              required for Visual Studio's Windows Build Tools,
                              installed below.

                              Python 3.x is not supported.)


                              In the installer dialog shown below, change the
                              bottom default, so as to enable the Add python.exe
                              to Path option. This provides global command-line
                              access to Python.
                            header:
                              anchor: windows_python-installation
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1537369644912
                            config:
                              maxWidth: '500'
                              maxHeight: '500'
                              centered: true
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Node.js Installation


                              Stencil requires the Node.js runtime environment,
                              version 6.x or later.


                              On Windows, we have tested Stencil CLI on selected
                              Node.js version
                              href="https://nodejs.org/en/blog/release/v7.10.0/"7.10.0.
                              We recommend that you install only an LTS
                              ("Long-Term Support"/"Mature and Dependable")
                              version, and that you download that version's .msi
                              installer (not its .exe binary).


                              To verify your Node.js installation or
                              reinstallation, this [blog
                              post](http://blog.teamtreehouse.com/install-node-js-npm-windows)
                              provides Windows-specific tips and tests.
                            header:
                              anchor: windows_node
                          - type: callout
                            data:
                              type: warning
                              title: Restart Required
                              body: >-
                                You will need to restart your computer to
                                complete Node.js installation.
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1537370001235
                            config:
                              maxWidth: '500'
                              maxHeight: '500'
                              centered: true
                          - type: callout
                            data:
                              body: >-
                                You can choose to instead download the latest
                                x.x version of Node.js from the Node.js
                                Foundation's archives, using URLs of the form:
                                https://nodejs.org/dist/latest-v8.x/,
                                https://nodejs.org/dist/latest-v8.x/, etc. In
                                all cases, we recommend installing only LTS
                                ("Long-Term Support"/"Mature and Dependable")
                                versions. However, please see the restriction on
                                technical assistance in the Notes on
                                Dependencies below.
                              title: Notes on Dependencies
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Python and Node Configuration


                              After installing both Python and Node.js,
                              configure Python within the Node.js runtime
                              environment by running this npm command:


                              `npm config set python python2.7`
                            header:
                              anchor: windows_python-node-config
                          - type: callout
                            data:
                              body: >

                                The npm package manager was installed as part of
                                Node.js. As you proceed through Stencil CLI
                                setup (and later refreshes), you will use this
                                command-line utility to install
                                packages/modules, and to configure and manage
                                dependencies and their versions.
                              title: About npm (Node Package Manager)
                          - type: text
                            data: '---'
                          - type: text
                            data: |-
                              ## C++ Installation

                              ### Turbo C++

                              ### Visual Studio
                            header:
                              anchor: windows_c++-installation
                          - type: text
                            data: '---'
                          - type: text
                            data: >+
                              ## Visual Studio Version and Node Configuration


                              Finally, configure Visual Studio within the
                              Node.js runtime environment by running the
                              following npm command.

                              (Replace the `2015` parameter with `2013` or
                              `2017`, as needed, to match the Visual Studio
                              release you have installed)


                              `npm config set msvs_version 2015`

                            header:
                              anchor: windows_visual-studio
                          - type: text
                            data: '---'
                          - type: text
                            data: '## Troubleshooting'
                            header:
                              anchor: windows_troubleshooting
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Next Steps


                              Now that you've completed the steps outlined in
                              this article, proceed to [Installing Stencil
                              CLI]().
                            header:
                              anchor: windows_next-steps
                    - title: Installing the Stencil CLI
                      route:
                        path: /installing-the-stencil-cli
                      data:
                        blocks:
                          - type: html
                            data: >-
                              <h1>Installing the Stencil Command Line
                              Interface</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#installing_installing-the-cli\">Installing the Stencil Command Line Interface (CLI)</a></li>\n    <li><a href=\"#installing_items-to-note\">Items to Note</a></li>\n    <li><a href=\"#installing_video-demo\">Video Demo</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >+
                              ## Installing the Stencil Command Line Interface
                              (CLI)


                              The first step toward developing on Stencil is to
                              install the Stencil CLI. 


                              You can do this via the following command (_If you
                              are using Windows, you will need to run this
                              command in git bash._):


                              `npm install -g @bigcommerce/stencil-cli`

                            header:
                              anchor: installing_installing-the-cli
                          - type: callout
                            data:
                              type: warning
                              body: >-
                                To make Stencil CLI compatible with all the
                                changes introduced in Cornerstone 2.0.0, you
                                must upgrade to the latest version of Stencil
                                CLI (1.15.1) if using Cornerstone 2.x.x.


                                Occasionally, you will receive a command line
                                prompt to run the installation command when you
                                restart your Stencil server. This occurs when
                                BigCommerce publishes a critical fix in Stencil
                                CLI, to resolve an issue like a newly discovered
                                security exploit.
                              title: CLI Force Upgrade and Cornerstone 2.0.0
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Items to Note


                              * The command above requires <a
                              href="https://www.npmjs.com/">npm</a> to be
                              installed in your local development environment.


                              * In Windows, this <span
                              class="inline-code">npm</span> command's execution
                              might at times appear to freeze. However, the
                              installer is running. 

                              Give it several minutes to complete installation.


                              * On Mac OS machines with installed xcode, version
                              5.x, this <span class="inline-code">npm</span>
                              command has generated errors of the form: 

                              <span class="inline-code">npm ERR! invalid:
                              string_decoder</span>. The workaround is to
                              upgrade xcode to the latest stable xcode version 

                              (7.3.1 as of this page's last revision). 


                              * If you receive a file-permissions error, and you
                              did not install Node.js via <a
                              href="https://github.com/creationix/nvm#installation">nvm</a>
                              (Node Version Manager), 

                              then either install nvm now, or follow one of the
                              workarounds on this external page: 
                                [https://docs.npmjs.com/getting-started/fixing-npm-permissions](https://docs.npmjs.com/getting-started/fixing-npm-permissions)
                            header:
                              anchor: installing_items-to-note
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Video Demo


                              Watch Stencil senior developer Mick Ryan's brief
                              demonstration of Stencil installation and launch:


                              <iframe width="560" height="315"
                              src="https://www.youtube.com/embed/iWBrJalyM0A"
                              frameborder="0" allow="autoplay; encrypted-media"
                              allowfullscreen></iframe>
                            header:
                              anchor: installing_video-demo
                    - title: Cloning the Cornerstone Theme
                      route:
                        path: /cloning-the-cornerstone-theme
                      data:
                        blocks:
                          - type: html
                            data: <h1>Cloning the Cornerstone Theme</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#adding_adding-cornerstone\">Cloning the Cornerstone Theme</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Cloning Cornerstone using Github


                              _Windows users need to run this in git bash._


                              Navigate to a directory where you would like to
                              install a subdirectory for your theme. You must
                              have appropriate write permissions in this
                              directory. 


                              Execute the following command to clone Stencil's
                              base theme, Cornerstone, into a new subdirectory
                              named `.../cornerstone/`


                              `git clone
                              https://github.com/bigcommerce/cornerstone.git`
                                
                              If the above command fails, and you are accessing
                              GitHub anonymously, give the URL this alternate
                              prefix:


                              `git clone
                              git://github.com/bigcommerce/cornerstone.git`



                              <!-- Add a note here: If downloading a marketplace
                              theme, must install jspm, register your jspm
                              instance, and set up BitBucket access...  -->


                              <!-- If you are installing Stencil for the first
                              time, then in--> In the next step, you will
                              install Stencil's <a
                              href="/docs/stencil-docs/getting-started/installing-and-launching/javascript-utilities">JavaScript
                              utilities</a> to enable API access via Ajax.


                              /stencil-docs/getting-started/installing-and-launching/adding-a-base-theme
                            header:
                              anchor: adding_cloning-cornerstone
                          - type: callout
                            data:
                              title: Back Up before Reinstalling
                              body: >-
                                If you are reinstalling over a base theme on
                                which you have already begun development, first
                                back up your theme's `.stencil` file. This
                                contains your store URL, BigCommerce username
                                and access tokens, and other basic settings.
                                Preserving those settings will speed up
                                initializing and launching the new version. If
                                you would like to allow for complete rollback,
                                back up your entire theme's directory.
                              type: error
                    - title: Installing Stencil's Javascript Utilities
                      route:
                        path: /installing-stencil-utils
                      data:
                        blocks:
                          - type: html
                            data: <h1>Installing Stencil Utils</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Installing Stencil Utils</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: "## Installing Stencil Utils\n\nStencil's Cornerstone theme provides utilities called `stencil-utils` to enable API usage (via Ajax) to BigCommerce's backend. \n\nYou will learn more about Stencil Utils in our Stencil Utils overview, but for now, you'll want to be sure you have it installed in your theme. \n\nYou must use [npm](https://www.npmjs.com/) to install the `stencil-utils` module in your theme during initial installation. You must run `npm install` after downloading and installing a refreshed Cornerstone version to ensure that all your dependencies are up to date.\n\n_Windows users need to run this in git bash._\n\nComplete the following steps:\n\nNavigate to your Stencil theme directory. This example assumes that this target directory has the default name `cornerstone`.\n\n`cd cornerstone`\n\nNext, execute the following command inside of that directory:\n\t\n`npm install`\n\nThis will install the required npm modules to properly leverage the Stencil event framework.\n\nNow that your installation is complete, start \n<a href=\"/docs/preparing-your-store-tokens\">preparing your store/tokens</a>."
                            header:
                              anchor: installing_stencil-utils
              - title: Authentication
                route:
                  path: /authentication
                data:
                  children:
                    - title: Creating an API Account
                      route:
                        path: /creating-an-api-account
                      data:
                        blocks:
                          - type: html
                            data: <h1>Creating an API Account</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#creating_oauth-accounts\">Creating OAuth Accounts</a></li>\n    <li><a href=\"#creating_issuing-additional\">Creating OAuth Accounts</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              type: error
                              body: >-
                                If you've successfully installed Stencil you're
                                ready to create a BigCommerce API Account. 

                                _If you have not yet installed Stencil, see the
                                articles in "Installing and Launching Stencil._
                              title: Status Check
                          - type: text
                            data: >+
                              ## Creating OAuth Accounts


                              1. Log into the control panel of the store for
                              which you are developing. (Use the store owner's
                              credentials.)


                              2. From the left nav, select Advanced Settings >
                              API Accounts.


                              3. From the resulting Store API Accounts page,
                              select the Create API Account button.


                              4. Give your account a Name that reflects its
                              purpose. (The BigCommerce platform does not
                              validate this name – so just assign a name that
                              will make the account's purpose clear to you and
                              other store administrators.)


                              5. Under OAuth Scopes, set the Themes selector to
                              either modify or read-only.


                              (The read-only scope is sufficient to
                              authorize/initialize a Stencil theme. However, the
                              modify scope will achieve the same goal, while
                              also authorizing this account to upload themes to
                              the store from the command line.)


                              6. Click Save. As outlined in this support
                              article, doing so will display a modal, from which
                              you can copy your Client ID and Access Token
                              values. It will also prompt your browser to
                              download a .txt file that contains your
                              credentials.


                              You will need these values to authorize/initialize
                              your Stencil theme. If you're ready to do so now,
                              move ahead to Authorizing and Initializing
                              Stencil.

                          - type: callout
                            data:
                              type: warning
                              title: Reserved Role
                              body: >-
                                Currently, only the store owner can create an
                                OAuth API account according to the instructions
                                below. Also, note that each store is limited to
                                50 accounts at a time.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Issuing Additional Tokens


                              To issue store tokens for additional themes or
                              developers, repeat the process outlined in
                              Creating an API Account.


                              (Even if you originally initialized your theme
                              using a legacy API [Basic-Auth] token, we strongly
                              encourage you to generate any new tokens using the
                              new OAuth flow. However, Stencil CLI will still
                              honor your legacy tokens to restart this theme.)


                              You can create up to 50 API accounts/tokens per
                              store. If you hit this limit and still need to
                              create new tokens, you will need to delete
                              existing accounts.
                          - type: callout
                            data:
                              type: warning
                              title: Token-Management Tips
                              body: >-
                                Deleting an account will invalidate the
                                corresponding token. This will affect any
                                developer using that token.


                                We recommend naming accounts by purpose, to help
                                you keep track of which accounts you need to
                                keep active.
                    - title: Revoking Tokens
                      route:
                        path: /revoking-tokens
                      data:
                        blocks:
                          - type: html
                            data: <h1>Revoking Tokens</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#revoking_revoking-oauth\">Revoking OAuth Tokens</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >+
                              ## Revoking OAuth Tokens


                              To revoke an existing OAuth store token, delete
                              the corresponding Store API account:


                              Navigate to the control panel's API Accounts page.


                              Select the trash-can button to the right of the
                              account that you want to delete.

                              (You can also use the check boxes at left to
                              select multiple accounts, and then delete them all
                              at once.)

                            header:
                              anchor: revoking_revoking-oauth
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1537421464104
                          - type: callout
                            data:
                              title: Revoke with Caution!
                              type: error
                              body: >-
                                There is no undo. This process completely
                                deletes the selected account(s), revoking the
                                corresponding token(s).
                    - title: Copying a Token to Initialize Stencil
                      route:
                        path: /copying-token-to-initialize
                      data:
                        blocks:
                          - type: html
                            data: <h1>Copying a Token to Intialize Stencil</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#copying_copying-oauth\"></a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Copying OAuth Tokens 


                              To access an existing OAuth token to authorize
                              your theme:


                              1. Open the .txt file that the BigCommerce control
                              panel generated when you created the API account.


                              (If you did not retain this file, you will need to
                              generate a new token by repeating the Creating an
                              API Account procedure.)


                              2. Note the Client ID and Access Token hashes in
                              the file (or in the control-panel modal for your
                              newly created token).


                              3. If you are a merchant granting an outside theme
                              developer access to your store, provide these two
                              values to the developer. They will need them when
                              [Authorizing and Initializing Stencil]().


                              4. If you are developing a theme against your own
                              store, you will use the same two values in the
                              same [Authorizing and Initializing Stencil]()
                              step, described on the following page.
              - title: Launching Stencil
                route:
                  path: /launching-stencil
                data:
                  children:
                    - title: Authorizing and Initializing Stencil
                      route:
                        path: /authorizing-and-initializing
                      data:
                        blocks:
                          - type: html
                            data: <h1>Authorizing and Initializing Stencil</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authorizing_authorizing-oauth\">Authorizing with OAuth Tokens</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              body: >-
                                Even when you share a theme across storefronts,
                                we strongly recommend that you clone a separate
                                subdirectory (each containing its own .stencil
                                file) for each store. This helps isolate and
                                secure each merchant's data.


                                You can clone your .../cornerstone/ subdirectory
                                now to create your first isolated copy, and then
                                switch to the resulting new subdirectory to
                                continue. (Prior to March 2017, Stencil's
                                default subdirectory name was .../stencil/.)
                              title: ' Best Practice: Isolate Stores by Subdirectory'
                          - type: text
                            data: >+
                              ## Authorizing with OAuth Tokens


                              Use the following steps to authorize your theme
                              using an OAuth API account:


                              1. Have your store API account's Client ID and
                              Access Token hashes ready. 

                              (Refer back to the Copying a Token to Initialize
                              Stencil or Creating an API Account instructions.)


                              2. Starting from the subdirectory for the
                              appropriate theme (and store), initialize Stencil
                              CLI by running the following command (_Windows
                              users need to run this in git bash_):


                              `stencil init`


                              3. You will be prompted to provide the homepage
                              URL of the production store against which you want
                              to develop. This can be your own store, or a
                              client store that you are customizing.


                              4. Next, you will be prompted to enter the port
                              where you would like to run your store on your
                              local machine. This can be any port you like, but
                              we recommend using port 3000.


                              5. Next, you will be prompted: What is your
                              Stencil OAuth Client ID? Enter your store API
                              account's Client ID.


                              (If you used this Client ID when you last ran
                              stencil init, you'll see it hinted on the command
                              line, and can just confirm it.)


                              6. Finally, you will be prompted: What is your
                              Stencil OAuth Access Token? If you entered these
                              credentials when you last ran stencil init, you'll
                              see the token hinted in cleartext. If not, paste
                              your Access Token hash onto the command line. Then
                              press Enter.



                              Your terminal window should now confirm that you
                              have successfully initialized Stencil CLI on your
                              local machine. With Stencil CLI initialized, you
                              are ready to start Stencil and begin development.


                    - title: Running Your Stencil Theme Locally
                      route:
                        path: /running-stencil-locally
                      data:
                        blocks:
                          - type: html
                            data: <h1>Running Your Stencil Theme Locally</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#root-permissions\">Local Launch: Theme Only</a></li>\n    <li><a href=\"#node.js\">Local Launch: Theme and Theme Editor</a></li>\n    <li><a href=\"#next-steps\">Customizing Theme Editor's Port</a></li>\n    <li><a href=\"#next-steps\">Local Launch: Disabling Caching</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >-
                              ## Local Launch: Theme Only


                              In order to run Stencil locally, issue the
                              following command in your initialized Stencil
                              theme directory (_Windows users need to run this
                              in git bash_):


                              `stencil start`


                              Assuming that you set Stencil to run on `port
                              3000`, when you navigate to http://localhost:3000,
                              you should see the storefront to which you pointed
                              your local instance – but with the stencil theme
                              applied to it.


                              ## Troubleshooting Token Errors


                              If you receive the following error message, 


                              `Unauthorized, please use a valid username/token`


                              then store token authentication has failed.


                              In this case, please track back and review the
                              following articles:


                              * [Creating an API
                              Account](creating-an-api-account): How to issue or
                              reissue tokens in the BigCommerce control panel.

                              * [Authorizing and Initializing
                              Stencil:](authorizing-and-initializing-stencil):
                              How to initialize Stencil with your username and
                              token.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Troubleshooting Token Errors


                              If you receive the following error message, then
                              store token authentication has failed:


                              `Unauthorized, please use a valid username/token`


                              In this case, please review these steps:

                              * Creating an API Account: How to issue or reissue
                              tokens in the BigCommerce control panel.

                              * Authorizing and Initializing Stencil: How to
                              initialize Stencil with your username and token.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Local Launch: Theme and Theme Editor


                              To run Stencil locally while also launching a
                              local version of Theme Editor, start in your theme
                              directory and run the following command, but
                              append the -e option:


                              `stencil start -e`


                              The Theme Editor server will run in parallel with
                              the stencil theme at
                              [http://localhost:8181](http://localhost:8181/).
                              The use case for this is a developer who is
                              reconfiguring the Theme Editor/Store Design (check
                              terminology) settings. It is important to note
                              this is a tool to understand the experience
                              changes when editing the schema.json file. Making
                              changes to your store on the Theme Editor/Using
                              store design on the local host port will not
                              affect your life store.
                          - type: text
                            data: '---'
                          - type: text
                            data: >-
                              ## Customizing Theme Editor's Port


                              You can override Theme Editor's default port by
                              appending the "--theme-editor-port [port]" option.
                              For example, to specify port 9000, you would
                              enter:


                              `stencil start -e --theme-editor-port 9000

                              `


                              To verify Theme Editor's launch, you would then go
                              to http://localhost:9000. Using this option, you
                              can specify any port between `1024` and `65535`.
                          - type: text
                            data: '---'
                          - type: text
                            data: >
                              ## Local Launch: Disabling Caching


                              By default, Stencil caches API resource data per
                              storefront page. This minimizes server traffic
                              while you develop your theme locally.

                              If you prefer to see your changes reflected
                              immediately in your live store, you can turn off
                              caching by appending the `--no-cache` or `-n`
                              option:


                              `stencil start --no-cache`

                              `stencil start -n`


                              ### To re-enable caching:


                              Kill the current Stencil server (_ctrl + c will do
                              the job_) and restart Stencil, this time omitting
                              the `--no-cache` or `-n` option.


                              `stencil start` 
                    - title: Troubleshooting Your Setup
                      route:
                        path: /troubleshooting-your-setup
                      data:
                        blocks:
                          - type: html
                            data: <h1>Troubleshooting Your Setup</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#desktop-and-mobile\">Unsupported Node Version</a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install errors (\"Unmet Peer Dependency\")</a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install/stencil init Errors/a></li>\n    <li><a href=\"#desktop-and-mobile\">npm install permissions Errors</a></li>\n    <li><a href=\"#desktop-and-mobile\">\"Uncaught TypeError: Illegal invocation\" error: Re-run npm install inside Theme Directory</a></li>\n    <li><a href=\"#desktop-and-mobile\">\"js/bundle\" Errors upon stencil init</a></li>\n    <li><a href=\"#desktop-and-mobile\">stencil init/stencil start Errors</a></li>\n    <li><a href=\"#desktop-and-mobile\">Mac OS:\"Xcode/iOS license...\" Errors upon Stencil Commands</a></li>\n\t</ul>\n</div>"
                          - type: callout
                            data:
                              title: First Check the Terminal Window
                              body: >-
                                For any unexpected behavior that you encounter
                                while developing your Stencil theme, first check
                                your terminal window where you started Stencil
                                CLI. 


                                In some cases, the terminal will provide a
                                verbose error message specifying where to look
                                for problems. In any case, it has the potential
                                to provide further insight on the issue.
                                Diagnostic suggestions are listed on this page
                                for error messages that may not be helpful in
                                revealing the issue you're experiencing.
                          - type: text
                            data: |
                              ## Unsupported Node Version
                          - type: text
                            data: >-
                              ## `npm install` Errors


                              If you get any `Unmet Peer Dependency` errors when
                              issuing the `npm install` command – or at other
                              times – make sure you are running the `npm
                              install` command **inside** your theme directory.


                              If running the `npm install ` command inside your
                              theme directory does not resolve the error, try
                              one of the following:


                              * Try removing your theme directory's
                              `/node_modules/` subdirectory, by running `rm -rf
                              node_modules`


                              * Run the `npm cache clean` command


                              * Re-run `npm install`
                          - type: text
                            data: >-
                              ## `npm install` and `stencil init` Errors


                              Please similarly check and adjust your Node.js
                              version – by following the Prerequisites link
                              above to see platform-specific recommendations –
                              if you get unexpected error messages when issuing
                              the npm install or stencil init commands.
                          - type: text
                            data: >
                              ## "Uncaught TypeError: Illegal invocation" error


                              If you receive an `Uncaught TypeError: Illegal
                              invocation` console error, and previously
                              installed Stencil using the original jspm-based
                              installation flow, then later switched to our
                              current webpack installation flow: Please remove
                              your theme's `/node_modules/` subdirectory, then
                              re-run `npm install` inside your theme's
                              directory.
                          - type: text
                            data: >+
                              ## "js/bundle" Errors upon `stencil init`


                              If you get errors of the following type upon
                              executing the stencil init command:


                              ```

                              Potentially unhandled rejection [6] TypeError:
                              Error loading "js/bundle" 

                              at
                              file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js


                              Error evaluating
                              file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js


                              Cannot read property 'createElement' of
                              undefined...

                              ```


                              try the following workaround:


                              1. Download and unzip a fresh copy of the theme.


                              3. Refresh theme dependencies by running `npm
                              install && jspm install`


                              3. Run `stencil init`.


                              *You will see the same error message as before,
                              but proceed.*


                              4. Delete the `<theme-name>/assets/js/bundle.js`
                              file.


                              5. Run `stencil init` again.

                              This should now execute properly.

                              6. Run `stencil start`


                              8. Verify your theme's launch at:
                              http://localhost:3000.

                          - type: text
                            data: >-
                              ## stencil init/stencil start Errors


                              If you get unexpected error messages or unexpected
                              results upon executing the `stencil init`,
                              `stencil start`, or other Stencil CLI commands,
                              make sure you are working in the subdirectory for
                              the specific theme you intend to launch. 


                              One way of checking what directory you are working
                              in is by running the `pwd` command in your
                              terminal.
                          - type: text
                            data: >-
                              ## stencil start/missing module Errors


                              If executing `stencil start` provokes errors like
                              the following


                              ```

                              module.js:327

                              throw err;

                              ^


                              Error: Cannot find module 'webpack'

                              at Function.Module._resolveFilename
                              (module.js:325:15)

                              at Function.Module._load (module.js:276:25)

                              at Module.require (module.js:353:17)

                              at require (internal/module.js:12:17)

                              at Object.
                              (/Users/jane.doe/themes/cornerstone/stencil.conf.js:2:15)

                              at Module._compile (module.js:409:26)

                              at Object.Module._extensions..js
                              (module.js:416:10)

                              at Module.load (module.js:343:32)

                              at Function.Module._load (module.js:300:12)

                              at Module.require (module.js:353:17)

                              ```


                              switch to your theme directory and run `npm
                              install`. Running this command will add the
                              missing JavaScript library dependencies.


                              If you receive the same error again after running
                              `npm install`, you should completely uninstall and
                              reinstall both the Stencil framework and Node.js.


                              ### Uninstalling and Reinstalling Stencil CLI


                              If you encounter persistent problems in
                              initializing or starting Stencil, you have the
                              option of completely removing Stencil CLI and
                              doing a fresh reinstall. You would do so as
                              follows:


                              1. From your command line, issue the command:

                              `npm uninstall -g @bigcommerce/stencil-cli`


                              2. Navigate back to the Installing and Launching
                              Stencil section and repeat all installation steps
                              to reinstall dependencies and restore your theme,
                              according to your development scenario.
                          - type: callout
                            data:
                              title: Drastic Measures
                              body: >-
                                A more-drastic measure is to **also** uninstall
                                and reinstall Stencil CLI's Node.js
                                prerequisites (along with uninstalling Stencil
                                CLI). We do not recommend this, as it might
                                disable other Node.js applications on your local
                                machine.
                              type: error
                    - title: Stencil CLI Options and Commands
                      route:
                        path: /stencil-cli-options-and-commands
                      data:
                        blocks:
                          - type: html
                            data: <h1>Stencil CLI Options and Commands</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_basic-cli\">Basic CLI Options and Commands</a></li>\n    <li><a href=\"#stencil_stencil-start\">Stencil Start Options</a></li>\n    <li><a href=\"#stencil_stencil-push\">Stencil Push Options</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >
                              ## Basic CLI Options and Commands


                              The syntax to run a basic Stencil CLI command is:
                              stencil <commands> [options] <parameter>.


                              To see the basic options and commands that the
                              Stencil CLI package supports, enter any of the
                              following forms of the help option on your command
                              line:


                              `stencil <command> [option] <parameter>`


                              To see the basic options and commands that the
                              Stencil CLI package supports, enter any of the
                              following forms of the help option on your command
                              line:


                              ```

                              stencil

                              stencil help

                              stencil --help

                              stencil -h

                              ```


                              Your terminal window will display options and
                              commands listed in the tables below. 
                            header:
                              anchor: '#stencil_basic-cli'
                          - type: html
                            data: "<table>\n  <tr>\n    <th>Option</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>-h, --help</td>\n    <td>Outputs usage information.</td>\n  </tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>Outputs the version number (which is read from package.json file</span>).</td>\n  </tr>\n</table>\n\n<p></p>\n<table>\n  <tr>\n    <th>Command</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>init</td>\n    <td >Interactively creates a .stencil file, which configures how to run a BigCommerce store locally.</td>\n  </tr>\n  <tr>\n    <td>start</td>\n    <td>Starts up the BigCommerce store, using theme files in the current directory. \n\n<b>Note:</b> If stencil start generates an \"Unauthorized, please use a valid username/token error: Please make sure that the .stencil file contains the correct store URL and (for OAuth) the correct URL prefix). Also, verify that you have copied the correct credentials, as outlined here. If you continue to get the same error, please reissue tokens, as outlined here.\n    </td>\n  </tr>\n \n  \n  <tr>\n    <td>bundle</td>\n    <td>Bundles up the theme into a structured .zip file, which can be uploaded to BigCommerce. (Please see restrictions here).</td>\n  </tr>\n  \n  <tr>\n    <td></a>push</td>\n    <td>Bundles up the theme into a structured .zip file; then directly uploads (pushes) the .zip to BigCommerce.(Please see</nobr> usage instructions here. The same restrictions apply as for the bundle command.)</td>\n  </tr>\n  \n  <tr>\n    <td>release</td>\n    <td>Creates a new release in a theme's GitHub repository. Developers outside BigCommerce can use this for forks (not master) of Stencil's Cornerstone base theme, or for their own parallel themes independent of Cornerstone.</td>\n  </tr>\n    \n  <tr>\n    <td>help &lt;command&gt;</td>\n    <td>return all the options available to use for the specified command. For example, <code>stencil help bundle</code> will return the options that are available to use specifically with the stencil bundle command.\t\n    </td>\n  </tr>  \n  \n</table>"
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538055264839
                            header:
                              title: Basic Stencil CLI Options and Commands
                          - type: callout
                            data:
                              title: '''stencil start'' and ''stencil push'' Options'
                              body: >-
                                The `stencil start` and `stencil push` CLI
                                Commands have additional custom options that can
                                be used with the command, which are detailed
                                below.
                          - type: text
                            data: >
                              ## Stencil Start Options


                              To see Stencil CLI's additional options for the
                              `stencil start` command (described above), enter
                              the following on your command line:


                              `stencil help start` 


                              Your terminal screen should read similar to the
                              image below.
                            header:
                              anchor: '#stencil_stencil-start'
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538029681278
                            config:
                              maxWidth: '1300'
                              maxHeight: '1300'
                          - type: text
                            data: >-
                              ## Stencil Push Options


                              To see Stencil CLI's additional options for the
                              stencil push command (described above), enter the
                              following on your command line:


                              `stencil help push`


                              Your terminal screen should read similar to the
                              image below.
                          - type: image
                            data: >-
                              //s3.amazonaws.com/user-content.stoplight.io/6116/1538055086025
                            config:
                              maxHeight: '800'
                              maxWidth: '800'
                          - type: text
                            data: >+
                              You can use the `-f` or `--filename` option in
                              cases where you have already run `stencil bundle`
                              to bundle your theme, but the resulting .zip file
                              has not yet uploaded to BigCommerce. Use the
                              generated .zip file's **filename** as a parameter
                              to identify the generated file in your theme
                              directory. An example of the command is outlined
                              below.


                              `stencil push -f Cornerstone-2.3.2.zip`


                              In this example, `Cornerstone-2.3.2.zip` is the
                              name of the file that was generated after running
                              `stencil bundle`.


                              When you run `stencil push` with the `-f` or
                              `--filename` option, Stencil CLI skips all its
                              bundling steps and diagnostics. It proceeds
                              directly to uploading the specified file,
                              displaying its processing progress bar to show
                              upload status.

                    - title: Cornerstone File Structure
                      route:
                        path: /cornerstone-file-structure
                      data:
                        blocks:
                          - type: html
                            data: <h1>Cornerstone File Structure</h1>
                          - type: html
                            data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cornerstone_cornerstone-file-structure\">The Cornerstone Theme File Structure</a></li>\n\t</ul>\n</div>"
                          - type: text
                            data: >
                              ## The Cornerstone Theme File Structure


                              Cornerstone is the base Stencil theme, and it is
                              also the default theme for all newly initialized
                              local storefronts. Cornerstone provides the
                              standard file structure, base design pattern, and
                              default file assets necessary to start developing
                              a custom storefront experience.


                              The Cornerstone file structure consists of four
                              main subdirectories. Within those subdirectories,
                              you'll be directed to specific files in the
                              Development Quick Start tutorial and in Stencil
                              reference material:


                              ### `template/pages`

                              `templates/pages` contains all the base template
                              pages used in a BigCommerce online storefront. The
                              pages are grouped by page category. In order to
                              prevent any rendering errors, please avoid
                              changing page names. For details, please see
                              Templates Required Directory > Pages Subdirectory.



                              ### `template/components`

                              `templates/components` Components consist of code
                              snippets and partials that can be reused
                              throughout your theme. This directory is grouped
                              by component type. For details, please see
                              Templates Required Directory > Component
                              Subdirectory.


                              ### `template/layout`

                              `templates/layout` define the overall structure
                              (header, footer, etc.) for your storefront. You
                              can implement multiple layouts here, for different
                              use cases – to make it easy to switch between
                              different look-and-feel variations for the same
                              theme. For details, please see Templates Required
                              Directory > Layout Subdirectory.


                              ### `assets/`

                              `assets/` (images, CSS and JavaScript files) will
                              be located in this directory. For details, please
                              see CSS, JavaScript, and Design Resources.


                              ### `lang/`

                              `lang/` contains translation files, including the
                              required `en.json`. For details, please see the
                              Internationalization/Localization section of the
                              documentation.


                              When developing in your local environment, all
                              files that you change in your Stencil theme
                              directory (/cornerstone/ in our default
                              installation) will be reflected immediately at
                              [http://localhost:3000](http://localhost:3000).
                            header:
                              anchor: cornerstone_cornerstone-file-structure
                  blocks: []
        - title: Advanced Installation Options
          route:
            path: /advanced-installation-options
          data:
            blocks: []
            children:
              - title: 'Stencil Setup, Illustrated'
                route:
                  path: /stencil-setup
                data:
                  blocks:
                    - type: html
                      data: '<h1>Stencil Setup, Illustrated</h1>'
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_stencil-setup\">Illustration of Stencil's Setup</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Illustration of Stencil's Setup


                        The diagram below looks complex because it shows _all_
                        currently supported workflows for setting up a Stencil
                        theme. However, for a typical initial setup –
                        incorporating the default Cornerstone reference theme –
                        you would just follow the black arrows straight down
                        from top to bottom.


                        Here are the color codes for each setup scenario, with
                        links to details about individual steps:


                        * Black arrows: Basic initial setup with the default
                        Cornerstone theme. 


                        * Purple arrows: Customize a theme (_other than_
                        Cornerstone) downloaded from Theme Marketplace. 


                        * Orange arrows: Refresh Cornerstone from Theme
                        Marketplace. 



                        * Green arrows: Configure a custom JavaScript build
                        system, to avoid dependence on Webpack and jspm.



                        * Blue arrows: Adds onto any of the preceding four
                        scenarios. If developing for a BigCommerce Blueprint
                        production store launched before Jan. 26, 2016, you must
                        add one extra step to enable Stencil in the store's
                        control panel.
                      header:
                        anchor: stencil_stencil-setup
                    - type: image
                      data: >-
                        //s3.amazonaws.com/user-content.stoplight.io/6116/1532113466661
                      config:
                        maxWidth: '1500'
                        maxHeight: '1500'
                        centered: true
                        bordered: true
                        fluid: true
              - title: Navigating Your Setup Scenario
                route:
                  path: /navigating-your-setup-scenario
                data:
                  blocks:
                    - type: html
                      data: <h1>Navigating Your Setup Scenario</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone Setup</a></li>\n    <li><a href=\"#navigating_cornerstone\">Cornerstone Refresh</a></li>\n    <li><a href=\"#navigating_downloaded\">Downloaded Marketplace Theme</a></li>\n        <li><a href=\"#navigating_custom-build\">Custom Build System</a></li>\n        <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                    - type: callout
                      data:
                        type: warning
                        title: Notes on Dependencies
                        body: >
                          Our installation instructions have been tested on Mac
                          OS X Yosemite, Linux/Ubuntu v.14.04.4, and Windows.
                          Dependencies for other platforms/releases will be
                          added upon further testing.
                    - type: text
                      data: "## Initial Cornerstone Setup \n\nThis is the  streamlined workflow to start developing based on BigCommerce's default Cornerstone theme. This workflow uses Webpack as the JavaScript build system. Steps required:\n\n* Install your necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to prepare store and tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n\n\nOnce you have completed these steps, proceed to the Launching Stencil section."
                      header:
                        anchor: navigating_initial
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Download and Install a New Version of Cornerstone \n\nDownload and install a **new** version of Cornerstone from BigCommerce's Theme Marketplace. Steps required:\n\n* Ensure all necessary prerequisites are installed\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Ensure Stencil CLI is installed](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Download a new Cornerstone .zip file](/stencil-docs/advanced-installation-options/downloading-cornerstone)\n* [Reinstall JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* Repeat steps in _Launching Stencil_"
                      header:
                        anchor: navigating_cornerstone
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Download a Marketplace Theme \n\nCustomize a theme (_other than_ Cornerstone) downloaded from BigCommerce's Theme Marketplace. This workflow requires BitBucket, and some earlier theme versions require additional steps for the jspm JavaScript build system. Steps required:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Set up BitBucket, download theme's .zip file, and install JavaScript dependencies]\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Proceed to _Launching Stencil_"
                      header:
                        anchor: navigating_downloaded
                    - type: text
                      data: '---'
                    - type: text
                      data: "## Use a Custom JavaScript Build System \n\nThe Stencil framework currently uses Webpack 4 as its default Javascript Build system (jspm for older versions), but if you prefer, you can substitute this for a custom JavaScript build system such as Grunt. Steps recommended:\n\n* Install all necessary prerequisites\n\t* [Mac OS Prerequisites](/stencil-docs/getting-started/installing-and-launching/mac-os-prerequisites)\n\t* [Linux Prerequisites](/stencil-docs/getting-started/installing-and-launching/linux-prerequisites)\n\t* [Windows Prerequisites](/stencil-docs/getting-started/installing-and-launching/windows-prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-and-launching/installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-and-launching/cloning-the-cornerstone-theme)\n* [Install JavaScript Utilities](stencil-docs/getting-started/installing-and-launching/installing-stencil-utils)\n* [Configure your custom build system](/stencil-docs/getting-started/installing-and-launching/configuring-webpack-or-custom-build)\n* [Create an API Account to Prepare Your Store and Tokens](stencil-docs/getting-started/installing-and-launching/creating-an-api-account)\n* Proceed to _Launching Stencil_"
                      header:
                        anchor: navigating_custom-build
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Blueprint Store Launched before January 26th, 2016


                        If your store is **both**:

                        * running on a Blueprint theme

                        * was launched before Jan. 26th, 2016 


                        and you would like to enable Stencil development on it,
                        you must perform the following steps:


                        * Follow the installation path above that corresponds to
                        your development scenario

                        * Enable Stencil in the store’s control panel
                      header:
                        anchor: navigating_blueprint-store
              - title: Downloading the Cornerstone Theme
                route:
                  path: /downloading-the-cornerstone-theme
                data:
                  blocks:
                    - type: html
                      data: >-
                        <h1>Downloading the Cornerstone Theme from the
                        BigCommerce Control Panel</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_downloading-cornerstone-zip\">Downloading the Cornerstone .zip file</a></li>\n    <li><a href=\"#downloading_reinstalling-dependencies\">Reinstalling Dependencies and Relaunching</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                    - type: callout
                      data:
                        type: error
                        title: Back Up Before Reinstalling
                        body: >-
                          If you are reinstalling over a base theme on which you
                          have already begun development, first back up at least
                          your theme's .stencil file. This file contains your
                          store URL, your BigCommerce username and access
                          tokens, and other basic settings. Preserving those
                          settings will speed up initializing and launching the
                          new version.


                          To allow complete rollback, back up your whole
                          theme-name directory. (In a current default
                          installation, this directory is named.../cornerstone/.
                          Prior to March 2017, this directory's name defaulted
                          to .../stencil/).
                    - type: callout
                      data:
                        body: >-
                          The steps below are required only if you are
                          downloading a refreshed copy of Stencil's default
                          Cornerstone theme from the BigCommerce Theme
                          Marketplace. Cornerstone uses a simplified workflow
                          that bypasses BitBucket requirements, and replaces
                          jspm with the Webpack build system. 


                          If you are downloading a different Marketplace theme
                          for customization, you must instead use the workflow
                          outlined at Downloading and Customizing Marketplace
                          Themes.
                        title: Optional Workflow
                    - type: text
                      data: "## Downloading the Cornerstone .zip file from the Control Panel\n\nUse these steps to download a the Cornerstone theme from the store Control Panel: \n\n_If you have not yet added Cornerstone to your store, navigate to `Storefront` > `Themes Marketplace` and add the Cornerstone theme to your store._\n    \n* Go to `Storefront` -> `My Themes`.\n\n* Click the Cornerstone theme's thumbnail:\n\t* If Cornerstone is the store's currently active theme, click its image thumbnail at the top of the page, under the `Current Theme` heading.\n\t* If Cornerstone is _not_ the current theme, scroll down below the lower My Themes subheading, find, and click the Cornerstone thumbnail.\n\n_The Cornerstone theme's description should zoom to full-page and display a Theme Options drop-down list at the upper right._\n\n* From the `Theme Options` drop-down list, select `Download theme file` to download this Cornerstone release as it was refreshed on Theme Marketplace. \n\n* Unpack the zipped theme to a working directory. This can either be the directory where you have been developing your theme or a new directory.\n"
                      header:
                        anchor: '#downloading_downloading-cornerstone-zip'
                    - type: text
                      data: '---'
                    - type: text
                      data: >
                        ## Reinstalling Dependencies and Relaunching


                        * Ensure that your theme includes all current
                        dependencies by repeating [Stencil Utils]()
                        installation.


                        * To relaunch, repeat the steps listed in the Launching
                        Stencil section.
                      header:
                        anchor: '#downloading_reinstalling-dependencies'
                    - type: text
                      data: '---'
                    - type: text
                      data: >-
                        ## Next Steps


                        When you are ready to upload your custom theme to a
                        store, follow the instructions in Bundling and
                        Submitting a Theme and Troubleshooting Theme Uploads.
                      header:
                        anchor: '#downloading_next-steps'
              - title: Theme Updates and Version Control
                route:
                  path: /theme-updates-and-version-control
                data:
                  blocks:
                    - type: html
                      data: <h1>Theme Updates and Version Control</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone-Based Setup</a></li>\n    <li><a href=\"#navigating_cornerstone\">Cornerstone Refresh</a></li>\n    <li><a href=\"#navigating_downloaded\">Downloaded Marketplace Theme</a></li>\n        <li><a href=\"#navigating_custom-build\">Custom Build System</a></li>\n        <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                    - type: callout
                      data:
                        title: Distributed Version Control via Git
                        body: >-
                          Many techniques discussed below rely on GitHub's
                          _distributed version control_ model and features. For
                          the underlying principles, please see [Git's own
                          documentation](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control).
                    - type: text
                      data: >-
                        ## Isolating Customizations for Easier Updates


                        How best to set up your customized Stencil theme to
                        smoothly incorporate future updates in its base theme?
                        We're gratefully sharing these guidelines from Ken
                        Utting, Web Developer for BigCommerce client
                        [goruck.com](https://www.goruck.com/). His scenario
                        (slightly edited here) addresses maintaining a single
                        custom theme that is based on a third-party Marketplace
                        theme. But&#160;these guidelines also apply to
                        maintaining one, or multiple, themes based on Stencil's
                        default Cornerstone theme.
                    - type: text
                      data: "## Best Practices for Handling Theme Updates\n\nWe've made significant changes to our theme, and one principle that I've found successful is isolating my changes as much as possible. I try to put my changes into their own files, whether they're changes to templates, JavaScript, or SCSS. \n\nI also name all my files, CSS classes and identifiers, and JavaScript methods and classes with a `gr-` prefix (as an abbreviation for our company, GORUCK LLC). Also, any changes I make to standard theme files are identified with a comment, such as: \n\n`Go Ruck Customization`\n\t\t\nFor example, I have a file in `assets/scss/` named `gr-theme.scss`. All of the styles I've added to the theme are either in this file, or imported by this file. So for styling, my only changes to the theme itself are in a handful of places where I had to change an existing theme style (identified with a comment), plus this one line in `templates/layout/base.html`:\n\n`{{{stylesheet '/assets/css/gr-theme.css'}}}`\n\nI've found that this approach provides several advantages: \n\n* It makes it easier to distinguish my custom code from code supplied by the default theme.\n* It makes it less likely that my code will get intermingled with the standard theme code. This, in turn, prevents my code from unexpectedly being affected by theme updates.\n* It makes it easier to merge base-theme updates into my theme code.\n\n##### Comparing and Merging Apples to Apples\n\nHaving isolated my changes as much as I can, I identify theme changes by comparing stock (base) themes, rather than by comparing base themes to my customized theme. When a new version of the theme is released, I download the .zip file from the BigCommerce control panel. \n\nI then use a desktop diff tool (Beyond Compare) to \ncompare the new version to the .zip file of the theme's previous release. I ignore changes in the .zip file's\n `meta/` and `parsed/` folders, and to its `manifest.json`, and do a `Compare Contents` on the rest of the files.\n\nUltimately, I need to examine the changes carefully, to identify any changes that might affect, or be affected by, my customizations. And I need to test thoroughly. But comparing the stock themes to each other reduces the number of changes I have to examine. \n\nAlso, because I isolate my changes, most of the theme changes can be copied directly into the corresponding file in my customized theme. In practice, this means that I can limit my testing to the areas affected by changes in the standard theme, rather than having to re-test all my own changes.\n\nI personally find that it is also helpful to migrate *every* theme update into my customized version, as the update is released. If I were to wait, and to allow changes to accumulate and become more substantial, I think it would be more difficult to adequately test – and correctly integrate – the changes. Similarly, I'm grateful to the developer of our base theme (Pixel Union) for updates that have always made small, incremental changes.\n\n##### Dynamic Content Injection\n\nFinally, we've also come up with a variety of techniques for dynamically placing content on a page. For example, we can dynamically add tabs to a product page, using content stored on our WebDAV. Similarly, we can inject content from an external file into the body of a page. This allows us to put something that appears in many places, like a sizing chart, in a single place where it can be easily updated. \n\nOr, we can use the BigCommerce control panel's various HTML editors – for Products, Categories, and Content > Web Pages – to inject content into predefined \"dropzones\" (custom div's). This allows us to generate a wide variety of content pages using a single custom template.\n\nAll of these techniques move content out of the theme, minimizing the complexity of merging base-theme updates into our customized theme. For details on how we use them, please see Dynamic Content Rendering on Stencil Storefronts."
              - title: Configuring Webpack or a Custom Build System
                route:
                  path: /configuring-webpack-or-custom-build
                data:
                  blocks:
                    - type: html
                      data: <h1>Configuring Webpack or a Custom Build System</h1>
                    - type: html
                      data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone-Based Setup</a></li>\n    <li><a href=\"#navigating_cornerstone\">Cornerstone Refresh</a></li>\n    <li><a href=\"#navigating_downloaded\">Downloaded Marketplace Theme</a></li>\n        <li><a href=\"#navigating_custom-build\">Custom Build System</a></li>\n        <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                    - type: text
                      data: >-
                        ## Webpack, jspm, or Other JavaScript Managers


                        Stencil themes are Node.js applications, and therefore
                        contain dependencies on other JavaScript libraries. For
                        Stencil's default Cornerstone theme, we provide the
                        [Webpack](https://webpack.github.io/docs/) build manager
                        to handle these dependencies. 


                        As you develop a theme based on Cornerstone, you have
                        options to reconfigure Webpack's watched folders, and to
                        even substitute a different build system. These options
                        are explained below.


                        All themes currently in the BigCommerce Theme
                        Marketplace use Webpack. However, older versions of
                        certain themes used the jspm JavaScript dependency
                        manager instead of Webpack. Please see this page to
                        determine (by version number) whether you are developing
                        based on one of these earlier versions, and to find the
                        required jspm setup procedures.
                    - type: callout
                      data:
                        type: warning
                        body: >-
                          BigCommerce does not offer technical assistance on
                          substitutions for the default dependencies listed in
                          this documentation.
                        title: Limited Support
                    - type: text
                      data: >-
                        ## Webpack-Specific Configuration


                        The following Webpack configuration options can aid in
                        troubleshooting.


                        ### More-Verbose JavaScript Diagnostics


                        If JavaScript errors in your browser's developer tools
                        are not reporting filenames and line numbers, try
                        changing your `webpack.conf.js` file's
                        [sourcemap](https://webpack.js.org/guides/build-performance/#devtool)
                        entry from:


                        ```

                        devtool: 'source-map'

                        ```

                        to:


                        ```

                        devtool: 'eval-source-map'

                        ```


                        The `eval-source-map` option is slower, but more
                        verbose. This [Webpack Devtool
                        Configuration](https://webpack.js.org/configuration/devtool/)
                        article provides an overview of all devtool options and
                        details regarding each.



                        ## Build-System Configuration File


                        To take advantage of automatic JavaScript bundling and
                        browser refresh, Stencil themes require the
                        [`stencil.conf.js`](https://github.com/bigcommerce/cornerstone/blob/master/stencil.conf.js)
                        file. To enable a custom build system, you would need to
                        edit this file.


                        Within `stencil.conf.js`, Stencil CLI looks for the
                        exported `watchOptions` object, and `development` and
                        `production` callbacks, shown below. 


                        Let's take a closer look at each of these three
                        references.


                        ## Watched Folders: watchOptions Object


                        The `watchOptions` object defines directories for the
                        [Browsersync](https://browsersync.io/docs) preview
                        engine to watch or ignore, in two respective lists. You
                        are free to edit these lists:


                        ```

                        /**
                         * Watch options for the core watcher
                         * @type {{files: string[], ignored: string[]}}
                         */
                        var watchOptions = {
                            // If files in these directories change, reload the page.
                            files: [
                                '/templates',
                                '/lang'
                            ],

                            //Do not watch files in these directories
                             ignored: [
                                '/assets/scss',
                                '/assets/less',
                                '/assets/css',
                                '/assets/dist',
                            ]
                        };

                        ```


                        ## JavaScript Rebundling: development Function


                        Upon the command-line instruction `stencil start`,
                        Stencil CLI will look for and call the `development`
                        function. 


                        In the base Cornerstone theme, we have created a Webpack
                        watcher to trigger a browser reload whenever theme edits
                        cause JavaScript to be rebundled to the theme's
                        `bundle.js` file. This watcher uses options configured
                        in the webpack.conf.js file passed by `webpackConfig`.
                        So a JavaScript rebuild will refresh the browser:


                        ```

                        function development() {
                            webpack(webpackConfig).watch({}, err => {
                                if (err) {
                                    console.error(err.message, err.details);
                                }

                                process.send('reload');
                            });
                        }

                        ```


                        ## Theme Packaging: production Function 


                        When you issue the command-line instruction `stencil
                        bundle`, to process and package a completed theme for
                        upload to a store, Stencil CLI will look for and call
                        the `production` function. This function passes a
                        callback as its first argument, to support asynchronous
                        builds. 


                        The callback must be invoked somewhere inside the
                        `production` function, to notify Stencil CLI that the
                        theme-specific build has completed and is ready to
                        package:


                        ```

                        function production() {
                            webpackConfig.watch = false;
                            webpackConfig.devtool = false;
                            webpackConfig.plugins.push(new webpack.LoaderOptionsPlugin({
                                minimize: true,
                            }));
                            webpackConfig.plugins.push(new webpack.optimize.UglifyJsPlugin({
                                comments: false,
                                compress: {
                                    warnings: true,
                                },
                                sourceMap: false, // Toggle to turn on source maps.
                            }));

                            webpack(webpackConfig).run(err => {
                                if (err) {
                                    console.error(err.message, err.details);
                                    throw err;
                                }

                                process.send('done');
                            });
                        }


                        if (process.send) {
                            // running as a forked worker
                            process.on('message', message => {
                                if (message === 'development') {
                                    development();
                                }

                                if (message === 'production') {
                                    production();
                                }
                            });

                            process.send('ready');
                        }

                        ```
        - title: Development Quickstart
          route:
            path: /new-page-hyafc
          data:
            children:
              - title: Creating a New Theme
                route:
                  path: /new-subpage-4
                data: {}
              - title: Making Basic Design and Layout Changes
                route:
                  path: /new-subpage-3
                data: {}
              - title: config.json-resource Interactions
                route:
                  path: /new-subpage-2
                data: {}
              - title: Customizing Javascript
                route:
                  path: /new-subpage-1
                data: {}
              - title: Rendering HTML with Ajax
                route:
                  path: /new-subpage
                data: {}
              - title: Testing and Debugging Your Theme
                route:
                  path: /new-subpage
                data: {}
              - title: Managing Theme Variations
                route:
                  path: /new-subpage
                data: {}
        - title: Theme Editor Configuration
          route:
            path: /theme-editor-configuration
          data:
            children:
              - title: What is the Stencil Theme Editor?
                route:
                  path: /new-subpage-3
                data:
                  blocks:
                    - type: text
                      data: >-
                        Two JSON files in your Stencil theme's home directory,
                        config.json and schema.json, govern which settings the
                        theme will expose.


                        The config.json file's key/value pairs define:

                        * Global, theme-wide variables

                        * Theme variations

                        * Variation-specific variables


                        The schema.json file specifies which theme settings will
                        be accessible through the Theme Editor GUI. Your entries
                        here also define the graphical controls presented to
                        merchants for each setting.
              - title: Configuration Overview
                route:
                  path: /new-subpage-2
                data: {}
              - title: config.json Metedata
                route:
                  path: /new-subpage-1
                data: {}
              - title: Preparing Thumbnail Images
                route:
                  path: /new-subpage
                data: {}
              - title: scheme.json/Theme Editor Metadata
                route:
                  path: /new-subpage
                data: {}
              - title: Preparing Thumbnail Images
                route:
                  path: /new-subpage
                data: {}
              - title: Theme Editor Troubleshooting
                route:
                  path: /new-subpage
                data: {}
        - title: Shipping A Theme
          route:
            path: /shipping-a-theme
          data:
            children:
              - title: Shrinking Your Theme by Excluding Static Assets
                route:
                  path: /shrinking-your-theme
                data: {}
              - title: Staging a theme for CDN Delivery
                route:
                  path: /staging-a-theme
                data: {}
              - title: Bundling and Submitting a Theme
                route:
                  path: /bundling-and-submitting
                data: {}
              - title: Adding Recaptcha V2
                route:
                  path: /adding-recaptcha
                data: {}
              - title: Troubleshooting Theme Uploads
                route:
                  path: /new-subpage-4
                data: {}
        - title: Front-Matter Attributes
          route:
            path: /front-matter-attributes
          data:
            children:
              - title: Front Matter Reference
                route:
                  path: /new-subpage
                data: {}
        - title: Handlebars Syntax and Helpers
          route:
            path: /handlebars-syntax-and-helpers
          data:
            children:
              - title: Handlebars Helpers Reference
                route:
                  path: /handlebars-helpers-reference
                data:
                  blocks:
                    - type: text
                      data: '# Handlebars Helpers Reference'
                    - type: text
                      data: >
                        ## {{itemAt}}


                        _Block helper that returns the item at the specified
                        index._


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `returns` {any} `value`


                        #### {{itemAt}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```

                        {{itemAt array 1}}

                        //=> 'b'


                        ```

                        ---


                        ## {{join}}


                        The `join` helper is custom to Stencil. It joins an
                        array of string items, with separators. It returns a
                        string. 


                        #### Parameters


                        - `values`: {Array}

                        - `separator`: {String}

                        - `limit=<number>`: An optional limit.


                        #### {{join}} Example


                        insert join example


                        ---


                        ### {{limit}}


                        The `limit` helper is custom to Stencil. It limits the
                        number of items returned from an array variable, and
                        returns a new array.


                        #### Parameters


                        - `data`: {Array}

                        - `limit`: {Number}


                        #### {{limit}} Example 


                        Assume that `{{cart.items}}` would return 10 items. You
                        could use this helper to limit that behavior to only the
                        first four items, by specifying: 


                        ```

                        {{limit cart.items 4}}

                        ```


                        ---


                        ### {{pluck}}


                        The `pluck` helper is custom to Stencil. For one or more
                        specified search key(s), it retrieves corresponding
                        values from some or all elements in a specified
                        collection. 


                        The `pluck` helper returns the retrieved values in a
                        comma-separated string. This helper's general form is:


                        ```

                        {{pluck ([limit] <collection> [<limit-value>])
                        '<search-key>'}}

                        ```


                        #### Parameters


                        - `limit`, `limit-value`: Optional parameters to limit
                        the number of results returned.

                        - `collection`: The collection to search.

                        - `search-key`: The string to search for.



                        #### {{pluck}} Example 1


                        Assume that the `categories` collection contains:


                        ```

                        categories: [
                          { "id": 1, "name": "Bakeware" },
                          { "id": 2, "name": "Cookware" },
                          { "id": 3, "name": "Cutlery" }
                        ]

                        ```


                        In this case, this Handlebars statement:


                        ```

                        {{pluck (limit categories 2) 'name'}}

                        ```


                        ...would return:


                        ```

                        "Bakeware,Cookware"

                        ```


                        #### {{pluck}} Example 2


                        If the `categories` themselves each contained an image
                        object, then you could use dot notation to access that
                        image object's children:


                        ```

                        categories: [
                          { "id": 1, "name": "Bakeware", "image": { "data": "http://...", "alt": "Bakeware image"} },
                          { "id": 2, "name": "Cookware" "image": { "data": "http://...", "alt": "Cookware image"} },
                          { "id": 3, "name": "Cutlery" "image": { "data": "http://...", "alt": "Cutlery image"} }
                        ]

                        ```


                        In this case, this Handlebars statement:


                        ```

                        {{pluck (limit categories 2) 'image.data'}}

                        ```


                        ...would return a comma-separated list of image URLs.


                        ---



                        ## <a name="array_std"></a> Standard Array Helpers


                        The following standard array helpers are supported on
                        the Stencil framework.


                        ### <a name="after"></a> {{after}}


                        Returns all of the items in an array after the specified
                        index. Opposite of [before](#before).


                        Given the array `['a', 'b', 'c']`:


                        #### Parameters


                        * `array` {Array}: Collection.

                        * `n` {Number}: Starting index (number of items to
                        exclude).

                        * `returns` {Array}: Array exluding `n` items.


                        #### Example


                        ```handlebars

                        {{after array 1}}

                        //=> '["c"]'

                        ```


                        ---


                        ## {{arrayify}}


                        Casts the given `value` to an array.


                        #### Parameters


                        * `value` {any}

                        * `returns` {Array}


                        #### {{arrayify}} Example


                        ```handlebars

                        {{arrayify "foo"}}

                        //=> '["foo"]'

                        ```

                        ---


                        ## <a name="before"></a> {{before}}


                        Returns all of the items in the collection before the
                        specified count. Opposite of [after](#after).


                        Given the array `['a', 'b', 'c']`:


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}

                        * `returns` {Array}: Array excluding items after the
                        given number.


                        #### {{before}} Example


                        ```handlebars

                        {{before array 2}}

                        //=> '["a", "b"]'

                        ```


                        ---


                        ## {{eachIndex}}


                        #### Parameters


                        * `array` {Array}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{eachIndex}} Example


                        ```handlebars

                        {{#eachIndex collection}}
                          {{item}} is {{index}}
                        {{/eachIndex}}

                        ```


                        ---


                        ### {{filter}}


                        Block helper that filters the given array. Renders the
                        block for values that evaluate to `true`; otherwise,
                        returns the inverse block.


                        #### Parameters


                        * `array` {Array}

                        * `value` {any}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{filter}} Example


                        ```handlebars

                        {{#filter array "foo"}}AAA{{else}}BBB{{/filter}}

                        //=> 'BBB

                        ```


                        ---


                        ## <a name="first"></a> {{first}}


                        Returns the first item, or first `n` items, of an array.


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}: Number of items to return, starting at
                        `0`.

                        * `returns` {Array}


                        #### {{first}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{first array 2}}

                        //=> '["a", "b"]'

                        ```


                        ---



                        ### {{forEach}}


                        Iterates over each item in an array, and exposes the
                        current item in the array as context to the inner block.
                        In addition to the current array item, the helper
                        exposes the following variables to the inner block:


                        * `index`

                        * `total`

                        * `isFirst`

                        * `isLast`


                        Also, `@index` is exposed as a private variable, and
                        additional private variables may be defined as hash
                        arguments.


                        #### Parameters


                        * `array` {Array}

                        * `returns` {String}


                        #### {{forEach}} Example


                        ```js

                        var accounts = [

                        {'name': 'John', 'email': 'john@example.com'},

                        {'name': 'Malcolm', 'email': 'malcolm@example.com'},

                        {'name': 'David', 'email': 'david@example.com'}

                        ];


                        // example usage

                        // {{#forEach accounts}}

                        //   <a href="mailto:{{ email }}" title="Send an email
                        to {{ name }}">

                        //     {{ name }}

                        //   </a>{{#unless isLast}}, {{/unless}}

                        // {{/forEach}}

                        ```


                        ---


                        ### {{inArray}}


                        Block helper that renders the block if an array has the
                        given `value`. Optionally, you can specify an inverse
                        block to render when the array does not have the given
                        value.


                        #### Parameters


                        * `array` {Array}

                        * `value` {any}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{inArray}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```handlebars

                        {{#inArray array "d"}}
                          foo
                        {{else}}
                          bar
                        {{/inArray}}

                        //=> 'bar'

                        ```


                        ---


                        ### {{isArray}}


                        Returns true if `value` is an es5 array.


                        #### Parameters


                        * `value` {any}: The value to test.

                        * `returns` {Boolean}


                        #### Example


                        ```handlebars

                        {{isArray "abc"}}

                        //=> 'false'

                        ```


                        ### <a name="last"></a> {{last}}


                        Returns the last item, or last `n` items, of an array.
                        Opposite of [first](#first).


                        #### Parameters


                        * `array` {Array}

                        * `n` {Number}: Number of items to return, starting with
                        the last item.

                        * `returns` {Array}


                        #### Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{last array 2}}

                        //=> '["d", "e"]'

                        ```


                        ### {{lengthEqual}}


                        Block helper that compares the length of the given array
                        to the number passed as the second argument. If the
                        array length is equal to the given `length`, the block
                        is returned. Otherwise, you have the option of returning
                        an inverse block.


                        #### Parameters


                        * `array` {Array}

                        * `length` {Number}

                        * `options` {Object}

                        * `returns` {String}


                        #### Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}

                        //=> 'BBB'

                        ```


                        ### {{map}}


                        Returns a new array, created by calling `function` on
                        each element of the given `array`.


                        #### Parameters


                        * `array` {Array}

                        * `fn` {Function}

                        * `returns` {String}


                        #### Example


                        Given an array `['a', 'b', 'c']`:


                        ```js

                        // register `double` as a helper

                        function double(str) {
                          return str + str;
                        }

                        // then used like this:

                        // {{map array double}}

                        //=> '["aa", "bb", "cc"]'

                        ```


                        ### {{some}}


                        Block helper that returns the block *if* the callback
                        returns true for some value in the given array.


                        #### Parameters


                        * `array` {Array}

                        * `cb` {Function}: Callback function.

                        * {Options}: Handlebars-provided options object.

                        * `returns` {Array}


                        #### Example


                        Given the array `[1, 'b', 3]`:


                        ```handlebars

                        {{#some array isString}}
                          Render me if the array has a string.
                        {{else}}
                          Render me if it doesn't.
                        {{/some}}

                        //=> 'Render me if the array has a string.'

                        ```


                        ### {{sort}}


                        Sorts the given `array`. If an array of objects is
                        passed, you may optionally pass (as the second argument)
                        a `key` to sort on. Alternatively, you may pass a
                        sorting function as the second argument.


                        #### Parameters


                        * `array` {Array}: The array to sort.

                        * `key` {String|Function}: The object key to sort by, or
                        a sorting function.


                        #### Example


                        Given an array `['b', 'a', 'c']`:



                        ```handlebars

                        {{sort array}}

                        //=> '["a", "b", "c"]'

                        ```


                        ### {{sortBy}}


                        Sorts an `array`. If an array of objects is passed, you
                        may optionally pass a `key` to sort on as the second
                        argument. You may alternatively pass a sorting function
                        as the second argument.


                        #### Parameters


                        * `array` {Array}: The array to sort.

                        * `props` {String|Function}: One or more properties to
                        sort by, or sorting functions to use.


                        #### {{sortBy}} Example


                        Given an array `[{a: 'zzz'}, {a: 'aaa'}]`:


                        ```handlebars

                        {{sortBy array "a"}}

                        //=> '[{"a":"aaa"}, {"a":"zzz"}]'

                        ```

                        ---


                        ### <a name="withAfter"></a> {{withAfter}}


                        Use the items in the array, _after_ the specified index,
                        as context inside a block. Opposite of
                        [withBefore](#withBefore).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {Array}


                        #### {{withAfter}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#withAfter array 3}}
                          {{this}}
                        {{/withAfter}}

                        //=> "de"

                        ```


                        ### <a name="withBefore"></a> {{withBefore}}


                        Use the items in the array, _before_ the specified
                        index, as context inside a block. Opposite of
                        [withAfter](#withAfter).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {Array}


                        #### {{withBefore}} Example


                        Given the array `['a', 'b', 'c', 'd', 'e']`:


                        ```handlebars

                        {{#withBefore array 3}}
                          {{this}}
                        {{/withBefore}}

                        //=> 'ab'

                        ```


                        ### <a name="withFirst"></a> {{withFirst}}


                        Uses a collection's first item inside a Handlebars block
                        expression. Opposite of [withLast](#withLast).


                        #### Parameters


                        * `array` {Array}

                        * `idx` {Number}

                        * `options` {Object}

                        * `returns` {String}


                        #### {{withFirst}} Example


                        Given the array `['a', 'b', 'c']`:


                        ```handlebars

                        {{#withFirst array}}
                          {{this}}
                        {{/withFirst}}

                        //=> 'a'

                        ```
        - title: Stencil Object Model Reference
          route:
            path: /stencil-object-model-reference
          data:
            children:
              - title: Stencil Objects
                route:
                  path: /stencil-objects
                data:
                  children:
                    - title: Global Objects & Properties
                      route:
                        path: /global-objects
                      data:
                        children:
                          - title: Banners
                            route:
                              path: /banners
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description: </b>Elements of marketing
                                    banners at page’s top and/or bottom<br>


                                    <b>Handlebars Expressions:</b> <span
                                    class="inline-code">{{banner}}</span>, <span
                                    class="inline-code">{{{banner}}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">banners</td>
                                        <td class="">Blocks of static HTML content to define banners</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">top</span></td>
                                        <td class="">Array of HTML content/strings, for custom top-banner content; banners are populated from the BigCommerce control panel</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">bottom</span></td>
                                        <td class="">Array of HTML content/strings, for custom bottom-banner content; banners are populated from the BigCommerce control panel</td>
                                      </tr>
                                    </table>
                                  header:
                                    anchor: Banner
                                  config: {}
                                - type: callout
                                  data:
                                    type: warning
                                    body: >-
                                      Where a banner contains HTML, the <span
                                      class="inline-code">banner</span> helper
                                      must be placed in triple braces, as in
                                      this 

                                      example: <span
                                      class="inline-code">{{{banner}}}</span>.
                                      (Double braces would escape the HTML.)
                                    title: Handlebars Formatting Exception
                          - title: Breadcrumbs
                            route:
                              path: /breadcrumbs
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description:</b> Defines a page's
                                    breadcrumbs – available on virtually all
                                    pages that have a breadcrumb trail<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{breadcrumbs}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Displayed name of this breadcrumb element</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL of this breadcrumb element</td>
                                      </tr>
                                    </table>
                                  header:
                                    anchor: Stencil-Bread-ref
                          - title: Categories
                            route:
                              path: /categories
                            data:
                              blocks:
                                - type: text
                                  data: >-
                                    <A NAME="Categories"></a>

                                    <b>Description:</b> A list of all product
                                    categories shown in the current page
                                    context; default sorting is by category id,
                                    from lowest to highest<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{categories}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">id</td>
                                        <td class="">ID of the top-level category listed</td>
                                      </tr>
                                      <tr>
                                        <td class="">name</td>
                                        <td class="">Name of the top-level category</td>
                                      </tr>
                                      <tr>
                                        <td class="">description</td>
                                        <td class="">Description of the top-level category (optional &ndash; when requested in front matter)</td>
                                      </tr>
                                      <tr>
                                        <td class="">url</td>
                                        <td class="">URL to the category page</td>
                                      </tr>
                                      <tr>
                                        <td class="">count</td>
                                        <td class="">Number of products in this category</td>
                                      </tr>
                                      <tr>
                                        <td class="">children</td>
                                        <td class="">List of child categories for this top-level category</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> id</span></td>
                                        <td class="">ID of the child category</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> name</span></td>
                                        <td class="">Name of the child category</td>
                                      </tr>
                                        <tr>
                                        <td class=""><span class="indent1"> description</span></td>
                                        <td class="">Description of the child category (optional &ndash; when requested in front matter)</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> url</span></td>
                                        <td class="">URL of the child category</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> count</span></td>
                                        <td class="">Number of products in this child category</td>
                                      </tr>
                                    </table>
                          - title: Currency Selector
                            route:
                              path: /currency-selector
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description:</b> A list of all supported
                                    currencies, and the currency that is
                                    actively in use in the storefront<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{currency_selector}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">active_currency_id</td>
                                        <td class="">ID of the currency actively in use in the storefront</td>
                                      </tr>
                                      <tr>
                                        <td class="">active_currency_flag</td>
                                        <td class="">Country flag used to represent the active currency</td>
                                      </tr>
                                      <tr>
                                        <td class="">active_currency_name</td>
                                        <td class="">Name of the active currency</td>
                                      </tr>
                                      <tr>
                                        <td class="">active_currency_code</td>
                                        <td class="">Code for the active currency</td>
                                      </tr>
                                      <tr>
                                        <td class="">currencies</td>
                                        <td class="">List of all the currencies supported for this storefront</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> is_active</span></td>
                                        <td class="">Boolean that indicates whether this currency is active for use in the storefront</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> switch_url</span></td>
                                        <td class="">The URL to invoke a switch to this currency</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> id</span></td>
                                        <td class="">ID of the currency</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> name</span></td>
                                        <td class="">Name of the currency</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1"> flag</span></td>
                                        <td class="">Country flag used to visually represent the currency</td>
                                      </tr>
                                    </table>
                                  header:
                                    anchor: CurrencySel
                          - title: Faceted Search
                            route:
                              path: /new-subpage-6
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <A NAME="FacSearch"></a>

                                    <b>Description: </b>Faceted-search object
                                    for searching globally, by category, or by
                                    brand<br>


                                    <b>Handlebars Expression</b><b>:</b> <span
                                    class="inline-code">{{faceted_search}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">facets</td>
                                        <td class="">List of all search facets available</td>
                                      </tr>
                                      <tr>
                                        <td class="">selected</td>
                                        <td class="">Container for the selected search facets</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">remove_all_url</span></td>
                                        <td class="">URL to remove all selected search restrictions</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">items</span></td>
                                        <td class="">Currently enabled search facets</td>
                                      </tr>
                                    </table>
                                  header:
                                    anchor: FacetedSearch
                          - title: Featured Products
                            route:
                              path: /new-subpage-2
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description:</b> A list of all the
                                    featured products for the BigCommerce
                                    storefront<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{products.featured}}</span><br>


                                    <b>Object Properties:</b> References the <a
                                    href="/docs/common-product-card-model">product
                                    card model</a>.
                                  header:
                                    anchor: FeatProducts
                                - type: text
                                  data: >-
                                    <b> Usage Example: </b>


                                    From Stencil's base Cornerstone theme, the
                                    example below displays the global
                                    `{{products.featured}}` object on the
                                    `<theme-name>/templates/pages/home.html`
                                    page template.


                                    First, to declare the object, the following
                                    [front
                                    matter](/docs/using-yaml-front-matter) must
                                    be placed at the top of this template. This
                                    particular declaration also limits the
                                    number of featured products to be displayed:


                                    ```

                                    ---

                                    products:
                                        [...]
                                        featured:
                                            limit: {{theme_settings.homepage_featured_products_count}}
                                    ---

                                    ```

                                    The `homepage_featured_products_count` limit
                                    is one of two relevant variables defined in
                                    Cornerstone's
                                    [`config.json`&#160;file](/docs/configjson-reference),
                                    here:


                                    ```
                                      "settings": {
                                        [...]
                                        "homepage_featured_products_count": 8,
                                        [...]
                                        "homepage_featured_products_column_count": 4,
                                        [...]    
                                    ```


                                    In the body of the `home.html` template, the
                                    following Handlebars conditional statement
                                    displays the featured-products object
                                    declared above:


                                    ```
                                        {{#if products.featured}}
                                            {{> components/products/featured products=products.featured columns=theme_settings.homepage_featured_products_column_count}}
                                        {{/if}}
                                    ```


                                    This statement formats the featured-products
                                    display according to the
                                    `homepage_featured_products_column_count`
                                    variable, also defined in the `config.json`
                                    excerpt above.
                          - title: Footer
                            route:
                              path: /footer
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description: </b>The footer content for
                                    each storefront page<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{footer}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">sitemap_url</td>
                                        <td class="">The URL to the sitemap, based on store’s SEO setting</td>
                                      </tr>
                                      <tr>
                                        <td class="">scripts</td>
                                        <td class="">Scripts to be loaded after the HTML has loaded; includes performance metrics</td>
                                      </tr>
                                    </table>
                          - title: Home Slide Show
                            route:
                              path: /home-slide-show
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description:</b> A list of images, text,
                                    and style assets for a storefront’s image
                                    slide show<br>


                                    <b>Handlebars Expression: </b><span
                                    class="inline-code">{{carousel}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">swap_frequency</td>
                                        <td class="">Indicates how often (in seconds) the slides will change; the value must be between 1 and 90,000 seconds</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class="">slides</td>
                                        <td class="">Object containing properties for each slide in the slideshow</td>
                                      </tr>
                                      
                                      <tr>
                                        <td class=""><span class="indent1">image</span></td>
                                        <td class="">Path to the image file used on this slide</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">alt_text</span></td>
                                        <td class="">Alt text for the image</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">url</span></td>
                                        <td class="">URL to which the image will link</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">heading</span></td>
                                        <td class="">Heading message defined by the merchant</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">heading_color</span></td>
                                        <td class="">Color of the heading text</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">text</span></td>
                                        <td class="">Subheading defined by the merchant</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">text_color</span></td>
                                        <td class="">Color of the subheading text</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">button_text</span></td>
                                        <td class="">Text displayed on a call-to-action button defined by the merchant</td>
                                      </tr>
                                      <tr>
                                        <td class=""><span class="indent1">button_text_color</span></td>
                                        <td class="">Color of the button</td>
                                      </tr>
                                    </table>
                                  header:
                                    anchor: SlideShow
                          - title: HTML Head
                            route:
                              path: /html-head
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description: </b>Data to be included in
                                    the HTML &lt;head&gt; element<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{head}}</span><br>


                                    <b>Object Properties:</b><br><br>


                                    <table>
                                      <tr>
                                        <td>Property</td>
                                        <td>Description</td>
                                      </tr>
                                      <tr>
                                        <td class="">character_set</td>
                                        <td class="">The character set to specify</td>
                                      </tr>
                                      <tr>
                                        <td class="">meta_tags</td>
                                        <td class="">Meta tags to improve store SEO</td>
                                      </tr>
                                      <tr>
                                        <td class="">title</td>
                                        <td class="">Current page’s title</td>
                                      </tr>
                                      <tr>
                                        <td class="">stylesheets</td>
                                        <td class="">CSS files to be included</td>
                                      </tr>
                                      <tr>
                                        <td class="">scripts</td>
                                        <td class="">Scripts to be loaded in the &lt;head&gt; tag</td>
                                      </tr>
                                      <tr>
                                        <td class="">favicon</td>
                                        <td class="">The store’s favicon (Favorite icon)</td>
                                      </tr>
                                      <tr>
                                        <td class="">rsslinks</td>
                                        <td class="">RSS feeds to improve SEO</td>
                                      </tr>
                                      </tr>
                                    </table>
                          - title: Is_ajax
                            route:
                              path: /is-ajax
                            data:
                              blocks:
                                - type: html
                                  data: >-
                                    <b>Description: </b>Boolean; returns true if
                                    the current executing request is an Ajax
                                    request<br>


                                    <b>Handlebars Expression:</b> <span
                                    class="inline-code">{{is_ajax}}</span><br>
                                  header:
                                    anchor: IsAjax
                          - title: Login
                            route:
                              path: /login
                            data: {}
            blocks:
              - type: html
                data: >-
                  <a name="Stencil-Obj-ref"></a>The entries in this section list
                  and describe the objects<!--, custom operators, and data
                  resources--> and properties that you can access
                  programmatically via Handlebars expressions:


                  <ul>
                    <!-- <li><a href="/docs/custom-handlebars-helpers">Stencil Custom Handlebars Helpers</a></li> -->
                   <li><a href="/stencil-object-model-reference/global-objects">Global Objects (subsection)</a></li>
                   <li><a href="/stencil-object-model-reference/common-object-formats">Common Objects</a></li>
                   <li><a href="/stencil-object-model-reference/product-resources">Product Objects</a></li>
                   <li><a href="/stencil-object-model-reference/category-resources">Category Objects</a></li>
                   <li><a href="/stencil-object-model-reference/brand-resources">Brand Objects</a></li>
                   <li><a href="/stencil-object-model-reference/cart-resources">Cart Objects</a></li>
                   <li><a href="/stencil-object-model-reference/customer-resources">Customer Objects</a></li>
                   <li><a href="/stencil-object-model-reference/blog-resources">Blog Objects</a></li>
                   <li><a href="/stencil-object-model-reference/forms-resources">Forms Objects</a></li>
                  </ul>
        - title: Event Hooks
          route:
            path: /event-hooks
          data:
            children:
              - title: Hook Examples
                route:
                  path: /hook-examples
                data: {}
              - title: Remote API Example
                route:
                  path: /remote-api-example
                data: {}
              - title: Data Tags/Event Hook Reference
                route:
                  path: /new-subpage-1
                data: {}
              - title: stencil-utils API Reference
                route:
                  path: /new-subpage-2
                data: {}
        - title: Conditional-Logic Examples
          route:
            path: /conditional-logic-examples
          data:
            children:
              - title: 'Catalog Price Object: How Properties interact'
                route:
                  path: /catalog-price-object
                data: {}
              - title: 'Cart Price Properties: Relationships'
                route:
                  path: /cart-price-relationships
                data: {}
              - title: Calling Theme-Wide Variables via Handlebars
                route:
                  path: /calling-theme-wide-variables
                data: {}
              - title: Dynamic Content Rendering on Stencil Storefronts
                route:
                  path: /dynamic-content-rendering
                data: {}
        - title: CSS And Design Assets
          route:
            path: /css-and-design-assets
          data:
            children:
              - title: Navigating Stencil Design Assets
                route:
                  path: /navigating-stencil-design-assets
                data: {}
              - title: Components/Design Patters
                route:
                  path: /components-design-patterns
                data: {}
              - title: Layouts Directory
                route:
                  path: /layouts-directory
                data: {}
              - title: Settings Directory
                route:
                  path: /settings-directory
                data: {}
              - title: Utilities Directory
                route:
                  path: /new-subpage-1
                data: {}
              - title: New Subpage
                route:
                  path: /new-subpage
                data: {}
        - title: Templates Reference
          route:
            path: /templates-reference
          data:
            children:
              - title: Navigating the Templates Directory
                route:
                  path: /new-subpage-2
                data:
                  children:
                    - title: Components Subdirectory
                      route:
                        path: /new-subpage-3
                      data: {}
                    - title: Layout Subdirectory
                      route:
                        path: /new-subpage-2
                      data: {}
                    - title: Pages Subdirectory
                      route:
                        path: /new-subpage-1
                      data: {}
                    - title: Stencil with Disqus
                      route:
                        path: /new-subpage
                      data: {}
              - title: Custom Templates
                route:
                  path: /components-and-compilation
                data:
                  children:
                    - title: 'Authoring, Testing, and Uploading Custom Templates'
                      route:
                        path: /new-subpage-2
                      data: {}
                    - title: Assigning Templates to Pages
                      route:
                        path: /new-subpage-1
                      data: {}
                    - title: Switching Themes with Custom Templates
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Theme Updates with  Custom Templates
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Limitations on Custom Templates
                      route:
                        path: /new-subpage-3
                      data: {}
              - title: Stencil Checkout
                route:
                  path: /new-subpage
                data:
                  children:
                    - title: Preparing Stencil for Optimized One-Page Checkout
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Optimized One Page Checkout
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Currency Conversion
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Multi Language Checkout
                      route:
                        path: /new-subpage
                      data: {}
                    - title: Checkout/Confirmation Injection Options
                      route:
                        path: /new-subpage-1
                      data: {}
                    - title: Implementing a custom checkout
                      route:
                        path: /new-subpage-2
                      data: {}
                    - title: Styling the Apple Pay Button
                      route:
                        path: /new-subpage-3
                      data: {}
                    - title: Customizing Invoices and Packing Slips
                      route:
                        path: /new-subpage-4
                      data: {}
        - title: Internationalization/Localization
          route:
            path: /internationalization-and-localization
          data:
            children:
              - title: Localizing Stores
                route:
                  path: /new-subpage-3
                data: {}
              - title: Basis for Internationalization
                route:
                  path: /new-subpage-2
                data: {}
              - title: Required Subdirectories
                route:
                  path: /new-subpage-1
                data: {}
              - title: Localization File Structure
                route:
                  path: /new-subpage
                data: {}
              - title: Invoking Translation Keys
                route:
                  path: /new-subpage-4
                data: {}
        - title: Javascript Customization
          route:
            path: /javascript-customization
          data:
            children:
              - title: Adding Javascript to Stencil Theme
                route:
                  path: /new-subpage-4
                data: {}
              - title: Basic Non NPM Example
                route:
                  path: /new-subpage-3
                data: {}
              - title: Basic NPM example
                route:
                  path: /new-subpage-2
                data: {}
              - title: Advanced NPM Example
                route:
                  path: /new-subpage-1
                data: {}
              - title: Page Types and Life Cycle
                route:
                  path: /new-subpage
                data: {}
      blocks:
        - type: html
          data: <h1>Welcome to the BigCommerce Stencil Developer Documentation</h1>
        - type: html
          data: "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#what-is-stencil\"> What is Stencil?</a></li>\n\t\t<li><a href=\"#features-and-stack\"> Stencil Development Features and Technology Stack</a></li>\n\t\t<li><a href=\"#key-components\">Key Components (Video Demo)</a></li>\n\t\t<li><a href=\"#blueprint\"> Blueprint (Legacy Framework) Documentation </a></li>\n\t</ul>\n</div>\n"
        - type: text
          data: >-
            ## What is Stencil?


            Stencil is the theming engine for the BigCommerce platform and for
            BigCommerce's Cornerstone theme, which is the foundation a developer
            needs to quickly start developing premium, custom themes with
            Stencil. 


            [Cornerstone](https://github.com/bigcommerce/cornerstone) is
            available on Github as an open source software, and will be the
            Stencil engined theme we reference in this documentation in order to
            demonstrate Stencil's capabilities in a fully functioning storefront
            theme. Here is a demo of the [BigCommerce Cornerstone
            theme](http://cornerstone-light-demo.mybigcommerce.com/).


            Stencil also provides features that allow merchants to customize a
            storefront's look and feel with no coding, making Stencil a powerful
            and useful engine for all audiences.
          header:
            anchor: what-is-stencil
        - type: text
          data: '---'
        - type: text
          data: >-
            ## Stencil Development Features and Technology Stack


            Stencil's provides the following features, allowing BigCommerce
            theme developers to create beautiful, dynamic, and powerful
            storefronts.



            ### Stencil Command Line Interface (Stencil CLI)


            The Stencil CLI enables developers to locally develop and customize
            on any Stencil theme with no impact on a merchant's live storefront
            during the development process. When locally developing, you will
            have access to real-time Browsersync preview and testing across
            desktop, mobile, and tablet devices/viewports.


            Stencil CLI runs on the Node.js runtime environment. Installing
            Node.js also provides the required npm package manager.


            ### Logic-Based Templates


            Stencil's logic based templates allow BigCommerce developers to
            customize storefront pages efficiently with the lightweight
            templating languge, Handlebars.js.  Handlebars allows you to
            efficiently embed dynamic and conditional logic onto your storefront
            pages.


            ### Sass/SCSS Support


            Stencils Sass and SCSS support allows developers to nest properties,
            variables, and mixins. Use the familiar Foundation framework
            (provided) or substitute your choice of framework.


            Stencil's Cornerstone base theme uses a BigCommerce pattern library
            called Citadel, which is built on top of the ZURB Foundation
            framework, version 5.5.3. Stencil does not support Foundation 6.x,
            due to breaking changes introduced between versions 5.x and 6.x.


            Foundation offers the framework for creating a responsive theme. You
            have the option of swapping out Foundation for another framework,
            although doing so would require significant work.


            Foundation assets bundled with Cornerstone are located in these
            subdirectories: 


            * `Cornerstone/assets/scss/settings/foundation/ `

            * `Cornerstone/assets/scss/components/foundation/`


            Citadel extends Foundation’s mixins and components to provide
            Stencil’s own mixins, extensible components, and utilities. These
            include drop-down lists, forms, and similar resources. Citadel
            resources are named according to BEM and SUIT CSS conventions.
            Classes are named functionally, rather than based on visual
            presentation or content. Our style guide is published here.

            Citadel assets bundled with Cornerstone are located in these
            Cornerstone subdirectories: 


            * `Cornerstone/assets/scss/settings/citadel/`

            * `Cornerstone/assets/scss/components/citadel/`


            More detailed information about the Citadel and Foundation SCSS
            components, and their naming conventions will be covered in
            *Components and Design Patterns*.


            ### Page-specific Resource Definition


            Specify the dynamic content you want to be displayed on your
            storefront pages with YAML formatted front matter.


            ### Javascript Event Hooks


            Your Stencil themes can access remote objects through event hooks,
            using the hooks to trigger defined events based on shopper behavior.
            This will allow you to collect product data and optimize a shopper's
            experience.


            To facilitate theme-building, BigCommerce provides the stencil-utils
            client-side JavaScript library for managing event hooks.


            ---


            **Stencil Theme Editor**


            The Stencil Theme Editor is a browser-based tool that enables
            merchants to rapidly customize a theme's look and feel with no
            coding. 


            BigCommerce theme developers' configuration choices determine which
            theme aspects merchants can customize, and the range of choices for
            each aspect.


            Stencil's Theme Editor graphical interface enables merchants and
            store administrators to make styling changes to the theme currently
            applied to their storefront. 


            As a theme developer, you have the capability to define which style
            settings appear in the Stencil Theme Editor. You can grant access to
            colors, fonts, display/hiding of page features, and number of
            products/entries to display per feature.


            ### Stencil Theme Variations


            Each Stencil theme can contain one to four variations. You can
            optimize individual variations for specific markets, audiences and
            styles – while still managing and distributing all of these
            variations as one theme.

            Cornerstone comes with 3 variations: Cornerstone Light, Cornerstone
            Warm, and Cornerstone Bold.


            ### Responsive, Mobile-Friendly Themes


            BigCommerce stores powered by Stencil allow shoppers to have a first
            class experience across any device.



            _Note that this is simply a summary Stencil's core features.
            Continue reading through the Stencil Developer Documentation to
            learn about Stencil's full capabilities._
          header:
            anchor: features-and-stack
        - type: text
          data: '---'
        - type: text
          data: >-
            ## Key Components (Video Demo)


            Watch Stencil senior developer's tour of Stencil's key components:


            <iframe width="560" height="315"
            src="https://www.youtube.com/embed/p5SR8N0SeCg" frameborder="0"
            allowfullscreen></iframe>
          header:
            anchor: video-demo
        - type: text
          data: '---'
        - type: text
          data: >-
            ## Blueprint (Legacy Framework) Documentation


            If you are looking for information on Blueprint, BigCommerce's
            legacy theme framework, you can access that below:


            * [Themes (Blueprint)](https://developer.bigcommerce.com/themes)

            * [Stores API reference](https://developer.bigcommerce.com/api)
          header:
            anchor: blueprint
theme:
  background: '#3550b6'
logo: >-
  https://cdn6.bigcommerce.com/s-qtmbtj/product_images/uploaded_images/bigcommerce-logomark-darkbg.png
