swagger: '2.0'
info:
  version: '1.0'
  title: BigCommerce V2 API
  description: 'TODO: Add a description'
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v2'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/stores/{store_hash}/v2/orders/{id}':
    get:
      description: Gets a single order by order `id`.
      summary: Get an Order
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Order id.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 118
              customer_id: 6
              date_created: 'Mon, 23 Apr 2018 18:04:48 +0000'
              date_modified: 'Mon, 23 Apr 2018 18:04:49 +0000'
              date_shipped: 'Wed, 14 Nov 2012 19:26:23 +0000"'
              status_id: 11
              cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
              status: Awaiting Fulfillment
              subtotal_ex_tax: 225
              subtotal_inc_tax: 225
              subtotal_tax: 0
              base_shipping_cost: 0
              shipping_cost_ex_tax: 0
              shipping_cost_inc_tax: 0
              shipping_cost_tax: 0
              shipping_cost_tax_class_id: 2
              base_handling_cost: 0
              handling_cost_ex_tax: 0
              handling_cost_inc_tax: 0
              handling_cost_tax: 0
              handling_cost_tax_class_id: 2
              base_wrapping_cost: 0
              wrapping_cost_ex_tax: 0
              wrapping_cost_inc_tax: 0
              wrapping_cost_tax: 0
              wrapping_cost_tax_class_id: 3
              total_ex_tax: 225
              total_inc_tax: 225
              total_tax: 0
              items_total: 1
              items_shipped: 0
              payment_method: Cash on Delivery
              payment_provider_id: null
              refunded_amount: 0
              order_is_digital: false
              store_credit_amount: 0
              gift_certificate_amount: 0
              ip_address: 12.345.678.910
              geoip_country: United States
              geoip_country_iso2: US
              currency_id: 1
              currency_code: USD
              currency_exchange_rate: 1
              default_currency_id: 1
              default_currency_code: '``'
              staff_notes: Send Saturday
              customer_message: Thank you
              discount_amount: 0
              coupon_discount: 5
              shipping_address_count: 1
              is_deleted: false
              is_email_opt_in: false
              ebay_order_id: 0
              billing_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
                form_fields:
                  - name: ''
                    value: ''
              order_source: www
              external_source: null
              products:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products
                resource: /orders/129/products
              shipping_addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
                resource: /orders/129/shippingaddresses
              coupons:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons
                resource: /orders/129/coupons
              external_id: null
              external_merchant_id: null
              custom_status: Awaiting Payment
        '404':
          description: '"The requested resource was not found."'
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Updates an order using the order `id`.
      summary: Update an Order
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Order'
          x-examples:
            application/json:
              status_id: 1
              billing_address:
                first_name: Trisha
                last_name: McLaughlin
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Anywhere
                state: Some State
                zip: '12345'
                country: United States
                country_iso2: US
                phone: ''
                email: elsie@example.com
        - name: id
          in: path
          required: true
          type: integer
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 118
              customer_id: 6
              date_created: 'Mon, 23 Apr 2018 18:04:48 +0000'
              date_modified: 'Mon, 23 Apr 2018 18:04:49 +0000'
              date_shipped: 'Wed, 14 Nov 2012 19:26:23 +0000"'
              status_id: 11
              cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
              status: Awaiting Fulfillment
              subtotal_ex_tax: 225
              subtotal_inc_tax: 225
              subtotal_tax: 0
              base_shipping_cost: 0
              shipping_cost_ex_tax: 0
              shipping_cost_inc_tax: 0
              shipping_cost_tax: 0
              shipping_cost_tax_class_id: 2
              base_handling_cost: 0
              handling_cost_ex_tax: 0
              handling_cost_inc_tax: 0
              handling_cost_tax: 0
              handling_cost_tax_class_id: 2
              base_wrapping_cost: 0
              wrapping_cost_ex_tax: 0
              wrapping_cost_inc_tax: 0
              wrapping_cost_tax: 0
              wrapping_cost_tax_class_id: 3
              total_ex_tax: 225
              total_inc_tax: 225
              total_tax: 0
              items_total: 1
              items_shipped: 0
              payment_method: Cash on Delivery
              payment_provider_id: null
              refunded_amount: 0
              order_is_digital: false
              store_credit_amount: 0
              gift_certificate_amount: 0
              ip_address: 12.345.678.910
              geoip_country: United States
              geoip_country_iso2: US
              currency_id: 1
              currency_code: USD
              currency_exchange_rate: 1
              default_currency_id: 1
              default_currency_code: '``'
              staff_notes: Send Saturday
              customer_message: Thank you
              discount_amount: 0
              coupon_discount: 5
              shipping_address_count: 1
              is_deleted: false
              is_email_opt_in: false
              ebay_order_id: 0
              billing_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
                form_fields:
                  - name: ''
                    value: ''
              order_source: www
              external_source: null
              products:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products
                resource: /orders/129/products
              shipping_addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
                resource: /orders/129/shippingaddresses
              coupons:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons
                resource: /orders/129/coupons
              external_id: null
              external_merchant_id: null
              custom_status: Awaiting Payment
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Archives an order by `id`.
      summary: Delete an Order
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The order id
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/orders/count':
    get:
      description: Gets an array of the orders in the store organized by order status.
      summary: Get a Count of Orders
      tags:
        - Orders
      operationId: StoresV2OrdersCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrdersCountResponse'
          examples:
            application/json:
              statuses:
                - id: 0
                  name: Incomplete
                  system_label: Incomplete
                  custom_label: Incomplete - Testing
                  system_description: >-
                    An incomplete order happens when a shopper reached the
                    payment page, but did not complete the transaction.
                  count: 0
                  sort_order: 0
                - id: 1
                  name: Pending
                  system_label: Pending
                  custom_label: Pending
                  system_description: >-
                    Customer started the checkout process, but did not complete
                    it.
                  count: 1
                  sort_order: 1
                - id: 7
                  name: Awaiting Payment
                  system_label: Awaiting Payment
                  custom_label: Awaiting Payment
                  system_description: >-
                    Customer has completed checkout process, but payment has yet
                    to be confirmed.
                  count: 15
                  sort_order: 2
                - id: 11
                  name: Awaiting Fulfillment
                  system_label: Awaiting Fulfillment
                  custom_label: Awaiting Fulfillment
                  system_description: >-
                    Customer has completed the checkout process and payment has
                    been confirmed.
                  count: 6
                  sort_order: 3
                - id: 9
                  name: Awaiting Shipment
                  system_label: Awaiting Shipment
                  custom_label: Awaiting Shipment
                  system_description: >-
                    Order has been pulled and packaged, and is awaiting
                    collection from a shipping provider.
                  count: 0
                  sort_order: 4
                - id: 8
                  name: Awaiting Pickup
                  system_label: Awaiting Pickup
                  custom_label: Awaiting Pickup
                  system_description: >-
                    Order has been pulled, and is awaiting customer pickup from
                    a seller-specified location.
                  count: 0
                  sort_order: 5
                - id: 3
                  name: Partially Shipped
                  system_label: Partially Shipped
                  custom_label: Partially Shipped
                  system_description: >-
                    Only some items in the order have been shipped, due to some
                    products being pre-order only or other reasons.
                  count: 0
                  sort_order: 6
                - id: 10
                  name: Completed
                  system_label: Completed
                  custom_label: Completed - Testing
                  system_description: >-
                    Client has paid for their digital product and their file(s)
                    are available for download.
                  count: 6
                  sort_order: 7
                - id: 2
                  name: Shipped
                  system_label: Shipped
                  custom_label: Shipped
                  system_description: >-
                    Order has been shipped, but receipt has not been confirmed;
                    seller has used the Ship Items action.
                  count: 6
                  sort_order: 8
                - id: 5
                  name: Cancelled
                  system_label: Cancelled
                  custom_label: Cancelled
                  system_description: >-
                    Seller has cancelled an order, due to a stock inconsistency
                    or other reasons.
                  count: 5
                  sort_order: 9
                - id: 6
                  name: Declined
                  system_label: Declined
                  custom_label: Declined
                  system_description: >-
                    Seller has marked the order as declined for lack of manual
                    payment, or other reasons.
                  count: 0
                  sort_order: 10
                - id: 4
                  name: Refunded
                  system_label: Refunded
                  custom_label: Refunded
                  system_description: Seller has used the Refund action.
                  count: 0
                  sort_order: 11
                - id: 13
                  name: Disputed
                  system_label: Disputed
                  custom_label: Disputed
                  system_description: >-
                    Customer has initiated a dispute resolution process for the
                    PayPal transaction that paid for the order.
                  count: 0
                  sort_order: 12
                - id: 12
                  name: Manual Verification Required
                  system_label: Manual Verification Required
                  custom_label: Manual Verification Required
                  system_description: >-
                    Order on hold while some aspect needs to be manually
                    confirmed.
                  count: 0
                  sort_order: 13
                - id: 14
                  name: Partially Refunded
                  system_label: Partially Refunded
                  custom_label: Partially Refunded
                  system_description: Seller has partially refunded the order.
                  count: 0
                  sort_order: 14
              count: 39
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/orders':
    get:
      description: Gets a list of orders using the filter query
      summary: List Orders
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: min_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The minimum order id
        - name: max_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The maximum order id
        - name: min_total
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The minimum order total in float format. eg. 12.50
        - name: max_total
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The maximum order total in float format. eg. 12.50
        - name: customer_id
          in: query
          required: false
          type: integer
          description: The id of the customer
        - name: email
          in: query
          required: false
          type: string
          description: The email of the customer
        - name: status_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: >-
            The staus id of the order. You can get the status id from the
            `/orders` endpoints
        - name: cart_id
          in: query
          required: false
          type: string
          description: The cart id of the order
        - name: is_deleted
          in: query
          required: false
          type: boolean
          description: If the order was deleted or not
        - name: payment_method
          in: query
          required: false
          type: string
          description: The payment method used on the order
        - name: min_date_created
          in: query
          required: false
          type: string
          description: The minimum date the order was created in dateTime or date
          format: date-time
        - name: max_date_created
          in: query
          required: false
          type: string
          description: The maximum date the order was created in dateTime or date
          format: date-time
        - name: min_date_modified
          in: query
          required: false
          type: string
          description: The minimum date the order was changed in dateTime or date
          format: date-time
        - name: max_date_modified
          in: query
          required: false
          type: string
          description: The maximum date the order was changed in dateTime or date
          format: date
        - name: pagination
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The number of pages to return
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Limit the number of hits returned
        - name: sort
          in: query
          required: false
          type: string
          description: 'Sort the results. eg. `date_created:desc`'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
          examples:
            application/json:
              - id: 118
                customer_id: 6
                date_created: 'Mon, 23 Apr 2018 18:04:48 +0000'
                date_modified: 'Mon, 23 Apr 2018 18:04:49 +0000'
                date_shipped: 'Wed, 14 Nov 2012 19:26:23 +0000"'
                status_id: 11
                cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
                status: Awaiting Fulfillment
                subtotal_ex_tax: 225
                subtotal_inc_tax: 225
                subtotal_tax: 0
                base_shipping_cost: 0
                shipping_cost_ex_tax: 0
                shipping_cost_inc_tax: 0
                shipping_cost_tax: 0
                shipping_cost_tax_class_id: 2
                base_handling_cost: 0
                handling_cost_ex_tax: 0
                handling_cost_inc_tax: 0
                handling_cost_tax: 0
                handling_cost_tax_class_id: 2
                base_wrapping_cost: 0
                wrapping_cost_ex_tax: 0
                wrapping_cost_inc_tax: 0
                wrapping_cost_tax: 0
                wrapping_cost_tax_class_id: 3
                total_ex_tax: 225
                total_inc_tax: 225
                total_tax: 0
                items_total: 1
                items_shipped: 0
                payment_method: Cash on Delivery
                payment_provider_id: null
                refunded_amount: 0
                order_is_digital: false
                store_credit_amount: 0
                gift_certificate_amount: 0
                ip_address: 12.345.678.910
                geoip_country: United States
                geoip_country_iso2: US
                currency_id: 1
                currency_code: USD
                currency_exchange_rate: 1
                default_currency_id: 1
                default_currency_code: '``'
                staff_notes: Send Saturday
                customer_message: Thank you
                discount_amount: 0
                coupon_discount: 5
                shipping_address_count: 1
                is_deleted: false
                is_email_opt_in: false
                ebay_order_id: 0
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 123 Main Street
                  street_2: ''
                  city: Austin
                  state: TX
                  zip: 12345
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: janedoe@email.com
                  form_fields:
                    - name: ''
                      value: ''
                order_source: www
                external_source: null
                products:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products
                  resource: /orders/129/products
                shipping_addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
                  resource: /orders/129/shippingaddresses
                coupons:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons
                  resource: /orders/129/coupons
                external_id: null
                external_merchant_id: null
                custom_status: Awaiting Payment
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create an Order
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Order'
          x-examples:
            application/json:
              customer_id: 0
              status_id: 11
              date_created: 'Thu, 04 Oct 2012 03:24:40 +0000'
              subtotal_ex_tax: 1705
              subtotal_inc_tax: 1915
              base_shipping_cost: 0
              shipping_cost_ex_tax: 0
              shipping_cost_inc_tax: 0
              base_handling_cost: 0
              handling_cost_ex_tax: 0
              handling_cost_inc_tax: 0
              base_wrapping_cost: 0
              wrapping_cost_ex_tax: 0
              wrapping_cost_inc_tax: 0
              total_ex_tax: 1705
              total_inc_tax: 1915
              refunded_amount: 0
              order_is_digital: false
              staff_notes: ''
              customer_message: ''
              discount_amount: 10
              billing_address:
                first_name: Trisha
                last_name: McLaughlin
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Anywhere
                state: Some State
                zip: '12345'
                country: United States
                country_iso2: US
                phone: ''
                email: elsie@example.com
              shipping_addresses:
                - first_name: Trisha
                  last_name: McLaughlin
                  company: Acme Pty Ltd
                  street_1: 566 Sussex St
                  street_2: ''
                  city: Anywhere
                  state: Some State
                  zip: '12345'
                  country: United States
                  country_iso2: US
                  phone: ''
                  email: elsie@example.com
              products:
                - product_id: 32
                  quantity: 2
                - product_id: 33
                  quantity: 2
                  product_options:
                    - id: 87
                      value: 10
                - name: My custom product
                  quantity: 2
                  price_inc_tax: 10.8
                  price_ex_tax: 10
              external_source: POS
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 118
              customer_id: 6
              date_created: 'Mon, 23 Apr 2018 18:04:48 +0000'
              date_modified: 'Mon, 23 Apr 2018 18:04:49 +0000'
              date_shipped: 'Wed, 14 Nov 2012 19:26:23 +0000"'
              status_id: 11
              cart_id: a8458391-ef68-4fe5-9ec1-442e6a767364
              status: Awaiting Fulfillment
              subtotal_ex_tax: 225
              subtotal_inc_tax: 225
              subtotal_tax: 0
              base_shipping_cost: 0
              shipping_cost_ex_tax: 0
              shipping_cost_inc_tax: 0
              shipping_cost_tax: 0
              shipping_cost_tax_class_id: 2
              base_handling_cost: 0
              handling_cost_ex_tax: 0
              handling_cost_inc_tax: 0
              handling_cost_tax: 0
              handling_cost_tax_class_id: 2
              base_wrapping_cost: 0
              wrapping_cost_ex_tax: 0
              wrapping_cost_inc_tax: 0
              wrapping_cost_tax: 0
              wrapping_cost_tax_class_id: 3
              total_ex_tax: 225
              total_inc_tax: 225
              total_tax: 0
              items_total: 1
              items_shipped: 0
              payment_method: Cash on Delivery
              payment_provider_id: null
              refunded_amount: 0
              order_is_digital: false
              store_credit_amount: 0
              gift_certificate_amount: 0
              ip_address: 12.345.678.910
              geoip_country: United States
              geoip_country_iso2: US
              currency_id: 1
              currency_code: USD
              currency_exchange_rate: 1
              default_currency_id: 1
              default_currency_code: '``'
              staff_notes: Send Saturday
              customer_message: Thank you
              discount_amount: 0
              coupon_discount: 5
              shipping_address_count: 1
              is_deleted: false
              is_email_opt_in: false
              ebay_order_id: 0
              billing_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
                form_fields:
                  - name: ''
                    value: ''
              order_source: www
              external_source: null
              products:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products
                resource: /orders/129/products
              shipping_addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
                resource: /orders/129/shippingaddresses
              coupons:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons
                resource: /orders/129/coupons
              external_id: null
              external_merchant_id: null
              custom_status: Awaiting Payment
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Archives all orders.
      summary: Delete all Orders
      tags:
        - Orders
      operationId: StoresV2OrdersByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/orders/{order_id}/coupons':
    get:
      description: Lists all order coupons. Optional parameters can be passed in.
      summary: List Order Coupons
      operationId: StoresV2OrdersCouponsByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The order id
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages to return
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Limit the number of responses
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderCoupons'
          examples:
            application/json:
              - id: 3
                coupon_id: 1
                order_id: 120
                code: S2549JM0Y
                amount: 5
                type: 2
                discount: 5
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Coupons
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/products':
    get:
      description: Lists all order products on an order using `order_id`.
      summary: List Order Products
      operationId: StoresV2OrdersProductsByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL.
        - name: order_id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderProducts'
          examples:
            application/json:
              - id: 65
                order_id: 149
                product_id: 77
                order_address_id: 51
                name: Fog Linen Chambray Towel - Beige Stripe
                sku: S-ORAN
                type: physical
                base_price: '55.9900'
                price_ex_tax: '55.9900'
                price_inc_tax: '65.2300'
                price_tax: '9.2400'
                base_total: '55.9900'
                total_ex_tax: '55.9900'
                total_inc_tax: '65.2300'
                total_tax: '9.2400'
                weight: '1.0000'
                quantity: 1
                base_cost_price: '0.0000'
                cost_price_inc_tax: '0.0000'
                cost_price_ex_tax: '0.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: ''
                fixed_shipping_cost: '5.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: 19
                parent_order_product_id: null
                is_bundled_product: false
                bin_picking_number: ''
                external_id: null
                fulfillment_source: ''
                applied_discounts: []
                product_options:
                  - id: 45
                    option_id: 18
                    order_product_id: 65
                    product_option_id: 120
                    display_name: Size
                    display_value: S
                    value: '69'
                    type: Multiple choice
                    name: Apparel sizes
                    display_style: Rectangle
                  - id: 46
                    option_id: 3
                    order_product_id: 65
                    product_option_id: 121
                    display_name: Color
                    display_value: Orange
                    value: '112'
                    type: Swatch
                    name: Colors
                    display_style: ''
                  - id: 47
                    option_id: 37
                    order_product_id: 65
                    product_option_id: 122
                    display_name: Add Letters
                    display_value: Text Field
                    value: Text Field
                    type: Text field
                    name: Add Letters
                    display_style: ''
                  - id: 48
                    option_id: 38
                    order_product_id: 65
                    product_option_id: 123
                    display_name: Is this a gift?
                    display_value: 'Yes'
                    value: '104'
                    type: Checkbox
                    name: Gift Wrapping $5
                    display_style: ''
                  - id: 49
                    option_id: 39
                    order_product_id: 65
                    product_option_id: 124
                    display_name: PickList
                    display_value: Able Brewing System
                    value: '106'
                    type: Product Pick List
                    name: PickList
                    display_style: Pick list
                configurable_fields: []
              - id: 66
                order_id: 149
                product_id: 86
                order_address_id: 51
                name: Able Brewing System
                sku: ABS
                type: physical
                base_price: '0.0000'
                price_ex_tax: '0.0000'
                price_inc_tax: '0.0000'
                price_tax: '0.0000'
                base_total: '0.0000'
                total_ex_tax: '0.0000'
                total_inc_tax: '0.0000'
                total_tax: '0.0000'
                weight: '0.0000'
                quantity: 1
                base_cost_price: '0.0000'
                cost_price_inc_tax: '0.0000'
                cost_price_ex_tax: '0.0000'
                cost_price_tax: '0.0000'
                is_refunded: false
                quantity_refunded: 0
                refund_amount: '0.0000'
                return_id: 0
                wrapping_name: ''
                base_wrapping_cost: '0.0000'
                wrapping_cost_ex_tax: '0.0000'
                wrapping_cost_inc_tax: '0.0000'
                wrapping_cost_tax: '0.0000'
                wrapping_message: ''
                quantity_shipped: 0
                event_name: null
                event_date: ''
                fixed_shipping_cost: '0.0000'
                ebay_item_id: ''
                ebay_transaction_id: ''
                option_set_id: null
                parent_order_product_id: 65
                is_bundled_product: true
                bin_picking_number: BIN
                external_id: null
                fulfillment_source: ''
                applied_discounts: []
                product_options: []
                configurable_fields: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Products
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses':
    get:
      description: Get all shipping address on an order using the `order_id`.
      summary: Get A List of Order Shipping Address
      operationId: StoresV2OrdersShippingAddressesByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderShippingAddress'
          examples:
            application/json:
              - id: 39
                order_id: 138
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                zip: '78751'
                country: United States
                country_iso2: US
                state: Texas
                email: ''
                phone: '1234567890'
                items_total: 1
                items_shipped: 0
                shipping_method: Free Shipping
                base_cost: '0.0000'
                cost_ex_tax: '0.0000'
                cost_inc_tax: '0.0000'
                cost_tax: '0.0000'
                cost_tax_class_id: 2
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 2
                shipping_zone_id: 1
                shipping_zone_name: United States
                form_fields:
                  - name: License
                    value: ''
              - id: 40
                order_id: 138
                first_name: John
                last_name: Doe
                company: ''
                street_1: 178 South Street
                street_2: ''
                city: Austin
                zip: '78751'
                country: United States
                country_iso2: US
                state: Texas
                email: ''
                phone: '1234567890'
                items_total: 1
                items_shipped: 0
                shipping_method: Free Shipping
                base_cost: '0.0000'
                cost_ex_tax: '0.0000'
                cost_inc_tax: '0.0000'
                cost_tax: '0.0000'
                cost_tax_class_id: 2
                base_handling_cost: '0.0000'
                handling_cost_ex_tax: '0.0000'
                handling_cost_inc_tax: '0.0000'
                handling_cost_tax: '0.0000'
                handling_cost_tax_class_id: 2
                shipping_zone_id: 1
                shipping_zone_name: United States
                form_fields:
                  - name: License
                    value: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipping Addresses
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/shipping_addresses/count':
    get:
      description: Returns a count of all order shipping addresses using the `order_id`.
      summary: Get a Count of All Order Shipping Addresses
      operationId: StoresV2OrdersShippingAddressesCountByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipping Addresses
        - Orders
  '/stores/{store_hash}/v2/order_statuses':
    get:
      description: Gets a list of order statues.
      summary: Get All Order Statuses
      operationId: StoresV2OrderStatusesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderStatuses'
          examples:
            application/json:
              - id: 0
                name: Incomplete
                system_label: Incomplete
                custom_label: Incomplete - Testing
                system_description: >-
                  An incomplete order happens when a shopper reached the payment
                  page, but did not complete the transaction.
                order: 0
              - id: 1
                name: Pending
                system_label: Pending
                custom_label: Pending
                system_description: >-
                  Customer started the checkout process, but did not complete
                  it.
                order: 1
              - id: 2
                name: Shipped
                system_label: Shipped
                custom_label: Shipped
                system_description: >-
                  Order has been shipped, but receipt has not been confirmed;
                  seller has used the Ship Items action.
                order: 8
              - id: 3
                name: Partially Shipped
                system_label: Partially Shipped
                custom_label: Partially Shipped
                system_description: >-
                  Only some items in the order have been shipped, due to some
                  products being pre-order only or other reasons.
                order: 6
              - id: 4
                name: Refunded
                system_label: Refunded
                custom_label: Refunded
                system_description: Seller has used the Refund action.
                order: 11
              - id: 5
                name: Cancelled
                system_label: Cancelled
                custom_label: Cancelled
                system_description: >-
                  Seller has cancelled an order, due to a stock inconsistency or
                  other reasons.
                order: 9
              - id: 6
                name: Declined
                system_label: Declined
                custom_label: Declined
                system_description: >-
                  Seller has marked the order as declined for lack of manual
                  payment, or other reasons.
                order: 10
              - id: 7
                name: Awaiting Payment
                system_label: Awaiting Payment
                custom_label: Awaiting Payment
                system_description: >-
                  Customer has completed checkout process, but payment has yet
                  to be confirmed.
                order: 2
              - id: 8
                name: Awaiting Pickup
                system_label: Awaiting Pickup
                custom_label: Awaiting Pickup
                system_description: >-
                  Order has been pulled, and is awaiting customer pickup from a
                  seller-specified location.
                order: 5
              - id: 9
                name: Awaiting Shipment
                system_label: Awaiting Shipment
                custom_label: Awaiting Shipment
                system_description: >-
                  Order has been pulled and packaged, and is awaiting collection
                  from a shipping provider.
                order: 4
              - id: 10
                name: Completed
                system_label: Completed
                custom_label: Completed - Testing
                system_description: >-
                  Client has paid for their digital product and their file(s)
                  are available for download.
                order: 7
              - id: 11
                name: Awaiting Fulfillment
                system_label: Awaiting Fulfillment
                custom_label: Awaiting Fulfillment
                system_description: >-
                  Customer has completed the checkout process and payment has
                  been confirmed.
                order: 3
              - id: 12
                name: Manual Verification Required
                system_label: Manual Verification Required
                custom_label: Manual Verification Required
                system_description: >-
                  Order on hold while some aspect needs to be manually
                  confirmed.
                order: 13
              - id: 13
                name: Disputed
                system_label: Disputed
                custom_label: Disputed
                system_description: >-
                  Customer has initiated a dispute resolution process for the
                  PayPal transaction that paid for the order.
                order: 12
              - id: 14
                name: Partially Refunded
                system_label: Partially Refunded
                custom_label: Partially Refunded
                system_description: Seller has partially refunded the order.
                order: 14
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Statues
        - Orders
  '/stores/{store_hash}/v2/order_statuses/{id}':
    get:
      description: Gets a single order status.
      summary: Get a Single Order Status by Id
      operationId: StoresV2OrderStatusesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order status
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              system_label:
                type: string
              custom_label:
                type: string
              system_description:
                type: string
              order:
                type: integer
          examples:
            application/json:
              id: 1
              name: Pending
              system_label: Pending
              system_description: Pending
              custom_label: Pending
              order: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Statues
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/taxes':
    get:
      description: Gets all order taxes using `order_id`.
      summary: Get All Order Taxes
      operationId: StoresV2OrdersTaxesByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderTaxes'
          examples:
            application/json:
              - id: 13
                order_id: 138
                order_address_id: 39
                tax_rate_id: 1
                tax_class_id: 0
                name: Tax
                class: Default Tax Class
                rate: '8.0000'
                priority: 0
                priority_amount: '17.6400'
                line_amount: '17.6400'
              - id: 14
                order_id: 138
                order_address_id: 40
                tax_rate_id: 1
                tax_class_id: 0
                name: Tax
                class: Default Tax Class
                rate: '8.0000'
                priority: 0
                priority_amount: '4.4000'
                line_amount: '4.4000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Taxes
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/shipments':
    get:
      description: Gets a list of all shipments on an order
      summary: Get A List of Order Shipments
      operationId: StoresV2OrdersShipmentsByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderShipment'
          examples:
            application/json:
              - id: 2
                order_id: 143
                customer_id: 6
                order_address_id: 45
                date_created: 'Tue, 14 Aug 2018 13:59:39 +0000'
                tracking_number: '123445656746576787568'
                shipping_method: Free Shipping
                comments: Packing Slip Notes
                shipping_provider: ''
                tracking_carrier: ''
                billing_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 123 Main Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78726'
                  country: United States
                  country_iso2: US
                  phone: '5122134567'
                  email: janedoe@email.com
                shipping_address:
                  first_name: Jane
                  last_name: Doe
                  company: ''
                  street_1: 123 Main Street
                  street_2: ''
                  city: Austin
                  state: Texas
                  zip: '78726'
                  country: United States
                  country_iso2: US
                  phone: '1234567890'
                  email: ''
                items:
                  - order_product_id: 57
                    product_id: 86
                    quantity: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
    post:
      description: Creates a new shipment for an order.
      summary: Create A New Order Shipment
      operationId: StoresV2OrdersShipmentsByStoreHashAndOrderIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/OrderShipment'
          x-examples:
            application/json:
              tracking_number: EJ958083578US
              comments: Ready to go...
              order_address_id: 1
              shipping_provider: ''
              items:
                - order_product_id: 15
                  quantity: 2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderShipment'
          examples:
            application/json:
              id: 1
              order_id: 120
              customer_id: 5
              order_address_id: 20
              date_created: 'Tue, 12 Jun 2018 14:12:26 +0000'
              tracking_number: w4se4b6ASFEW4T
              shipping_method: Ship by Weight
              shipping_provider: usps
              tracking_carrier: auspost
              comments: ''
              billing_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
              shipping_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
              items:
                - order_product_id: 25
                  product_id: 77
                  quantity: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
    delete:
      description: Deletes all shipments associated with an order.
      summary: Delete All Order Shipments
      operationId: StoresV2OrdersShipmentsByStoreHashAndOrderIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/shipments/count':
    get:
      description: >-
        Gets a count of the number of shipments that have been made for a single
        order.
      summary: Get A Count of Shipments Per Order
      operationId: StoresV2OrdersShipmentsCountByStoreHashAndOrderIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
  '/stores/{store_hash}/v2/orders/{order_id}/shipments/{id}':
    put:
      description: Updates an existing shipment associated with an order.
      summary: Update A Shipment
      operationId: StoresV2OrdersShipmentsIdByStoreHashAndOrderIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the shipment
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/OrderShipment'
          x-examples:
            application/json:
              tracking_number: EJ958083578US
              order_address_id: 1
              shipping_provider: ''
              items:
                - order_product_id: 15
                  quantity: 2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderShipment'
          examples:
            application/json:
              id: 1
              order_id: 120
              customer_id: 5
              order_address_id: 20
              date_created: 'Tue, 12 Jun 2018 14:12:26 +0000'
              tracking_number: w4se4b6ASFEW4T
              shipping_method: Ship by Weight
              shipping_provider: usps
              tracking_carrier: auspost
              comments: ''
              billing_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
              shipping_address:
                first_name: Jane
                last_name: Doe
                company: ''
                street_1: 123 Main Street
                street_2: ''
                city: Austin
                state: TX
                zip: 12345
                country: United States
                country_iso2: US
                phone: ''
                email: janedoe@email.com
              items:
                - order_product_id: 25
                  product_id: 77
                  quantity: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
    delete:
      description: Deletes a shipment associated with an order.
      summary: Delete A Order Shipment
      operationId: StoresV2OrdersShipmentsIdByStoreHashAndOrderIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: order_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the order
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the shipment
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Order Shipments
        - Orders
  '/stores/{store_hash}/v2/blog/tags':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: object
              properties:
                tag:
                  type: string
                post_ids:
                  type: array
                  items:
                    type: integer
          examples:
            application/json:
              - tag: Blog
                post_ids:
                  - 1
              - tag: cupcakes
                post_ids:
                  - 2
              - tag: everything
                post_ids:
                  - 3
              - tag: nice
                post_ids:
                  - 3
              - tag: Seo
                post_ids:
                  - 1
              - tag: spice
                post_ids:
                  - 3
              - tag: sugar
                post_ids:
                  - 2
                  - 3
              - tag: sweet
                post_ids:
                  - 2
                  - 3
      parameters:
        - in: header
          name: Accept
          type: string
          required: true
          default: application/json
        - in: header
          name: Content-Type
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: path
          name: store_hash
          type: string
          required: true
      produces:
        - application/json
      summary: Get All Blog Tags
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts':
    get:
      description: >-
        Gets the collection of blog posts. (Default sorting is by
        published_date, from most-recently published posts to earliest published
        posts.)
      summary: Get All Blog Posts
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: is_published
          in: query
          required: false
          type: string
          description: Filter param.
        - name: url
          in: query
          required: false
          type: string
          description: Filter param.
        - name: tag
          in: query
          required: false
          type: string
          description: Filter param.
        - name: published_date
          in: query
          required: false
          type: string
          description: Filter param.
          format: date-time
        - name: page
          in: query
          required: false
          type: number
          exclusiveMinimum: false
          description: Filter param.
          maximum: 50
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 250
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              - id: 3
                title: Hello Again
                url: /blog/hello-again/
                preview_url: /blog/hello-again/
                body: >-
                  <p>Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar chocolate bar
                  tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                  cupcake sweet roll candy marshmallow caramels cotton candy pie
                  icing. Powder jelly beans chupa chups lollipop liquorice
                  marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                  gummies cheesecake ice cream caramels sesame snaps cotton
                  candy gingerbread. Chocolate cake fruitcake tart bear claw
                  lemon drops tart dragée tart apple pie. Halvah chupa chups
                  soufflé jelly soufflé marshmallow. Croissant tart tart.
                  Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                  pastry brownie chocolate bar jelly. Dragée muffin cupcake
                  liquorice caramels marzipan gingerbread marzipan. Apple pie
                  pudding jelly sweet roll croissant bonbon wafer. Cookie
                  chocolate bar sesame snaps bonbon macaroon candy canes donut
                  sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                  gummies donut sweet. Marzipan bear claw cotton candy topping
                  dragée bonbon danish powder.</p>
                tags:
                  - sugar
                  - sweet
                  - spice
                  - everything
                  - nice
                summary: >-
                  Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar [...]
                is_published: true
                published_date:
                  date: '2018-05-18 08:26:42.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:42+0000'
                meta_description: Cupcakes post 2
                meta_keywords: 'sugar,sweet,spice,everything,nice'
                author: ''
                thumbnail_path: ''
              - id: 2
                title: Hello
                url: /blog/hello/
                preview_url: /blog/hello/
                body: >-
                  <p>Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar chocolate bar
                  tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                  cupcake sweet roll candy marshmallow caramels cotton candy pie
                  icing. Powder jelly beans chupa chups lollipop liquorice
                  marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                  gummies cheesecake ice cream caramels sesame snaps cotton
                  candy gingerbread. Chocolate cake fruitcake tart bear claw
                  lemon drops tart dragée tart apple pie. Halvah chupa chups
                  soufflé jelly soufflé marshmallow. Croissant tart tart.
                  Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                  pastry brownie chocolate bar jelly. Dragée muffin cupcake
                  liquorice caramels marzipan gingerbread marzipan. Apple pie
                  pudding jelly sweet roll croissant bonbon wafer. Cookie
                  chocolate bar sesame snaps bonbon macaroon candy canes donut
                  sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                  gummies donut sweet. Marzipan bear claw cotton candy topping
                  dragée bonbon danish powder.</p>
                tags:
                  - cupcakes
                  - sugar
                  - sweet
                summary: >-
                  Jelly beans muffin marzipan gingerbread donut dessert.
                  Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                  sesame snaps jelly beans brownie chocolate tart. Marshmallow
                  jujubes candy pie. Gummies lemon drops tart soufflé pastry
                  pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                  wafer bear claw marzipan jelly-o. Dessert bear claw topping
                  icing croissant. Pie bonbon chocolate bar [...]
                is_published: true
                published_date:
                  date: '2018-05-18 08:26:00.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2018-05-18T13:26:00+0000'
                meta_description: cupcake blog post
                meta_keywords: 'cupcakes,sugar,sweet'
                author: ''
                thumbnail_path: ''
              - id: 1
                title: Your first blog post!
                url: /your-first-blog-post/
                preview_url: /your-first-blog-post/
                body: >-
                  <p> <strong>Welcome to your blog!</strong><br> A blog is a
                  great place to share details on your products, business and
                  whatever else you think your shoppers might like to hear from
                  you. You can include photos in your blog posts and even
                  videos. For ideas and inspiration on how to structure your
                  blog, take a look at the Bigcommerce <a
                  href='http://blog.bigcommerce.com/' target='_blank'
                  rel='nofollow'>ecommerce blog</a>.</p><p><strong>How can I
                  delete this post?</strong><br>To delete this post and add your
                  own, login to your <a href='/admin' target='_blank'>admin
                  area</a> and go to Storefront > Blog in the left hand
                  menu.</p><p><strong>Powered by Bigcommerce</strong><br>Your
                  website, online store and blog are powered by Bigcommerce <a
                  href='http://www.bigcommerce.com/' target='_blank'
                  rel='nofollow'>ecommerce software</a>. It includes everything
                  you need to run a beautiful online store including <a
                  href='http://www.bigcommerce.com/templates/' target='_blank'
                  rel='nofollow'>ecommerce website templates</a>, <a
                  href='http://www.bigcommerce.com/features/hosting/'
                  target='_blank' rel='nofollow'>ecommerce hosting</a>, an <a
                  href='http://www.bigcommerce.com/features/setup/'
                  target='_blank' rel='nofollow'>online shopping cart</a> and
                  more.</p>
                tags:
                  - Blog
                  - SEO
                summary: ' Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]'
                is_published: true
                published_date:
                  date: '2014-02-15 14:46:34.000000'
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: '2014-02-15T19:46:34+0000'
                meta_description: ''
                meta_keywords: 'Blog,SEO'
                author: ''
                thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      consumes:
        - application/json
      tags:
        - Blog Posts
        - Store Content
    post:
      description: Creates a new blog post.
      summary: Create A Blog Post
      operationId: StoresV2BlogPostsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          x-examples:
            application/json:
              title: A Sample Blog Post
              body: <p>This is a blog post.</p>
              author: Author Name
              thumbnail_path: 'http://cdn.example.com/sample-post.jpg'
              is_published: true
              tags:
                - Blog
                - Example
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
    delete:
      description: Deletes all blog posts on the store.
      summary: Delete All Blog Posts
      operationId: StoresV2BlogPostsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 250
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
          maximum: 50
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      consumes:
        - application/json
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts/{id}':
    get:
      description: Gets a blog post.
      summary: Get A Single Blog Post
      tags:
        - Blog Posts
        - Store Content
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Updates an existing blog post.
      summary: Update A Blog Post
      tags:
        - Blog Posts
        - Store Content
      operationId: StoresV2BlogPostsByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          x-examples:
            application/json:
              title: 'New: A Sample Blog Post'
              url: /blog/sample-post
              published_date: 'Wed, 01 Jan 2017 15:33:33 +0400'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BlogPosts'
          examples:
            application/json:
              id: 3
              title: Welcome to BigCommerce
              url: /blog/welcome-bigcommerce/
              preview_url: /blog/welcome-bigcommerce/
              body: >-
                <p>Customize your site, manage shipping and payments, and list
                your products on Amazon, eBay, and Facebook with the #1
                ecommerce platform. </p>
              tags:
                - BigCommerce
                - welcome
                - ecommerce
              summary: >-
                <p>We power ecommerce websites for successful retailers all over
                the world</p>
              is_published: true
              published_date:
                date: '2018-05-18T08:26:42.000Z'
                timezone_type: 1
                timezone: '+00:00'
              published_date_iso8601: '2018-05-18T13:26:42.000Z'
              meta_description: Welcome Post
              meta_keywords: 'BigCommerce, welcome, ecommerce'
              author: BigCommerce
              thumbnail_path: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a single blog post.
      summary: Delete A Blog Post
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the blog post.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/blog/posts/count':
    get:
      description: Gets a count of all blog posts in a store.
      summary: Get A Count of All Blog Posts
      operationId: StoresV2BlogPostsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Blog Posts
        - Store Content
  '/stores/{store_hash}/v2/pages':
    get:
      description: >-
        Gets the collection of pages. (Default sorting is by auto-generated ID.
        This usually generates an order of oldest-to-newest)
      summary: Get All Pages
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Page'
          examples:
            application/json:
              - id: 1
                name: RSS Syndication
                meta_title: ''
                body: '%%Syndicate%%'
                is_visible: true
                parent_id: 0
                sort_order: 5
                meta_keywords: '0'
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: ''
                is_customers_only: false
                search_keywords: '0'
                has_mobile_version: false
                mobile_body: '0'
                url: /rss-syndication/
              - id: 2
                name: Shipping & Returns
                meta_title: ''
                body: >-
                  <em>To edit this page simply login to the control panel, click
                  the <strong style="font-weight: 400">Website Content</strong>
                  tab and choose the </em> <strong style="font-weight:
                  400"><em>View Web Pages option. Click Edit next to the
                  Shipping & Returns page and you can change this text. A sample
                  returns policy is shown below which you can edit as
                  needed.</em><em style="font-style:
                  normal"><br/><br/></em></strong><em style="font-style:
                  normal"><strong>Returns Policy</strong></em><strong
                  style="font-weight: 400"></em></em><em style="font-style:
                  normal"><br/><br/></em>You may return most new, unopened items
                  within 30 days of delivery for a full refund. We'll also pay
                  the return shipping costs if the return is a result of our
                  error (you received an incorrect or defective item,
                  etc.).<br/><br/>You should expect to receive your refund
                  within four weeks of giving your package to the return
                  shipper, however, in many cases you will receive a refund more
                  quickly. This time period includes the transit time for us to
                  receive your return from the shipper (5 to 10 business days),
                  the time it takes us to process your return once we receive it
                  (3 to 5 business days), and the time it takes your bank to
                  process our refund request (5 to 10 business
                  days).<br/><br/>If you need to return an item, please <a
                  href="/contact-us/">Contact Us</a> with your order number and
                  details about the product you would like to return. We will
                  respond quickly with instructions for how to return items from
                  your
                  order.<br/><br/></strong><strong>Shipping</em></em></em></strong><strong
                  style="font-weight: 400"><em style="font-style:
                  normal"><br/><br/></em>We can ship to virtually any address in
                  the world. Note that there are restrictions on some products,
                  and some products cannot be shipped to international
                  destinations.<br/><br/>When you place an order, we will
                  estimate shipping and delivery dates for you based on the
                  availability of your items and the shipping options you
                  choose. Depending on the shipping provider you choose,
                  shipping date estimates may appear on the shipping quotes
                  page.<br/><br/>Please also note that the shipping rates for
                  many items we sell are weight-based. The weight of any such
                  item can be found on its detail page. To reflect the policies
                  of the shipping companies we use, all weights will be rounded
                  up to the next full pound.<br/>
                is_visible: true
                parent_id: 0
                sort_order: 2
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                mobile_body: ''
                url: /shipping-returns/
              - id: 3
                name: Blog
                is_visible: true
                parent_id: 0
                sort_order: 4
                type: blog_index
                is_homepage: false
                is_customers_only: false
              - id: 4
                name: Contact Us
                meta_title: ''
                email: ''
                body: >-
                  <p>We're happy to answer questions or help you with
                  returns.<br />Please fill out the form below if you need
                  assistance.</p>
                is_visible: true
                parent_id: 0
                sort_order: 3
                meta_keywords: ''
                type: contact_form
                contact_fields: 'fullname,companyname,phone,orderno,rma'
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                mobile_body: '0'
                url: /contact-us/
              - id: 5
                name: Test Page
                meta_title: ''
                body: "<p>Redirect webpage</p>\r\n<p>&nbsp;</p>\r\n<p><img class=\"__mce_add_custom__\" title=\"screen-shot-2018-06-11-at-8.38.00-am.png\" src=\"%%GLOBAL_ShopPathSSL%%/product_images/uploaded_images/screen-shot-2018-06-11-at-8.38.00-am.png\" alt=\"screen-shot-2018-06-11-at-8.38.00-am.png\" width=\"1026\" height=\"586\" /></p>"
                is_visible: true
                parent_id: 0
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /test-page/
              - id: 6
                name: Child Pages
                meta_title: ''
                body: ''
                is_visible: true
                parent_id: 5
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /child-pages/
              - id: 7
                name: Footer only page
                meta_title: ''
                body: <p>Testing</p>
                is_visible: true
                parent_id: 0
                sort_order: 0
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: true
                mobile_body: ''
                url: /footer-only-page/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Creates a new page.
      summary: Create A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Page'
          x-examples:
            application/json:
              id: 12
              name: 404 Page for Cats
              body: >-
                <html><head><title>Hairball! Not
                Found</title></head><body>Sorry! You can not haz
                cheeseburger.</body></html>
              is_visible: true
              parent_id: 0
              sort_order: 12
              type: raw
              is_homepage: false
              is_customers_only: false
              search_keywords: 'dead, missing, broken'
              has_mobile_version: false
              mobile_body: ''
              url: /404-meow/
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Page'
          examples:
            application/json:
              - id: 6
                parent_id: 5
                type: page
                contact_fields: 'fullname,companyname,phone,orderno,rma'
                email: janedoes@email.com
                name: Contact Form
                url: /contact-us/
                meta_description: ''
                body: >-
                  <p>We're happy to answer questions or help you with
                  returns.<br />Please fill out the form below if you need
                  assistance.</p>
                mobile_body: 0
                has_mobile_version: false
                is_visible: true
                is_homepage: false
                layout_file: page.html
                sort_order: 3
                meta_title: ''
                search_keywords: ''
                meta_keywords: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/pages/{id}':
    get:
      description: Gets a single page.
      summary: Get A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the page.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Page'
          examples:
            application/json:
              id: 1
              name: RSS Syndication
              meta_title: ''
              body: '%%Syndicate%%'
              is_visible: true
              parent_id: 0
              sort_order: 5
              meta_keywords: '0'
              type: page
              meta_description: ''
              is_homepage: false
              layout_file: ''
              is_customers_only: false
              search_keywords: '0'
              has_mobile_version: false
              mobile_body: '0'
              url: /rss-syndication/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a single page.
      summary: Delete A Page
      tags:
        - Pages
        - Store Content
      operationId: StoresV2PagesByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the page.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects':
    get:
      description: Gets all redirect urls.
      summary: Get A List of Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
        - name: limit
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Filter param.
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Redirect'
          examples:
            application/json:
              - id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: '111'
                url: >-
                  http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Creates a new URL redirect.
      summary: Create A Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          x-examples:
            application/json:
              path: /mens_clothing
              forward:
                type: category
                ref: 3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          examples:
            application/json:
              id: 3
              path: /mens_clothing
              forward:
                type: category
                ref: 3
              url: 'http://store.example.com/mens'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete all URL redirects in a store.
      summary: Delete All Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects/{id}':
    get:
      description: Gets a single url.
      summary: Get A Single Redirect URL
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema: {}
          examples:
            application/json:
              id: 1
              path: /smith-journal-13/
              forward:
                type: product
                ref: 111
              url: >-
                http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: >-
        Updates an existing URL redirect.


        **Note:** The path, forward.type, and forward.ref fields of an existing
        redirect can be updated. 
      summary: Update A Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          x-examples:
            application/json:
              path: /mens_clothing
              forward:
                type: category
                ref: 3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Redirect'
          examples:
            application/json:
              id: 1
              path: /smith-journal-13/
              forward:
                type: product
                ref: 111
              url: >-
                http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a URL redirect.
      summary: Delete A Single Redirect
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the redirect url
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/redirects/count':
    get:
      description: Gets a count of redirects in a store.
      summary: Get A Count of Redirects
      tags:
        - Redirects
        - Store Content
      operationId: StoresV2RedirectsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/currencies/{id}':
    get:
      description: Gets a list of all currencies.
      summary: Get A Specific Currency
      tags:
        - Currency
      operationId: StoresV2CurrenciesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - in: path
          name: id
          type: integer
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Currency'
          examples:
            application/json:
              id: 1
              is_default: true
              last_updated: 'Fri, 11 May 2018 16:58:57 +0000'
              country_iso2: US
              currency_code: USD
              currency_exchange_rate: '1.0000000000'
              name: US Dollars
              token: $
              auto_update: false
              token_location: left
              decimal_token: .
              thousands_token: ','
              decimal_places: 2
              enabled: true
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update a currency.
      summary: Update A Currency
      tags:
        - Currency
      operationId: StoresV2CurrenciesByStoreHashPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Currency'
          x-examples:
            application/json:
              country_iso2: AU
              currency_code: AUD
              currency_exchange_rate: '1.3885600000'
              auto_update: 'false'
              location: left
              token: $
              decimal_token: .
              thousands_token: ','
              decimal_places: 2
        - in: path
          name: id
          type: integer
          required: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Currency'
          examples:
            application/json:
              id: 2
              is_default: false
              country_iso2: EU
              currency_code: EUR
              currency_exchange_rate: 0.849
              auto_update: true
              token_location: left
              token: €
              decimal_token: .
              thousands_token: ','
              decimal_places: 2
              name: Euro
              enabled: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      consumes:
        - application/json
    post:
      description: Creates a new currency.
      summary: Create A Currency
      tags:
        - Currency
      operationId: StoresV2CurrenciesByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Currency'
          x-examples:
            application/json:
              name: Euro
              country_iso2: EU
              currency_code: EUR
              currency_exchange_rate: 0.849
              auto_update: true
              token_location: left
              token: €
              decimal_token: .
              thousands_token: ','
              decimal_places: 2
              enabled: false
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Currency'
          examples:
            application/json:
              id: 2
              is_default: false
              last_updated: 'Tue, 12 Jun 2018 14:41:56 +0000"'
              country_iso2: EU
              currency_code: EUR
              currency_exchange_rate: 0.849
              auto_update: true
              token_location: left
              token: €
              decimal_token: .
              thousands_token: ','
              decimal_places: 2
              name: Euro
              enabled: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Delete all non-default store currencies.
      summary: Delete A Single Currency
      tags:
        - Currency
      operationId: StoresV2CurrenciesByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
  '/stores/{store_hash}/v2/customers':
    get:
      description: >-
        Gets the collection of customers. (Default sorting is by customer id,
        from lowest to highest.)

        This request can be filtered by any of the _Customer_ object properties
        except form fields.
      summary: Get All Customers
      operationId: StoresV2CustomersByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
        - in: query
          name: first_name
          type: string
        - in: query
          name: last_name
          type: string
        - in: query
          name: company
          type: string
        - in: query
          name: email
          type: string
        - in: query
          name: phone
          type: string
        - in: query
          name: store_credit
          type: string
        - in: query
          name: customer_group_id
          type: integer
        - in: query
          name: min_id
          type: integer
        - in: query
          name: max_id
          type: integer
        - in: query
          name: min_date_created
          type: string
          format: date-time
        - in: query
          name: "max_date_created\t"
          type: string
          format: date-time
        - in: query
          name: min_date_modified
          type: string
          format: date-time
        - in: query
          name: max_date_modified
          type: string
          format: date-time
        - in: query
          name: tax_exempt_category
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
          examples:
            application/json:
              - id: 1
                company: ''
                first_name: Jane
                last_name: Doe
                email: jane@email.com
                phone: ''
                form_fields:
                  - name: Account Sign Up Field
                    value: 123dadf
                date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
                date_modified: 'Thu, 10 May 2018 20:18:01 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 1
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                  resource: /customers/1/addresses
              - id: 2
                company: ''
                first_name: BigCommerce
                last_name: BigCommerce
                email: bc@email.com
                phone: ''
                form_fields: null
                date_created: 'Wed, 10 Jan 2018 21:24:05 +0000'
                date_modified: 'Wed, 10 Jan 2018 21:24:05 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 0
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/2/addresses
                  resource: /customers/2/addresses
      x-unitTests:
        - request:
            method: GET
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "id": 1,  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "email":
              "janedoe@email.com",  "phone": "1234567890",  "date_created":
              "Thu, 11 Jan 2018 20:57:52 +0000",  "date_modified": "Tue, 10 Apr
              2018 18:59:05 +0000",  "store_credit": 0, 
              "registration_ip_address": "12.345.678.910",  "customer_group_id":
              2,  "notes": "",  "tax_exempt_category": "",  "accepts_marketing":
              true,  "addresses": {    "url":
              "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",   
              "resource": "/customers/5/addresses"  },  "form_fields": [   
              {      "name": "",      "value": ""    }  ], 
              "reset_pass_on_login": false}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get All Customers1
          x-testDescription: >-
            Gets the collection of customers. (Default sorting is by customer
            id, from lowest to highest.)

            This request can be filtered by any of the _Customer_ object
            properties except form fields.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customers
    post:
      description: >-
        The `_authentication` object exposes functionality associated with the
        customer’s ability to log in to the store. All properties of the
        `_authentication` object are optional. 


        When the _authentication object is not supplied with an update request,
        then the existing customer password remains the same
      summary: Create a New Customer
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            type: object
            properties:
              _authentication:
                type: object
                description: >-
                  This can vary depending on the action being taken to update,
                  validate or force a password change. See Update Customer
              company:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              phone:
                type: string
              date_modified:
                type: string
              store_credit:
                type: integer
              registration_ip_address:
                type: string
              customer_group_id:
                type: integer
              notes:
                type: string
              tax_exempt_category:
                type: string
          x-examples:
            application/json:
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              phone: '1234567890'
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              _authentication: {}
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              email: janedoe@email.com
              phone: 1234567890
              date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
              date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
              store_credit: 0
              registration_ip_address: 12.345.678.910
              customer_group_id: 2
              notes: ''
              tax_exempt_category: ''
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
                resource: /customers/5/addresses
              form_fields:
                - name: ''
                  value: ''
              reset_pass_on_login: false
      x-unitTests:
        - request:
            method: POST
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
            body: >-
              {  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "phone":
              "1234567890",  "date_modified": "Tue, 10 Apr 2018 18:59:05
              +0000",  "store_credit": 0,  "registration_ip_address":
              "12.345.678.910",  "customer_group_id": 2,  "notes": "", 
              "tax_exempt_category": ""}
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: >-
              {  "id": 1,  "_authentication": {},  "company": "BigCommerce", 
              "first_name": "Jane",  "last_name": "Doe",  "email":
              "janedoe@email.com",  "phone": "1234567890",  "date_created":
              "Thu, 11 Jan 2018 20:57:52 +0000",  "date_modified": "Tue, 10 Apr
              2018 18:59:05 +0000",  "store_credit": 0, 
              "registration_ip_address": "12.345.678.910",  "customer_group_id":
              2,  "notes": "",  "tax_exempt_category": "",  "accepts_marketing":
              true,  "addresses": {    "url":
              "https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses",   
              "resource": "/customers/5/addresses"  },  "form_fields": [   
              {      "name": "",      "value": ""    }  ], 
              "reset_pass_on_login": false}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create a New Customer1
          x-testDescription: Testcase for testing endpoint Create a New Customer
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes all customers
      summary: Delete All Customers in a Store
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests:
        - request:
            method: DELETE
            uri: '/stores/{store_hash}/v2/customers'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Delete All Customers1
          x-testDescription: Deletes all customers
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/customers/{id}':
    get:
      description: Gets a single customer.
      summary: Get a Single Customer
      tags:
        - Customers
      operationId: StoresV2CustomersByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              _authentication: {}
              company: BigCommerce
              first_name: Jane
              last_name: Doe
              email: janedoe@email.com
              phone: 1234567890
              date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
              date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
              store_credit: 0
              registration_ip_address: 12.345.678.910
              customer_group_id: 2
              notes: ''
              tax_exempt_category: ''
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
                resource: /customers/5/addresses
              form_fields:
                - name: ''
                  value: ''
              reset_pass_on_login: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes a customer.
      summary: Delete a Customer
      operationId: StoresV2CustomersByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store_hash
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customers
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
          examples:
            application/json:
              id: 1
              company: ''
              first_name: Jane
              last_name: Doe
              email: janedoes@email.com
              phone: ''
              form_fields:
                - name: License Id
                  value: ''
              date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
              date_modified: 'Mon, 13 Aug 2018 18:11:41 +0000'
              store_credit: '0.0000'
              registration_ip_address: 64.183.182.114
              customer_group_id: 1
              notes: ''
              tax_exempt_category: ''
              reset_pass_on_login: false
              accepts_marketing: true
              addresses:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                resource: /customers/1/addresses
      summary: Update a Customer
      tags:
        - Customers
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: path
          name: id
          type: integer
          required: true
          description: Id of the customer
        - in: header
          name: Accept
          type: string
          default: application/json
        - in: header
          name: Content-Type
          type: string
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
        - in: header
          name: X-Auth-Token
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Customer'
          x-examples:
            application/json:
              first_name: Jane
              email: jane@email.com
              phone: '1234567890'
            password-update: |-
              {
                "_authentication": {
                  "password": "12w69Y217PYR96J"
                }
              }
            password-confirm: |2-
                 {
                      "_authentication": {
                         "password": "12w69Y217PYR96J",
                         "password_confirmation": "12w69Y217PYR96J"
                      }
                  }
            password-reset:
              _authentication:
                force_reset: true
      description: >-
        This endpoint can be used to update a customer or a customers password
        information.  Passwords use the `_authentication` functionality to
        update, confirm or force a password reset.


        ### Update a Password

        To manually update a customer password as you would through the control
        panel, supply a value for the password field.


        ### Confirm a Password

        An additional optional password_confirmation field can also be sent,
        providing password confirmation as a service.


        ### Force Password Resets

        To force a customer to reset their password upon their next login
        attempt, give the force_reset field a value of true.


        On success they return the *Customer* object.
  '/stores/{store_hash}/v2/customers/count':
    get:
      description: Gets a count of the total number of customers in the store.
      summary: Get a Count of Customers
      tags:
        - Customers
      operationId: StoresV2CustomersCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: store_hash
          in: path
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests:
        - request:
            method: GET
            uri: '/stores/{store_hash}/v2/customers/count'
            headers:
              Accept: application/json
              Content-Type: application/json
              X-Auth-Client: Your Client Id
              X-Auth-Token: Your Token
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: RAW
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers:
              Content-Type: application/json
            body: '{  "count": 27}'
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Get a Count of Customers1
          x-testDescription: Gets a count of the total number of customers in the store.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/customers/{id}/validate':
    post:
      description: >-
        **This endpoint has special rate limiting protections to protect against
        abuse.**


        Provided a password, will return a true/false response indicating if the
        provided password matches the customer’s current password. This endpoint
        is useful if you want to power the login of another system using
        BigCommerce’s stored customer accounts, or as a safe way to migrate
        passwords to another system (by checking them against BigCommerce’s
        password, and if correct, storing it in another system securely.)If the
        password matches what’s stored against the customer account, the
        response will be:


        ```

        {
            "success": "true"
        }

        ```

        If the password does NOT match, the response will instead be:


        ```

        {
            "success": "false"
        }

        ```
      summary: Validate a Password
      operationId: StoresV2CustomersValidateByStoreHashAndIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Unique numeric ID of this customer.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            type: object
            properties:
              password:
                type: string
                description: >-
                  String to run against customer password. Will return a true or
                  false.
          x-examples:
            application/json:
              password: abc12345
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Will return `true` or `false`
          examples:
            application/json:
              success: 'false'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Passwords
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses':
    get:
      description: >-
        Gets the addresses belonging to a customer. (Default sorting is by
        address id, from lowest to highest.) Parameters can be added to the URL
        query string to paginate the collection. The maximum limit is 250. If a
        limit isn’t provided, up to 50 customer_addresses are returned by
        default.
      summary: List All Customer Addresses
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              - id: 1
                company: ''
                first_name: Jane
                last_name: Does
                email: janedoe@email.com
                phone: ''
                form_fields:
                  - name: AccountSignUpField
                    value: B2B
                date_created: 'Wed, 10 Jan 2018 21:02:23 +0000'
                date_modified: 'Thu, 10 May 2018 20:18:01 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 1
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/1/addresses
                  resource: /customers/1/addresses
              - id: 2
                company: ''
                first_name: BigCommerce
                last_name: BigCommerce
                email: bigcommerce@email.com
                phone: ''
                form_fields: null
                date_created: 'Wed, 10 Jan 2018 21:24:05 +0000'
                date_modified: 'Wed, 10 Jan 2018 21:24:05 +0000'
                store_credit: '0.0000'
                registration_ip_address: 64.183.182.114
                customer_group_id: 0
                notes: ''
                tax_exempt_category: ''
                reset_pass_on_login: false
                accepts_marketing: true
                addresses:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/customers/2/addresses
                  resource: /customers/2/addresses
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
    post:
      description: >-
        Creates a new customer address. (Note: The “state” property cannot be
        null. As a workaround for addresses that include no state/province
        string, pass a space as the “state” value.)
      summary: Create A New Customer Address
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          x-examples:
            application/json:
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: '78726'
              country: United Statues
              phone: 123-345-7890
              address_type: residental
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
      consumes:
        - application/json
    delete:
      description: Deletes all customer addresses.
      summary: Delete All Customer Address
      operationId: StoresV2CustomersAddressesByStoreHashAndCustomerIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses/{id}':
    get:
      description: Gets a customer address.
      summary: Get A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the customer address being accessed.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
    put:
      description: 'Updates an existing customer address. '
      summary: Update A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          x-examples:
            application/json:
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: '78726'
              country: United Statues
              phone: 123-345-7890
              address_type: residental
        - name: id
          in: path
          required: true
          type: integer
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerAddress'
          examples:
            application/json:
              id: 3
              customer_id: 5
              first_name: Jane
              last_name: Doe
              company: BigCommerce
              street_1: 123 Main Street
              street_2: ''
              city: Austin
              state: Texas
              zip: 78726
              country: United States
              country_iso2: US
              phone: 123-345-7890
              address_type: residental
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
      consumes:
        - application/json
    delete:
      description: Deletes a customer address.
      summary: Delete A Customer Address
      operationId: StoresV2CustomersAddressesIdByStoreHashAndCustomerIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: path
          required: true
          type: integer
          description: Address Id
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customers/{customer_id}/addresses/count':
    get:
      description: Gets a count of addresses for a customer.
      summary: Get A Count of Customer Addresses
      operationId: StoresV2CustomersAddressesCountByStoreHashAndCustomerIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: customer_id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: ID of this customer address
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Addresses
        - Customers
  '/stores/{store_hash}/v2/customer_groups':
    get:
      description: >-
        Gets the collection of customer groups. (Default sorting is by
        customer-group id, from lowest to highest.)
      summary: Get All Customer Groups
      operationId: StoresV2CustomerGroupsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
        - name: name
          in: query
          required: false
          type: string
          description: >-
            Filter customer groups by exact name match. Can use `name:like` to
            filter using a fuzzy matching method. This is good for implementing
            search.
        - name: is_default
          in: query
          required: false
          type: boolean
          description: If customers who signup are added to this group by default
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              - id: 1
                name: B2B
                is_default: false
                category_access:
                  type: all
                discount_rules:
                  - type: price_list
                    price_list_id: 1
              - id: 2
                name: 5% Discount
                is_default: false
                category_access:
                  type: specific
                  categories:
                    - 18
                    - 19
                    - 23
                    - 34
                discount_rules:
                  - type: all
                    method: percent
                    amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    post:
      summary: Create A Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          x-examples:
            application/json:
              name: Bulk Purchasers
              category_access:
                type: specific
                categories:
                  - 7
                  - 12
                  - 20
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              name: 5% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      description: >-
        Creates a new customer group. 



        A minimal request requires only the customer group name:



        ```

        {
            "name": "Wholesale Customers"
        }

        ```



        To assign all new customers to the group by default, set is default to
        true:


        ```

        {
            "name": "Retail Customers",
            "is_default": true
        }

        ```



        To restrict customers in the group to only view and order products from
        a specific set of categories, provide a category access type:


        ```

        {
            "name": "Bulk Purchasers",
            "category_access": {
                "type": "specific",
                "categories": [7, 12, 20]
            }
        }

        ```



        To provide a 5% store-wide discount for customers in the group, use a
        discount rule of type all:


        ```

        {
            "name": "Student Discounts",
            "discount_rules": 
            [{
                "type": "all",
                "method": "percent",
                "amount": 5.00
            }]
        }

        ```
      tags:
        - Customer Groups
        - Customers
    delete:
      description: >-
        Deletes all customer groups in the store. **All existing customers are
        unassigned from the group when it is deleted.**
      summary: Delete All Customer Groups
      operationId: StoresV2CustomerGroupsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
  '/stores/{store_hash}/v2/customer_groups/{id}':
    get:
      description: Gets a customer group.
      summary: Get A Single Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the customer group
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
        - name: name
          in: query
          required: false
          type: string
          description: Name of the customer groups
        - name: is_default
          in: query
          required: false
          type: boolean
          description: If customers who signup are added to this group by default
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              id: 2
              name: 5% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '5.0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    delete:
      description: >-
        Deletes a customer group. **All existing customers are unassigned from
        the group when it is deleted.**
      summary: Delete A Customer Group
      operationId: StoresV2CustomerGroupsByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the customer group.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CustomerGroup'
          examples:
            application/json:
              id: 2
              name: 25% Discount
              is_default: false
              category_access:
                type: specific
                categories:
                  - 18
                  - 19
                  - 23
                  - 34
              discount_rules:
                - type: all
                  method: percent
                  amount: '25.0000'
      summary: Update A Customer Group
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: path
          name: id
          type: integer
          required: true
          description: Id of the customer group
        - in: header
          name: X-Auth-Client
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Token
          type: string
          required: true
          default: application/json
        - in: header
          name: Accepts
          type: string
          required: true
        - in: header
          name: Content-Type
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerGroup'
          x-examples:
            application/json:
              name: 25% off
              discount_rules:
                - type: all
                  method: percent
                  amount: '25.0000'
      description: >-
        The rules do not stack. 


        Any combination of fields can be updated at once. Discount rules are
        treated in bulk. The entire set of rules is overwritten when a request
        is sent.


        The following request will remove any existing rules, and apply the new
        ones:


        ```

        {
                "discount_rules": [
                    {
                        "type": "all",
                        "method": "percent",
                        "amount": 2.50
                    },
                    {
                        "type": "product",
                        "product_id": 33,
                        "method": "percent",
                        "amount": 5.00
                    },
                    {
                        "type": "category",
                        "category_id": 7,
                        "method": "price",
                        "amount": 12.00
                    }
                ]
        }

        ```
      tags:
        - Customer Groups
        - Customers
  '/stores/{store_hash}/v2/customer_groups/count':
    get:
      description: Gets a count of all customer groups in a store.
      summary: Get A Count of Customer Groups
      operationId: StoresV2CustomerGroupsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Customer Groups
        - Customers
  '/stores/{store_hash}/v2/countries':
    get:
      description: >-
        Get a list of all countries available. A country or territory,
        identifiable by an ISO 3166 country code.
      summary: Get A List of All Countries
      operationId: StoresV2CountriesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
          examples:
            application/json:
              - id: 1
                country: Afghanistan
                country_iso2: AF
                country_iso3: AFG
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/1/states
                  resource: /countries/1/states
              - id: 2
                country: Albania
                country_iso2: AL
                country_iso3: ALB
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/2/states
                  resource: /countries/2/states
              - id: 3
                country: Algeria
                country_iso2: DZ
                country_iso3: DZA
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/3/states
                  resource: /countries/3/states
              - id: 4
                country: American Samoa
                country_iso2: AS
                country_iso3: ASM
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/4/states
                  resource: /countries/4/states
              - id: 5
                country: Andorra
                country_iso2: AD
                country_iso3: AND
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/5/states
                  resource: /countries/5/states
              - id: 6
                country: Angola
                country_iso2: AO
                country_iso3: AGO
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/6/states
                  resource: /countries/6/states
              - id: 7
                country: Anguilla
                country_iso2: AI
                country_iso3: AIA
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/7/states
                  resource: /countries/7/states
              - id: 8
                country: Antarctica
                country_iso2: AQ
                country_iso3: "\r"
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/8/states
                  resource: /countries/8/states
              - id: 9
                country: Antigua and Barbuda
                country_iso2: AG
                country_iso3: ATG
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/9/states
                  resource: /countries/9/states
              - id: 10
                country: Argentina
                country_iso2: AR
                country_iso3: ARG
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/10/states
                  resource: /countries/10/states
              - id: 11
                country: Armenia
                country_iso2: AM
                country_iso3: ARM
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/11/states
                  resource: /countries/11/states
              - id: 12
                country: Aruba
                country_iso2: AW
                country_iso3: ABW
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/12/states
                  resource: /countries/12/states
              - id: 13
                country: Australia
                country_iso2: AU
                country_iso3: AUS
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states
                  resource: /countries/13/states
              - id: 14
                country: Austria
                country_iso2: AT
                country_iso3: AUT
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/14/states
                  resource: /countries/14/states
              - id: 15
                country: Azerbaijan
                country_iso2: AZ
                country_iso3: AZE
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/15/states
                  resource: /countries/15/states
              - id: 16
                country: Bahamas
                country_iso2: BS
                country_iso3: BHS
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/16/states
                  resource: /countries/16/states
              - id: 17
                country: Bahrain
                country_iso2: BH
                country_iso3: BHR
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/17/states
                  resource: /countries/17/states
              - id: 18
                country: Bangladesh
                country_iso2: BD
                country_iso3: BGD
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/18/states
                  resource: /countries/18/states
              - id: 19
                country: Barbados
                country_iso2: BB
                country_iso3: BRB
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/19/states
                  resource: /countries/19/states
              - id: 20
                country: Belarus
                country_iso2: BY
                country_iso3: BLR
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/20/states
                  resource: /countries/20/states
              - id: 21
                country: Belgium
                country_iso2: BE
                country_iso3: BEL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/21/states
                  resource: /countries/21/states
              - id: 22
                country: Belize
                country_iso2: BZ
                country_iso3: BLZ
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/22/states
                  resource: /countries/22/states
              - id: 23
                country: Benin
                country_iso2: BJ
                country_iso3: BEN
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/23/states
                  resource: /countries/23/states
              - id: 24
                country: Bermuda
                country_iso2: BM
                country_iso3: BMU
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/24/states
                  resource: /countries/24/states
              - id: 25
                country: Bhutan
                country_iso2: BT
                country_iso3: BTN
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/25/states
                  resource: /countries/25/states
              - id: 26
                country: Bolivia
                country_iso2: BO
                country_iso3: BOL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/26/states
                  resource: /countries/26/states
              - id: 27
                country: Bosnia and Herzegovina
                country_iso2: BA
                country_iso3: BIH
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/27/states
                  resource: /countries/27/states
              - id: 28
                country: Botswana
                country_iso2: BW
                country_iso3: BWA
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/28/states
                  resource: /countries/28/states
              - id: 29
                country: Bouvet Island
                country_iso2: BV
                country_iso3: NUL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/29/states
                  resource: /countries/29/states
              - id: 30
                country: Brazil
                country_iso2: BR
                country_iso3: BRA
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/30/states
                  resource: /countries/30/states
              - id: 31
                country: British Indian Ocean Territory
                country_iso2: IO
                country_iso3: NUL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/31/states
                  resource: /countries/31/states
              - id: 32
                country: Brunei Darussalam
                country_iso2: BN
                country_iso3: BRN
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/32/states
                  resource: /countries/32/states
              - id: 33
                country: Bulgaria
                country_iso2: BG
                country_iso3: BGR
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/33/states
                  resource: /countries/33/states
              - id: 34
                country: Burkina Faso
                country_iso2: BF
                country_iso3: BFA
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/34/states
                  resource: /countries/34/states
              - id: 35
                country: Burundi
                country_iso2: BI
                country_iso3: BDI
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/35/states
                  resource: /countries/35/states
              - id: 36
                country: Cambodia
                country_iso2: KH
                country_iso3: KHM
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/36/states
                  resource: /countries/36/states
              - id: 37
                country: Cameroon
                country_iso2: CM
                country_iso3: CMR
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/37/states
                  resource: /countries/37/states
              - id: 38
                country: Canada
                country_iso2: CA
                country_iso3: CAN
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/38/states
                  resource: /countries/38/states
              - id: 39
                country: Cape Verde
                country_iso2: CV
                country_iso3: CPV
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/39/states
                  resource: /countries/39/states
              - id: 40
                country: Cayman Islands
                country_iso2: KY
                country_iso3: CYM
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/40/states
                  resource: /countries/40/states
              - id: 41
                country: Central African Republic
                country_iso2: CF
                country_iso3: CAF
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/41/states
                  resource: /countries/41/states
              - id: 42
                country: Chad
                country_iso2: TD
                country_iso3: TCD
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/42/states
                  resource: /countries/42/states
              - id: 43
                country: Chile
                country_iso2: CL
                country_iso3: CHL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/43/states
                  resource: /countries/43/states
              - id: 44
                country: China
                country_iso2: CN
                country_iso3: CHN
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/44/states
                  resource: /countries/44/states
              - id: 45
                country: Christmas Island
                country_iso2: CX
                country_iso3: NUL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/45/states
                  resource: /countries/45/states
              - id: 46
                country: Cocos (Keeling) Islands
                country_iso2: CC
                country_iso3: NUL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/46/states
                  resource: /countries/46/states
              - id: 47
                country: Colombia
                country_iso2: CO
                country_iso3: COL
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/47/states
                  resource: /countries/47/states
              - id: 48
                country: Comoros
                country_iso2: KM
                country_iso3: COM
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/48/states
                  resource: /countries/48/states
              - id: 49
                country: Congo
                country_iso2: CG
                country_iso3: COG
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/49/states
                  resource: /countries/49/states
              - id: 50
                country: 'Congo, the Democratic Republic of the'
                country_iso2: CD
                country_iso3: COD
                states:
                  url: >-
                    https://api.bigcommerce.com/stores/{store_hash}/v2/countries/50/states
                  resource: /countries/50/states
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Countries
        - Geography
  '/stores/{store_hash}/v2/countries/{id}':
    get:
      description: >-
        Gets a country. A country or territory, identifiable by an ISO 3166
        country code.
      summary: Get A Single Country
      operationId: StoresV2CountriesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: The id of the country.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Country'
          examples:
            application/json:
              id: 13
              country: Australia
              country_iso2: AU
              country_iso3: AUS
              states:
                url: >-
                  https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states
                resource: /countries/13/states
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Countries
        - Geography
  '/stores/{store_hash}/v2/countries/{country_id}/states':
    get:
      description: >-
        Gets the list of states belonging to a country. A state or province,
        identifiable by an ISO 3166 subdivision code.
      summary: Get A List of All States
      operationId: StoresV2CountriesStatesByStoreHashAndCountryIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: country_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the country
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: state
          in: query
          required: false
          type: string
          description: Name of the state/province.
        - name: state_abbreviation
          in: query
          required: false
          type: string
          description: Abbreviation for the state/province.
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Number of pages
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Count per page
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/State'
          examples:
            application/json:
              - id: 208
                state: Australian Capital Territory
                state_abbreviation: ACT
                country_id: 13
              - id: 209
                state: New South Wales
                state_abbreviation: NSW
                country_id: 13
              - id: 210
                state: Northern Territory
                state_abbreviation: NT
                country_id: 13
              - id: 211
                state: Queensland
                state_abbreviation: QLD
                country_id: 13
              - id: 212
                state: South Australia
                state_abbreviation: SA
                country_id: 13
              - id: 213
                state: Tasmania
                state_abbreviation: TAS
                country_id: 13
              - id: 214
                state: Victoria
                state_abbreviation: VIC
                country_id: 13
              - id: 215
                state: Western Australia
                state_abbreviation: WA
                country_id: 13
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - States
        - Geography
  '/stores/{store_hash}/v2/countries/{country_id}/states{id}':
    get:
      description: >-
        Gets a state. A state or province, identifiable by an ISO 3166
        subdivision code.
      summary: Get A State
      operationId: StoresV2CountriesStatesIdByStoreHashAndCountryIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: country_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the country
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the states
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/State'
          examples:
            application/json:
              id: 208
              state: Australian Capital Territory
              state_abbreviation: ACT
              country_id: 13
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - States
        - Geography
  '/stores/{store_hash}/v2/coupons':
    get:
      description: >-
        Gets all coupons in the store. Default sorting is by coupon/discount id,
        from lowest to highest.

        To get a single coupon filter by coupon `id`.
      summary: Get All Coupons
      operationId: StoresV2CouponsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: query
          required: false
          type: string
          description: 'Optional filter param. `/api/v2/coupons?id={value}`'
        - name: code
          in: query
          required: false
          type: string
          description: 'Optional filter param `/api/v2/coupons?code={value}`'
        - name: name
          in: query
          required: false
          type: string
          description: 'Optional filter param `/api/v2/coupons?name={value}`'
        - name: type
          in: query
          required: false
          type: string
          description: 'Optional filter param `/api/v2/coupons?type={value}`'
        - name: min_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/coupons?min_id={value}`'
        - name: max_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param`/api/v2/coupons?max_id={value}`'
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Number of pages `/api/v2/coupons?page={number}`'
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Count per page `/api/v2/coupons?limit={count}`'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Coupon'
          examples:
            application/json:
              - id: 1
                name: $5 off
                type: per_total_discount
                amount: '5.0000'
                min_purchase: '0.0000'
                expires: ''
                enabled: true
                code: S2549JM0Y
                applies_to:
                  entity: categories
                  ids:
                    - 0
                num_uses: 2
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: []
                shipping_methods: null
                date_created: 'Tue, 13 Mar 2018 16:18:59 +0000'
              - id: 2
                name: Limit by Location
                type: per_total_discount
                amount: '5.0000'
                min_purchase: '25.0000'
                expires: ''
                enabled: true
                code: E3JC79S0I
                applies_to:
                  entity: categories
                  ids:
                    - 0
                num_uses: 0
                max_uses: 25
                max_uses_per_customer: 0
                restricted_to:
                  countries:
                    - AU
                shipping_methods:
                  - shipping_endicia
                date_created: 'Tue, 12 Jun 2018 20:22:19 +0000'
              - id: 3
                name: Per Item Discount
                type: per_item_discount
                amount: '1.0000'
                min_purchase: '0.0000'
                expires: ''
                enabled: true
                code: S65334W91
                applies_to:
                  entity: categories
                  ids:
                    - 23
                num_uses: 1
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: []
                shipping_methods: null
                date_created: 'Mon, 30 Jul 2018 15:28:53 +0000'
              - id: 4
                name: Shipping Discount
                type: shipping_discount
                amount: '1.0000'
                min_purchase: '0.0000'
                expires: ''
                enabled: true
                code: WS50991D4
                applies_to:
                  entity: categories
                  ids:
                    - 23
                num_uses: 1
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: []
                shipping_methods: null
                date_created: 'Mon, 30 Jul 2018 15:31:17 +0000'
              - id: 5
                name: Free Shipping
                type: free_shipping
                amount: '0.0000'
                min_purchase: '0.0000'
                expires: ''
                enabled: true
                code: PC08VN1P042T0
                applies_to:
                  entity: categories
                  ids:
                    - 23
                num_uses: 1
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: []
                shipping_methods: null
                date_created: 'Mon, 30 Jul 2018 15:33:43 +0000'
              - id: 6
                name: Percentage off
                type: percentage_discount
                amount: '3.0000'
                min_purchase: '0.0000'
                expires: ''
                enabled: true
                code: KV56053388J
                applies_to:
                  entity: categories
                  ids:
                    - 23
                num_uses: 1
                max_uses: 0
                max_uses_per_customer: 0
                restricted_to: []
                shipping_methods: null
                date_created: 'Mon, 30 Jul 2018 15:35:21 +0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
    post:
      description: Creates a new coupon.
      summary: Create a New Coupon
      operationId: StoresV2CouponsByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Coupon'
          x-examples:
            application/json:
              name: 5% off order total
              type: per_item_discount
              code: 4F75AF0C3802D39
              enabled: true
              amount: '5'
              applies_to:
                entity: categories
                ids:
                  - 0
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Coupon'
          examples:
            application/json:
              id: 5
              name: Free Shipping
              type: free_shipping
              amount: '0.0000'
              min_purchase: '0.0000'
              expires: ''
              enabled: true
              code: PC08VN1P042T0
              applies_to:
                entity: categories
                ids:
                  - 23
              num_uses: 1
              max_uses: 0
              max_uses_per_customer: 0
              restricted_to: []
              shipping_methods: null
              date_created: 'Mon, 30 Jul 2018 15:33:43 +0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
    delete:
      description: Deletes all store coupons
      summary: Delete All Coupons
      operationId: StoresV2CouponsByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
  '/stores/{store_hash}/v2/coupons/count':
    get:
      description: Gets a count of all coupons in the store.
      summary: Get A Count of Coupons
      operationId: StoresV2CouponsCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
  '/stores/{store_hash}/v2/coupons/{id}':
    put:
      description: Updates an existing store coupon.
      summary: Update an Existing Coupon
      operationId: StoresV2CouponsByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the coupon.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Coupon'
          x-examples:
            application/json:
              name: 5% off order total
              type: per_item_discount
              code: 4F75AF0C3802D39
              enabled: true
              amount: '5'
              applies_to:
                entity: categories
                ids:
                  - 0
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Coupon'
          examples:
            application/json:
              id: 5
              name: Free Shipping
              type: free_shipping
              amount: '0.0000'
              min_purchase: '0.0000'
              expires: ''
              enabled: true
              code: PC08VN1P042T0
              applies_to:
                entity: categories
                ids:
                  - 23
              num_uses: 0
              max_uses: 0
              max_uses_per_customer: 0
              restricted_to: []
              shipping_methods: null
              date_created: 'Mon, 30 Jul 2018 15:33:43 +0000'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
    delete:
      description: Deletes a single coupon.
      summary: Delete A Coupon
      operationId: StoresV2CouponsByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: path
          required: true
          type: integer
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Coupons
        - Marketing
  '/stores/{store_hash}/v2/banners':
    get:
      description: >-
        Gets the banners available. (Default sorting is by banner id, from
        lowest to highest.)
      summary: Get a List of All Banners
      operationId: StoresV2BannersByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: min_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/banners?min_id={value}`'
        - name: max_id
          in: query
          required: false
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/banners?max_id={value}`'
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/banners?page={number}`'
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/banners?limit={count}`'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Banner'
          examples:
            application/json:
              - id: 1
                name: This is a banner
                content: <p>This is a banner</p>
                page: home_page
                item_id: '0'
                location: top
                date_created: '1522169082'
                date_type: always
                date_from: '0'
                date_to: '0'
                visible: '1'
              - id: 2
                name: 'Banner #2'
                content: '<p>Banner # 2</p>'
                page: category_page
                item_id: '23'
                location: top
                date_created: '1522169169'
                date_type: always
                date_from: '0'
                date_to: '0'
                visible: '1'
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
    post:
      description: Creates a new banner.
      summary: Create a Banner
      operationId: StoresV2BannersByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Banner'
          x-examples:
            application/json:
              name: Sale Banner
              content: <p> Sale! Tuesday at 9am! </p>
              page: home_page
              location: top
              date_type: always
              visible: 1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Banner'
          examples:
            application/json:
              id: 1
              name: Sale Banner
              content: <p> Sale! Tuesday at 9am! </p>
              page: home_page
              item_id: 0
              location: top
              date_created: 1522169082
              date_type: always
              date_from: 0
              date_to: 0
              visible: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
    delete:
      description: Deletes all banners associated with the store.
      summary: Delete All Banners
      operationId: StoresV2BannersByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
  '/stores/{store_hash}/v2/banners/{id}':
    get:
      description: Gets a single banner by `id`.
      summary: Get a Banner
      operationId: StoresV2BannersByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the banner.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Banner'
          examples:
            application/json:
              id: 1
              name: Sale Banner
              content: <p> Sale! Tuesday at 9am! </p>
              page: home_page
              item_id: 0
              location: top
              date_created: 1522169082
              date_type: always
              date_from: 0
              date_to: 0
              visible: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
    put:
      description: Updates an existing banner.
      summary: Update a Banner
      operationId: StoresV2BannersByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the banner.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/Banner'
          x-examples:
            application/json:
              name: Home Page Banner
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Banner'
          examples:
            application/json:
              id: 1
              name: Sale Banner
              content: <p> Sale! Tuesday at 9am! </p>
              page: home_page
              item_id: 0
              location: top
              date_created: 1522169082
              date_type: always
              date_from: 0
              date_to: 0
              visible: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
    delete:
      description: Deletes a specific banner by `id`.
      summary: Delete a Banner
      operationId: StoresV2BannersByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: id
          in: path
          required: true
          type: integer
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
  '/stores/{store_hash}/v2/banners/count':
    get:
      description: Gets a count of all store banners.
      summary: Get a Count of Store Banners
      operationId: StoresV2BannersCountByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrderCountResponse'
          examples:
            application/json:
              count: 27
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Banners
        - Marketing
  '/stores/{store_hash}/v2/gift_certificates/{id}':
    get:
      description: Gets a single gift certificate by `id`.
      summary: Get a Gift Certificate
      operationId: StoresV2GiftCertificatesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the gift certificate.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GiftCertificate'
          examples:
            application/json:
              id: 1
              customer_id: 5
              order_id: 116
              code: FFZ-5N4-C7M-S78
              to_name: John Doe
              to_email: johndoe@email.com
              from_name: Jane Doe
              from_email: janedoe@email.com
              amount: 10
              balance: 0
              status: active
              template: false
              message: Happy Birthday!
              purchase_date: 1520957992
              expiry_date: 0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Gift Certificate
        - Marketing
    delete:
      description: Deletes a gift certificate by `id`.
      summary: Delete a Gift Certificate
      operationId: StoresV2GiftCertificatesByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the gift certificate.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Gift Certificate
        - Marketing
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
    put:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GiftCertificate'
          examples:
            application/json:
              id: 1
              customer_id: '5'
              order_id: '116'
              code: FFZ-5N4-C7M-S78
              to_name: John Doe
              to_email: johndoe@email.com
              from_name: Jane Doe
              from_email: janedoe@email.com
              amount: '10.0000'
              balance: '0.0000'
              status: expired
              template: false
              message: ''
              purchase_date: '1520957992'
              expiry_date: '0'
      summary: Update a Gift Certificate
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: header
          name: Accept
          type: string
          default: application/json
          required: true
        - in: header
          name: Content-Type
          type: string
          default: application/json
          required: true
        - in: header
          name: X-Auth-Client
          type: string
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GiftCertificate'
          x-examples:
            application/json:
              to_name: New testing
      tags:
        - Gift Certificate
        - Marketing
  '/stores/{store_hash}/v2/payments/methods':
    get:
      description: >-
        Gets the list of enabled payment methods. Default sorting is by payment
        method, alphabetically from A to Z.
      summary: Get All Payment Methods
      operationId: StoresV2PaymentsMethodsByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/payments/methods?page={number}`'
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: 'Optional filter param `/api/v2/payments/methods?limit={count}`'
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
          examples:
            application/json:
              - code: braintree
                name: Braintree
                test_mode: false
              - code: braintreepaypal
                name: Braintree (PayPal)
                test_mode: false
              - code: braintreepaypalcredit
                name: Braintree (PayPal Credit)
                test_mode: false
              - code: instore
                name: Pay in Store
                test_mode: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
      tags:
        - Payment Methods
  '/stores/{store_hash}/v2/shipping/zones':
    get:
      description: Gets all shipping zones in a store.
      summary: Get All Shipping Zones
      tags:
        - Shipping Zones
        - Shipping
      operationId: StoresV2ShippingZonesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ShippingZone'
          examples:
            application/json:
              - id: 1
                name: United States
                type: country
                locations:
                  - id: 5
                    country_iso2: US
                free_shipping:
                  enabled: false
                  minimum_sub_total: '0.0000'
                  exclude_fixed_shipping_products: false
                handling_fees:
                  display_separately: true
                  fixed_surcharge: '0.0000'
                enabled: true
              - id: 2
                name: Australia
                type: country
                locations:
                  - id: 6
                    country_iso2: AU
                free_shipping:
                  enabled: false
                  minimum_sub_total: '0.0000'
                  exclude_fixed_shipping_products: false
                handling_fees:
                  display_separately: true
                  fixed_surcharge: '0.0000'
                enabled: true
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Create a new shipping zone.
      summary: Create Shipping Zone
      tags:
        - Shipping Zones
        - Shipping
      operationId: StoresV2ShippingZonesByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/ShippingZone'
          x-examples:
            application/json:
              name: UnitedStates-NM
              type: state
              locations:
                - country_iso2: US
                  state_iso2: NM
              handling_fees:
                fixed_surcharge: 12
                display_separately: true
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShippingZone'
          examples:
            application/json:
              id: 2
              name: UnitedStates-NM
              type: state
              locations:
                - id: 2
                  country_iso2: US
                  state_iso2: NM
              free_shipping:
                enabled: false
                minimum_subtotal: '0.0000'
                exclude_fixed_shipping_products: false
              handling_fees:
                fixed_surcharge: '12.0000'
                display_separately: true
              enabled: true
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/shipping/zones/{id}':
    get:
      description: Gets a single shipping zone by `id`.
      summary: Get a Shipping Zones
      tags:
        - Shipping Zones
        - Shipping
      operationId: StoresV2ShippingZonesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShippingZone'
          examples:
            application/json:
              id: 1
              name: United States
              type: zip
              locations:
                - id: 3
                  zip: 12345
                  country_iso2: US
                  state_iso2: TX
              free_shipping:
                enabled: false
                minimum_subtotal: 0
                exclude_fixed_shipping_products: false
              handling_fees:
                fixed_surcharge: 0
                percentage_surcharge: ''
                display_separately: true
              enabled: true
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Updates an existing shipping zone by `id`.
      summary: Update a Shipping Zone
      tags:
        - Shipping Zones
        - Shipping
      operationId: StoresV2ShippingZonesByStoreHashAndIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/ShippingZone'
          x-examples:
            application/json:
              name: UnitedStates-Samoa
              type: state
              locations:
                - id: 5
                  country_iso2: US
                  state_iso2: AS
              free_shipping:
                enabled: false
                minimum_subtotal: '0.0000'
                exclude_fixed_shipping_products: false
              handling_fees:
                fixed_surcharge: '6.0000'
                display_separately: true
              enabled: true
      responses:
        '200':
          description: ''
          schema: {}
          examples:
            application/json:
              id: 1
              name: United States
              type: zip
              locations:
                - id: 3
                  zip: 12345
                  country_iso2: US
                  state_iso2: TX
              free_shipping:
                enabled: false
                minimum_subtotal: 0
                exclude_fixed_shipping_products: false
              handling_fees:
                fixed_surcharge: 0
                percentage_surcharge: ''
                display_separately: true
              enabled: true
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes an existing shipping zone by `id`.
      summary: Delete a Shipping Zone
      tags:
        - Shipping Zones
        - Shipping
      operationId: StoresV2ShippingZonesByStoreHashAndIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/shipping/zones/{zone_id}/methods':
    get:
      description: >-
        Gets all configured shipping methods, by zone_id. Default sorting is by
        shipping-method id, from lowest to highest.
      summary: Get All Shipping Methods in a Zone
      tags:
        - Shipping Method
        - Shipping
      operationId: StoresV2ShippingZonesMethodsByStoreHashAndZoneIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: zone_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ShippingMethod'
          examples:
            application/json:
              - id: 1
                name: Flat Rate
                type: perorder
                settings:
                  rate: 12
                enabled: true
                handling_fees:
                  fixed_surcharge: 0
                is_fallback: false
              - id: 2
                name: Pickup In Store
                type: pickupinstore
                settings: []
                enabled: false
                handling_fees:
                  fixed_surcharge: 0
                is_fallback: false
              - id: 3
                name: Ship by Weight
                type: weight
                settings:
                  default_cost: 0
                  default_cost_type: fixed_amount
                  range:
                    - lower_limit: 0
                      upper_limit: 20
                      shipping_cost: 8
                    - lower_limit: 20
                      upper_limit: 40
                      shipping_cost: 8
                    - lower_limit: 40
                      upper_limit: 60
                      shipping_cost: 8
                    - lower_limit: 60
                      upper_limit: 80
                      shipping_cost: 8
                enabled: true
                handling_fees:
                  fixed_surcharge: 0
                is_fallback: false
              - id: 4
                name: UPS®
                type: upsready
                settings:
                  carrier_options:
                    include_package_value: '1'
                    show_transit_time: '1'
                    destination_type: residential
                    packing_method: combined
                    packaging_type: 2c
                    delivery_services:
                      - Express
                      - Ground
                      - Next_Day_Air
                      - Saver
                      - Standard
                    packaging: []
                enabled: true
                handling_fees:
                  fixed_surcharge: 0
                is_fallback: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Creates a new shipping method within a shipping zone.
      summary: Create a New Shipping Method
      tags:
        - Shipping Method
        - Shipping
      operationId: StoresV2ShippingZonesMethodsByStoreHashAndZoneIdPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: zone_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/ShippingMethod'
          x-examples:
            application/json:
              name: Per Order
              type: perorder
              settings:
                rate: 8
              enabled: true
              handling_fees:
                fixed_surcharge: 3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShippingMethod'
          examples:
            application/json:
              id: 5
              name: Per Order
              type: perorder
              settings:
                rate: 8
              enabled: true
              handling_fees:
                fixed_surcharge: 3
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/shipping/zones/{zone_id}/methods/{method_id}':
    get:
      description: Gets a shipping method using the `zone_id` and `method_id`.
      summary: Get a Single Shipping Method
      tags:
        - Shipping Method
        - Shipping
      operationId: StoresV2ShippingZonesMethodsMethodIdByStoreHashAndZoneIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: zone_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: method_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping method within the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShippingMethod'
          examples:
            application/json:
              id: 1
              name: Flat Rate
              type: perorder
              settings:
                rate: 12
              enabled: true
              handling_fees:
                fixed_surcharge: 0
              is_fallback: false
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Updates an existing shipping method.
      summary: Update a Shipping Method
      tags:
        - Shipping Method
        - Shipping
      operationId: StoresV2ShippingZonesMethodsMethodIdByStoreHashAndZoneIdPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: zone_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: method_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping method within the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/ShippingMethod'
          x-examples:
            application/json:
              settings:
                rate: 11
              handling_fees:
                fixed_surcharge: 0
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShippingMethod'
          examples:
            application/json:
              id: 5
              name: Per Order
              type: perorder
              settings:
                rate: 11
              enabled: true
              handling_fees:
                fixed_surcharge: 0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: Deletes an existing shipping method using `zone_id` and `method_id`.
      summary: Delete a Shipping Method
      tags:
        - Shipping Method
        - Shipping
      operationId: StoresV2ShippingZonesMethodsMethodIdByStoreHashAndZoneIdDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: zone_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping zone.
        - name: method_id
          in: path
          required: true
          type: integer
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Id of the shipping method within the shipping zone.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '204':
          description: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/shipping/carrier/connection':
    put:
      description: >-
        Updating the carrier connection is done using the same information as
        creating the connection. This endpoint can be used to update
        credentials.


        *Endicia Example*

        ```

        {   "carrier_id" : "endicia",
            "connection": {
                "account_id" : "yourEndiciaAccountId",
                "pass_phrase" : "yourEndiciaPassphrase"
            }
        }

        ```
      summary: Update a Carrier Connection
      tags:
        - Shipping Carrier
        - Shipping
      operationId: StoresV2ShippingCarrierConnectionByStoreHashPut
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: body
          schema:
            type: object
            properties: {}
          x-examples:
            application/json:
              carrier_id: endicia
              connection:
                account_id: yourEndiciaAccountId
                pass_phrase: yourEndiciaPassphrase
      responses:
        '204':
          description: Returns if request was succesful
        '400':
          description: |-
            If a required field is not provided it will return a 400 response. 

            [
                {
                    "status": 400,
                    "message": "Required fields missing [key]"
                }
            ]
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: >-
        Carrier connections refer to specific settings required to connect to a
        specific shipping carrier. Each carrier requires your app to supply a
        unique set of properties/fields to establish a connection with that
        carrier.


        *Notes:*


        - There is no `GET` with this resource. It has `PUT`, `POST` and
        `DELETE`.
            * A PUT is used to update. The connection can be updated via API.
            
        - Connections created here do not enable the shipping method. To enable
        the carrier for a shipping zone, use the [Shipping Methods
        API](#reference/shipping-method). 


        - The Carrier Connection resource returns a 204 for both succesful and
        unsuccesful attempts to connect. If a field is missing it will return a
        400.


        **Australia Post Example**


        ```

        {
            "carrier_id" : "auspost",
            "connection" : {
                "auth_key" : "yourAusPostAuthKey",
                "test_mode" : false
            }
        }

        ```



        **Endicia Example**

        USPS is connected through Endicia.


        ```

        {   "carrier_id" : "endicia",
            "connection": {
                "account_id" : "yourEndiciaAccountId",
                "pass_phrase" : "yourEndiciaPassphrase"
            }
        }

        ```



        **FedEx Example**


        ```

        {
            "carrier_id" : "fedex",
            "connection" : {
                "key" : "yourFedexKey",
                "password" : "yourFedexPassword",
                "account_number" : "yourFedexAccountNumber",
                "meter_number" : "yourFedexMeterNumber"
            }
        }

        ```
      summary: Create a Carrier Connection
      tags:
        - Shipping Carrier
        - Shipping
      operationId: StoresV2ShippingCarrierConnectionByStoreHashPost
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - in: body
          name: body
          schema:
            type: object
            properties: {}
          x-examples:
            application/json:
              carrier_id: auspost
              connection:
                auth_key: yourAusPostAuthKey
                test_mode: false
      responses:
        '204':
          description: Returns if request was succesful
        '400':
          description: >-
            If a required field is not provided, the request will return a 400
            response. 


            [
                {
                    "status": 400,
                    "message": "Required fields missing [key]"
                }
            ]
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: |-
        When sending a DELETE request only the `carrier_id` is needed. 

        ```
        {
            "carrier_id" : "fedex"
        }
        ```
      summary: Delete a Carrier Connection
      tags:
        - Shipping Carrier
        - Shipping
      operationId: StoresV2ShippingCarrierConnectionByStoreHashDelete
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: body
          in: body
          required: true
          description: ''
          schema:
            type: object
            properties:
              carrier_id:
                type: string
                example: fedex
          x-examples:
            application/json:
              carrier_id: fedex
      responses:
        '204':
          description: Returns if request was succesful
        '400':
          description: |-
            If a required field is not provided it will return a 400 response. 

            [
                {
                    "status": 400,
                    "message": "Required fields missing [key]"
                }
            ]
          schema: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/store':
    get:
      description: Gets metadata about a store.
      summary: Get Store Information
      tags:
        - Store Information Reference
      operationId: StoresV2StoreByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StoreInformation'
          examples:
            application/json:
              id: '12345'
              domain: jandoes.mybigcommerce.com
              secure_url: 'https://store-{store_hash}.mybigcommerce.com'
              status: live
              name: BigCommerce
              first_name: Jane
              last_name: Doe
              address: BigCommerce
              country: United States
              country_code: US
              phone: ''
              admin_email: jane.does@email.com
              order_email: info@janedoes.mybigcommerce.com
              favicon_url: >-
                https://cdn8.bigcommerce.com/r-8816ba2f48b0bcf4bec0c1a954c00e0fc36b/img/bc_favicon.ico
              timezone:
                name: America/Chicago
                raw_offset: -21600
                dst_offset: -18000
                dst_correction: true
                date_format:
                  display: M jS Y
                  export: M jS Y
                  extended_display: 'M jS Y @ g:i A'
              language: en
              currency: USD
              currency_symbol: $
              decimal_separator: .
              thousands_separator: ','
              decimal_places: 2
              currency_symbol_location: left
              weight_units: Ounces
              dimension_units: Inches
              dimension_decimal_places: 2
              dimension_decimal_token: .
              dimension_thousands_token: ','
              plan_name: Standard
              plan_level: Standard
              industry: ''
              logo:
                url: >-
                  https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png
              is_price_entered_with_tax: false
              active_comparison_modules: []
              features:
                stencil_enabled: true
                sitewidehttps_enabled: false
                facebook_catalog_id: ''
                checkout_type: optimized
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/time':
    get:
      description: >-
        Returns the system timestamp at the time of the request. The time
        resource is useful for validating API authentication details and testing
        client connections.
      summary: Get System Timestame
      tags:
        - Store Information Reference
      operationId: StoresV2TimeByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            type: object
            properties:
              time:
                type: string
                example: '1529512970'
                description: Store Time in Unix format
          examples:
            application/json:
              time: 1529512970
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/tax_classes':
    get:
      description: >-
        Gets the tax classes set up for a store. Default sorting is by tax-class
        id, from lowest to highest.
      summary: Get All Tax Classes
      tags:
        - Taxes
      operationId: StoresV2TaxClassesByStoreHashGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
          default: application/json
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
        - name: page
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Optional filter param. Number of pages.
          maximum: 50
        - name: limit
          in: query
          required: false
          type: number
          exclusiveMaximum: false
          exclusiveMinimum: false
          description: Optional filter param. Number of items per page
          maximum: 250
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/TaxClass'
          examples:
            application/json:
              - id: 1
                name: Non-Taxable Products
              - id: 2
                name: Shipping
              - id: 3
                name: Gift Wrapping
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/tax_classes/{id}':
    get:
      description: Gets a tax class by `id`.
      summary: Get a Tax Class
      tags:
        - Taxes
      operationId: StoresV2TaxClassesByStoreHashAndIdGet
      produces:
        - application/json
      parameters:
        - name: store_hash
          in: path
          required: true
          type: string
          description: Your store's hash from the canonical URL
        - name: id
          in: path
          required: true
          type: integer
          description: Id of the tax class.
        - name: Accept
          in: header
          required: true
          type: string
          description: ''
        - name: Content-Type
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Client
          in: header
          required: true
          type: string
          description: ''
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: ''
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/TaxClass'
          examples:
            application/json:
              id: 1
              name: Shipping
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/stores/{store_hash}/v2/currencies':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
          examples:
            application/json:
              - id: 1
                is_default: true
                last_updated: 'Fri, 11 May 2018 16:58:57 +0000'
                country_iso2: US
                currency_code: USD
                currency_exchange_rate: '1.0000000000'
                name: US Dollars
                token: $
                auto_update: false
                token_location: left
                decimal_token: .
                thousands_token: ','
                decimal_places: 2
                enabled: true
              - id: 2
                is_default: false
                last_updated: 'Fri, 10 Aug 2018 14:47:03 +0000'
                country_iso2: EU
                currency_code: EUR
                currency_exchange_rate: '0.8729000000'
                name: Euro
                token: €
                auto_update: true
                token_location: left
                decimal_token: .
                thousands_token: ','
                decimal_places: 2
                enabled: true
              - id: 3
                is_default: false
                last_updated: 'Fri, 10 Aug 2018 14:47:03 +0000'
                country_iso2: AU
                currency_code: AUD
                currency_exchange_rate: '1.3678000000'
                name: Aus
                token: $
                auto_update: true
                token_location: left
                decimal_token: .
                thousands_token: ','
                decimal_places: 2
                enabled: false
      summary: Get All Store Currency
      description: Get all Store Currencies
      produces:
        - application/json
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: header
          name: X-Auth-Client
          type: string
          default: application/json
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          default: application/json
          required: true
        - in: header
          name: Accepts
          type: string
          required: true
        - in: header
          name: Content-Type
          type: string
          required: true
      tags:
        - Currency
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      summary: Delete All Store Currencies
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: header
          name: Content-Type
          type: string
          default: application/json
          required: true
        - in: header
          name: Accepts
          type: string
          default: application/json
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: header
          name: X-Auth-Client
          type: string
          required: true
      tags:
        - Currency
      description: Delete All non-default store currencies
  '/stores/{store_hash}/v2/gift_certificates':
    get:
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/GiftCertificate'
          examples:
            application/json:
              - id: '24'
                code: 10R-5E2-BO4-RWT
                amount: '1000.0000'
                status: active
                balance: '500.0000'
                to_name: Alyss
                order_id: '1281'
                template: 'false'
                to_email: test@test.com
                from_name: Noland
                from_email: test1@test.com
                customer_id: '0'
                expiry_date: '0'
                purchase_date: '1454432829'
              - id: '25'
                code: 10R-6E3-AO4-RST
                amount: '700.0000'
                status: active
                balance: '700.0000'
                to_name: Alyss
                order_id: '0'
                template: 'false'
                to_email: test@test.com
                from_name: Noland
                from_email: test1@test.com
                customer_id: '0'
                expiry_date: '0'
                purchase_date: '1454433240'
              - id: '27'
                code: 15R-6E3-AO4-RST
                amount: '50.0000'
                status: active
                balance: '50.0000'
                to_name: Lyss
                order_id: '0'
                template: 'false'
                to_email: test5@test.com
                from_name: Somethingelse
                from_email: test15@test.com
                customer_id: '0'
                expiry_date: '0'
                purchase_date: '1454433621'
      summary: Get All Gift Certificates
      description: >-
        Retrieves the gift certificates available. Default sorting is by
        gift-certificate id, from lowest to highest.Parameters can be added to
        the URL query string to paginate the collection. The maximum limit is
        250. If a limit isn’t provided, up to 50 gift_certificates are returned
        by default.
      tags:
        - Gift Certificate
        - Marketing
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: query
          name: min_id
          type: integer
        - in: query
          name: max_id
          type: integer
        - in: query
          name: code
          type: string
        - in: query
          name: order_id
          type: integer
        - in: query
          name: to_name
          type: string
        - in: query
          name: to_email
          type: string
        - in: query
          name: from_name
          type: string
        - in: query
          name: from_email
          type: string
        - in: query
          name: page
          type: number
        - in: query
          name: limit
          type: number
        - in: header
          name: Accpet
          type: string
          default: application/json
          required: true
        - in: header
          name: Content-Type
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
          required: true
        - in: header
          name: X-Auth-Token
          type: string
          required: true
    parameters:
      - name: store_hash
        in: path
        type: string
        required: true
    post:
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/GiftCertificate'
          examples:
            application/json:
              id: '25'
              code: 10R-6E3-AO4-RST
              amount: '700.0000'
              status: active
              balance: '700.0000'
              to_name: Jane
              order_id: '0'
              template: 'false'
              to_email: test@test.com
              from_name: Tarzan
              from_email: test1@test.com
              customer_id: '0'
              expiry_date: '0'
              purchase_date: '1454433240'
      summary: Create a Gift Certificate
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: header
          name: Accept
          type: string
          required: true
          default: application/json
        - in: header
          name: Content-Type
          type: string
          required: true
          default: application/json
        - in: header
          name: X-Auth-Token
          type: string
          required: true
        - in: header
          name: X-Auth-Client
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GiftCertificate'
          x-examples:
            application/json:
              code: 10R-6E3-AO4-RST
              amount: '700.0000'
              status: active
              to_name: Jane
              to_email: test@test.com
              from_name: Tarzan
              from_email: test1@test.com
      tags:
        - Gift Certificate
        - Marketing
    delete:
      responses:
        '204':
          description: ''
          schema:
            type: object
            properties: {}
      summary: Delete All Store Gift Certificates
      tags:
        - Gift Certificate
        - Marketing
      parameters:
        - in: path
          name: store_hash
          type: string
          required: true
        - in: header
          name: Accept
          type: string
          default: application/json
        - in: header
          name: Content-Type
          type: string
          default: application/json
        - in: header
          name: X-Auth-Client
          type: string
        - in: header
          name: X-Auth-Token
          type: string
definitions:
  Order:
    title: Order
    example:
      id: 113
      customer_id: 1
      date_created: 'Wed, 17 Jan 2018 20:11:21 +0000'
      date_modified: 'Wed, 25 Apr 2018 20:20:25 +0000'
      date_shipped: ''
      status_id: 7
      status: Awaiting Payment
      subtotal_ex_tax: '143.9500'
      subtotal_inc_tax: '143.9500'
      subtotal_tax: '0.0000'
      base_shipping_cost: '0.0000'
      shipping_cost_ex_tax: '0.0000'
      shipping_cost_inc_tax: '0.0000'
      shipping_cost_tax: '0.0000'
      shipping_cost_tax_class_id: 2
      base_handling_cost: '0.0000'
      handling_cost_ex_tax: '0.0000'
      handling_cost_inc_tax: '0.0000'
      handling_cost_tax: '0.0000'
      handling_cost_tax_class_id: 2
      base_wrapping_cost: '0.0000'
      wrapping_cost_ex_tax: '0.0000'
      wrapping_cost_inc_tax: '0.0000'
      wrapping_cost_tax: '0.0000'
      wrapping_cost_tax_class_id: 3
      total_ex_tax: '138.9500'
      total_inc_tax: '138.9500'
      total_tax: '0.0000'
      items_total: 2
      items_shipped: 0
      payment_method: Cash on Delivery
      payment_provider_id: null
      payment_status: ''
      refunded_amount: '0.0000'
      order_is_digital: false
      store_credit_amount: '0.0000'
      gift_certificate_amount: '0.0000'
      ip_address: 64.183.182.114
      geoip_country: United States
      geoip_country_iso2: US
      currency_id: 1
      currency_code: USD
      currency_exchange_rate: '1.0000000000'
      default_currency_id: 1
      default_currency_code: USD
      staff_notes: ''
      customer_message: ''
      discount_amount: '0.0000'
      coupon_discount: '5.0000'
      shipping_address_count: 1
      is_deleted: false
      ebay_order_id: '0'
      cart_id: 1cf3da59-1c90-42a9-82fb-2a954743a390
      billing_address:
        first_name: Jane
        last_name: Does
        company: ''
        street_1: 123 MainStreet
        street_2: ''
        city: Austin
        state: Texas
        zip: '78751'
        country: United States
        country_iso2: US
        phone: ''
        email: jane@email.com
        form_fields: []
      is_email_opt_in: false
      credit_card_type: null
      order_source: www
      external_source: null
      products:
        url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/products'
        resource: /orders/113/products
      shipping_addresses:
        url: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/shippingaddresses
        resource: /orders/113/shippingaddresses
      coupons:
        url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/113/coupons'
        resource: /orders/113/coupons
      external_id: null
      external_merchant_id: null
      custom_status: Awaiting Payment
    type: object
    properties:
      id:
        description: 'The ID of the order, a read-only value. Do not pass in PUT or POST.'
        example: 118
        type: integer
      customer_id:
        description: >-
          The ID of the customer placing the order; or 0 if it was a guest
          order.
        example: 6
        type: integer
      date_created:
        description: >-
          The date this order was created. If not specified, will default to the
          current time. The date should be in RFC 2822 format, e.g.: Tue, 20 Nov
          2012 00:00:00 +0000
        example: 'Mon, 23 Apr 2018 18:04:48 +0000'
        type: string
        format: date-time
      date_modified:
        description: >-
          A read-only value representing the last modification of the order. Do
          not attempt to modify or set this value in a POST or PUT operation.
        example: 'Mon, 23 Apr 2018 18:04:49 +0000'
        type: string
        format: date-time
      date_shipped:
        description: >-
          A read-only value representing the date of shipment. Do not attempt to
          modify or set this value in a POST or PUT operation.
        example: 'Wed, 14 Nov 2012 19:26:23 +0000"'
        type: string
        format: date-time
      status_id:
        description: The status ID of the order.
        example: 11
        type: integer
      cart_id:
        description: >-
          The cart ID from which this order originated, if applicable.
          Correlates with the Cart API. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: a8458391-ef68-4fe5-9ec1-442e6a767364
        type: string
      status:
        description: >-
          The status will include one of the (string, optiona) - values defined
          under Order Statuses. This value is read-only. Do not attempt to
          modify or set this value in a POST or PUT operation.
        example: Awaiting Fulfillment
        type: string
      custom_status:
        description: >-
          Contains the same (string, optiona) - value as the Order Statuses
          object's `custom_label` property.
        example: Awaiting Fulfillment
        type: string
      subtotal_ex_tax:
        description: >-
          Override value for subtotal excluding tax. If specified, the field
          `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
        example: '225.0000'
        type: string
      subtotal_inc_tax:
        description: >-
          Override value for subtotal including tax. If specified, the field
          `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
        example: '225.0000'
        type: string
      subtotal_tax:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      base_shipping_cost:
        description: 'The value of the base shipping cost. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      shipping_cost_ex_tax:
        description: >-
          The value of shipping cost, excluding tax. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      shipping_cost_inc_tax:
        description: >-
          The value of shipping cost, including tax. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      shipping_cost_tax:
        description: >-
          A read-only value. Do not attempt to modify or set this value in a
          POST or PUT operation. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      shipping_cost_tax_class_id:
        description: >-
          Shipping-cost tax class. A read-only value. Do not attempt to modify
          or set this value in a POST or PUT operation. (NOTE: Value ignored if
          automatic tax is enabled on the store.)
        example: 2
        type: integer
      base_handling_cost:
        description: 'The value of the base handling cost. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      handling_cost_ex_tax:
        description: >-
          The value of the handling cost, excluding tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      handling_cost_inc_tax:
        description: >-
          The value of the handling cost, including tax. (Float,
          Float-As-String, Integer)
        example: 0
        type: number
      handling_cost_tax:
        description: >-
          A read-only value. Do not attempt to modify or set this value in a
          POST or PUT operation. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      handling_cost_tax_class_id:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation. (NOTE: Value ignored if automatic tax is
          enabled on the store.)
        example: 2
        type: integer
      base_wrapping_cost:
        description: 'The value of the base wrapping cost. (Float, Float-As-String, Integer)'
        example: 0
        type: integer
      wrapping_cost_ex_tax:
        description: >-
          The value of the wrapping cost, excluding tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      wrapping_cost_inc_tax:
        description: >-
          The value of the wrapping cost, including tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      wrapping_cost_tax:
        description: >-
          A read-only value. Do not attempt to modify or set this value in a
          POST or PUT operation. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      wrapping_cost_tax_class_id:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation. (NOTE: Value ignored if automatic tax is
          enabled on the store.)
        example: 3
        type: integer
      total_ex_tax:
        description: >-
          Override value for the total, excluding tax. If specified, the field
          `total_inc_tax` is also required. (Float, Float-As-String, Integer)
        example: '225.0000'
        type: string
      total_inc_tax:
        description: >-
          Override value for the total, including tax. If specified, the field
          `total_ex_tax` is also required. (Float, Float-As-String, Integer) 
        example: '225.0000'
        type: string
      total_tax:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      items_total:
        description: The total number of items in the order.
        example: 1
        type: number
      items_shipped:
        description: The number of items that have been shipped.
        example: 0
        type: number
      payment_method:
        description: >-
          The payment method for this order. Can be one of the following:
          `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.
        example: Cash on Delivery
        type: string
      payment_provider_id:
        description: >-
          The external Transaction ID/Payment ID within this order's payment
          provider (if a payment provider was used).
        example: 'null'
        type: string
      payment_status:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation.
        type: string
      refunded_amount:
        description: >-
          The amount refunded from this transaction. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      order_is_digital:
        description: Whether this is an order for digital products.
        example: false
        type: boolean
      store_credit_amount:
        description: >-
          Represents the store credit that the shopper has redeemed on this
          individual order. This is a read-only value. Do not pass in a POST or
          PUT. (Float, Float-As-String, Integer)
        example: '0.0000'
        type: string
      gift_certificate_amount:
        description: >-
          A read-only value. Do not pass in a POST or PUT. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      ip_address:
        description: 'IP Address of the customer, if known.'
        example: 12.345.678.910
        type: string
      geoip_country:
        description: >-
          The full name of the country where the customer made the purchase,
          based on the IP.
        example: United States
        type: string
      geoip_country_iso2:
        description: >-
          The country where the customer made the purchase, in ISO2 format,
          based on the IP.
        example: US
        type: string
      currency_id:
        description: >-
          The ID of the currency being used in this transaction. A read-only
          value. Do not pass in a POST or PUT.
        example: 1
        type: integer
      currency_code:
        description: >-
          The currency code of the currency being used in this transaction. A
          read-only value. Do not pass in a POST or PUT.
        example: USD
        type: string
      currency_exchange_rate:
        description: >-
          A read-only value. Do not pass in a POST or PUT. (Float,
          Float-As-String, Integer)
        example: '1.0000000000'
        type: string
      default_currency_id:
        description: A read-only value. Do not pass in a POST or PUT.
        example: 1
        type: integer
      default_currency_code:
        description: >-
          The currency code of the default currency for this type of
          transaction. A read-only value. Do not pass in a POST or PUT.
        type: string
        example: USD
      staff_notes:
        description: Any additional notes for staff.
        example: Send Saturday
        type: string
      customer_message:
        description: >-
          Message that the customer entered (number, optiona) -o the `Order
          Comments` box during checkout.
        example: Thank you
        type: string
      discount_amount:
        description: >-
          Amount of discount for this transaction. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      coupon_discount:
        description: >-
          A read-only value. Do not pass in a POST or PUT. (Float,
          Float-As-String, Integer)
        example: '5.0000'
        type: string
      shipping_address_count:
        type: number
        description: >-
          The number of shipping addresses associated with this transaction. A
          read-only value. Do not pass in a POST or PUT.
      is_deleted:
        description: Indicates whether the order was deleted (archived).
        example: false
        type: boolean
      is_email_opt_in:
        description: >-
          Indicates whether the shopper has selected an opt-in check box (on the
          checkout page) to receive emails. A read-only value. Do not pass in a
          POST or PUT.
        example: false
        type: boolean
      ebay_order_id:
        description: >-
          If the order was placed through eBay, the eBay order number will be
          included. Otherwise, the value will be `0`.
        example: '0'
        type: string
      billing_address:
        $ref: '#/definitions/BillingAddress'
      order_source:
        description: >-
          Orders submitted via the store's website will include a `www` value.
          Orders submitted via the API will be set to `external`. A read-only
          value. Do not pass in a POST or PUT.
        example: www
        type: string
      external_source:
        description: >-
          For orders submitted or modified via the API, using a PUT or POST
          operation, you can optionally pass in a value identifying the system
          used to generate the order. For example: `POS`. Otherwise, the value
          will be null.
        example: 'null'
        type: string
      products:
        $ref: '#/definitions/ProductsResource'
      shipping_addresses:
        $ref: '#/definitions/ShippingAddressesResource'
      coupons:
        $ref: '#/definitions/CouponsResource'
      external_id:
        description: >-
          ID of the order in another system. For example, the Amazon Order ID if
          this is an Amazon order.This field can be updated in a /POST, but
          using a /PUT to update the order will return a 400 error. The field
          'external_id' cannot be written to. Please remove it from your request
          before trying again. It can not be overwritten once set.
        example: 'null'
        type: string
      external_merchant_id:
        description: Id of the external merchant.
        example: 'null'
        type: string
    required:
      - billing_address
      - products
  BillingAddress:
    title: Billing Address
    type: object
    properties:
      first_name:
        description: ''
        example: Jane
        type: string
      last_name:
        description: ''
        example: Doe
        type: string
      company:
        description: ''
        type: string
      street_1:
        description: ''
        example: 123 Main Street
        type: string
      street_2:
        description: ''
        type: string
      city:
        description: ''
        example: Austin
        type: string
      state:
        description: ''
        example: TX
        type: string
      zip:
        description: ''
        example: '12345'
        type: string
      country:
        description: ''
        example: United States
        type: string
      country_iso2:
        description: ''
        example: US
        type: string
      phone:
        description: ''
        type: string
      email:
        description: ''
        example: janedoe@email.com
        type: string
      form_fields:
        description: ''
        type: array
        items:
          $ref: '#/definitions/FormFields'
  FormFields:
    title: Form Fields
    type: object
    properties:
      name:
        description: Name of the form field
        type: string
        example: License Id
      value:
        description: Value of the form field
        type: string
        example: 123BAF
  ProductsResource:
    title: Products Resource
    type: object
    properties:
      url:
        description: ''
        example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/products'
        type: string
      resource:
        description: ''
        example: /orders/129/products
        type: string
  ShippingAddressesResource:
    title: Shipping Address Resource
    type: object
    properties:
      url:
        description: URL of the shipping address for api requests
        example: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/shippingaddresses
        type: string
      resource:
        description: ''
        example: /orders/129/shippingaddresses
        type: string
  CouponsResource:
    title: Coupon Resource
    type: object
    properties:
      url:
        description: URL of the coupons for api requests
        example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons'
        type: string
      resource:
        description: resource of the coupons
        example: /orders/129/coupons
        type: string
  OrdersCountResponse:
    title: Orders Count Response
    example:
      statuses:
        id: 0
        name: Incomplete
        system_label: Incomplete
        custom_label: Incomplete- Waiting on Shipment
        system_description: >-
          An incomplete order happens when a shopper reached the payment page,
          but did not complete the transaction.
        count: 6
        sort_order: 0
      count: 45
    type: object
    properties:
      statuses:
        $ref: '#/definitions/OrderStatuses'
      count:
        description: Total number of orders in the store
        example: 45
        type: number
  OrderStatuses:
    title: Order Statuses
    type: object
    properties:
      id:
        description: The id of the type of order status
        example: 0
        type: integer
      name:
        description: Name of the type of order status
        example: Incomplete
        type: string
      system_label:
        description: System name of the type of order status.
        example: Incomplete
        type: string
      custom_label:
        description: Custom order status label given in the Control Panel
        example: Incomplete- Waiting on Shipment
        type: string
      system_description:
        description: System description of the order status
        example: >-
          An incomplete order happens when a shopper reached the payment page,
          but did not complete the transaction.
        type: string
      count:
        description: Number of orders that exist with this status
        example: 6
        type: number
      sort_order:
        description: The sort order of the order status from the Control Panel
        example: 0
        type: number
  OrderCoupons:
    title: Order Coupons
    type: object
    properties:
      id:
        description: Numeric ID of the coupon code.
        example: 3
        type: integer
      coupon_id:
        description: Numeric ID of the associated coupon.
        example: 1
        type: integer
      order_id:
        description: Numeric ID of the associated order.
        example: 120
        type: integer
      code:
        description: 'Coupon code, as a string.'
        example: S2549JM0Y
        type: string
      amount:
        description: 'Amount of the coupon code. (Float, Float-As-String, Integer)'
        example: '5.0000'
        type: string
      type:
        $ref: '#/definitions/OrderCouponDiscountType'
      discount:
        description: >-
          The discount to apply to an order, as either an amount or a
          percentage. This field’s usage is determined by the coupon code’s
          type. For example, a type of percentage_discount would determine a
          percentage here. (Float, Float-As-String, Integer)
        example: '5.0000'
        type: number
  OrderCouponDiscountType:
    type: string
    title: Order Coupon Discount Type
    enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    description: |-
      type 0: per_item_discount
      type 1: percentage_discount
      type 2: per_total_discount
      type 3: shipping_discount
      type 4: free_shipping
  OrderProducts:
    title: Order Products
    type: object
    properties:
      id:
        description: Numeric ID of this product within this order.
        example: 25
        type: integer
      order_id:
        description: Numeric ID of the associated order.
        example: 120
        type: integer
      product_id:
        description: Numeric ID of the product.
        example: 20
        type: integer
      order_address_id:
        description: Numeric ID of the associated order address.
        example: 20
        type: integer
      name:
        description: The product name.
        example: Fog Linen Chambray Towel - Beige Stripe
        type: string
      sku:
        description: User-defined product code/stock keeping unit (SKU).
        example: S-GREE
        type: string
      type:
        type: string
        enum:
          - physical
          - digital
        example: physical
        description: Type of product
      base_price:
        description: 'The product''s base price. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      price_ex_tax:
        description: 'The product’s price excluding tax. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      price_inc_tax:
        description: 'The product’s price including tax. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      price_tax:
        description: 'Tax applied to the product. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      base_total:
        description: 'Total base price. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      total_ex_tax:
        description: 'Total base price excluding tax. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      total_inc_tax:
        description: 'Total base price including tax. (Float, Float-As-String, Integer)'
        example: '54.0000'
        type: string
      total_tax:
        description: 'Total tax applied. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      quantity:
        description: Quantity of the product ordered.
        example: 1
        type: number
      base_cost_price:
        description: 'The product''s cost price. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      cost_price_inc_tax:
        description: >-
          The product's cost price including tax. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      cost_price_ex_tax:
        description: >-
          The products cost price excluding tax. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      weight:
        description: 'Weight of the product. (Float, Float-As-String, Integer)'
        example: 1
        type: string
      cost_price_tax:
        description: >-
          Tax applied to the product’s cost price. (Float, Float-As-String,
          Integer)
        example: '54.0000'
        type: string
      is_refunded:
        description: Whether the product has been refunded.
        example: false
        type: boolean
      refunded_amount:
        description: >-
          The amount refunded from this transaction. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      return_id:
        description: Numeric ID for the refund.
        example: 0
        type: integer
      wrapping_name:
        description: Name of gift-wrapping option
        example: 'null'
        type: string
      base_wrapping_cost:
        description: 'The value of the base wrapping cost. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      wrapping_cost_ex_tax:
        description: >-
          The value of the wrapping cost, excluding tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      wrapping_cost_inc_tax:
        description: >-
          The value of the wrapping cost, including tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      wrapping_cost_tax:
        description: 'Tax applied to gift-wrapping option. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      wrapping_message:
        description: Message to accompany gift-wrapping option.
        type: string
      quantity_shipped:
        description: Quantity of this item shipped.
        example: 0
        type: number
      event_name:
        description: Name of promotional event/delivery date.
        example: 'null'
        type: string
      event_date:
        description: Date of the promotional event/scheduled delivery.
        type: string
        format: date
      fixed_shipping_cost:
        description: >-
          Fixed shipping cost for this product. (Float, Float-As-String,
          Integer)
        example: '0.0000'
        type: string
      ebay_item_id:
        description: Item ID for this product on eBay.
        type: string
      ebay_transaction_id:
        description: Transaction ID for this product on eBay.
        type: string
      option_set_id:
        description: Numeric ID of the option set applied to the product.
        example: 5
        type: integer
      parent_order_product_id:
        description: ID of a parent product.
        type: integer
      is_bundled_product:
        description: Whether this product is bundled with other products.
        example: false
        type: boolean
      bin_picking_number:
        description: Bin picking number for the physical product.
        type: string
      applied_discounts:
        description: Array of objects containing discounts applied to the product.
        type: array
        items:
          $ref: '#/definitions/OrderProductsAppliedDiscounts'
      product_options:
        description: Array of product option objects.
        type: array
        items:
          $ref: '#/definitions/OrderProductsProductOptions'
      external_id:
        description: >-
          ID of the order in another system. For example, the Amazon Order ID if
          this is an Amazon order.This field can be updated in a /POST, but
          using a /PUT to update the order will return a 400 error. The field
          'external_id' cannot be written to. Please remove it from your request
          before trying again. It can not be overwritten once set.
        type: integer
  OrderProductsAppliedDiscounts:
    title: Order Products Applied Discounts
    type: object
    properties:
      id:
        description: Name of the coupon applied to order
        example: total-coupon
        type: string
      amount:
        description: 'Amount of the discount.(Float, Float-As-String, Integer) '
        example: '1.2100'
        type: string
      name:
        description: Name of the coupon
        example: $5 off
        type: string
      code:
        description: Coupon Code
        example: S2549JM0Y
        type: string
  OrderProductsProductOptions:
    title: Order Products Product Options
    type: object
    properties:
      id:
        description: The unique numerical ID of the option; increments sequentially.
        example: 16
        type: integer
      option_id:
        description: Numeric ID of the associated option.
        example: 18
        type: integer
      order_product_id:
        description: ''
        example: 53
        type: integer
      product_option_id:
        description: ''
        example: 120
        type: integer
      display_name:
        description: 'The name of the option, as shown on the storefront.'
        example: Size
        type: string
      display_value:
        description: 'The name of the value, as shown on the storefront.'
        example: S
        type: string
      value:
        description: ''
        example: '70'
        type: string
      type:
        type: string
        enum:
          - Checkbox
          - Date field
          - File Upload
          - Multi-line text field
          - Multiple choice
          - Product Pick List
          - Swatch
          - Text field
        example: Checkbox
        description: Option Type
      name:
        description: 'The option’s name, as used internally. Must be unique'
        example: Apparel sizes
        type: string
      display_style:
        description: >-
          How it is displayed on the storefront. Examples include Drop-down,
          radio buttons, or rectangles.
        example: Rectangle
        type: string
  OrderCountResponse:
    title: Order Count Response
    example:
      count: 27
    type: object
    properties:
      count:
        description: ''
        example: 27
        type: number
  OrderShippingAddress:
    title: Order Shipping Address
    type: object
    properties:
      id:
        description: ID of this shipping address.
        example: 1
        type: integer
      order_id:
        description: ID of the order.
        example: 100
        type: integer
      first_name:
        description: Addressee first name.
        example: Rick
        type: string
      last_name:
        description: Addressee last name.
        example: Sanchez
        type: string
      company:
        description: Addressee company.
        example: BigCommerce
        type: string
      street_1:
        description: Street address (first line).
        example: 123 MainStreet
        type: string
      street_2:
        description: Street address (second line).
        type: string
      city:
        description: Addressee city.
        example: Austin
        type: string
      zip:
        description: 'ZIP or postal code, as a string.'
        example: '12345'
        type: string
      country:
        description: Addressee’s country.
        example: United States
        type: string
      country_iso2:
        description: 2-letter ISO Alpha-2 code for the country. (Looking Up Country Codes)
        example: US
        type: string
      state:
        description: >-
          The name of the state or province. Should be spelled out in full,
          e.g.: California.
        example: Texas
        type: string
      email:
        description: Recipient’s email address.
        example: janedoe@email.com
        type: string
      phone:
        description: Recipient’s telephone number
        example: '1234567890'
        type: string
      items_total:
        description: The total number of items in the order.
        example: 1
        type: number
      items_shipped:
        description: The number of items that have been shipped.
        example: 0
        type: number
      shipping_method:
        description: >-
          Text code identifying the BigCommerce shipping module selected by the
          customer.
        example: Free Shipping
        type: string
      base_cost:
        description: 'The base value of the order’s items. (Float, Float-As-String, Integer)'
        example: '5.0000'
        type: string
      cost_ex_tax:
        description: >-
          The value of the order’s items, excluding tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      cost_inc_tax:
        description: >-
          The value of the order’s items, including tax. (Float,
          Float-As-String, Integer)
        example: '0.0000'
        type: string
      cost_tax:
        description: 'The tax amount on the order. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      cost_tax_class_id:
        description: >-
          The ID of the tax class applied to the product. (NOTE: Value ignored
          if automatic tax is enabled.)
        example: 2
        type: integer
      base_handling_cost:
        description: 'The base handling charge. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      handling_cost_ex_tax:
        description: 'The handling charge, excluding tax. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      handling_cost_inc_tax:
        description: 'The handling charge, including tax. (Float, Float-As-String, Integer)'
        example: '0.0000'
        type: string
      handling_cost_tax:
        description: ''
        example: '0.0000'
        type: string
      handling_cost_tax_class_id:
        description: >-
          A read-only value. Do not attempt to set or modify this value in a
          POST or PUT operation. (NOTE: Value ignored if automatic tax is
          enabled on the store.)
        example: 2
        type: integer
      shipping_zone_id:
        description: Numeric ID of the shipping zone.
        example: 1
        type: integer
      shipping_zone_name:
        description: Name of the shipping zone.
        example: United States
        type: string
      form_fields:
        description: Empty array
        type: object
  OrderShippingAddressShippingQuotesResource:
    title: Order Shipping Address Shipping Quotes Resource
    type: object
    properties:
      url:
        description: Path to the shipping quote for the order
        example: >-
          https://api.bigcommerce.com/stores/jrah6gmn/v2/orders/100/shippingaddresses/1/shippingquotes
        type: string
      resource:
        description: API resources being used.
        example: /orders/100/shippingaddresses/1/shippingquotes
        type: string
  OrderTaxes:
    title: Order Taxes
    example:
      id: 16
      order_id: 140
      order_address_id: 42
      tax_rate_id: 1
      tax_class_id: 3
      name: Tax
      class: Gift Wrapping
      rate: '8.0000'
      priority: 0
      priority_amount: '1.5200'
      line_amount: '1.5200'
    type: object
    properties:
      id:
        description: The unique numeric identifier of the taxes object.
        example: 1
        type: integer
      order_id:
        description: >-
          The unique numeric identifier of the order to which the tax was
          applied. NOTE: Not included if the store was using the automatic tax
          feature.
        example: 129
        type: integer
      order_address_id:
        description: >-
          The unique numeric identifier of the order address object associated
          with the order. NOTE: Not included if the store was using the
          automatic tax feature.
        example: 29
        type: integer
      tax_rate_id:
        description: The unique numeric identifier of the tax rate.
        example: 1
        type: integer
      tax_class_id:
        description: >-
          The unique numeric identifier of the tax class object. NOTE: Will be 0
          if automatic tax was enabled, or if the default tax class was used.
        example: 0
        type: integer
      name:
        description: The name of the tax class object.
        example: '"State Tax"'
        type: string
      class:
        description: >-
          The name of the type of tax that was applied. NOTE: will be “Automatic
          Tax” if automatic tax was enabled.
        example: Gift Wrapping
        type: string
      rate:
        description: >-
          The tax rate.  The priority order in which the tax is applied (Float,
          Float-As-String, Integer)
        example: '8.0000'
        type: string
      priority:
        description: The order in which the tax is applied
        example: 0
        type: integer
      priority_amount:
        description: >-
          The amount of tax calculated on the order.   (Float, Float-As-String,
          Integer)
        example: '1.5200'
        type: string
      line_amount:
        description: '(Float, Float-As-String, Integer)'
        example: '1.5200'
        type: string
  OrderShipment:
    title: Order Shipment
    example:
      id: 2
      order_id: 143
      customer_id: 6
      order_address_id: 45
      date_created: 'Tue, 14 Aug 2018 13:59:39 +0000'
      tracking_number: '123445656746576787568'
      shipping_method: Free Shipping
      comments: Shipment 1 of 2
      shipping_provider: ''
      tracking_carrier: ''
      billing_address:
        first_name: Jane
        last_name: Doe
        company: ''
        street_1: 123 Main Street
        street_2: ''
        city: Austin
        state: Texas
        zip: '78726'
        country: United States
        country_iso2: US
        phone: '1234567890'
        email: jane@email.com
      shipping_address:
        first_name: Jane
        last_name: Doe
        company: ''
        street_1: 123 Main Street
        street_2: ''
        city: Austin
        state: Texas
        zip: '78726'
        country: United States
        country_iso2: US
        phone: '1234567890'
        email: ''
      items:
        - order_product_id: 57
          product_id: 86
          quantity: 1
    type: object
    properties:
      id:
        description: Shipment ID.
        example: 1
        type: integer
      order_id:
        description: ID of the order associated with this shipment.
        example: 120
        type: integer
      customer_id:
        description: ID of this order’s customer.
        example: 5
        type: integer
      order_address_id:
        description: ID of the associated order address.
        example: 20
        type: integer
      date_created:
        description: Creation date for the shipment.
        example: 'Tue, 12 Jun 2018 14:12:26 +0000'
        type: string
        format: date-time
      tracking_number:
        description: Tracking number of the shipment.
        example: w4se4b6ASFEW4T
        type: string
      shipping_method:
        description: >-
          Extra detail to describe the shipment, with values like: Standard, My
          Custom Shipping Method Name, etc. Can also be used for live quotes
          from some shipping providers.
        example: Ship by Weight
        type: string
      shipping_provider:
        description: >-
          Enum of the BigCommerce shipping-carrier integration/module. (Note:
          This property should be included in a POST request to create a
          shipment object. If it is omitted from the request, the property’s
          value will default to custom, and no tracking link will be generated
          in the email. To avoid this behavior, you can pass the property as an
          empty string.)
        example: usps
        type: string
      tracking_carrier:
        $ref: '#/definitions/TrackingCarrier'
      comments:
        description: Comments the shipper wishes to add.
        type: string
      billing_address:
        type: object
        properties:
          first_name:
            description: ''
            example: Jane
            type: string
          last_name:
            description: ''
            example: Doe
            type: string
          company:
            description: ''
            type: string
          street_1:
            description: ''
            example: 123 Main Street
            type: string
          street_2:
            description: ''
            type: string
          city:
            description: ''
            example: Austin
            type: string
          state:
            description: ''
            example: TX
            type: string
          zip:
            description: ''
            example: '12345'
            type: string
          country:
            description: ''
            example: United States
            type: string
          country_iso2:
            description: ''
            example: US
            type: string
          phone:
            description: ''
            type: string
          email:
            description: ''
            example: janedoe@email.com
            type: string
      shipping_address:
        type: object
        properties:
          first_name:
            description: ''
            example: Jane
            type: string
          last_name:
            description: ''
            example: Doe
            type: string
          company:
            description: ''
            type: string
          street_1:
            description: ''
            example: 123 Main Street
            type: string
          street_2:
            description: ''
            type: string
          city:
            description: ''
            example: Austin
            type: string
          state:
            description: ''
            example: TX
            type: string
          zip:
            description: ''
            example: '12345'
            type: string
          country:
            description: ''
            example: United States
            type: string
          country_iso2:
            description: ''
            example: US
            type: string
          phone:
            description: ''
            type: string
          email:
            description: ''
            example: janedoe@email.com
            type: string
      items:
        description: >-
          The items in the shipment. This object has the following members, all
          integer: order_product_id (required), quantity (required), product_id
          (read-only). A sample items value might be: [
          {"order_product_id":16,"product_id": 0,"quantity":2} ]
        type: array
        items:
          type: object
          properties:
            order_product_id:
              type: integer
              example: 5
            product_id:
              type: integer
              example: 87
            quantity:
              type: integer
              example: 2
  TrackingCarrier:
    title: Tracking Carrier
    example: auspost
    x-enum-elements:
      - name: auspost
        description: ''
      - name: canadapost
        description: ''
      - name: endicia
        description: ''
      - name: usps
        description: ''
      - name: fedex
        description: ''
      - name: royalmail
        description: ''
      - name: ups
        description: ''
      - name: upsready
        description: ''
      - name: shipperhq
        description: ''
    type: string
    enum:
      - auspost
      - canadapost
      - endicia
      - usps
      - fedex
      - royalmail
      - ups
      - upsready
      - shipperhq
  ShippingProvider:
    title: Shipping Provider
    x-enum-elements:
      - name: Enum_0
        description: empty string
      - name: Enum_1
        description: ''
      - name: Enum_2
        description: ''
      - name: Enum_3
        description: ''
      - name: Enum_4
        description: ''
      - name: Enum_5
        description: ''
      - name: Enum_6
        description: ''
      - name: Enum_7
        description: ''
      - name: Enum_8
        description: ''
      - name: Enum_9
        description: ''
      - name: Enum_10
        description: ''
    type: string
    enum:
      - '``'
      - fedex
      - auspost
      - canadapost
      - endicia
      - usps
      - royalmail
      - ups
      - upsready
      - upsonline
      - shipperhq
    example: endicia
  BlogPosts:
    title: Blog Posts
    example:
      id: 3
      title: Welcome to BigCommerce
      url: /blog/welcome-bigcommerce/
      preview_url: /blog/welcome-bigcommerce/
      body: >-
        <p>Customize your site, manage shipping and payments, and list your
        products on Amazon, eBay, and Facebook with the #1 ecommerce platform.
        </p>
      tags:
        - BigCommerce
        - welcome
        - ecommerce
      summary: >-
        <p>We power ecommerce websites for successful retailers all over the
        world</p>
      is_published: true
      published_date:
        date: '2018-05-18T08:26:42.000Z'
        timezone_type: 1
        timezone: '+00:00'
      published_date_iso8601: '2018-05-18T13:26:42.000Z'
      meta_description: Welcome Post
      meta_keywords: 'BigCommerce, welcome, ecommerce'
      author: BigCommerce
      thumbnail_path: ''
    type: object
    properties:
      id:
        description: ID of this blog post. (READ-ONLY)
        example: 3
        type: integer
      title:
        type: string
        description: Title of this blog post.
        example: Welcome to BigCommerce
      url:
        description: URL for the public blog post.
        example: /blog/welcome-bigcommerce/
        type: string
      preview_url:
        description: URL to preview the blog post. (READ-ONLY)
        example: /blog/welcome-bigcommerce/
        type: string
      body:
        type: string
        description: Text body of the blog post.
        example: >-
          <p>Customize your site, manage shipping and payments, and list your
          products on Amazon, eBay, and Facebook with the #1 ecommerce platform.
          </p>
      tags:
        description: Tags to characterize the blog post.
        type: array
        items:
          type: string
      summary:
        description: Summary of the blog post. (READ-ONLY)
        example: >-
          <p>We power ecommerce websites for successful retailers all over the
          world</p>
        type: string
      is_published:
        description: Whether the blog post is published.
        example: true
        type: boolean
      published_date:
        type: object
        properties:
          timezone_type:
            type: string
            example: 1
          date:
            type: string
            format: date-time
            example: '2018-05-18T08:26:42.000Z'
          timezone:
            type: string
            format: time
            example: '+00:00'
      published_date_iso8601:
        description: Published date in ISO 8601 format.
        example: '5/18/2018 1:26:42 PM'
        type: string
      meta_description:
        description: Description text for this blog post’s <meta> element.
        example: Welcome Post
        type: string
      meta_keywords:
        description: Keywords for this blog post’s <meta> element.
        example: 'BigCommerce, welcome, ecommerce'
        type: string
      author:
        description: Name of the blog post’s author.
        example: BigCommerce
        type: string
      thumbnail_path:
        description: >-
          Local path to a thumbnail image within the product_images folder to
          accompany the blog post.
        type: string
    required:
      - title
      - body
  Page:
    title: Page
    example:
      id: 6
      parent_id: 5
      type: page
      contact_fields: 'fullname,companyname,phone,orderno,rma'
      email: janedoes@email.com
      name: Contact Form
      url: /contact-us/
      meta_description: ''
      body: >-
        <p>We're happy to answer questions or help you with returns.<br />Please
        fill out the form below if you need assistance.</p>
      mobile_body: 0
      has_mobile_version: false
      is_visible: true
      is_homepage: false
      layout_file: page.html
      sort_order: 3
      meta_title: ''
      search_keywords: ''
      meta_keywords: ''
    type: object
    properties:
      id:
        description: Unique ID of this Web page. Read Only
        example: 6
        type: intger
      parent_id:
        description: ID of any parent Web page.
        example: 5
        type: integer
      type:
        type: string
        description: "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t"
        enum:
          - page
          - rss_feed
          - contact_form
          - raw
          - link
      contact_fields:
        description: >-
          Where the page’s type is a contact form: object whose members are the
          fields enabled (in the control panel) for storefront display. Possible
          members are:`fullname`: full name of the customer submitting the form;
          `phone`: customer’s phone number, as submitted on the form;
          `companyname`: customer’s submitted company name; `orderno`:
          customer’s submitted order number; `rma`: customer’s submitted RMA
          (Return Merchandise Authorization) number.
        example: 'fullname,companyname,phone,orderno,rma'
        type: string
      email:
        description: >-
          Where the page’s type is a contact form: email address that receives
          messages sent via the form.
        example: janedoes@email.com
        type: string
      name:
        type: string
        description: 'Page name, as displayed on the storefront.'
        example: Contact Form
      url:
        description: Relative URL on the storefront for this page.
        example: /contact-us/
        type: string
      meta_description:
        description: Description contained within this page’s <meta> element.
        type: string
      body:
        type: string
        description: >-
          HTML or variable that populates this page’s <body> element, in
          default/desktop view. Required in POST if page type is `raw`.
        example: >-
          <p>We're happy to answer questions or help you with returns.<br
          />Please fill out the form below if you need assistance.</p>
      mobile_body:
        description: >-
          HTML to use for this page's body when viewed in the mobile template
          (deprecated).
        example: 0
        type: string
      has_mobile_version:
        description: 'If true, this page has a mobile version.'
        example: false
        type: boolean
      is_visible:
        description: 'If true, this page appears in the storefront’s navigation menu.'
        example: true
        type: boolean
      is_homepage:
        description: 'If true, this page is the storefront’s home page.'
        example: false
        type: boolean
      meta_title:
        description: >-
          Text specified for this page’s <title> element. (If empty, the value
          of the name property is used.)
        type: string
      layout_file:
        description: Layout template for this page.
        example: page.html
        type: string
      sort_order:
        description: >-
          Order in which this page should display on the storefront. (Lower
          integers specify earlier display.)
        example: 3
        type: integer
      search_keywords:
        description: >-
          Comma-separated list of keywords that shoppers can use to locate this
          page when searching the store.
        type: string
      meta_keywords:
        description: >-
          Comma-separated list of SEO-relevant keywords to include in the page’s
          <meta> element.
        type: string
      feed:
        type: string
        description: >-
          If page type is `rss_feed` the n this field is visisble. Required in
          POST required for `rss page` type.
      link:
        type: string
        description: >-
          If page type is `link` this field is returned. Required in  POST to
          create a `link` page.
    required:
      - type
      - name
      - body
      - feed
      - link
  Redirect:
    title: Redirect
    example:
      id: 1
      path: /smith-journal-13/
      forward:
        type: product
        ref: 111
      url: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
    type: object
    properties:
      id:
        description: Numeric ID of the redirect.
        example: 1
        type: integer
      path:
        type: string
        description: The path from which to redirect.
        example: /smith-journal-13/
      forward:
        type: object
        properties:
          type:
            type: string
            description: >
              The type of redirect. If it is a manual redirect then type will
              always be manual. Dynamic redirects will have the type of the
              page. Such as product or category.
            example: product
          ref:
            type: string
            description: >-
              Reference of the redirect. Dynamic redirects will have the
              category or product number. Manual redirects will have the url
              that is being directed to.
            example: 111
      url:
        description: URL of the redirect. READ-ONLY
        example: 'http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/'
        type: string
    required:
      - path
      - forward
  RedirectForward:
    title: Redirect Forward
    type: object
    properties:
      type:
        description: >-
          The type of redirect. If it is a `manual` redirect then type will
          always be manual. Dynamic redirects will have the type of the page.
          Such as product or category.
        example: product
        type: string
      ref:
        description: >-
          Reference of the redirect. Dynamic redirects will have the category or
          product number. Manual redirects will have the url that is being
          directed to.
        example: 111
        type: number
  Currency:
    title: Currency
    example:
      id: 2
      is_default: false
      last_updated: 'Tue, 12 Jun 2018 14:41:56 +0000"'
      country_iso2: EU
      currency_code: EUR
      currency_exchange_rate: 0.849
      auto_update: true
      token_location: left
      token: €
      decimal_token: .
      thousands_token: ','
      decimal_places: 2
      name: Euro
      enabled: false
    type: object
    properties:
      id:
        description: Id of the currency. READ-ONLY
        example: 2
        type: integer
      is_default:
        description: >-
          Specifies whether this is the store’s default currency display format
          and may only be adjusted in the control panel. READ-ONLY
        example: false
        type: boolean
      last_updated:
        description: 'Date the currency was last updated, created or modified.'
        example: 'Tue, 12 Jun 2018 14:41:56 +0000"'
        type: string
        format: date-time
      country_iso2:
        type: string
        description: 2-letter ISO Alpha-2 code for this currency’s country.
        example: EU
      currency_code:
        type: string
        description: 3-letter ISO 4217 code for this currency.
        example: EUR
      currency_exchange_rate:
        type: string
        description: >-
          Amount of this currency that is equivalent to one U.S. dollar.(Float,
          Float as String, Integer)
        example: 0.849
      auto_update:
        type: boolean
        description: >-
          Specifies whether to use the Open Exchange Rates service to update the
          currency conversion. A value of false specifies a static conversion
          value.
        example: true
      token_location:
        type: string
        description: >-
          Specifies whether this currency’s symbol appears to the “left” or
          “right” of the numeric amount.
        example: left
      token:
        type: string
        description: Symbol for this currency.
        example: €
      decimal_token:
        type: string
        description: Symbol used as the decimal separator in this currency.
        example: .
      thousands_token:
        type: string
        description: Symbol used as the thousands separator in this currency.
        example: ','
      decimal_places:
        type: integer
        description: Number of decimal places to show for this currency.
        example: 2
      name:
        type: string
        description: Name of the currency.
        example: Euro
      enabled:
        description: If the currency is active on the store.
        example: false
        type: boolean
    required:
      - country_iso2
      - currency_code
      - currency_exchange_rate
      - auto_update
      - token_location
      - token
      - decimal_token
      - thousands_token
      - decimal_places
      - name
  Customer:
    title: Customers
    example:
      id: 1
      _authentication: {}
      company: BigCommerce
      first_name: Jane
      last_name: Doe
      email: janedoe@email.com
      phone: 1234567890
      date_created: 'Thu, 11 Jan 2018 20:57:52 +0000'
      date_modified: 'Tue, 10 Apr 2018 18:59:05 +0000'
      store_credit: 0
      registration_ip_address: 12.345.678.910
      customer_group_id: 2
      notes: ''
      tax_exempt_category: ''
      accepts_marketing: true
      addresses:
        url: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
        resource: /customers/5/addresses
      form_fields:
        - name: ''
          value: ''
      reset_pass_on_login: false
    type: object
    properties:
      id:
        description: >-
          Unique numeric ID of this customer. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 1
        type: integer
      _authentication:
        description: >-
          Not returned in any responses, but accepts up to two fields allowing
          you to set the customer’s password. If a password is not supplied, it
          is generated automatically. For further information about using this
          object, please see the Customers resource documentation.
        type: object
        properties:
          force_reset:
            type: string
          password:
            type: string
          password_confirmation:
            type: string
      company:
        description: The name of the company for which the customer works.
        example: BigCommerce
        type: string
      first_name:
        type: string
        description: First name of the customer.
        example: Jane
      last_name:
        type: string
        description: Last name of the customer.
        example: Doe
      email:
        type: string
        description: Email address of the customer.
        example: janedoe@email.com
      phone:
        description: Phone number of the customer.
        example: 1234567890
        type: string
      date_created:
        description: >-
          Date on which the customer registered from the storefront or was
          created in the control panel. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: 'Thu, 11 Jan 2018 20:57:52 +0000'
        type: string
        format: date-time
      date_modified:
        description: >
          Date on which the customer updated their details in the storefront or
          was updated in the control panel. This is a READ-ONLY field; do not
          set or modify its value in a POST or PUT request.
        example: 'Tue, 10 Apr 2018 18:59:05 +0000'
        type: string
        format: date-time
      store_credit:
        description: >-
          The amount of credit the customer has. (Float, Float as String,
          Integer)
        example: 0
        type: string
      registration_ip_address:
        description: The customer’s IP address when they signed up.
        example: 12.345.678.910
        type: string
      customer_group_id:
        description: The group to which the customer belongs.
        example: 2
        type: integer
      notes:
        description: Store-owner notes on the customer.
        type: string
      tax_exempt_category:
        description: >-
          Used to identify customers who fall into special sales-tax categories
          – in particular, those who are fully or partially exempt from paying
          sales tax. Can be blank, or can contain a single AvaTax code. (The
          codes are case-sensitive.) Stores that subscribe to BigCommerce’s
          Avalara Premium integration will use this code to determine
          how/whether to apply sales tax. Does not affect sales-tax calculations
          for stores that do not subscribe to Avalara Premium.
        type: string
      accepts_marketing:
        description: >
          Records whether the customer would like to receive marketing content
          from this store. READ-ONLY.This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        example: true
        type: boolean
      addresses:
        $ref: '#/definitions/AddressFieldResource'
      form_fields:
        description: >-
          Array of custom fields. This is a READ-ONLY field; do not set or
          modify its value in a POST or PUT request.
        type: array
        items:
          $ref: '#/definitions/FormFields'
      reset_pass_on_login:
        description: Force a password change on next login.
        example: false
        type: boolean
    required:
      - first_name
      - last_name
      - email
  AddressFieldResource:
    title: Address Field Resource
    type: object
    properties:
      url:
        description: Full URL of where the resource is located.
        example: >-
          https://api.bigcommerce.com/stores/{store_hash}/v2/customers/5/addresses
        type: string
      resource:
        description: Resource being accessed.
        example: /customers/5/addresses
        type: string
  CustomerAddress:
    title: Customer Address
    example:
      id: 3
      customer_id: 5
      first_name: Jane
      last_name: Doe
      company: BigCommerce
      street_1: 123 Main Street
      street_2: ''
      city: Austin
      state: Texas
      zip: 78726
      country: United States
      country_iso2: US
      phone: 123-345-7890
      address_type: residental
    type: object
    properties:
      id:
        description: ID of this customer address. READ-ONLY
        example: 3
        type: integer
      customer_id:
        description: ID of the associated customer.
        example: 5
        type: integer
      first_name:
        type: string
        description: The customer’s first name.
        example: Jane
      last_name:
        type: string
        description: The customer’s last name.
        example: Doe
      company:
        description: The customer’s company name.
        example: BigCommerce
        type: string
      street_1:
        type: string
        description: 'The customer’s street address, line 1.'
        example: 123 Main Street
      street_2:
        description: 'The customer’s street address, line 2.'
        type: string
      city:
        type: string
        description: The customer’s city/town/suburb.
        example: Austin
      state:
        type: string
        description: >-
          The customer’s state/province. Do not abbreviate the state; spell out
          the entire word, e.g.: California. (Cannot be null. As a workaround
          for addresses that include no state/province string, pass a space as
          the “state” value.)
        example: Texas
      zip:
        type: string
        description: The customer’s ZIP or postal code.
        example: 78726
      country:
        type: string
        description: The customer’s country. Must be the full country name.
        example: United States
      country_iso2:
        description: 2-letter ISO Alpha-2 code for the customer’s country. READ-ONLY
        example: US
        type: string
      phone:
        type: string
        description: The customer’s phone number.
        example: 123-345-7890
      address_type:
        type: string
        enum:
          - residential
          - commercial
        example: residential
    required:
      - first_name
      - last_name
      - street_1
      - city
      - state
      - zip
      - country
      - phone
  CustomerGroup:
    title: Customer Group
    type: object
    properties:
      id:
        description: Id of the customer group
        example: 1
        type: integer
      name:
        description: Name of the group
        example: Wholesale
        type: string
      is_default:
        description: >-
          Determines whether new customers are assigned to this group by
          default.
        example: false
        type: boolean
      category_access:
        $ref: '#/definitions/CategoryAccess'
      discount_rules:
        description: >-
          A collection of discount rules that are automatically applied to
          customers who are members of the group
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: all
            method:
              type: string
              example: percent
            amount:
              type: string
              example: '"5.0000" (Float, Float as String, Integer)'
              description: A float that specifies the value applied to the price modified
  CategoryAccess:
    title: Category Access Level
    type: object
    properties:
      type:
        type: string
        enum:
          - all
          - specific
          - none
        description: >-
          + `all` - Customers can access all categories
           + `specific`  - Customers can access a specific list of categories
          + `none` - Customers are prevented from viewing any of the categories
          in this group.
      categories:
        description: >-
          Is an array of category IDs and should be supplied only if `type` is
          specific.
        type: array
        example: '18,19,23,34'
        items:
          type: string
  Country:
    title: Country
    example:
      id: 13
      country: Australia
      country_iso2: AU
      country_iso3: AUS
      states:
        url: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
        resource: /countries/13/states
    type: object
    properties:
      id:
        description: Id of the country.
        example: 13
        type: integer
      country:
        description: Country name.
        example: Australia
        type: string
      country_iso2:
        description: 2-letter country code.
        example: AU
        type: string
      country_iso3:
        description: 3-letter country code.
        example: AUS
        type: string
      states:
        $ref: '#/definitions/States'
  States:
    title: States Resource
    type: object
    properties:
      url:
        description: ''
        example: 'https://api.bigcommerce.com/stores/{store_hash}/v2/countries/13/states'
        type: string
      resource:
        description: ''
        example: /countries/13/states
        type: string
  State:
    title: State
    example:
      id: 208
      state: Australian Capital Territory
      state_abbreviation: ACT
      country_id: 13
    type: object
    properties:
      id:
        description: Numeric ID of the state/province.
        example: 208
        type: integer
      state:
        description: Name of the state/province.
        example: Australian Capital Territory
        type: string
      state_abbreviation:
        description: Abbreviation for the state/province.
        example: ACT
        type: string
      country_id:
        description: Numeric ID of the state’s/province’s associated country.
        example: 13
        type: integer
  Coupon:
    title: Coupon
    example:
      id: 2
      name: Australia Customers Discount
      type: per_item_discount
      amount: 5
      min_purchase: 25
      expires: ''
      enabled: true
      code: S2549JM0Y
      applies_to:
        entity: categories
        ids:
          - '0,3'
      num_uses: 0
      max_uses: 25
      max_uses_per_customer: 0
      restricted_to:
        countries:
          - AU
      shipping_methods:
        - shipping_endicia
      date_created: 'Tue, 13 Mar 2018 16:18:59 +0000'
    type: object
    properties:
      id:
        description: >-
          The coupon's ID. This is a read-only field; do not set or modify its
          value in a POST or PUT request.
        example: 2
        type: integer
      name:
        type: string
        description: The name of the coupon.
        example: Australia Customers Discount
      type:
        type: string
        enum:
          - per_item_discount
          - per_total_discount
          - shipping_discount
          - free_shipping
          - percentage_discount
      amount:
        type: string
        description: >-
          The discount to apply to an order, as either an amount or a
          percentage. This field's usage is determined by the coupon `type`. For
          example, a `type` of + `percentage_discount` would determine a
          percentage here.
        example: 5
      min_purchase:
        description: >-
          Specifies a minimum value that an order must have before the coupon
          can be applied to it.
        example: 25
        type: string
      expires:
        description: >-
          Specifies when a coupon expires. Coupons need not have an expiry date
          – you can also control expiry via + `max_uses` or
          `max_uses_per_customer`. If you do use this date field, the value must
          be in <a href="http://tools.ietf.org/html/rfc2822#section-3.3"
          target="_blank">RFC 2822</a> format.
        type: string
      enabled:
        description: >-
          If the coupon is enabled, this field's value is `true`; otherwise,
          `false`.
        example: true
        type: boolean
      code:
        type: string
        description: >-
          The coupon code that customers will use to receive their discounts.
          Value must be unique.
        example: S2549JM0Y
      applies_to:
        type: object
        description: >-
          If it is not included in the PUT request, its existing value on the
          coupon will be cleared. Also required to be set on the POST request
        properties:
          id:
            type: integer
          entities:
            type: array
            items:
              type: string
      num_uses:
        description: >-
          Number of times this coupon has been used. This is a read-only field;
          do not set or modify its value in a POST or PUT request.
        example: 0
        type: integer
      max_uses:
        description: Maximum number of times this coupon can be used.
        example: 25
        type: integer
      max_uses_per_customer:
        description: Maximum number of times each customer can use this coupon.
        example: 0
        type: integer
      restricted_to:
        type: object
        properties:
          countries:
            type: string
      shipping_methods:
        description: >-
          This is a list of shipping-method names. A shipping method must be
          enabled on the store to use it with a coupon. To check which shipping
          methods are enabled, please use the [List Shipping
          Methods](/api/v2#list-shipping-methods) endpoint.
        type: array
        items:
          type: string
      date_created:
        description: Date Created
        example: 'Tue, 13 Mar 2018 16:18:59 +0000'
        type: string
    required:
      - name
      - type
      - amount
      - code
      - applies_to
  Banner:
    title: Banner
    example:
      id: 1
      name: Sale Banner
      content: <p> Sale! Tuesday at 9am! </p>
      page: home_page
      item_id: 0
      location: top
      date_created: 1522169082
      date_type: always
      date_from: 0
      date_to: 0
      visible: 1
    type: object
    properties:
      name:
        description: Name of the banner.
        example: Sale Banner
        type: string
      content:
        description: >-
          Contains the banner content. Returned as a string and includes HTML
          formatting.
        example: <p> Sale! Tuesday at 9am! </p>
        type: string
      page:
        type: string
        description: Page the Banner is located
        enum:
          - home_page
          - category_page
          - brand_page
          - search_page
      location:
        type: string
        enum:
          - top
          - bottom
        description: Location on the page
        example: top
      date_type:
        type: string
        enum:
          - always
          - custom
        description: >-
          This specifies whether the banner should be visible during a specific
          date range.
      id:
        description: >
          Id of the banner.

          This is a READ-ONLY field; do not set or modify its value in a POST or
          PUT request.
        example: 1
        type: integer
      item_id:
        description: >-
          If the banner is on a specific category or brand page then the
          `item_id` will correspond the category or brand id.
        example: 0
        type: string
      date_created:
        description: Date the banner is created.
        example: 1522169082
        type: string
        format: date-time
      date_from:
        description: >-
          If the datetype is set as 'custom’, this field specifies the date when
          the banner should become visible on the storefront.
        example: 0
        type: string
      date_to:
        description: >-
          If the datetype is set as 'custom’, this field specifies the date when
          the banner should stop being visible on the storefront.
        example: 0
        type: string
      visible:
        type: string
        description: >-
          Integer value denoting whether or not the banner is visible on the
          storefront: 1 = visible; 0 = not visible
        example: 1
    required:
      - name
      - content
      - page
      - location
      - date_type
  GiftCertificate:
    title: Gift Certificate
    example:
      id: 1
      customer_id: 5
      order_id: 116
      code: FFZ-5N4-C7M-S78
      to_name: John Doe
      to_email: johndoe@email.com
      from_name: Jane Doe
      from_email: janedoe@email.com
      amount: 10
      balance: 0
      status: active
      template: false
      message: Happy Birthday!
      purchase_date: 1520957992
      expiry_date: 0
    type: object
    properties:
      to_name:
        description: Name of the recipient.
        example: John Doe
        type: string
      to_email:
        description: Email of the recipient.
        example: johndoe@email.com
        type: string
      from_name:
        description: Name of the customer who purchased the gift certificate.
        example: Jane Doe
        type: string
      from_email:
        description: Email of the customer who purchased the gift certificate.
        example: janedoe@email.com
        type: string
      amount:
        description: Value of the gift certificate.
        example: 10
        type: string
      id:
        description: >-
          The ID of the gift certificate.This is a READ-ONLY field; do not set
          or modify its value in a POST or PUT request.
        example: 1
        type: integer
      customer_id:
        description: The ID of the customer placing the order.
        example: 5
        type: integer
      order_id:
        description: The ID of the order.
        example: 116
        type: integer
      code:
        description: >-
          A unique string that the customer can input to redeem the gift
          certificate. If this field is not set, a value will be generated.
        example: FFZ-5N4-C7M-S78
        type: string
      balance:
        description: >-
          Remaining value of the gift certificate. If not set, will default to
          the amount.
        example: 0
        type: string
      status:
        $ref: '#/definitions/Status'
      template:
        description: The email theme to use in the message sent to the recipient.
        example: false
        type: string
      message:
        description: 'Text that will be sent to the recipient, such as “Congratulations.”'
        example: Happy Birthday!
        type: string
      purchase_date:
        description: >-
          Date the gift certificate was purchased. If not assigned, this will be
          set to today’s date.
        example: 1520957992
        type: string
      expiry_date:
        description: Date on which the gift certificate is set to expire.
        example: 0
        type: string
    required:
      - to_name
      - to_email
      - from_name
      - from_email
      - amount
  Status:
    title: Gift Certificate Status
    example: active
    x-enum-elements:
      - name: active
        description: ''
      - name: pending
        description: ''
      - name: disabled
        description: ''
      - name: expired
        description: ''
    type: string
    enum:
      - active
      - pending
      - disabled
      - expired
  PaymentMethod:
    title: PaymentMethod
    example:
      code: squarev2
      name: Square
      test_mode: false
    type: object
    properties:
      code:
        description: Unique platform-wide code identifying the payment method.
        example: squarev2
        type: string
      name:
        description: Descriptive name of the payment method.
        example: Square
        type: string
      test_mode:
        description: >-
          Determines whether the payment gateway is in test mode. Always false
          for offline payment methods.
        example: false
        type: boolean
  ShippingZone:
    title: Shipping Zone
    example:
      id: 1
      name: United States
      type: zip
      locations:
        - id: 3
          zip: 12345
          country_iso2: US
          state_iso2: TX
      free_shipping:
        enabled: false
        minimum_subtotal: 0
        exclude_fixed_shipping_products: false
      handling_fees:
        fixed_surcharge: 0
        percentage_surcharge: ''
        display_separately: true
      enabled: true
    type: object
    properties:
      id:
        type: integer
        description: Zone Id. READ-ONLY
        example: 1
      name:
        type: string
        description: Zone name. Required for /PUT
        example: United States
      type:
        type: string
        enum:
          - zip
          - country
          - state
          - global
      locations:
        description: Array of zone locations.
        type: array
        items:
          $ref: '#/definitions/ShippingZoneLocations'
      free_shipping:
        type: object
        properties:
          enabled:
            type: boolean
          minimum_sub_total:
            type: string
            example: '0.0000'
            description: '(Float, Float-As-String, Integer)'
          exclude_fixed_shipping_products:
            type: boolean
      handling_fees:
        $ref: '#/definitions/HandlingFees'
      enabled:
        description: Whether this shipping zone is enabled.
        example: true
        type: boolean
    required:
      - name
  ShippingZoneLocations:
    title: Shipping Zone Locations
    type: object
    properties:
      id:
        description: Location’s ID.
        example: 3
        type: integer
      zip:
        description: Location’s ZIP/postal code.
        example: 12345
        type: string
      country_iso2:
        description: 2-letter ISO Alpha-2 code for the country.
        example: US
        type: string
      state_iso2:
        description: ISO Alpha-2 code for the state.
        example: TX
        type: string
  HandlingFees:
    title: Shipping Zone Handling Fees
    type: object
    properties:
      fixed_surcharge:
        description: ''
        example: 0
        type: string
      percentage_surcharge:
        description: ''
        type: string
      display_separately:
        description: ''
        example: true
        type: boolean
  ShippingMethod:
    title: Shipping Method
    type: object
    properties:
      id:
        description: Shipping-method ID. READ-ONLY
        example: 1
        type: integer
      name:
        description: Display name for shipping method.
        example: Flat Rate
        type: string
      type:
        $ref: '#/definitions/Type109'
      settings:
        description: >-
          Depends on the shipping-method type. See the [supported settings
          object](#supported-settings).
        type: object
      enabled:
        description: Whether or not this shipping-zone method is enabled.
        example: true
        type: boolean
      handling_fees:
        type: object
        enum:
          - fixed_surcharge
          - percentage_surcharge
        example: percentage_surcharge
        description: >-
          `fixed_surcharge`: flat-rate handling fee applied to shipping cost.


          `percentage_surcharge`: percentage handling fee applied to shipping
          cost
      is_fallback:
        description: >-
          Whether or not this shipping zone is the fallback if all others are
          not valid for the order.
        example: false
        type: boolean
  Type109:
    title: Shipping Method Type
    example: perorder
    x-enum-elements:
      - name: perorder
        description: ''
      - name: peritem
        description: ''
      - name: weight
        description: ''
      - name: total
        description: ''
      - name: auspost
        description: ''
      - name: canadapost
        description: ''
      - name: endicia
        description: ''
      - name: usps
        description: ''
      - name: fedex
        description: ''
      - name: royalmail
        description: ''
      - name: upsready
        description: ''
    type: string
    enum:
      - perorder
      - peritem
      - weight
      - total
      - auspost
      - canadapost
      - endicia
      - usps
      - fedex
      - royalmail
      - upsready
  StoreInformation:
    title: Store Information
    type: object
    properties:
      id:
        description: Unique store identifier.
        example: store_hash
        type: string
      domain:
        description: Primary domain name.
        example: your-store-url.com
        type: string
      secure_URL:
        description: Store’s current HTTPS URL.
        example: 'https://your-store-url.com'
        type: string
      name:
        description: Store's name.
        example: BigCommerce
        type: string
      first_name:
        description: >-
          Primary contact’s first name (as defined during the store sign-up
          process).
        example: Jane
        type: string
      last_name:
        description: >-
          Primary contact’s last name (as defined during the store sign-up
          process).
        example: Doe
        type: string
      address:
        description: Display address.
        example: BigCommerce
        type: string
      country:
        description: >-
          Country where the store is located (as defined during the store
          sign-up process).
        example: United States
        type: string
      phone:
        description: Display phone number.
        type: string
      admin_email:
        description: Email address of the store administrator/owner.
        example: janedoes@email.com
        type: string
      order_email:
        description: Email address for orders and fulfillment.
        example: orders@emai
        type: string
      timezone:
        $ref: '#/definitions/Timezone'
      language:
        description: Default language code.
        example: en
        type: string
      currency:
        description: Default currency code
        example: USD
        type: string
      currency_symbol:
        description: Default symbol for values in the currency.
        example: $
        type: string
      decimal_separator:
        description: Default decimal separator for values in the currency.
        example: .
        type: string
      thousands_separator:
        description: Default thousands separator for values in the currency.
        example: ','
        type: string
      decimal_places:
        description: Default decimal places for values in the currency.
        example: 2
        type: interger
      currency_symbol_location:
        description: Default position of the currency symbol (left or right).
        example: left
        type: string
      weight_units:
        description: Default weight units (metric or imperial).
        example: Ounces
        type: string
      dimension_units:
        description: Default dimension units (metric or imperial).
        example: Inches
        type: string
      dimension_decimal_places:
        description: The number of decimal places.
        example: 2
        type: integer
      dimension_decimal_token:
        description: The symbol that separates the whole numbers from the decimal points.
        example: .
        type: string
      'dimension_thousands_token:':
        description: The symbol used to denote thousands.
        type: string
      plan_name:
        description: Name of the BigCommerce plan to which this store is subscribed.
        example: Standard
        type: string
      plan_level:
        description: Level of the BigCommerce plan to which this store is subscribed.
        example: Standard
        type: string
      industry:
        description: >-
          Industry, or vertical category, in which the business operates. (As
          selected from drop-down list during the store sign-up process.)
        example: Technology
        type: string
      logo:
        type: object
        properties:
          url:
            type: string
            example: >-
              https://cdn8.bigcommerce.com/s-{store_hash}/product_images/screen_shot_2018-05-15_at_12.22.26_pm__05547_1529512135.png"
      is_price_entered_with_tax:
        description: >-
          A Boolean value that indicates whether or not prices are entered with
          tax.
        example: false
        type: boolean
      active_comparison_modules:
        description: ''
        type: array
        items: {}
      features:
        description: |-
          + `stencil_enabled`: `true` (boolean)
              + `sitewidehttps_enabled`: `false` (boolean)
              + `facebook_catalog_id` (string)
        type: object
        properties:
          stencil_enabled:
            type: boolean
            example: true
            description: Indicates whether a store is using a Stencil theme.
          sitewidehttps_enabled:
            type: string
            example: false
            description: Indicates if there is sitewide https.
          facebook_catalog_id:
            type: string
            description: >-
              Id of the facebook catalog. If there is none, it returns an empty
              string. 
          checkout_type:
            type: string
            example: optimized
            description: >-
              What type of checkout is enabled on the store. Possible values
              returned are optimized, single (one page), single_customizable
              (one page for developers), klarna.
  Timezone:
    title: Time Zone
    type: object
    properties:
      name:
        description: >-
          a string identifying the time zone, in the format:
          <Continent-name>/<City-name>.
        example: America/Chicago
        type: string
      raw_offset:
        description: >-
          a negative or positive number, identifying the offset from UTC/GMT, in
          seconds, during winter/standard time.
        example: -21600
        type: integer
      dst_offset:
        description: >-
          "-/+" offset from UTC/GMT, in seconds, during summer/daylight saving
          time.
        example: -18000
        type: integer
      dst_correction:
        description: >-
          a boolean indicating whether this time zone observes daylight saving
          time.
        example: true
        type: boolean
      date_format:
        $ref: '#/definitions/DateFormat'
  DateFormat:
    title: Date Format
    type: object
    properties:
      display:
        description: 'string that defines dates’ display format, in the pattern: M jS Y'
        example: M jS Y
        type: string
      export:
        description: >-
          string that defines the CSV export format for orders, customers, and
          products, in the pattern: M jS Y
        example: M jS Y
        type: string
      extended_display:
        description: >-
          string that defines dates’ extended-display format, in the pattern: M
          jS Y @ g:i A.
        example: 'M jS Y @ g:i A'
        type: string
  TaxClass:
    title: Tax Class
    example:
      id: 1
      name: Shipping
    type: object
    properties:
      id:
        description: >-
          The unique numerical ID of the tax class. A read-only value which is
          automatically assigned and increments sequentially.
        example: 1
        type: string
      name:
        description: >-
          The unique numerical ID of the tax class. A read-only value which is
          automatically assigned and increments sequentially.
        example: Shipping
        type: string
  BlogTags:
    type: array
    title: Blog Tags
    items:
      type: object
      properties:
        tag:
          type: string
          example: Blog
        post_ids:
          type: array
          example: '1,2,4'
          items:
            type: integer
tags:
  - name: Orders
  - name: Order Coupons
  - name: Order Products
  - name: Order Taxes
  - name: Order Statues
  - name: Order Shipments
  - name: Order Shipping Addresses
  - name: Store Content
  - name: Blog Posts
  - name: Pages
  - name: Redirects
  - name: Gift Certificate
  - name: Currency
  - name: Customers
  - name: Customer Groups
  - name: Customer Addresses
  - name: Customer Passwords
  - name: Geography
  - name: Countries
  - name: States
  - name: Marketing
  - name: Banners
  - name: Coupons
  - name: Shipping
  - name: Shipping Method
  - name: Shipping Carrier
  - name: Shipping Zones
  - name: Store Information Reference
  - name: Store
  - name: Taxes
  - name: Payment Methods
securityDefinitions: {}
security:
  - X-Auth-Token: []
  - X-Auth-Client: []
